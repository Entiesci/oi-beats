{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to OI Beats, powered by E.N.Contina.</p> <p></p>"},{"location":"#_1","title":"\u672c\u7ad9\u4ecb\u7ecd","text":"<p>\u672c\u7ad9\u4e3b\u8981\u9762\u5411\u4e2d\u9636\u6bb5OI\u5b66\u4e60\u8005\u3002</p> <p>\u672c\u7ad9\u7f3a\u70b9\uff1a</p> <ul> <li> <p>\u5185\u5bb9\u8f83\u5c11</p> </li> <li> <p>\u4e13\u4e1a\u77e5\u8bc6\u4e0d\u8db3</p> </li> </ul> <p>\u672c\u7ad9\u6709\u70b9</p> <ul> <li> <p>\u89e3\u6790\u9898\u76ee\u4e30\u5bcc</p> </li> <li> <p>\u5c3d\u53ef\u80fd\u5728\u77e5\u8bc6\u70b9\u5339\u914d\u4f18\u79c0\u7684\u8bb2\u89e3\u89c6\u9891\uff08\u4e0d\u662f\u672c\u4eba\u54e6\uff09</p> </li> </ul>"},{"location":"#_2","title":"\u7ad9\u957f\u535a\u5ba2","text":"<p>FlowUs \u606f\u6d41 - \u65b0\u4e00\u4ee3\u751f\u4ea7\u529b\u5de5\u5177</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DAG%E4%B8%8ADP/","title":"DAG\u4e0aDP","text":"<p>DAG\u4e0adp\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u662f\u5404\u4e2a\u8282\u70b9\u7684\u66f4\u65b0\u987a\u5e8f\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u53ef\u80fd\u60f3\u5230\u62d3\u6251\u6392\u5e8f\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u66f4\u591a\u5730\u53bb\u8fd0\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u3002\u5728\u6700\u77ed\u8def\u8fc7\u7a0b\u4e2ddp\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DAG%E4%B8%8ADP/#1-bjwc2012","title":"\u4f8b\u9898 #1 [BJWC2012] \u51bb\u7ed3","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6211\u4eec\u8003\u8651\u6700\u7b80\u5355\u7684\u65c5\u884c\u95ee\u9898\u5427\uff1a \u73b0\u5728\u8fd9\u4e2a\u5927\u9646\u4e0a\u6709 \\(N\\) \u4e2a\u57ce\u5e02\uff0c\\(M\\) \u6761\u53cc\u5411\u7684\u9053\u8def\u3002\u57ce\u5e02\u7f16\u53f7\u4e3a \\(1\\) ~ \\(N\\)\uff0c\u6211\u4eec\u5728 \\(1\\) \u53f7\u57ce\u5e02\uff0c\u9700\u8981\u5230 \\(N\\) \u53f7\u57ce\u5e02\uff0c\u600e\u6837\u624d\u80fd\u6700\u5feb\u5730\u5230\u8fbe\u5462\uff1f</p> <p>\u8fd9\u4e0d\u5c31\u662f\u6700\u77ed\u8def\u95ee\u9898\u5417\uff1f\u6211\u4eec\u90fd\u77e5\u9053\u53ef\u4ee5\u7528 Dijkstra\u3001Bellman-Ford\u3001Floyd-Warshall\u7b49\u7b97\u6cd5\u6765\u89e3\u51b3\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u4e00\u5171\u6709 \\(K\\) \u5f20\u53ef\u4ee5\u4f7f\u65f6\u95f4\u53d8\u6162 50%\u7684 SpellCard\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u901a\u8fc7\u67d0\u6761\u8def\u5f84\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u4e00\u5f20\u5361\u7247\uff0c\u8fd9\u6837\uff0c\u6211\u4eec\u901a\u8fc7\u8fd9\u4e00\u6761\u9053\u8def\u7684\u65f6\u95f4 \u5c31\u53ef\u4ee5\u51cf\u5c11\u5230\u539f\u5148\u7684\u4e00\u534a\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a</p> <ol> <li> <p>\u5728\u4e00\u6761\u9053\u8def\u4e0a\u6700\u591a\u53ea\u80fd\u4f7f\u7528\u4e00\u5f20 SpellCard\u3002</p> </li> <li> <p>\u4f7f\u7528\u4e00\u5f20SpellCard \u53ea\u5728\u4e00\u6761\u9053\u8def\u4e0a\u8d77\u4f5c\u7528\u3002</p> </li> <li> <p>\u4f60\u4e0d\u5fc5\u4f7f\u7528\u5b8c\u6240\u6709\u7684 SpellCard\u3002</p> </li> </ol> <p>\u7ed9\u5b9a\u4ee5\u4e0a\u7684\u4fe1\u606f\uff0c\u4f60\u7684\u4efb\u52a1\u662f\uff1a\u6c42\u51fa\u5728\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e0d\u8d85\u8fc7 \\(K\\) \u5f20\u65f6\u95f4\u51cf\u901f\u7684 SpellCard \u4e4b\u60c5\u5f62\u4e0b\uff0c\u4ece\u57ce\u5e02 \\(1\\) \u5230\u57ce\u5e02 \\(N\\) \u6700\u5c11\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DAG%E4%B8%8ADP/#_1","title":"\u601d\u8def","text":"<p>\u5728\u6700\u77ed\u8def\u4e0adp\u3002\u8bbe\\(dp_{i,j}\\)\u4e3a\u5230\u8fbe\u57ce\u5e02i\uff0c\u4f7f\u7528\u4e86j\u5f20\u5361\u7684\u6700\u5c11\u65f6\u95f4\u3002\u601d\u8def\u6b63\u786e\uff0c\u9996\u5148\u4e5f\u4e0d\u96be\u3002\u56e0\u4e3a\u8fd9\u91cc\u4f18\u5148\u961f\u5217\u4e0d\u597d\u6392\u5e8f\u4e86\uff0c\u5e76\u4e14\u9898\u76ee\u4e5f\u4e0d\u9700\u8981\uff0c\u6240\u4ee5\u6211\u4eec\u7528spfa\u800c\u4e0d\u662fdijkstra</p> <p>\u8fd9\u91cc\u5f00\u62d3\u4e0b\u601d\u8def\uff0c\u672c\u9898\u7528\u5206\u5c42\u56fe\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u54e6\u3002\u56e0\u4e3aK\u4e0d\u5927\uff0c\u53ef\u4ee5\u5b58\u4e0bKM\u6761\u8fb9\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n// luogu-judger-enable-o2\n#define rep(l,r,i) for(int i=l,END##i=r;i&lt;=END##i;++i)\n#define per(r,l,i) for(int i=r,END##i=l;i&gt;=END##i;--i)\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n\n#define lc(x) (x&lt;&lt;1)\n#define rc(x) (x&lt;&lt;1|1)\n\n#define rd read()\ninline int read(){\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int M=2e6+5;\nconst int N = 3e3 + 100; \nconst int INF=1e9+5;\nconst int MOD=998244353;\n\n\nstruct edge{\n    int next,to,dis;\n}e[M];\nint cnt,head[N],n,m,K,dis[N];\nbool vis[N];\ninline void add(int x,int y,int d){\n    e[++cnt].next=head[x];\n    e[cnt].to=y;\n    e[cnt].dis=d;\n    head[x]=cnt;\n}\nvoid spfa(){\n    queue&lt;int&gt; q;\n    memset(dis,0x3f,sizeof(dis));\n    q.push(1);\n    dis[1]=0;vis[1]=1;\n    while(q.size()){\n        int u=q.front();\n        q.pop();\n        vis[u]=0;\n        for(int v,i=head[u];i;i=e[i].next){\n            if(dis[v=e[i].to]&gt;dis[u]+e[i].dis) {\n                dis[v]=dis[u]+e[i].dis;\n                if(vis[v])continue;\n                vis[v]=1,q.push(v);\n            }\n        }\n    }\n    int res=1e9;\n    for(int i=1;i&lt;=K+1;i++)\n        res=min(res,dis[n*i]);\n    cout&lt;&lt;res&lt;&lt;endl;\n}\nsigned main(){\n    n=rd,m=rd,K=rd;\n    memset(e,0x3f,sizeof(e));\n    for(int i=1;i&lt;=m;i++) {\n        int x=rd,y=rd,d=rd;\n        for(int j=0;j&lt;=K;j++) {\n            add(x+j*n,y+j*n,d),add(y+j*n,x+j*n,d);\n            if(j&lt;K) add(x/2);\n        }\n    }\n    spfa();\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/","title":"DP\u4f18\u5316","text":"<p>dp\u4f18\u5316</p> <p>\u500d\u589e\u4f18\u5316</p> <p>\u4f18\u5148\u961f\u5217\u4f18\u5316</p> <p>\u5355\u8c03\u961f\u5217\u4f18\u5316</p> <p>\u659c\u7387\u4f18\u5316</p> <p>\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\u4f18\u5316</p> <p>\u6570\u636e\u7ed3\u6784\u4f18\u5316</p> <p>\u77e9\u9635\u4f18\u5316</p> <p>\u5206\u6cbb\u4f18\u5316</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/","title":"DP\u5165\u95e8","text":"<p>LCIS \u6700\u957f\u516c\u5171\u4e0a\u5347\u5b50\u5e8f\u5217</p> <p>LCS \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217</p> <p>LIS \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217</p> <p>\u6784\u5efa\u56de\u6587\u4e32</p> <p>\u6570\u5b57\u4e09\u89d2\u5f62</p> <p>\u7ebf\u6027DP\u5178\u4f8b</p> <p>\u5e26\u4fee\u6700\u5927\u5b50\u4e32\u2192\u7ebf\u6bb5\u6811</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/","title":"\u533a\u95f4DP","text":"<p>\u6458\u62842024\u6691\u5047S\u7ec4\u4e13\u98982-DP2-\u533a\u95f4dp</p> <p>\u533a\u95f4dp\u901a\u8fc7\u5b50\u533a\u95f4\u7684dp\u4fe1\u606f\uff0c\u5f97\u51fa\u66f4\u5927\u7684\u533a\u95f4\u7684dp\u4fe1\u606f\uff0c\u6700\u540e\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/#1","title":"\u4f8b\u9898 #1 \u533a\u95f4\u56de\u6587\u4e32","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32s\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\uff0c\u6709q\u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u8be2\u95ee\u7ed9\u4f60\u4e24\u4e2a\u6570\uff0cl\u548cr\uff0c\u95ee\u5728\u5b57\u7b26\u4e32\u533a\u95f4l\u5230r\u7684\u5b57\u4e32\u4e2d\uff0c\u5305\u542b\u591a\u5c11\u56de\u6587\u4e32\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/#_2","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7b2c1\u884c\uff0c\u7ed9\u51fas\uff0cs\u7684\u957f\u5ea6\u5c0f\u4e8e5000</p> <p>\u7b2c2\u884c\u7ed9\u51faq(1&lt;=q&lt;=10^6)</p> <p>\u7b2c2\u81f32+q\u884c \u7ed9\u51fa\u6bcf\u7ec4\u8be2\u95ee\u7684l\u548cr</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/#_3","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u6bcf\u7ec4\u8be2\u95ee\u6240\u95ee\u7684\u6570\u91cf\u3002</p> <p>\u6837\u4f8b\u8f93\u51651</p> <p>\u590d\u5236</p> <pre><code>caaaba\n5\n1 1\n1 4\n2 3\n4 6\n4 5\n</code></pre> <p>\u6837\u4f8b\u8f93\u51fa1</p> <p>\u590d\u5236</p> <pre><code>1\n7\n3\n4\n2\n</code></pre> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, g) for (int i = l, END##i = g; i &lt;= END##i; ++i)\n#define per(i, g, l) for (int i = g, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e3 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nint f[N][N],g[N][N];\n\nstring s;\n\nvoid solve(){\n    cin&gt;&gt;s;\n    int l=s.size();\n    for(int i=0;i&lt;l;i++){\n        f[i][0]=0,g[i][0]=1;\n        f[i][1]=1,g[i][1]=1;\n    }\n\n    for(int i=2;i&lt;=l;i++){\n        for(int j=0;j&lt;=l-i;j++){\n            if(s[i+j-1]==s[j]&amp;&amp;g[j+1][i-2]){\n                f[j][i]=f[j][i-1]+f[j+1][i-1]-f[j+1][i-2]+1;\n                g[j][i]=1;\n            }else{\n                f[j][i]=f[j][i-1]+f[j+1][i-1]-f[j+1][i-2]+0;\n                g[j][i]=0;\n            }\n        }\n    }\n\n    int t=rd;\n    while(t--){\n        int a=rd,b=rd;\n        int len=b-a+1;\n        cout&lt;&lt;f[a-1][len]&lt;&lt;endl;\n    }\n}\n\nsigned main() {\n    // freopen(\".in\",\"g\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/#2","title":"\u4f8b\u9898 #2 \u62ec\u53f7\u6784\u9020","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/#_4","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u51fa\u5408\u6cd5\u5e8f\u5217\u7684\u5b9a\u4e49:</p> <p>1.\u7a7a\u5e8f\u5217\u662f\u5408\u6cd5\u5e8f\u5217\u3002</p> <p>2.\u5982\u679cS\u662f\u5408\u6cd5\u5e8f\u5217,\u90a3(S)\u548c[S]\u4e5f\u662f\u5408\u6cd5\u5e8f\u5217\u3002</p> <p>3.\u5982\u679cA\u548cB\u662f\u5408\u6cd5\u5e8f\u5217\uff0c\u90a3\u4e48AB\u4e5f\u662f\u5408\u6cd5\u5e8f\u5217\u3002</p> <p>\u4f8b\u5982,\u4e0b\u9762\u7684\u5b57\u7b26\u4e32\u90fd\u662f\u5408\u6cd5\u5e8f\u5217\uff1a</p> <p>(),[],(()),([]),()[],()[()]</p> <p>\u8fd9\u51e0\u4e2a\u5219\u4e0d\u662f\u5408\u6cd5\u5e8f\u5217\uff1a</p> <p>(,[,],)(,([))</p> <p>\u73b0\u5728\uff0c\u7ed9\u51fa\u4e00\u4e9b\u7531\"(\",\")\",\"[\",\"]\"\u6784\u6210\u7684\u5e8f\u5217\uff0c\u8bf7\u6dfb\u52a0\u5c3d\u91cf\u5c11\u7684\u62ec\u53f7\uff0c\u5f97\u5230\u4e00\u4e2a\u5408\u6cd5\u5e8f\u5217</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/#3","title":"\u4f8b\u9898 #3 \u4fc4\u7f57\u65af\u5957\u5a03","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/#_5","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u662f\u4e00\u4e9b\u4ece\u5916\u5230\u91cc\u5927\u5c0f\u9012\u51cf\u7684\u4f20\u7edf\u7684\u4fc4\u7f57\u65af\u6728\u5934\u73a9\u5076\u7ec4\u6210\u7684\u3002\u5f53\u4f60\u6253\u5f00\u4e00\u4e2a\u4fc4\u7f57\u65af\u5957\u5a03\u65f6\uff0c\u91cc\u9762\u5c31\u4f1a\u9732\u51fa\u4e00\u4e2a\u540c\u6837\u7684\u4fc4\u7f57\u65af\u5957\u5a03\uff0c\u518d\u6253\u5f00\uff0c\u5c31\u4f1a\u518d\u9732\u51fa\u4e00\u4e2a\uff0c\u4e0d\u65ad\u91cd\u590d\u3002</p> <p>\u4fc4\u7f57\u65af\u7684\u4fc4\u7f57\u65af\u5957\u5a03\u535a\u7269\u9986\u6700\u8fd1\u6536\u85cf\u4e86\u4e00\u4e9b\u5916\u5f62\u76f8\u4f3c\u7684\u4fc4\u7f57\u65af\u5957\u5a03\u96c6,\u53ea\u662f\u91cc\u9762\u5d4c\u5957\u7684\u73a9\u5076\u6570\u91cf\u4e0d\u76f8\u7b49\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6709\u4e00\u7fa4\u8fc7\u5206\u70ed\u60c5\u7684\uff08\u548c\u660e\u663e\u65e0\u4eba\u76d1\u7763\u7684\uff09\u5b69\u5b50\u4eec\u62c6\u4e86\u4ed6\u4eec\uff0c\u5e76\u653e\u5728\u4e00\u884c\u4e0a\u3002\u6709n\u4e2a\u73a9\u5076\u5728\u4e00\u4e0a\uff0c\u6bcf\u4e2a\u90fd\u6709\u4e00\u4e2a\u6574\u6570\u7684\u5927\u5c0f\uff0c\u4f60\u9700\u8981\u91cd\u65b0\u7ec4\u88c5\u5957\u5a03\u96c6\uff0c\u4f60\u65e2\u4e0d\u77e5\u9053\u5957\u5a03\u96c6\u7684\u6570\u91cf\uff0c\u4e5f\u4e0d\u77e5\u9053\u67d0\u4e2a\u5957\u5a03\u96c6\u5185\u73a9\u5076\u7684\u6570\u91cf\uff0c\u4f60\u53ea\u77e5\u9053\u4e00\u4e2a\u5b8c\u597d\u7684\u5957\u5a03\u96c6\u5185\u7684\u73a9\u5076\u5927\u5c0f\u662f\u4ece1\u5230\u67d0\u4e2a\u6570\u5b57m\u5728\u7ec4\u88c5\u5957\u5a03\u96c6\u65f6\uff0c\u4f60\u5fc5\u987b\u9075\u5b88\u4e0b\u5217\u89c4\u5219\uff1a</p> <p>1.\u4f60\u53ea\u80fd\u5c06\u4e00\u4e2a\u73a9\u5076\u6216\u8005\u5957\u5a03\u96c6\u653e\u5165\u4e00\u4e2a\u66f4\u5927\u7684\u73a9\u5076\u4e2d</p> <p>2.\u4f60\u53ea\u80fd\u628a\u76f8\u90bb\u4e24\u4e2a\u4fc4\u7f57\u65af\u5957\u5a03\u7ec4\u5408\u5728\u4e00\u8d77</p> <p>3.\u5df2\u7ecf\u88ab\u5408\u5e76\u7684\u73a9\u5076\u662f\u4e0d\u80fd\u518d\u91cd\u65b0\u62c6\u51fa\u6765\u7684\u3002</p> <p>\u4f60\u7684\u65f6\u95f4\u5f88\u5b9d\u8d35\uff0c\u4f60\u53ea\u60f3\u5c3d\u5feb\u7684\u7ec4\u88c5\u597d\u3002\u552f\u4e00\u9700\u8981\u8017\u65f6\u7684\u90e8\u5206\u4e3a\u6253\u5f00\u4e00\u4e2a\u73a9\u5076\u5e76\u9a6c\u4e0a\u5173\u4e0a\u5b83\u3002\u6240\u4ee5\u4f60\u8981\u5c3d\u53ef\u80fd\u5c11\u7684\u505a\u8fd9\u79cd\u64cd\u4f5c\u3002</p> <p>\u6bd4\u5982\u8bf4\uff1a\u5408\u5e76[1,2,6]\u4e0e[4]\uff0c\u4f60\u9700\u8981\u5c06\u5927\u5c0f\u4e3a4\u548c6\u7684\u4e24\u4e2a\u73a9\u5076\u62c6\u5f00\u3002\u5408\u5e76[1,2,5]\u4e0e[3,4]\u4ee3\u4ef7\u4e3a3\u3002</p> <p>\u6c42\u5c06n\u4e2a\u73a9\u5076\u91cd\u65b0\u62fc\u6210\u4e00\u4e9b\u5b8c\u597d\u7684\u4fc4\u7f57\u65af\u5957\u5a03\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/#_6","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6570n\uff0c\u7b2c\u4e8c\u884c\u5305\u542bn\u4e2a\u6570\uff0c\u4f9d\u6b21\u8868\u793a\u6bcf\u4e2a\u73a9\u5076\u7684\u5927\u5c0f\u3002</p> <p>\u5982\u679c\u7b54\u6848\u5b58\u5728\uff0c\u8f93\u51fa\u4e00\u4e2a\u6570\u8868\u793a\u5c06n\u4e2a\u73a9\u5076\u91cd\u65b0\u62fc\u6210\u4e00\u4e9b\u5b8c\u597d\u7684\u4fc4\u7f57\u65af\u5957\u5a03\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u5426\u5219\u8f93\u51fa\u201cImpossible\u201d</p> <p>\u6837\u4f8b\u8f93\u51651</p> <p>\u590d\u5236</p> <pre><code>7\n1 2 1 2 4 3 3\n</code></pre> <p>\u6837\u4f8b\u8f93\u51fa1</p> <p>\u590d\u5236</p> <pre><code>Impossible\n</code></pre> <p>\u6837\u4f8b\u8f93\u51652</p> <p>\u590d\u5236</p> <pre><code>7\n1 2 3 2 4 1 3\n</code></pre> <p>\u6837\u4f8b\u8f93\u51fa2</p> <p>\u590d\u5236</p> <pre><code>7\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/#_7","title":"\u6570\u636e\u9650\u5236","text":"<p>1&lt;=n&lt;=500 , 1&lt;=\u73a9\u5076\u5927\u5c0f&lt;=500</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto cnt: a) cerr &lt;&lt; cnt &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e3 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\nint a[N];\nint f[N][N];\n\nint mn[N];\nint cnt[N];\nint ans[N];\n\n\nvoid solve(){\n    int n=rd;\n    a[0]=INF;\n    for(int i=1;i&lt;=n;i++){\n        a[i]=rd;\n        f[i][i]=0;\n    }\n    // memset(f,0x3f3f,sizeof f);\n    for(itn i=1;i&lt;n;i++){\n        for(int l=1,r=i+1;r&lt;=n;l++,r++){\n            f[l][r]=INF;\n\n            int t=INF;\n            mn[r+1]=INF;\n            for(int j=1;j&lt;=n;j++){\n                cnt[j]=0;\n            }\n\n            for(int j=r;j&gt;=l;j--){\n                mn[j]=min(mn[j/\u540e\u7f00min\n                cnt[a[j]]++;\n            }\n\n            for(itn j=1;j&lt;=n;j++){\n                cnt[j]+=cnt[j-1];\n            }\n\n            for(int j=l;j&lt;r;j++){\n                t=min(t,a[j]);\n                f[l][r]=min(f[l][r],f[l][j]+f[j+1][r]+(r-l+1)-cnt[max(t,mn[j+1])-1]);\n            }\n        }\n    }\n\n\n    // memset(ans,0x3f3f,sizeof ans);\n    memset(cnt,0,sizeof cnt);\n\n\n    for(int i=1;i&lt;=n;i++){\n        ans[i]=INF;\n        for(int j=1;j&lt;=n;j++)cnt[j]=0;\n        for(int j=i;j;j--){\n            cnt[a[j]]++;;\n            int t=0;\n            for(int k=1;k&lt;=i-j+1;k++){\n                if(cnt[k]!=1){\n                    t=1;break;\n                }\n            }\n\n            if(!t)ans[i]=min(ans[i],ans[j-1]+f[j][i]);\n        }\n    }\n\n    if(ans[n]&gt;=INF){\n        cout&lt;&lt;\"Impossible\";\n        return ;\n    }\n    cout&lt;&lt;ans[n]&lt;&lt;endl;\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP/#1-csp-s-2021","title":"\u7ec3\u4e60 #1 [CSP-S 2021] \u62ec\u53f7\u5e8f\u5217","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5c0f w \u5728\u8d5b\u573a\u4e0a\u9047\u5230\u4e86\u8fd9\u6837\u4e00\u4e2a\u9898\uff1a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u4e14\u7b26\u5408\u89c4\u8303\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u5176\u6709\u4e9b\u4f4d\u7f6e\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u6709\u4e9b\u4f4d\u7f6e\u5c1a\u672a\u786e\u5b9a\uff0c\u6c42\u8fd9\u6837\u7684\u62ec\u53f7\u5e8f\u5217\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u3002</p> <p>\u8eab\u7ecf\u767e\u6218\u7684\u5c0f w \u5f53\u7136\u4e00\u773c\u5c31\u79d2\u4e86\u8fd9\u9898\uff0c\u4e0d\u4ec5\u5982\u6b64\uff0c\u4ed6\u8fd8\u89c9\u5f97\u4e00\u573a\u6b63\u5f0f\u6bd4\u8d5b\u51fa\u8fd9\u4e48\u7b80\u5355\u7684\u6a21\u677f\u9898\u4e5f\u592a\u5c0f\u513f\u79d1\u4e86\uff0c\u4e8e\u662f\u4ed6\u628a\u8fd9\u9898\u8fdb\u884c\u4e86\u52a0\u5f3a\u4e4b\u540e\u987a\u624b\u6254\u7ed9\u4e86\u5c0f c\u3002</p> <p>\u5177\u4f53\u800c\u8a00\uff0c\u5c0f w \u5b9a\u4e49\u201c\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\u201d\u662f\u7531\u5b57\u7b26 <code>(</code>\u3001<code>)</code>\u3001<code>*</code> \u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u5bf9\u4e8e\u67d0\u4e2a\u7ed9\u5b9a\u7684\u5e38\u6570 \\(k\\)\uff0c\u7ed9\u51fa\u4e86\u201c\u7b26\u5408\u89c4\u8303\u7684\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\u201d\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ol> <li> <p><code>()</code>\u3001<code>(S)</code> \u5747\u662f\u7b26\u5408\u89c4\u8303\u7684\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\uff0c\u5176\u4e2d <code>S</code> \u8868\u793a\u4efb\u610f\u4e00\u4e2a\u4ec5\u7531**\u4e0d\u8d85\u8fc7** \\(\\bm{k}\\) **\u4e2a**\u5b57\u7b26 <code>*</code> \u7ec4\u6210\u7684\u975e\u7a7a\u5b57\u7b26\u4e32\uff08\u4ee5\u4e0b\u4e24\u6761\u89c4\u5219\u4e2d\u7684 <code>S</code> \u5747\u4e3a\u6b64\u542b\u4e49\uff09\uff1b</p> </li> <li> <p>\u5982\u679c\u5b57\u7b26\u4e32 <code>A</code> \u548c <code>B</code> \u5747\u4e3a\u7b26\u5408\u89c4\u8303\u7684\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\uff0c\u90a3\u4e48\u5b57\u7b26\u4e32 <code>AB</code>\u3001<code>ASB</code> \u5747\u4e3a\u7b26\u5408\u89c4\u8303\u7684\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\uff0c\u5176\u4e2d <code>AB</code> \u8868\u793a\u628a\u5b57\u7b26\u4e32 <code>A</code> \u548c\u5b57\u7b26\u4e32 <code>B</code> \u62fc\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u7684\u5b57\u7b26\u4e32\uff1b</p> </li> <li> <p>\u5982\u679c\u5b57\u7b26\u4e32 <code>A</code> \u4e3a\u7b26\u5408\u89c4\u8303\u7684\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\uff0c\u90a3\u4e48\u5b57\u7b26\u4e32 <code>(A)</code>\u3001<code>(SA)</code>\u3001<code>(AS)</code> \u5747\u4e3a\u7b26\u5408\u89c4\u8303\u7684\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\u3002</p> </li> <li> <p>\u6240\u6709\u7b26\u5408\u89c4\u8303\u7684\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\u5747\u53ef\u901a\u8fc7\u4e0a\u8ff0 3 \u6761\u89c4\u5219\u5f97\u5230\u3002</p> </li> </ol> <p>\u4f8b\u5982\uff0c\u82e5 \\(k = 3\\)\uff0c\u5219\u5b57\u7b26\u4e32 <code>((**()*(*))*)(***)</code> \u662f\u7b26\u5408\u89c4\u8303\u7684\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\uff0c\u4f46\u5b57\u7b26\u4e32 <code>*()</code>\u3001<code>(*()*)</code>\u3001<code>((**))*)</code>\u3001<code>(****(*))</code> \u5747\u4e0d\u662f\u3002\u7279\u522b\u5730\uff0c\u7a7a\u5b57\u7b26\u4e32\u4e5f\u4e0d\u88ab\u89c6\u4e3a\u7b26\u5408\u89c4\u8303\u7684\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\u3002</p> <p>\u73b0\u5728\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\uff0c\u5176\u4e2d\u6709\u4e00\u4e9b\u4f4d\u7f6e\u7684\u5b57\u7b26\u5df2\u7ecf\u786e\u5b9a\uff0c\u53e6\u5916\u4e00\u4e9b\u4f4d\u7f6e\u7684\u5b57\u7b26\u5c1a\u672a\u786e\u5b9a\uff08\u7528 <code>?</code> \u8868\u793a\uff09\u3002\u5c0f w \u5e0c\u671b\u80fd\u8ba1\u7b97\u51fa\uff1a\u6709\u591a\u5c11\u79cd\u5c06\u6240\u6709\u5c1a\u672a\u786e\u5b9a\u7684\u5b57\u7b26\u4e00\u4e00\u786e\u5b9a\u7684\u65b9\u6cd5\uff0c\u4f7f\u5f97\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u7b26\u5408\u89c4\u8303\u7684\u8d85\u7ea7\u62ec\u53f7\u5e8f\u5217\uff1f</p> <p>\u53ef\u601c\u7684\u5c0f c \u5e76\u4e0d\u4f1a\u505a\u8fd9\u9053\u9898\uff0c\u4e8e\u662f\u53ea\u597d\u8bf7\u6c42\u4f60\u6765\u5e2e\u5fd9\u3002</p> <p>\u5bf9\u4e8e \\(100 \\%\\) \u7684\u6570\u636e\uff0c\\(1 \\le k \\le n \\le 500\\)\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s &lt;&lt; ' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\nconst int N = 1e3 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nint f[N][N][6];\nint n,K;\nstring s;\n\nint cmp(int a,int b){\n    if((s[a]=='('||s[a]=='?')&amp;&amp;(s[b]==')'||s[b]=='?'))return 1;\n    return 0;\n}\n\nvoid momo(int l,int r){\n    for(int i=0;i&lt;=5;i++){\n        f[l][r][i]%=MOD;\n    }\n}\n\nvoid solve(){\n    n=rd,K=rd;\n    cin&gt;&gt;s;\n    s=\" \"+s;\n    for(int i=1;i&lt;=n;i++)f[i][i-1][0]=1;\n    rep(len,1,n){\n        rep(l,1,n-len+1){\n            int r=l+len-1;\n            if(len&lt;=K) f[l][r][0]=f[l][r-1][0]&amp;&amp;(s[r]=='*'||s[r]=='?');\n            momo(l,r);\n            if(len&gt;=2){\n                if(cmp(l,r)) f[l][r][1]=(f[l+1][r-1][0]+f[l+1][r-1][2]+f[l+1][r-1][3]+f[l+1][r-1][4]);\n                rep(i,l,r-1){\n                    f[l][r][2]+=f[l][i][3]*f[i+1][r][0];\n                    f[l][r][3]+=(f[l][i][2]+f[l][i][3])*f[i+1][r][1];\n                    f[l][r][4]+=(f[l][i][4]+f[l][i][5])*f[i+1][r][1];\n                    f[l][r][5]+=f[l][i][4]*f[i+1][r][0];\n                    momo(l,r);\n                }\n            }\n            f[l][r][5]+=f[l][r][0];\n            f[l][r][3]+=f[l][r][1];\n            momo(l,r);\n        }\n    }\n\n\n    cout&lt;&lt;f[1][n][3]&lt;&lt;endl;\n\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%95%B0%E4%BD%8DDP/","title":"\u6570\u4f4dDP","text":"<p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | \u6570\u4f4dDP</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%95%B0%E4%BD%8DDP/#1-1081","title":"\u4f8b\u9898 #1 1081. \u5ea6\u7684\u6570\u91cf","text":"<p>\u6c42\u7ed9\u5b9a\u533a\u95f4 [X,Y] \u4e2d\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u7684\u6574\u6570\u4e2a\u6570\uff1a\u8fd9\u4e2a\u6570\u6070\u597d\u7b49\u4e8e K \u4e2a\u4e92\u4e0d\u76f8\u7b49\u7684 B \u7684\u6574\u6570\u6b21\u5e42\u4e4b\u548c\u3002</p> <p>\u4f8b\u5982\uff0c\u8bbe X=15,Y=20,K=2,B=2\uff0c\u5219\u6709\u4e14\u4ec5\u6709\u4e0b\u5217\u4e09\u4e2a\u6570\u6ee1\u8db3\u9898\u610f\uff1a</p> <p>17=24+20 18=24+21 20=24+22</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%95%B0%E4%BD%8DDP/#_1","title":"\u601d\u8def","text":"<p>\u5373\u5bf9\u4e8e\u4e00\u4e2aB\u8fdb\u5236\u6570\uff0c\u6c42\u533a\u95f4\\([X_{(10)},Y_{(10)}]\\)\u4e2d\u5728B\u8fdb\u5236\u4e0b\u53ea\u6709\u4e24\u4f4d\u4e3a1\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u6570\u4f4ddp\u53ef\u4f7f\u7528\u4e8e\u8ba1\u7b97\u533a\u95f4\u5185\u542b\u6709\u67d0\u79cd\u7279\u6b8a\u6027\u8d28\u7684\u6570\u5b57\u7684\u4e2a\u6570\u3002</p> <p>\u9996\u5148\u6211\u4eec\u5427\u8ba1\u7b97[l,r]\u8f6c\u5316\u4e3a\u8ba1\u7b97[1,r]-[1,l-1]\uff0c\u7c7b\u4f3c\u524d\u7f00\u548c\u3002</p> <p>\u5728\u8003\u8651\u6570\u4f4ddp\u65f6\uff0c\u6309\u7167\u524d\u82e5\u5e72\u4f4d\u662f\u5426\u8fbe\u5230\u4e0a\u754c\u4e14\u5f53\u524d\u4f4d\u662f\u5426\u586b\u4e0a\u754c\uff08\u56e0\u4e3a\u8fd9\u53d6\u51b3\u4e8e\u540e\u9762\u7684\u5269\u4f59\u4f4d\u80fd\u5426\u4efb\u610f\u586b\uff09\uff0c\u53ef\u4ee5\u6309\u7167\u6570\u5b57\u7684\u6bcf\u4e00\u4f4d\u8f6c\u5316\u4e3a\u6811\u5f62\u7ed3\u6784\u6765\u8003\u8651\u3002</p> <p></p> <p>\u7406\u89e3</p> <p>\u5982\u679c\u4e0a\u754c\u4e3a\\(r=\\overline{a_{n-1},\\dots,a_{0}}\\)\uff0c\u90a3\u4e48\u4e3a\u4e86\u4fdd\u8bc1\u6211\u4eec\u679a\u4e3e\u7684\u6570\u4e0d\u8d85\u8fc7r\uff0c\u6211\u4eec\u5c31\u8981\u6309\u5de6\u8fb9\u7684\u6811\u5f62\u7ed3\u6784\u8003\u8651\u3002</p> <p>\u4ee5\\(a_{n-2}\\)\u4e3a\u4f8b\uff0c\u5982\u679c\u9009\u62e9\u5de6\u5206\u53c9\uff0c\u90a3\u4e48\u5373\u586b\\(0\\sim a_{n-2}-1\\)\uff0c\u8fd9\u4e2a\u6570\u5b57\u7684\u6700\u9ad8\u4f4d\u5c31\u6ca1\u6709\u5360\u6ee1\uff0c\u6240\u4ee5\\(n-3\\sim 0\\)\u4e3a\u53ef\u4ee5\u968f\u4fbf\u586b\u4e86\u3002\u7ed3\u5408\u9898\u76ee\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u7b54\u6848\u3002\u5982\u679c\u9009\u62e9\u53f3\u5206\u53c9\uff0c\u5373\u586b\u8be5\u4f4d\u53ef\u4ee5\u586b\u7684\u6700\u5927\u503c\u5e76\u4e14\u524d\u9762\u7684\u6240\u6709\u4f4d\u90fd\u586b\u4e86\u6700\u5927\u503c\uff0c\u90a3\u4e48\u5373\\(n-2\\)\u53ca\u4e4b\u524d\u7684\u6240\u6709\u4f4d\u90fd\u5df2\u7ecf\u5360\u6ee1\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u9012\u5f52\u4e0b\u53bb\u8003\u8651\u3002</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=4e2+5;\nconst int M=5e4+5;\nconst int INF=2e18+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint n,f[N][N],a[N],ans=INF,K,B,l,r,dis[N][20];\n\nbool f2;\n\n\nvoid init(){\n    // for(int i=0;i&lt;=9;i++)f[1][i]=1;\n    for(int i=0;i&lt;N;i++){\n        for(int j=0;j&lt;=i;j++){\n            if(!j)f[i][j]=1;\n            else f[i][j]=f[i-1][j]/\u4ecei\u4f4d\u4e2d\u6311\u9009j\u4f4d\u4e3a1\u7684\u65b9\u6848\u6570\n        }\n    }\n}\n\nint dp(int n){//\u6c42\u4ece0~n\u91cc\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\u7684\u6570\u5b57\u7684\u4e2a\u6570\n    if(!n)return 0;//\u8fb9\u754c\n    vector&lt;int&gt; e;//\u8bb0\u5f55n\u7684\u6bcf\u4e00\u4f4d\n    while(n)e.push_back(n%B),n/=B;\n    int res=0,lst=0;//lst\u4e3a\u53f3\u5206\u652f\u7684\u7ee7\u627f\u4fe1\u606f\uff0c\u8be5\u9898\u4e2d\u662f\u8bb0\u5f55\u524d\u9762\u5df2\u7ecf\u586b\u4e86\u7684\u6570\u5b57\u4e2d\u6709\u591a\u5c11\u4e2a1\n    for(int i=((int)e.size()-1);~i;i--){//\u9ad8\u4f4d\u5230\u5730\u4f4d\u679a\u4e3e\n        int x=e[i];\n\n        if(x){\n            //\u6c42\u5de6\u8fb9\u5206\u652f\uff0c\u5373\u4e0d\u5360\u6ee1\n            res+=f[i][K-lst];//\u5f53\u524d\u4f4d\u4e3a0\n            if(x&gt;1){//\u53ea\u80fd\u586b0/1\uff0c\u4f46\u662f\u56e0\u4e3ax&gt;1\u6545\u65e0\u6cd5\u5360\u6ee1\uff0c\u6ca1\u6709else\u5206\u652f\n                if(K&gt;lst)res+=f[i][K-lst-1];break;\n            }else{\n                lst++;//x=1\u5360\u6ee1,lst\u8bb0\u5f55\u524d\u9762\u5df2\u7ecf\u586b\u4e86\u591a\u5c11\u4e2a1\n                if(lst&gt;K)break;//\u526a\u679d\n            }\n        }\n        if(!i){\n            //\u5df2\u7ecf\u5230\u4e86\u6700\u540e\u4e00\u4f4d\n            res+=(lst==K);\n        }\n    }\n    return res;\n}\nsigned main(){\n    // freopen(\"P5431_1.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n//    ios::sync_with_stdio(false);\n//    cin.tie(0);cout.tie(0);\n    init();\n    l=rd,r=rd,K=rd,B=rd;\n    cout&lt;&lt;dp(r)-dp(l-1)&lt;&lt;endl;\n\n    return 0;\n}\n/*\n\n\n*/\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%95%B0%E4%BD%8DDP/#2-scoi2009-windy","title":"\u4f8b\u9898 #2 | [SCOI2009] windy \u6570","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u4e0d\u542b\u524d\u5bfc\u96f6\u4e14\u76f8\u90bb\u4e24\u4e2a\u6570\u5b57\u4e4b\u5dee\u81f3\u5c11\u4e3a \\(2\\) \u7684\u6b63\u6574\u6570\u88ab\u79f0\u4e3a windy \u6570\u3002windy \u60f3\u77e5\u9053\uff0c\u5728 \\(a\\) \u548c \\(b\\) \u4e4b\u95f4\uff0c\u5305\u62ec \\(a\\) \u548c \\(b\\) \uff0c\u603b\u5171\u6709\u591a\u5c11\u4e2a windy \u6570\uff1f</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%95%B0%E4%BD%8DDP/#_2","title":"\u601d\u8def","text":"<pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=4e5+5;\nconst int M=5e4+5;\nconst int INF=2e18+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint n,f[N][20],a[N],ans=INF,dis[N][20];\n\nbool f2;\n\n\nvoid init(){\n    for(int i=0;i&lt;=9;i++)f[1][i]=1;\n    for(int i=2;i&lt;N;i++){\n        for(int j=0;j&lt;=9;j++){\n            for(int k=0;k&lt;=9;k++){\n                if(abs(j-k)&gt;=2)f[i][j]+=f[i-1][k];\n            }\n        }\n    }\n}\n\nint dp(int n){\n    if(!n)return 0;\n    vector&lt;int&gt; e;\n    while(n)e.push_back(n%10),n/=10;\n    int res=0,lst=-2;\n    for(int i=((int)e.size()-1);~i;i--){\n        int x=e[i];\n        for(int j=(i==e.size()-1)-0;j&lt;x;j++){\n            if(abs(j-lst)&gt;=2)res+=f[i+1][j];\n        }\n        if(abs(x-lst)&gt;=2)lst=x;\n        else break;\n\n        if(!i)res++;\n    }\n\n    for(int i=1;i&lt;e.size();i++){\n        for(int j=1;j&lt;=9;j++){\n            res+=f[i][j];//\u7279\u6b8a\u5904\u7406\u4f4d\u6570\u6ca1\u6709\u5360\u6ee1\u7684\u60c5\u51b5\uff0c\u9632\u6b62\u524d\u5bfc0\u88ab\u8ba1\u7b97\n        }\n    }\n    return res;\n}\nsigned main(){\n    // freopen(\"P5431_1.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n\n    init();\n    int l=rd,r=rd;\n    cout&lt;&lt;dp(r)-dp(l-1)&lt;&lt;endl;\n\n    return 0;\n}\n/*\n\n\n*/\n</code></pre> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(1 \\leq a \\leq b \\leq 2 \\times 10^9\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%95%B0%E4%BD%8DDP/#3-zjoi2010","title":"\u4f8b\u9898 #3 | [ZJOI2010] \u6392\u5217\u8ba1\u6570","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u79f0\u4e00\u4e2a \\(1 \\sim n\\) \u7684\u6392\u5217 \\(p_1,p_2, \\dots ,p_n\\) \u662f Magic \u7684\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(\\forall i \\in [2,n],p_i &gt; p_{\\lfloor i/2 \\rfloor}\\) \u8ba1\u7b97 \\(1 \\sim n\\) \u7684\u6392\u5217\u4e2d\u6709\u591a\u5c11\u662f Magic \u7684\uff0c\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u53ea\u80fd\u8f93\u51fa\u6a21 \\(m\\) \u4ee5\u540e\u7684\u503c\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%95%B0%E4%BD%8DDP/#_3","title":"\u601d\u8def","text":"<p>\u9898\u610f\uff1a\u6c42 1 \u81f3n\u7684\u6240\u6709\u6392\u5217\u4e2d\uff0c\u6ee1\u8db3\u5c0f\u6839\u5806\u6027\u8d28\u7684\u6392\u5217\u7684\u4e2a\u6570\u3002</p> <p>\u5f88\u660e\u663e\\(\\forall i \\in [2,n],p_i &gt; p_{\\lfloor i/2 \\rfloor}\\)\u5c31\u662f\u5c0f\u6839\u5806\u7684\u6027\u8d28\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u56e0\u4e3a\\(i\u21922i,2i+1\\)\u5c31\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8bb0\u5f55\u6cd5\u554a\uff01</p> <p>\u8fd9\u91cc\u5efa\u7acbdp\u6a21\u578b\uff1a\\(f_i\\)\u8868\u793a\u4e2a\u4e0d\u540c\u7684\u6570\u7684\u6240\u6709\u6392\u5217\u4e2d\u6ee1\u8db3\u5c0f\u6839\u5806\u6027\u8d28\u7684\u6392\u5217\u7684\u4e2a\u6570\u3002</p> <p>\u5bf9\u4e8e\u8f6c\u79fb\uff0c\u9996\u5148\u5728\u8f6c\u79fb\u65f6\u8ba1\u7b97\u51fai\u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u4e2d\uff0c\u6839\u8282\u70b9\u7684\u5de6\u4e86\u6811\u5305\u542b\u7684\u8282\u70b9\u6570 \\(l\\) \uff0c\u53f3\u5b50\u6811\u5305\u542b\u7684\u8282\u70b9\u6570 $r $\u3002</p> <p>\u6839\u8282\u70b9\u7684\u503c\u5fc5\u987b\u4e3a\u6700\u5c0f\u503c\u3002\u518d\u8003\u8651\u5269\u4e0b\u7684 \\(i - 1\\) \u4e2a\u8282\u70b9\u3002\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u53ef\u4ee5\u5728\u8fd9\\(i- 1\\) \u4e2a\u8282\u70b9\u4e2d\u9009\u51fa \\(l\\)\u4e2a\u8282\u70b9\u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c\u5269\u4e0b\u7684 \\(r\\) \u4e2a\u8282\u70b9\u4f5c\u4e3a\u53f3\u5b50\u6811\u3002</p> <p>\u8f6c\u79fb \\(f_i=C_{i-1}^l\\times f_l\\times f_r\\)</p> <p>\u6ce8\u610f\u5751\u70b9\uff1an\u53ef\u4ee5\u5927\u4e8ep\uff0c\u6240\u4ee5\u6c42\u7ec4\u5408\u6570\u8981\u7528\u5230Lucas\u5b9a\u7406\u3002</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n// #define nl putc('\\n')\n#define ot write\n#define nl putchar('\\n')\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nbool f1;\nconst int INF = 1e9;\nconst int N = 1e6+1005;\nconst int M = 10;\nint MOD = 10;\n\nint n,m;\nint f[N],fac[N], inv[N],lg[N];\nint ans = INF;\n\nint ksm(int c,int k) {\n    int p=MOD;\n    int res=1;\n    while(k){\n        if(k&amp;1)res=(res*c)%p;\n        c=(c*c)%p;k&gt;&gt;=1;\n    }\n    return res;\n}\n\nvoid comb_init(){\n\n    lg[0] = -1;\n    fac[0]=1;\n    for (int i=1;i&lt;=n;++i) fac[i]=fac[i-1]*i%MOD;\n    inv[min(MOD-1,n)]=ksm(fac[min(MOD-1,n)],MOD-2);\n    for(int i=min(MOD-1,n);i&gt;=1;i--)inv[i-1]=inv[i]*i%MOD;//i!\u7684inv \n    for (int i = 1; i &lt;= n; i++) lg[i] = lg[i &gt;&gt; 1] + 1;\n}\n\n// int C(int n,int m){\n//     if(n&lt;0||m&lt;0)return 0;\n//     if(n&lt;m)return 0;\n//     return fac[n]*inv[m]%MOD*inv[n-m]%MOD;\n// }\n\nint C(int x, int y) {\n    if (!y) return 1;\n    int u = C(x / MOD, y / MOD), v = x % MOD, w = y % MOD, z;\n    if (v &lt; w) z = 0;\n    else z = (fac[v] * inv[w] % MOD) * inv[v - w] % MOD;\n    return u * z % MOD;\n}\n\n// int cal(int x){\n//     int i=1,j=1;\n//     while(i&lt;=x){\n//         i&lt;&lt;=1;i|=1;\n//         j&lt;&lt;=1;\n//     }\n//     int emt=x-i;\n//     int res=(i-j-1)/2/2,j-emt);\n//     // cerr&lt;&lt;x&lt;&lt;' '&lt;&lt;res&lt;&lt;endl;\n//     return res;\n// }\n\nsigned main (){\n    n=rd,MOD=rd;\n\n    comb_init();\n    // f[1]=f[0]=1;\n    // for(int i=2;i&lt;=n;i++){\n    //     cerr&lt;&lt;\"OK \";\n    //     int l=cal(i),r=i-l-1;\n    //     cerr&lt;&lt;C(i-1,l)&lt;&lt;endl;\n    //     f[i]=C(i-1,l)*f[l]%MOD*f[r]%MOD;\n    // }\n    f[1] = f[2] = 1; f[3] = 2;\n    int l=1,r=1;\n    for (int i = 4; i &lt;= n; i++) {\n        if (i - (1 &lt;&lt; lg[i]) + 1 &lt;= (1 &lt;&lt; lg[i] - 1)) l++;\n        else r++;\n        f[i] = (C(i - 1, l) * f[l] % MOD) * f[r] % MOD;\n    }\n    cout&lt;&lt;f[n]&lt;&lt;endl;\n    return 0;\n}\n\n\n\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n \\le 10^6\\), \\(1\\le m \\le 10^9\\)\uff0c\\(m\\) \u662f\u4e00\u4e2a\u8d28\u6570\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%95%B0%E4%BD%8DDP/#4-sdoi2014","title":"\u4f8b\u9898 #4 [SDOI2014] \u6570\u6570","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6211\u4eec\u79f0\u4e00\u4e2a\u6b63\u6574\u6570 \\(x\\) \u662f\u5e78\u8fd0\u6570\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u5341\u8fdb\u5236\u8868\u793a\u4e2d\u4e0d\u5305\u542b\u6570\u5b57\u4e32\u96c6\u5408 \\(s\\) \u4e2d\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u5176\u5b50\u4e32\u3002\u4f8b\u5982\u5f53 \\(s = \\{22, 333, 0233\\}\\) \u65f6\uff0c\\(233\\) \u662f\u5e78\u8fd0\u6570\uff0c\\(2333\\)\u3001\\(20233\\)\u3001\\(3223\\) \u4e0d\u662f\u5e78\u8fd0\u6570\u3002\u7ed9\u5b9a \\(n\\) \u548c \\(s\\)\uff0c\u8ba1\u7b97\u4e0d\u5927\u4e8e \\(n\\) \u7684\u5e78\u8fd0\u6570\u4e2a\u6570\u3002</p> <p>\u7b54\u6848\u5bf9 \\(10^9 + 7\\) \u53d6\u6a21\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%95%B0%E4%BD%8DDP/#_4","title":"\u601d\u8def","text":"<p>\u53c2\u8003\u9898\u89e3</p> <p></p> <p></p> <p></p> <pre><code>/*\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define rep(i, a, b) for(int i = a; i &lt;= b; ++i)\n#define per(i, a, b) for(int i = a; i &gt;= b; --i)\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\nint rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\nvoid write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N = 2e3+5;\nconst int MOD = 1e9 + 7;\nint tr[N][10], fail[N], in[N], idx;\nchar s[N], s2[N];\nint f[N][N],a[N],n;\nqueue&lt;int&gt; q;\n\nvoid add(){\n    int now = 0;\n    for (int i = 1; s[i]; i++){\n        int c = s[i] - '0';\n        if (!tr[now][c]) tr[now][c] = ++idx;\n        now = tr[now][c];\n    }\n    in[now] = 1;\n}\n\nvoid getFail(){\n    for (int i = 0; i &lt; 10; i++)if (tr[0][i])q.push(tr[0][i]);\n    while (q.size()){\n        int now = q.front();\n        q.pop();\n        for (int i = 0; i &lt; 10; i++){\n            int c = tr[now][i];\n            if (!c){ \n                tr[now][i] = tr[fail[now]][i];\n                continue;\n            }\n            fail[c] = tr[fail[now]][i];\n            in[c] |= in[fail[c]];\n            q.push(c);\n\n        }\n    }\n}\n\nint dfs(int p, int now, bool flg, bool lim){\n    if (in[now]) return 0;\n    if (!p) return !flg;\n    if (!lim &amp;&amp; !flg &amp;&amp; ~f[p][now]) return f[p][now];\n    int up = lim ? a[p] : 9;\n    int res = 0;\n    for (int i = 0; i &lt;= up; i++)\n        res = (res + dfs(p - 1, (flg &amp;&amp; !i) ? 0 : tr[now][i], flg &amp;&amp; !i, lim &amp;&amp; i == up)) % MOD;\n    if (!lim &amp;&amp; !flg) f[p][now] = res;\n    return res;\n}\n\nsigned main(){\n    scanf(\"%s\", s2 + 1);\n    n=rd;\n    for (int i = 1; i &lt;= n; i++){\n        scanf(\"%s\", s + 1);\n        add();\n    }\n    getFail();\n\n    memset(f, -1, sizeof f);\n    int len = strlen(s2 + 1);\n    for (int i = 1; i &lt;= len; i++) a[len - i + 1] = s2[i] - '0';\n    cout&lt;&lt;dfs(len, 0, 1, 1);\n    return 0;\n}\n</code></pre> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1\uff1a</p> <p>\\(1 \\leq n &lt; 10^{1201}\\)\uff0c\\(1 \\leq m \\leq 100\\)\uff0c\\(1 \\leq \\sum_{i = 1}^m |s_i| \\leq 1500\\)\uff0c\\(\\min_{i = 1}^m |s_i| \\geq 1\\)\uff0c\u5176\u4e2d \\(|s_i|\\) \u8868\u793a\u5b57\u7b26\u4e32 \\(s_i\\) \u7684\u957f\u5ea6\u3002\\(n\\) \u6ca1\u6709\u524d\u5bfc \\(0\\)\uff0c\u4f46\u662f \\(s_i\\) \u53ef\u80fd\u6709\u524d\u5bfc \\(0\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%9F%E6%9C%9B%E4%B8%8E%E6%A6%82%E7%8E%87DP/","title":"\u671f\u671b\u4e0e\u6982\u7387DP","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%9F%E6%9C%9B%E4%B8%8E%E6%A6%82%E7%8E%87DP/#dp_1","title":"\u6982\u7387DP","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%9F%E6%9C%9B%E4%B8%8E%E6%A6%82%E7%8E%87DP/#1","title":"\u4f8b\u9898 #1 \u641e\u7b11\u4e16\u754c\u676f","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u968f\u7740\u4e16\u754c\u676f\u5c0f\u7ec4\u8d5b\u7684\u7ed3\u675f\uff0c\u6cd5\u56fd\uff0c\u963f\u6839\u5ef7\u7b49\u4e16\u754c\u5f3a\u961f\u90fd\u7eb7\u7eb7\u88ab\u6dd8\u6c70\uff0c\u8ba9\u4eba\u5fc3\u75db\u4e0d\u5df2\u3002 \u4e8e\u662f\u6709\u4eba\u7ec4\u7ec7\u4e86\u4e00\u573a\u641e\u7b11\u4e16\u754c\u676f\uff0c\u5c06\u8fd9\u4e9b\u88ab\u6dd8\u6c70\u7684\u5f3a\u961f\u91cd\u65b0\u7ec4\u7ec7\u8d77\u6765\u548c\u4e16\u754c\u676f\u4e00\u540c\u6bd4\u8d5b\u3002\u4f60\u548c\u4f60\u7684\u670b\u53cb\u6b23\u7136\u53bb\u8d2d\u4e70\u7403\u7968\u3002\u4e0d\u8fc7\u641e\u7b11\u4e16\u754c\u676f\u7684\u7403\u7968\u51fa\u552e\u65b9\u5f0f\u4e5f\u5f88\u7279\u522b\uff0c\u5b83\u4eec\u53ea\u51c6\u5907\u4e86\u4e24\u79cd\u7403\u7968\u3002</p> <ul> <li> <p>A \u7c7b\u7968\u2014\u2014\u514d\u8d39\u7403\u7968</p> </li> <li> <p>B \u7c7b\u7968\u2014\u2014\u53cc\u500d\u4ef7\u94b1\u7403\u7968\u3002</p> </li> </ul> <p>\u8d2d\u4e70\u65f6\u7531\u5de5\u4f5c\u4eba\u5458\u901a\u8fc7\u63b7\u786c\u5e01\u51b3\u5b9a\uff0c\u6295\u5230\u6b63\u9762\u7684\u4e70 A \u7c7b\u7968\uff0c \u53cd\u9762\u7684\u4e70 B \u7c7b\u7968\u3002\u4e3b\u529e\u65b9\u603b\u662f\u51c6\u5907\u4e86\u540c\u6837\u591a\u7684 A \u7c7b\u7968\u548c B \u7c7b\u7968\u3002\u4f60\u548c\u4f60\u7684\u670b\u53cb\u5341\u5206\u5e78\u8fd0\u7684\u6392\u5230\u4e86\u67d0\u573a\u7cbe\u5f69\u6bd4\u8d5b\u7684\u6700\u540e\u4e24\u4e2a\u4f4d\u7f6e\u3002</p> <p>\u8fd9\u65f6\u5de5\u4f5c\u4eba\u5458\u5f00\u59cb\u901a\u8fc7\u786c\u5e01\u552e\u7968\u3002\u4e0d\u8fc7\u66f4\u4e3a\u5e78\u8fd0\u7684\u662f\u5f53\u5de5\u4f5c\u4eba\u5458\u5230\u4f60\u4eec\u9762\u524d\u65f6\u4ed6\u53d1\u73b0\u5df2\u65e0\u9700\u518d\u63b7\u786c\u5e01\u4e86\uff0c\u56e0\u4e3a\u5269\u4e0b\u7684\u8fd9\u4e24\u5f20\u7968\u5168\u662f\u514d\u8d39\u7968\u3002</p> <p>\u4f60\u548c\u4f60\u7684\u670b\u53cb\u5728\u6b23\u559c\u4e4b\u4f59\uff0c\u60f3\u8ba1\u7b97\u4e00\u4e0b\u6392\u5728\u961f\u5c3e\u7684\u4e24\u4e2a\u4eba\u540c\u65f6\u62ff\u5230\u4e00\u79cd\u7968\u7684\u6982\u7387\u662f\u591a\u5c11(\u5305\u62ec\u540c\u65f6\u62ff A \u7c7b\u7968\u6216 B \u7c7b\u7968) \u5047\u8bbe\u5de5\u4f5c\u4eba\u5458\u51c6\u5907\u4e86 \\(2n\\) \u5f20\u7403\u7968\uff0c\u5176\u4e2d \\(n\\) \u5f20 A \u7c7b\u7968\uff0c\\(n\\) \u5f20 B \u7c7b\u7968\uff0c\u5e76\u4e14\u6392\u5728\u961f\u4f0d\u4e2d\u7684\u4eba\u6bcf\u4eba\u5fc5\u987b\u4e14\u53ea\u80fd\u4e70\u4e00\u5f20\u7403\u7968(\u4e0d\u7ba1\u63b7\u5230\u7684\u662f\u8be5\u4e70 A \u8fd8\u662f\u8be5\u4e70 B)\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u53ea\u6709\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a \\(2n\\)\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u53ea\u5305\u542b\u4e00\u884c\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u4e3a\u62ff\u5230\u540c\u4e00\u79cd\u7968\u7684\u6982\u7387\uff0c\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e 4 \u4f4d\u3002</p> <p>\u5bf9\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(1 \\leq n \\leq 1250\\)\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s &lt;&lt; ' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\nconst int N = 3e3 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\ndouble f[N][N];\n\nvoid solve(){\n    int n=rd;\n    n&gt;&gt;=1;\n    f[0][1]=1;\n    f[1][0]=1;\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=n;j++){\n            f[i][j]=f[i][j-1]*0.5+f[i-1][j]*0.5;\n        }\n    }\n    printf(\"%.4lf\",1-f[n][n]);\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%9F%E6%9C%9B%E4%B8%8E%E6%A6%82%E7%8E%87DP/#dp_2","title":"\u671f\u671bDP","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%9F%E6%9C%9B%E4%B8%8E%E6%A6%82%E7%8E%87DP/#1-assimilation-iv","title":"\u4f8b\u9898 #1 Assimilation IV","text":"<p>\u9898\u9762\u7ffb\u8bd1</p> <p>\u7ed9\u5b9a \\(n\\) (\\(1 \\le n \\le 20\\)) \u4e2a\u57ce\u5e02\u548c \\(m\\) (\\(1 \\le m \\le 5 \\cdot 10^4\\))\u4e2a\u70b9.</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u57ce\u5e02\uff0c\u7ed9\u5b9a\u6240\u6709\u70b9\u5230\u8be5\u57ce\u5e02\u7684\u8ddd\u79bb\u4e0e\u5149\u5728\u4e00\u79d2\u5185\u884c\u8d70\u8ddd\u79bb\u7684\u6bd4\u503c \\(d\\) (\\(1 \\le d \\le n + 1\\))\uff08\u4e0d\u4e00\u5b9a\u6ee1\u8db3\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff09.</p> <p>\u4ece\u7b2c\u96f6\u79d2\u5f00\u59cb\uff0c\u6bcf\u9694\u4e00\u79d2\u53ef\u4ee5\u70b9\u4eae\u4e00\u4e2a\u672a\u88ab\u70b9\u4eae\u7684\u57ce\u5e02.</p> <p>\u5df2\u77e5\u70b9\u4eae\u57ce\u5e02\u7684\u987a\u5e8f\u968f\u673a\uff0c\u6c42\u7b2c n \u79d2\u7684\u77ac\u95f4\u88ab\u7167\u4eae\u7684\u70b9\u6570\u7684\u671f\u671b\u503c,\u7b54\u6848\u5bf9 998244353 \u53d6\u6a21\u3002</p> <p>\u5927\u610f</p> <p>\u7ed9\u51fa\u5149\u4ece\u6bcf\u4e00\u5ea7\u57ce\u5e02\u5230\u6bcf\u4e00\u4e2a\u70b9\u7684\u7528\u65f6\uff0c\u4ece\u7b2c\u96f6\u79d2\u5f00\u59cb\uff0c\u6bcf\u9694\u4e00\u79d2\u53ef\u4ee5\u70b9\u4eae\u4e00\u4e2a\u672a\u88ab\u70b9\u4eae\u7684\u57ce\u5e02\uff0c\u57ce\u5e02\u53d1\u51fa\u7684\u5149\u53ef\u4ee5\u70b9\u4eae\u70b9\uff0c\u6c42\u7b2c \\(n\\) \u79d2\u7684\u77ac\u95f4\u88ab\u70b9\u4eae\u7684\u70b9\u6570\u7684\u671f\u671b\u503c\u3002</p> <p>\u601d\u8def</p> <p>\u662f\u4e00\u9053\u4e0d\u64c5\u957f\u7684\u671f\u671b\u9898\uff01</p> <p>\u9996\u5148\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5355\u72ec\u8ba1\u7b97\u5b83\u88ab\u9009\u4e2d\u7684\u6982\u7387\uff0c\u518d\u6c42\u548c\u5373\u4e3a\u7b54\u6848\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\u4e00\u79cd\u60c5\u51b5\u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a $n $ \u7684\u6392\u5217\uff08\u5373\u70b9\u4eae\u57ce\u5e02\u7684\u987a\u5e8f)\u4e00\u4e00\u5bf9\u5e94\uff0c\u6240\u4ee5\u8003\u8651\u5f53\u524d\u70b9\u5728\u591a\u5c11\u4e2a\u6392\u5217\u4e2d\u88ab\u8986\u76d6\u3002</p> <p>\u5982\u679c\u6709\u67d0\u5ea7\u57ce\u5e02\u7684\u5149\u8986\u76d6\u5f53\u524d\u70b9\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u6392\u5217\u7684\u7b2c \\(i\\) \u4f4d\u662f\u8ddd\u79bb $\u2264i $ \u7684\u57ce\u5e02\u3002\u90a3\u4e48 \\(i\\) \u53ef\u80fd\u6709\u5f88\u591a\u4e2a\uff0c\u6211\u4eec\u8981\u8ba1\u7b97\u8fd9\u79cd\u60c5\u51b5\u7684\u60c5\u51b5\u6570\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u6392\u5217\u7ec4\u5408\u91cc\u7684\u4e00\u4e2a\u6280\u5de7\u2014\u2014\u8ba1\u7b97\u4e0d\u6210\u7acb\u7684\u60c5\u51b5\u3002</p> <p>\u6b63\u96be\u5219\u53cd\u3002\u76f4\u63a5\u8ba1\u7b97\u4e0d\u597d\u6c42\uff0c\u90a3\u6211\u4eec\u5c31\u8003\u8651\u8ba1\u7b97\u6ca1\u6709\u8986\u76d6\u5f53\u524d\u70b9\u3002</p> <p>\u5982\u679c\u6ca1\u6709\u8986\u76d6\u5f53\u524d\u70b9\uff0c\u90a3\u4e48\u6392\u5217\u7684\u6700\u540e\u4e00\u4f4d\u4e00\u5b9a\u662f\u8ddd\u79bb \\(&gt;n\\) \u7684\u57ce\u5e02\uff0c\u5012\u6570\u7b2c\u4e8c\u4f4d\u4e00\u5b9a\u662f\u8ddd\u79bb \\(&gt;n-1\\) \u7684\u57ce\u5e02\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u6211\u4eec\u76f4\u63a5\u4e58\u6cd5\u539f\u7406\u8ba1\u7b97\u5373\u53ef\u3002\u6ce8\u610f\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u5ea7\u57ce\u5e02\u90fd\u4f1a\u88ab\u70b9\u4eae\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4e00\u4e2a\u57ce\u5e02\u8ddd\u79bb\u5f53\u524d\u70b9\u7684\u8ddd\u79bb\u4e3a \\(1\\)\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u4f1a\u88ab\u70b9\u4eae\u3002</p> <p>\u6309\u7167\u8fd9\u79cd\u65b9\u6cd5\u66b4\u529b\uff0c\u6211\u4eec\u7684\u590d\u6742\u5ea6\u4e3a \\(O(m\\times n^2)\\) \u5927\u6982\u662f \\(2\\times 10^7\\)\uff0c\u7ecf\u8fc7\u4f18\u5316\u548c\u6876\u8ba1\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f18\u5316\u4e3a \\(O(nm)\\)\u3002</p> <p>\u4ee3\u7801</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e5+5;\nconst int M=1e5;\nconst int MOD=998244353;\nconst int INF=1e5;\n\nint n,m,p,q,T,fac[N],ans;\nint c[N][22];\n\nint ksm(int a,int b){\n    int res=1;\n    while(b){\n        if(b&amp;1)res=res*a%MOD;\n        a=a*a%MOD;\n        b&gt;&gt;=1;\n    }\n    return res;\n}\n\nint rd(){\n    int t;\n    cin&gt;&gt;t;\n    return t;\n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=n;i++)for(int j=1;j&lt;=m;j++){\n        c[j][rd()]++;//c[j][k]\u8868\u793a\u79bb\u70b9j\u8ddd\u79bb\u4e3ak\u7684\u70b9\u7684\u4e2a\u6570\n    }\n    fac[0]=1;\n    for(int i=1;i&lt;=n;i++)fac[i]=(i*fac[i-1])%MOD;\n    int inv=ksm(fac[n],MOD-2);\n    for(int i=1;i&lt;=m;i++){\n        int sum=0,tmp=1;\n        for(int j=n;j;j--){\n            sum+=c[i][j+1];\n            tmp=tmp*sum%MOD;\n            sum--;\n        }\n        ans=(ans/1\u4e3a\u603b\u65b9\u6848\u7684\u6982\u7387\uff0cinv*tmp\u4e3a\u4e0d\u5408\u6cd5\u7684\u6982\u7387\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;               \n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%9F%E6%9C%9B%E4%B8%8E%E6%A6%82%E7%8E%87DP/#dpdp","title":"\u6709\u540e\u6548\u6027\u7684DP\uff08\u671f\u671bDP\uff09","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%9F%E6%9C%9B%E4%B8%8E%E6%A6%82%E7%8E%87DP/#1-cnoi2020","title":"\u4f8b\u9898 #1 \u56fe\u4e0a\u968f\u673a\u6e38\u8d70\u7c7b | [Cnoi2020] \u7ebf\u5f62\u751f\u7269","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ebf\u5f62\u751f\u7269\u8981\u4ece \\(1\\) \u53f7\u53f0\u9636\u8d70\u5230 \\(n+1\\) \u53f7\u53f0\u9636\u3002</p> <p>\u6700\u5f00\u59cb\uff0c\\(1,2,3,\\ldots,n\\) \u53f7\u53f0\u9636\u90fd\u6709\u4e00\u6761\u8fde\u5411\u4e0b\u4e00\u53f0\u9636\u7684\u6709\u5411\u8fb9 \\(i\\rightarrow i+1\\)\u3002</p> <p>\u4e4b\u540e Cirno \u52a0\u5165\u4e86 \\(m\\) \u6761**\u8fd4\u7956\u8fb9** \\(u_i \\rightarrow v_i (u_i \\ge v_i)\\)\uff0c\u5b83\u4eec\u6784\u6210\u4e86\u4e00\u4e2a**\u8fd4\u7956\u56fe**\u3002</p> <p>\u7ebf\u5f62\u751f\u7269\u6bcf\u6b65\u4f1a \u7b49\u6982\u7387\u5730 \u9009\u53d6\u5f53\u524d\u53f0\u9636\u7684\u4e00\u6761\u51fa\u8fb9\u5e76\u8d70\u5411\u5bf9\u5e94\u7684\u53f0\u9636\u3002</p> <p>\u5f53\u8d70\u5230 \\(n+1\\) \u53f7\u53f0\u9636\u65f6\uff0c\u7ebf\u5f62\u751f\u7269\u5c31\u4f1a\u505c\u6b62\u884c\u8d70\u3002</p> <p>\u540c\u65f6\uff0cCirno \u4f1a\u7edf\u8ba1\u7ebf\u6027\u751f\u7269\u603b\u5171\u8d70\u7684\u6b65\u6570\uff0c\u8bb0\u4f5c \\(\\delta\\)\u3002</p> <p>Cirno \u60f3\u77e5\u9053 \\(E(\\delta)\\)\uff08\u5373 \\(\\delta\\) \u7684**\u6570\u5b66\u671f\u671b**\uff09\u5bf9 \\(998244353\\) \u53d6\u6a21\u540e\u7684\u7ed3\u679c\u3002</p> <p>\u601d\u8def</p> <p>\u8003\u8651\u671f\u671bdp</p> <p>\u671f\u671b\u7684\u7ebf\u6027\u6027\u8d28\uff1a\u5728\u672c\u9898\u4e2d\u4f53\u73b0\u4e3a\u4ece x \u70b9\u5230 y \u70b9\u7684\u671f\u671b\u6b65\u6570 \\(E_{x\\to y}=E_{x\\to x+1}+\u2026+E_{y-1 \\to y}=\\sum\\limits_{i=x}^{y-1}E_{i\\to i+1}\\)\u3002\\(E_{y\\to x+1}=\\sum\\limits_{i=y}^{x}E_{i\\to i+1}\\)</p> <p>\u5bf9\u4e8e\u8fd9\u7c7b\u5728**\u56fe\u4e0a\u968f\u673a\u6e38\u8d70**\u7684\u95ee\u9898\uff0c\u8bbe \\(E_{x\\to x+1}\\) \u8868\u793a\u4ece x \u70b9\u5230 x+1 \u70b9\u7684\u671f\u671b\u6b65\u6570\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f \\(\\sum\\limits_{x=0}^n E_{x\\to x+1}\\) \u3002</p> <p>\\(du_x\\) \u8868\u793a x \u7684**\u8fd4\u7956\u8fb9**\u7684\u6761\u6570\uff0c\u800c g(x) \u8868\u793a x \u7684**\u8fd4\u7956\u8fb9**\u7684\u8fb9\u96c6\uff0c\u5217\u51fa \\(E_{x\\to x+1}\\) \u7684\u8f6c\u79fb\u5f0f:</p> <p>\\(E_{x\\to x+1}=\\frac{1}{du_x+1}\\times1+\\frac{1}{du_x+1}\\sum_{(x,y)\\in g(x)} (E_{y\\to x+1}+1)\\)</p> <p>\u5bf9\u4e0a\u5f0f\u5316\u7b80\u5373\u53ef\u3002\u7528\u5230\u4e86\u524d\u7f00\u548c\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n#define ps second\n#define pf first\n\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int N=2e6+5;\nconst int M=5e5+5;\nconst int INF=1e9+5;\nconst int MOD=998244353;\nbool f1;\nint m,k,n,qzh;\n\nint T,mn=INF,ans;\nint f[N],du[N],q[N];\n\nvector&lt;int&gt; e[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n    du[a]++;\n}\n\nsigned main() {\n    int id=rd,n=rd,m=rd;\n    for(int i=1;i&lt;=m;i++){\n        int a=rd,b=rd;\n        add(a,b);\n    }\n\n    for(int x=1;x&lt;=n;x++){\n        f[x]=du[x]+1;\n        for(auto v:e[x]){\n            f[x]=((f[x]+(q[x-1]-q[v-1])%MOD)%MOD+MOD)%MOD;\n        }\n        q[x]=(q[x-1]+f[x])%MOD;\n    }\n\n    cout&lt;&lt;q[n]&lt;&lt;endl;\n}\n/*\n2\n3 2 3 6\n*/\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/","title":"\u6811\u5f62DP","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#1","title":"\u4f8b\u9898 #1 \u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u67d0\u5927\u5b66\u6709 \\(n\\) \u4e2a\u804c\u5458\uff0c\u7f16\u53f7\u4e3a \\(1\\ldots n\\)\u3002</p> <p>\u4ed6\u4eec\u4e4b\u95f4\u6709\u4ece\u5c5e\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ed6\u4eec\u7684\u5173\u7cfb\u5c31\u50cf\u4e00\u68f5\u4ee5\u6821\u957f\u4e3a\u6839\u7684\u6811\uff0c\u7236\u7ed3\u70b9\u5c31\u662f\u5b50\u7ed3\u70b9\u7684\u76f4\u63a5\u4e0a\u53f8\u3002</p> <p>\u73b0\u5728\u6709\u4e2a\u5468\u5e74\u5e86\u5bb4\u4f1a\uff0c\u5bb4\u4f1a\u6bcf\u9080\u8bf7\u6765\u4e00\u4e2a\u804c\u5458\u90fd\u4f1a\u589e\u52a0\u4e00\u5b9a\u7684\u5feb\u4e50\u6307\u6570 \\(r_i\\)\uff0c\u4f46\u662f\u5462\uff0c\u5982\u679c\u67d0\u4e2a\u804c\u5458\u7684\u76f4\u63a5\u4e0a\u53f8\u6765\u53c2\u52a0\u821e\u4f1a\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u804c\u5458\u5c31\u65e0\u8bba\u5982\u4f55\u4e5f\u4e0d\u80af\u6765\u53c2\u52a0\u821e\u4f1a\u4e86\u3002</p> <p>\u6240\u4ee5\uff0c\u8bf7\u4f60\u7f16\u7a0b\u8ba1\u7b97\uff0c\u9080\u8bf7\u54ea\u4e9b\u804c\u5458\u53ef\u4ee5\u4f7f\u5feb\u4e50\u6307\u6570\u6700\u5927\uff0c\u6c42\u6700\u5927\u7684\u5feb\u4e50\u6307\u6570\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570 \\(n\\)\u3002</p> <p>\u7b2c \\(2\\) \u5230\u7b2c \\((n + 1)\\) \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u7b2c \\((i+1)\\) \u884c\u7684\u6574\u6570\u8868\u793a \\(i\\) \u53f7\u804c\u5458\u7684\u5feb\u4e50\u6307\u6570 \\(r_i\\)\u3002</p> <p>\u7b2c \\((n + 2)\\) \u5230\u7b2c \\(2n\\) \u884c\uff0c\u6bcf\u884c\u8f93\u5165\u4e00\u5bf9\u6574\u6570 \\(l, k\\)\uff0c\u4ee3\u8868 \\(k\\) \u662f \\(l\\) \u7684\u76f4\u63a5\u4e0a\u53f8\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\u4ee3\u8868\u6700\u5927\u7684\u5feb\u4e50\u6307\u6570\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(1\\leq n \\leq 6 \\times 10^3\\)\uff0c\\(-128 \\leq r_i\\leq 127\\)\uff0c\\(1 \\leq l, k \\leq n\\)\uff0c\u4e14\u7ed9\u51fa\u7684\u5173\u7cfb\u4e00\u5b9a\u662f\u4e00\u68f5\u6811\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#_1","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nconst int N=1e4+5;\nusing namespace std;\nvector &lt;int&gt; son[N];\nint f[N][2],n,hap[N],l,k,hasfa[N];\nvoid dp(int x){\n    f[x][0]=0;\n    f[x][1]=hap[x];\n    for(int i=0;i&lt;son[x].size();i++){\n        int y=son[x][i];\n        dp(y);\n        f[x][0]+=max(f[y][1],f[y][0]);\n        f[x][1]+=f[y][0];\n    }\n}\nint main(){\n    //ios::sync_which_stdio(false);\n    cin&gt;&gt;n;\n\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;hap[i];\n    } \n    for(int i=1;i&lt;=n-1;i++){\n        cin&gt;&gt;l&gt;&gt;k;\n        hasfa[l]=1;\n        son[k].push_back(l);\n    }\n    int rt=0;\n    while(hasfa[++rt]);\n    dp(rt);\n//  cout&lt;&lt;\"rt=\"&lt;&lt;rt&lt;&lt;endl;\n    cout&lt;&lt;max(f[rt][1],f[rt][0])&lt;&lt;endl;\n    return 0;\n}\n</code></pre> <p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | \u6811\u5f62dp</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#2-scoi2015","title":"\u4f8b\u9898 #2 [SCOI2015] \u5c0f\u51f8\u73a9\u5bc6\u5ba4","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5c0f\u51f8\u548c\u5c0f\u65b9\u76f8\u7ea6\u73a9\u5bc6\u5ba4\u9003\u8131\uff0c\u8fd9\u4e2a\u5bc6\u5ba4\u662f\u4e00\u68f5\u6709 \\(n\\) \u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u706f\u6ce1\u3002\u70b9\u4eae\u6240\u6709\u706f\u6ce1\u5373\u53ef\u9003\u51fa\u5bc6\u5ba4\u3002\u6bcf\u4e2a\u706f\u6ce1\u6709\u4e2a\u6743\u503c \\(a_i\\)\uff0c\u6bcf\u6761\u8fb9\u4e5f\u6709\u4e2a\u6743\u503c \\(b_i\\)\u3002\u70b9\u4eae\u7b2c\u4e00\u4e2a\u706f\u6ce1\u4e0d\u9700\u8981\u82b1\u8d39\uff0c\u4e4b\u540e\u6bcf\u70b9\u4eae\u4e00\u4e2a\u65b0\u7684\u706f\u6ce1 \\(v\\) \u7684\u82b1\u8d39\uff0c\u7b49\u4e8e\u4e0a\u4e00\u4e2a\u88ab\u70b9\u4eae\u7684\u706f\u6ce1 \\(u\\) \u5230\u8fd9\u4e2a\u70b9 \\(v\\) \u7684\u8ddd\u79bb \\(D_{u,v}\\)\uff0c\u4e58\u4ee5\u8fd9\u4e2a\u70b9\u7684\u6743\u503c \\(a_v\\)\u3002\u5728\u70b9\u706f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8981\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\u6240\u6709\u88ab\u70b9\u4eae\u7684\u706f\u6ce1\u5fc5\u987b\u8fde\u901a\uff0c\u5728\u70b9\u4eae\u4e00\u4e2a\u706f\u6ce1\u540e\u5fc5\u987b\u5148\u70b9\u4eae\u5176\u5b50\u6811\u6240\u6709\u706f\u6ce1\u624d\u80fd\u70b9\u4eae\u5176\u4ed6\u706f\u6ce1\u3002\u8bf7\u544a\u8bc9\u4ed6\u4eec\uff0c\u9003\u51fa\u5bc6\u5ba4\u7684\u6700\u5c11\u82b1\u8d39\u662f\u591a\u5c11\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#_2","title":"\u601d\u8def","text":"<p>\u672c\u9898\u540c\u65f6\u8003\u5bdf\u5b8c\u5168\u4e8c\u53c9\u6811\u6027\u8d28\u3002</p> <p>\u89c2\u5bdf\u904d\u5386\u987a\u5e8f:</p> <p>1.\u5148\u70b9\u4eae\u8fd9\u4e2a\u70b9</p> <p>2.\u5728\u513f\u5b50\u4e2d\u9009\u4e00\u4e2a\u70b9\u9012\u5f52,\u70b9\u4eae\u8fd9\u4e2a\u513f\u5b50\u7684\u5b50\u6811(\u6700\u540e\u4e00\u4e2a\u5fc5\u5b9a\u662f\u4e00\u4e2a\u53f6\u5b50)</p> <p>3.\u8fd4\u56de\u8fd9\u4e2a\u70b9</p> <p>4.\u9012\u5f52\u53e6\u4e00\u4e2a\u513f\u5b50</p> <p>5.\u5411\u4e0a\u56de\u6eaf</p> <p>\u8003\u8651\u5982\u679cn\u6bd4\u8f83\u5c0f\u5c31\u662f\u5e38\u89c1\u7684\u6811\u5f62DP,\u8f6c\u79fb\u679a\u4e3e\u662f\u4ece\u5144\u5f1f\u8282\u70b9\u7684\u54ea\u4e2a\u53f6\u5b50\u8f6c\u79fb\u5373\u53ef</p> <p>\u65e2\u7136\u65e0\u6cd5\u679a\u4e3e\u53f6\u5b50\u7ed3\u70b9,\u4e0d\u59a8\u5012\u63a8,\u5bf9\u53f6\u5b50\u8282\u70b9\u5904\u7406\u8f6c\u79fb\u5230\u54ea\u91cc\u7684\u82b1\u8d39,\u4e4b\u540e\u5012\u63a8\u56de\u6839\u8282\u70b9,\u5bf9\u4e8e\u7ed3\u70b9x,\u679a\u4e3e\u5148\u9012\u5f52\u5de6\u5b50\u6811\u8fd8\u662f\u53f3\u5b50\u6811,\u5904\u7406\u5b8cx\u7684\u5b50\u6811\u540e,x\u4e0b\u4e00\u6b65\u6709\u4e24\u79cd\u9009\u62e9\uff1a</p> <p>1.\u56de\u6eaf\u5230x\u7684\u67d0\u4e2a\u7956\u5148</p> <p>2.\u56de\u6eaf\u5230x\u7684\u67d0\u4e2a\u7956\u5148\u7684\u53e6\u4e00\u4e2a\u513f\u5b50(\u5b50\u6811\u4e2d\u4e0d\u5305\u542bx\u7684\u90a3\u4e00\u4e2a)</p> <p>\\(f_{i,j,0/1}\\)\u8868\u793a\u5904\u7406\u5b8ci\u7684\u5b50\u6811\u540e,\u4e0b\u4e00\u4e2a\u8f6c\u79fb\u5230i\u7684j\u7ea7\u7956\u5148(0)/j\u7ea7\u7956\u5148\u7684\u53e6\u4e00\u4e2a\u513f\u5b50(1)</p> <p>\u5b9a\u4e49disi,[j]\u8868\u793ai\u5230i\u7684j\u7ea7\u7956\u5148\u7684\u8ddd\u79bb,fa(i,j)\u8868\u793ai\u7684j\u7ea7\u7956\u5148\u662f\u8c01,brother(i,j)\u8868\u793ai\u7684j\u7ea7\u7956\u5148\u7684\u53e6\u4e00\u4e2a\u513f\u5b50</p> <p>\u5bf9\u4e8e\u7ed3\u70b9x:</p> <ul> <li>x\u662f\u53f6\u5b50\u7ed3\u70b9</li> </ul> <p>\\(f_{x,i,0}=dis_{x,i},\u2217a[fa(x,i)]\\)</p> <p>\\(f_{x,i,1}=(dis_{x,i}+dis[brother(x,i)][1])\u2217a[brother(x,i)]\\)</p> <p>\u5bf9\u4e8e\u53f6\u5b50\u7ed3\u70b9\u76f4\u63a5\u5904\u7406\u5b83\u5230\u4e0b\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb*\u70b9\u6743</p> <ul> <li>x\u4e0d\u662f\u53f6\u5b50\u7ed3\u70b9:</li> </ul> <p>\u5b9a\u4e49ls(p)\u8868\u793ap\u7684\u5de6\u513f\u5b50,rs(p)\u8868\u793ap\u7684\u53f3\u513f\u5b50</p> <ul> <li>x\u6709\u5de6\u513f\u5b50\u65e0\u53f3\u513f\u5b50:</li> </ul> <p>\\(f_{x,i,0}=f_{ls(x),i+1,0}+dis_{ls(x),1}\u2217a_{ls(x)}\\)</p> <p>\\(f_{x,i,1}=f_{ls(x),[i+1],1}+dis_{ls(x),1}\u2217a_{ls(x)}\\)</p> <p>\u53ea\u6709\u5de6\u513f\u5b50\u81ea\u7136\u53ea\u80fd\u4ece\u5de6\u513f\u5b50\u8f6c\u79fb,\u4ee3\u4ef7\u8981\u52a0\u4e0a\u4ecex\u5230ls(x)\u7684\u4ee3\u4ef7</p> <ul> <li>x\u6709\u5de6\u53f3\u513f\u5b50:</li> </ul> <p>\u5728\u5148\u8d70\u5de6\u513f\u5b50\u8fd8\u662f\u5148\u8d70\u53f3\u513f\u5b50\u4e2d\u53d6min</p> <p>\\(f_{x,i,0}=min(f_{ls(x),1,1}+f_{rs(x),[i+1]0}+dis{ls(x),1}\u2217a{ls(x)},~~f_{rs(x),1,1}+f_{ls(x),[i+1]0}+dis{rs(x),1}\u2217a{rs(x)});\\)</p> <p>\\(f_{x,i,1}=min(\\mathop {f_{ls(x),1,1}+f_{rs(x), i+1,1}+dis_{ls(x),1}\u2217a_{ls(x)}}\\limits_{\u5de6\u513f\u5b50}~~,\\mathop{f_{rs(x),1,1}+f_{ls(x),i+1,1}+dis_{rs(x),1}\u2217a_{rs(x)}}\\limits_{\u53f3\u513f\u5b50});\\)</p> <p>\u6c42\u7b54\u6848\u5c31\u662f\u679a\u4e3e\u8d77\u70b9\u5411\u4e0a\u8df3,\u6709\u5144\u5f1f\u5c31\u628a\u5144\u5f1f\u52a0\u4e0a</p> <p>inf\u8981\u5f001e18\uff01\uff01</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=4e5+5;\nconst int M=5e4+5;\nconst int INF=2e18+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint n,f[N][20][2],a[N],ans=INF,dis[N][20];\n\nbool f2;\n\n//\u5b8c\u5168\u4e8c\u53c9\u6811\u6027\u8d28\n#define fa(i,j) ((1&lt;&lt;(j-1)&lt;=i)?(i&gt;&gt;j):-1)\n#define bro(i,j)((i&gt;&gt;(j-1))^1)\n\n//f[i][j][0]\u4e3a\u5904\u7406\u597d\u4e86i\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u540e\u524d\u5f80\u5176j\u7ea7\u7236\u4eb2\u7684\u4ee3\u4ef7\n//f[i][j][1]\u4e3a\u5904\u7406\u597d\u4e86i\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u540e\u524d\u5f80\u5176j\u7ea7\u7236\u4eb2\u7684\u53e6\u5916\u4e00\u4e2a\u513f\u5b50\u7684\u4ee3\u4ef7\n/*\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u6837\u5b50\u5b9a\u4e49\u5462\uff1f\n\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u6211\u4eec\u70b9\u4eae\u4e86\u70b9x\u540e\uff0c\u4e0b\u4e00\u6b65\u53ea\u80fd\u70b9\u4eaels(x)\u6216\u8005rs(x)\u3002\u7136\u540e\u5982\u679c\u6211\u4eec\u70b9\u4eae\u4e86*s(x)\u5b50\u6811\u5185\u7684\u6240\u6709\n\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u4ee5\u4e00\u4e2a\u8282\u70b9v\u4e3a\u7ed3\u5c3e\u8df3\u5230x\u6216\u8005rs(x)\u3002\n\u6211\u4eec\u4e0d\u77e5\u9053\u6211\u4eec\u4f1a\u4ece\u90a3\u4e2a\u8282\u70b9v\u4e3a\u7ed3\u5c3e\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9v\u8df3\u5230x\u548crs(x)\u7684\u4ee3\u4ef7\n\n*/\n\nvoid solve(){\n    for(int i=n;i;i--){\n        //\u9884\u5904\u7406\n        for(int j=1;~fa(i,j);j++){\n            //\u679a\u4e3ei\u7684\u7b2cj\u7ea7\u7956\u5148\n            f[i][j][1]=f[i][j][0]=INF;\n\n            if((i*2)&gt;n){\n                //\u8bf4\u660e\u662f\u53f6\u5b50\u8282\u70b9\n                f[i][j][0]=dis[i][j]*a[fa(i,j)];//\u76f4\u63a5\u4ecei\u5f80\u4e0a\u8df3\u5230i\u7684\u7b2cj\u7ea7\u7956\u5148\n                f[i][j][1]=(dis[i][j]/\u76f4\u63a5\u4ecei\u5f80\u4e0a\u8df3\u5230i\u7684\u7b2cj\u7ea7\u7956\u5148\u7136\u540e\u5230\u53e6\u4e00\u4e2a\u513f\u5b50\uff0ca\u53ea\u4f7f\u7528\u53e6\u4e00\u4e2a\u513f\u5b50\u7684a\n            }\n            else if((i*2+1)&gt;n){\n                //\u53f3\u513f\u5b50\u4e0d\u5b58\u5728\n                //dis[x][i]\u8bb0\u5f55x\u5230\u5176i\u7ea7\u7956\u5148\u7684\u8ddd\u79bb\n                f[i][j][0]=f[i&lt;&lt;1][j+1][0]+dis[i&lt;&lt;1][1]*a[i&lt;&lt;1];\n                //\u8981\u60f3\u4ecei\u5f80\u4e0a\u8d70j\u7ea7\uff0c\u9996\u5148\u8981\u628ai\u7684\u5b50\u6811\u5b8c\u5168\u8bbf\u95ee\u3002//\u4e3a\u4ec0\u4e48\u8981\u52a0\u4e0adis[i&lt;&lt;1][1]*a[i&lt;&lt;1];\n                f[i][j][1]=f[i&lt;&lt;1][j+1][1]+dis[i&lt;&lt;1][1]*a[i&lt;&lt;1];\n\n            }else{\n                f[i][j][0]=min(f[i][j][0],f[i&lt;&lt;1][1][1]+f[i&lt;&lt;1|1][j+1][0]+dis[i&lt;&lt;1][1]*a[i&lt;&lt;1]);\n                f[i][j][0]=min(f[i][j][0],f[i&lt;&lt;1|1][1][1]+f[i&lt;&lt;1][j+1][0]+dis[i&lt;&lt;1|1][1]*a[i&lt;&lt;1|1]);\n                f[i][j][1]=min(f[i][j][1],f[i&lt;&lt;1][1][1]+f[i&lt;&lt;1|1][j+1][1]+dis[i&lt;&lt;1][1]*a[i&lt;&lt;1]);\n                f[i][j][1]=min(f[i][j][1],f[i&lt;&lt;1|1][1][1]+f[i&lt;&lt;1][j+1][1]+dis[i&lt;&lt;1|1][1]*a[i&lt;&lt;1|1]);\n            }\n        }\n    }\n\n//cerr&lt;&lt;\"ans=\"&lt;&lt;ans&lt;&lt;endl;\n    for(int s=1;s&lt;=n;s++){\n        //\u679a\u4e3e\u8d77\u70b9\n        int res=f[s][1][0];\n        for(int i=fa(s,1),last=s;~i;i=fa(i,1),last=fa(last,1)){\n            if(bro(last,1)&lt;=n)res+=dis[bro(last,1)][1]*a[bro(last,1)]+f[bro(last,1)][2][0];\n            else res+=dis[i][1]*a[fa(i,1)];\n        }\n        ans=min(ans,res);\n    }\n\n\n\n}\n\n\nsigned main(){\n    // freopen(\"P5431_1.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n//    ios::sync_with_stdio(false);\n//    cin.tie(0);cout.tie(0);\n\n    n=rd;\n    for(int i=1;i&lt;=n;i++){\n        a[i]=rd;\n\n    }\n\n    for(int i=2;i&lt;=n;i++){\n        dis[i][1]=rd;\n        for(int j=2;~fa(i,j);j++)dis[i][j]=dis[fa(i,1)][j-1]+dis[i][1];\n    }\n\n//  dfs(1,0);\n    solve();\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n/*\n\n\n*/\n</code></pre> <p>\u5bf9\u4e8e \\(100\\)% \u7684\u6570\u636e\uff0c \\(1 \\leq n \\leq 2 * 10^5, 1 \\leq a_i, b_i \\leq 10^5\\)</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#3","title":"\u4f8b\u9898 #3 \u4e8c\u53c9\u82f9\u679c\u6811","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6709\u4e00\u68f5\u82f9\u679c\u6811\uff0c\u5982\u679c\u6811\u679d\u6709\u5206\u53c9\uff0c\u4e00\u5b9a\u662f\u5206\u4e8c\u53c9\uff08\u5c31\u662f\u8bf4\u6ca1\u6709\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u7684\u7ed3\u70b9\uff09</p> <p>\u8fd9\u68f5\u6811\u5171\u6709 \\(N\\) \u4e2a\u7ed3\u70b9\uff08\u53f6\u5b50\u70b9\u6216\u8005\u6811\u679d\u5206\u53c9\u70b9\uff09\uff0c\u7f16\u53f7\u4e3a \\(1 \\sim N\\)\uff0c\u6811\u6839\u7f16\u53f7\u4e00\u5b9a\u662f \\(1\\)\u3002</p> <p>\u6211\u4eec\u7528\u4e00\u6839\u6811\u679d\u4e24\u7aef\u8fde\u63a5\u7684\u7ed3\u70b9\u7684\u7f16\u53f7\u6765\u63cf\u8ff0\u4e00\u6839\u6811\u679d\u7684\u4f4d\u7f6e\u3002\u4e0b\u9762\u662f\u4e00\u9897\u6709 \\(4\\) \u4e2a\u6811\u679d\u7684\u6811\uff1a</p> <pre><code>2   5\n \\ / \n  3   4\n   \\ /\n    1\n</code></pre> <p>\u73b0\u5728\u8fd9\u9897\u6811\u679d\u6761\u592a\u591a\u4e86\uff0c\u9700\u8981\u526a\u679d\u3002\u4f46\u662f\u4e00\u4e9b\u6811\u679d\u4e0a\u957f\u6709\u82f9\u679c\u3002</p> <p>\u7ed9\u5b9a\u9700\u8981\u4fdd\u7559\u7684\u6811\u679d\u6570\u91cf\uff0c\u6c42\u51fa\u6700\u591a\u80fd\u7559\u4f4f\u591a\u5c11\u82f9\u679c\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#_3","title":"\u601d\u8def","text":"<p>\u4f9d\u8d56\u80cc\u5305\u53ef\u505a\u3002</p> <p>\u6709\\(O(n^3)\\)\u8f6c\u79fb\u7684\u60f3\u6cd5\uff0c\u53ef\u8fc7\u3002\u5373\u8bb0\u5f55f_{i,j}\u4e3a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u9009\u62e9i\u6761\u8fb9\u51cf\u53bb\u7684\u6700\u5c0f\u4ef7\u503c\u3002\u8f6c\u79fb\u53ef\u4ee5\u4f7f\u7528\\(O(n^2)\\)</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pb push_back\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=1e3+5;\nconst int M=5e6+5;\nconst int INF=2e9+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint n,m;\n\nint f[N][N];\n\nstruct node{\n    int v,w;\n};\nvector&lt;node&gt; e[N];//\u72b6\u6001\n\n\n\nvoid add(int c,int b,int a){\n    // cerr&lt;&lt;\"add\"&lt;&lt;a&lt;&lt;\" \"&lt;&lt;b&lt;&lt;\" \"&lt;&lt;c&lt;&lt;endl;\n    e[a].push_back({b,c});\n    e[b].push_back({a,c});\n}\n\nvoid dfs(int x,int fa){\n    for(auto v:e[x]){\n        if(v.v==fa)continue;\n        dfs(v.v,x);\n        for(int j=m;~j;j--){\n            for(int k=0;k&lt;j;k++)f[x][j]=max(f[x][j],f[x][j-k-1]+f[v.v][k]+v.w);\n        }\n    }\n}\n\nsigned main(){\n    n=rd,m=rd;\n    for(int i=1;i&lt;n;i++){\n        add(rd,rd,rd);\n    }\n    dfs(1,0);\n\n    cout&lt;&lt;f[1][m]&lt;&lt;endl;\n\n    return 0;\n}\n/*\n5 2\n1 3 1\n1 4 10\n2 3 20\n3 5 20\n\n*/\n</code></pre> <p>\\(1 \\leqslant Q &lt; N \\leqslant 100\\)\uff0c\u6bcf\u6839\u6811\u679d\u4e0a\u7684\u82f9\u679c \\(\\leqslant 3 \\times 10^4\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#4","title":"\u4f8b\u9898 #4 \u6218\u7565\u6e38\u620f","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>Bob \u559c\u6b22\u73a9\u7535\u8111\u6e38\u620f\uff0c\u7279\u522b\u662f\u6218\u7565\u6e38\u620f\u3002\u4f46\u662f\u4ed6\u7ecf\u5e38\u65e0\u6cd5\u627e\u5230\u5feb\u901f\u73a9\u8fc7\u6e38\u620f\u7684\u529e\u6cd5\u3002\u73b0\u5728\u4ed6\u6709\u4e2a\u95ee\u9898\u3002</p> <p>\u63cf\u8ff0</p> <p>\u4ed6\u8981\u5efa\u7acb\u4e00\u4e2a\u53e4\u57ce\u5821\uff0c\u57ce\u5821\u4e2d\u7684\u8def\u5f62\u6210\u4e00\u68f5\u65e0\u6839\u6811\u3002\u4ed6\u8981\u5728\u8fd9\u68f5\u6811\u7684\u7ed3\u70b9\u4e0a\u653e\u7f6e\u6700\u5c11\u6570\u76ee\u7684\u58eb\u5175\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u58eb\u5175\u80fd\u77ad\u671b\u5230\u6240\u6709\u7684\u8def\u3002</p> <p>\u6ce8\u610f\uff0c\u67d0\u4e2a\u58eb\u5175\u5728\u4e00\u4e2a\u7ed3\u70b9\u4e0a\u65f6\uff0c\u4e0e\u8be5\u7ed3\u70b9\u76f8\u8fde\u7684\u6240\u6709\u8fb9\u5c06\u90fd\u53ef\u4ee5\u88ab\u77ad\u671b\u5230\u3002</p> <p>\u8bf7\u4f60\u7f16\u4e00\u7a0b\u5e8f\uff0c\u7ed9\u5b9a\u4e00\u6811\uff0c\u5e2e Bob \u8ba1\u7b97\u51fa\u4ed6\u9700\u8981\u653e\u7f6e\u6700\u5c11\u7684\u58eb\u5175\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#_4","title":"\u601d\u8def","text":"<p>\u60f3\u4e00\u60f3\uff0c\u672c\u9898\u6070\u597d\u662f\u201c\u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a\u201d\u53cd\u8fc7\u6765\u3002</p> <ul> <li> <p>\u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a\uff1a\u6bcf\u6761\u8fb9\u4e0a\u6700\u591a\u9009\u62e9\u4e00\u4e2a\u70b9\u3002\u6700\u5927\u6743\u503c\u3002</p> </li> <li> <p>\u6218\u7565\u6e38\u620f\uff1a\u6bcf\u6761\u8fb9\u4e0a\u6700\u5c11\u9009\u62e9\u4e00\u4e2a\u70b9\u3002\u6700\u5c0f\u6743\u503c\u3002</p> </li> </ul> <p>\u6ce8\u610f\u8282\u70b9\u5f00\u59cb\u7684\u7f16\u53f7\uff01</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pb push_back\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=1e5+5;\nconst int M=5e6+5;\nconst int INF=2e9+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint n,m;\n\nint dp[N][2];\n\nvector&lt;int&gt; e[N];\n\n\n\nvoid add(int a,int b){\n    // cerr&lt;&lt;\"add \"&lt;&lt;a&lt;&lt;\" \"&lt;&lt;b&lt;&lt;endl;\n    e[a].push_back(b);\n    e[b].push_back(a);\n}\n\nvoid dfs(int x,int fa){\n    for(auto v:e[x]){\n        if(v==fa)continue;\n        dfs(v,x);\n    }\n    dp[x][1]=1;\n    for(auto v:e[x]){\n        if(v==fa)continue;\n        dp[x][0]+=dp[v][1];\n        dp[x][1]+=min(dp[v][0],dp[v][1]);\n    }\n}\n\nsigned main(){\n    // freopen(\"P5431_1.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n    // ios::sync_with_stdio(false);\n    // cin.tie(0);cout.tie(0);\n\n    n=rd;\n    for(int i=0;i&lt;n;i++){\n        int x=rd,k=rd;\n        while(k--){\n            add(x,rd);\n        }\n    }\n\n    dfs(0,-1);\n    cout&lt;&lt;min(dp[0][1],dp[0][0])&lt;&lt;endl;\n    return 0;\n}\n/*\n5 2\n1 3 1\n1 4 10\n2 3 20\n3 5 20\n\n*/\n</code></pre> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(1 \\leq n \\leq 1500\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#dp_1","title":"\u6362\u6839DP","text":"<p>\u6709\u4e9b\u65f6\u5019\uff0c\u9898\u76ee\u8981\u6c42\u6700\u4f18\u5316\u4e00\u4e2a\u503c\uff0c\u4f46\u662f\u5b83\u548c\u9009\u62e9\u54ea\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u6216\u8005\u662f\u4ece\u90a3\u4e2a\u8282\u70b9\u5f00\u59cb\u6269\u6563\u6709\u5173\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u8981\u6c42\u6211\u4eec\u4e0d\u80fd\u91c7\u7528n\u6b21dfs\uff08\u6811\u5f62dp\uff09\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u6362\u6839dp\u4e86\u3002</p> <p>\u6362\u6839dp\u662f\u6811\u5f62dp\u7684\u4e00\u79cd\uff0c\u5b83\u901a\u8fc7\u7b2c\u4e00\u904ddfs\u5f97\u5230\u7684\u6570\u636e\uff08\u5165\u5c061\u4f5c\u4e3a\u6839\u8282\u70b9\u8dd1\u51fa\u7684\u5404\u4e2a\u8282\u70b9\u7684dp\u503c\uff09\uff0c\u5728\u7b2c\u4e8c\u6b21dfs\u4e2d\u52a0\u4ee5\u5229\u7528\uff0c\u901a\u8fc7\u8f6c\u79fb\u5f0f\u5feb\u901f\u6839\u636e\u5df2\u6709\u4fe1\u606f\u6c42\u51fa\u5c06\u90bb\u63a5\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\u65f6\u7684\u7b54\u6848\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#1_1","title":"\u4f8b\u9898 #1\u6df1\u5ea6\u4e4b\u548c\u6700\u5927","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#_5","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u51fa\u4e00\u4e2aN\u4e2a\u70b9\u7684\u6811,\u627e\u51fa\u4e00\u4e2a\u70b9\u6765,\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u6811\u65f6,\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u6700\u5927</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#_6","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7ed9\u51fa\u4e00\u4e2a\u6570\u5b57N,\u4ee3\u8868\u6709N\u4e2a\u70b9.N&lt;=1000000 \u4e0b\u9762N-1\u6761\u8fb9.</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#_7","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u4f60\u6240\u627e\u5230\u7684\u70b9,\u5982\u679c\u5177\u6709\u591a\u4e2a\u89e3,\u8bf7\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a</p> <p>\u6362\u6839dp</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e6 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nvector&lt;int&gt;e[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n    e[b].push_back(a);\n}\n\n\nint sz[N];\nint sum[N];\nint n;\n\nvoid dfs(int x,int fa){\n    sz[x]=1;\n    for(auto v:e[x]){\n        if(v==fa)continue;\n        dfs(v,x);\n        sz[x]+=sz[v];\n    }\n\n}\n\n// \u6362\u6839dp\nvoid dfs2(int x,int fa){\n    for(auto v:e[x]){\n        if(v==fa)continue;\n        sum[v]=sum[x]+n-sz[v]*2;\n        dfs2(v,x);\n    }\n}\n\nvoid solve(){\n    n=rd;\n    for(itn i=1;i&lt;n;i++){\n        add(rd,rd);\n    }\n\n\n    dfs(1,0);\n    dfs2(1,0);\n    int ans=-INF;\n    int ansid=1;\n\n    for(int i=1;i&lt;=n;i++){\n        if(sum[i]&gt;ans){\n            ans=sum[i];\n            ansid=i;\n        }\n    }\n\n    cout&lt;&lt;ansid&lt;&lt;endl;\n}\n\n\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#2-k","title":"\u4f8b\u9898 #2 k\u6b65\u4ee5\u5185","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#_8","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u6709\u4e00\u68f5n\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u8fb9\u6743\u503c\u90fd\u4e3a1\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u6743\u503c\u3002\u4f9d\u6b21\u8f93\u51fa\u6bcf\u4e00\u4e2a\u8282\u70b9\u8ddd\u79bbk\u4ee5\u5185\u7684\u8282\u70b9\u7684\u6743\u503c\u548c\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#_9","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7b2c\u4e00\u884c\u5305\u62ec\u4e24\u4e2a\u6b63\u6574\u6570n(1&lt;=n&lt;=100,000)\uff0ck(1&lt;=k&lt;=20)\uff0c\u5206\u522b\u8868\u793a\u8fd9\u68f5\u6811\u8282\u70b9\u7684\u6570\u91cf\u548c\u6240\u89c4\u5b9a\u7684\u8ddd\u79bb\u3002</p> <p>\u63a5\u4e0b\u6765n-1\u884c\uff0c\u6bcf\u884c\u5305\u62ec\u4e24\u4e2a\u6574\u6570a,b (1&lt;=a,b&lt;=n)\uff0c\u8868\u793a\u6709\u4e00\u6761\u4ecea\u8fde\u5411b\u7684\u8fb9\u3002</p> <p>\u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c\u5305\u62ec\u4e00\u4e2a\u6574\u6570vi\uff0c\u8868\u793a\u8282\u70b9i\u7684\u6743\u503c\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%A0%91%E5%BD%A2DP/#_10","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u5171n\u884c\uff0c\u6bcf\u884c\u5305\u62ec\u4e00\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u6bcf\u4e00\u4e2a\u8282\u70b9\u8ddd\u79bbk\u4ee5\u5185\u7684\u8282\u70b9\u7684\u6743\u503c\u548c\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\n\nvector&lt;int&gt; e[N];\nint f[33][N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n    e[b].push_back(a);\n}\n\nvoid solve(){\n    itn n=rd,K=rd;\n    for(int i=1;i&lt;n;i++){\n        add(rd,rd);\n    }\n    for(int i=1;i&lt;=n;i++){\n        f[0][i]=rd;\n        f[1][i]=f[0][i];\n    }\n\n    for(int i=1;i&lt;=K;i++){\n        for(itn j=1;j&lt;=n;j++){\n            if(i!=1)f[i][j]-=f[i-2][j]*(e[j].size()-1);\n            for(auto v:e[j])f[i][j]+=f[i-1][v];\n        }\n    }\n\n\n    for(int i=1;i&lt;=n;i++){\n        cout&lt;&lt;f[K][i]&lt;&lt;endl;\n    }\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/","title":"\u72b6\u6001\u538b\u7f29","text":"<p>\u5728\u8bb0\u5fc6\u5316\u641c\u7d22\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u8981\u679a\u4e3e\u4e00\u4e2a\u6392\u5217\u7684\u6240\u6709\u53ef\u80fd\u6027\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u4e00\u4e2acnt\u6570\u7ec4\u5728dfs\u4e2d\u8bb0\u5f55\u90a3\u4e9b\u6570\u5b57\u5df2\u7ecf\u88ab\u4f7f\u7528\u4e86\u3002\u4f46\u662f\u5728dp\u4e2d\uff0c\u4e0d\u540c\u7684\u60c5\u51b5\u4e4b\u95f4\u7684\u8ba1\u7b97\u662f\u5e76\u884c\u7684\uff0c\u6211\u4eec\u4e0d\u80fd\u50cfdfs\u4e2d\u90a3\u6837\u8bb0\u5f55cnt\u6570\u7ec4\u4e86\u3002\u600e\u4e48\u529e\u5462\uff1f</p> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5982\u679cdp\u4e2d\u9700\u8981\u8ba1\u5165\u7c7b\u4f3ccnt\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u9700\u8981\u8bb0\u5f55\u7684\u9879\u76ee\u901a\u5e38\u4e0d\u8d85\u8fc730\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u5b57\u6765\u8bb0\u5f55\u4f7f\u7528\u60c5\u51b5\u4e86\u2014\u2014\u8bb0\u5f55\u6570\u5b57n\u4e3a\u72b6\u6001\uff0c\u4f5c\u4e3adp\u7684\u4e00\u4e2a\u7ef4\u5ea6\u3002n\u5728\u4e8c\u8fdb\u5236\u4e0b\u7684\u8868\u8fbe\u5c31\u53ef\u4ee5\u770b\u6210\u4e00\u4e2abool\u7c7b\u578b\u7684\u6570\u7ec4\u4e86\uff01</p> <p>\u8fd9\u5c31\u662f\u72b6\u6001\u538b\u7f29\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#1-usaco06novcorn-fields-g","title":"\u4f8b\u9898 #1 [USACO06NOV]Corn Fields G","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u519c\u573a\u4e3b \\(\\rm John\\) \u65b0\u4e70\u4e86\u4e00\u5757\u957f\u65b9\u5f62\u7684\u65b0\u7267\u573a\uff0c\u8fd9\u5757\u7267\u573a\u88ab\u5212\u5206\u6210 \\(M\\) \u884c \\(N\\) \u5217 \\((1 \\le M \\le 12; 1 \\le  N \\le 12)\\)\uff0c\u6bcf\u4e00\u683c\u90fd\u662f\u4e00\u5757\u6b63\u65b9\u5f62\u7684\u571f\u5730\u3002 \\(\\rm John\\) \u6253\u7b97\u5728\u7267\u573a\u4e0a\u7684\u67d0\u51e0\u683c\u91cc\u79cd\u4e0a\u7f8e\u5473\u7684\u8349\uff0c\u4f9b\u4ed6\u7684\u5976\u725b\u4eec\u4eab\u7528\u3002</p> <p>\u9057\u61be\u7684\u662f\uff0c\u6709\u4e9b\u571f\u5730\u76f8\u5f53\u8d2b\u7620\uff0c\u4e0d\u80fd\u7528\u6765\u79cd\u8349\u3002\u5e76\u4e14\uff0c\u5976\u725b\u4eec\u559c\u6b22\u72ec\u5360\u4e00\u5757\u8349\u5730\u7684\u611f\u89c9\uff0c\u4e8e\u662f \\(\\rm John\\) \u4e0d\u4f1a\u9009\u62e9\u4e24\u5757\u76f8\u90bb\u7684\u571f\u5730\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6ca1\u6709\u54ea\u4e24\u5757\u8349\u5730\u6709\u516c\u5171\u8fb9\u3002</p> <p>\\(\\rm John\\) \u60f3\u77e5\u9053\uff0c\u5982\u679c\u4e0d\u8003\u8651\u8349\u5730\u7684\u603b\u5757\u6570\uff0c\u90a3\u4e48\uff0c\u4e00\u5171\u6709\u591a\u5c11\u79cd\u79cd\u690d\u65b9\u6848\u53ef\u4f9b\u4ed6\u9009\u62e9\uff1f\uff08\u5f53\u7136\uff0c\u628a\u65b0\u7267\u573a\u5b8c\u5168\u8352\u5e9f\u4e5f\u662f\u4e00\u79cd\u65b9\u6848\uff09</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\uff1a\u4e24\u4e2a\u6574\u6570 \\(M\\) \u548c \\(N\\)\uff0c\u7528\u7a7a\u683c\u9694\u5f00\u3002</p> <p>\u7b2c \\(2\\) \u5230\u7b2c \\(M+1\\) \u884c\uff1a\u6bcf\u884c\u5305\u542b \\(N\\) \u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570\uff0c\u63cf\u8ff0\u4e86\u6bcf\u5757\u571f\u5730\u7684\u72b6\u6001\u3002\u7b2c \\(i+1\\) \u884c\u63cf\u8ff0\u4e86\u7b2c \\(i\\) \u884c\u7684\u571f\u5730\uff0c\u6240\u6709\u6574\u6570\u5747\u4e3a \\(0\\) \u6216 \\(1\\) \uff0c\u662f \\(1\\) \u7684\u8bdd\uff0c\u8868\u793a\u8fd9\u5757\u571f\u5730\u8db3\u591f\u80a5\u6c83\uff0c\\(0\\) \u5219\u8868\u793a\u8fd9\u5757\u571f\u5730\u4e0d\u9002\u5408\u79cd\u8349\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e00\u4e2a\u6574\u6570\uff0c\u5373\u7267\u573a\u5206\u914d\u603b\u65b9\u6848\u6570\u9664\u4ee5 \\(100,000,000\\) \u7684\u4f59\u6570\u3002</p> <p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | \u72b6\u6001\u538b\u7f29</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#1-noip2016","title":"\u7ec3\u4e60 #1 [NOIP2016 \u63d0\u9ad8\u7ec4] \u6124\u6012\u7684\u5c0f\u9e1f","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>NOIP2016 \u63d0\u9ad8\u7ec4 D2T3</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>Kiana \u6700\u8fd1\u6c89\u8ff7\u4e8e\u4e00\u6b3e\u795e\u5947\u7684\u6e38\u620f\u65e0\u6cd5\u81ea\u62d4\u3002</p> <p>\u7b80\u5355\u6765\u8bf4\uff0c\u8fd9\u6b3e\u6e38\u620f\u662f\u5728\u4e00\u4e2a\u5e73\u9762\u4e0a\u8fdb\u884c\u7684\u3002</p> <p>\u6709\u4e00\u67b6\u5f39\u5f13\u4f4d\u4e8e \\((0,0)\\) \u5904\uff0c\u6bcf\u6b21 Kiana \u53ef\u4ee5\u7528\u5b83\u5411\u7b2c\u4e00\u8c61\u9650\u53d1\u5c04\u4e00\u53ea\u7ea2\u8272\u7684\u5c0f\u9e1f\uff0c\u5c0f\u9e1f\u4eec\u7684\u98de\u884c\u8f68\u8ff9\u5747\u4e3a\u5f62\u5982 \\(y=ax^2+bx\\) \u7684\u66f2\u7ebf\uff0c\u5176\u4e2d \\(a,b\\) \u662f Kiana \u6307\u5b9a\u7684\u53c2\u6570\uff0c\u4e14\u5fc5\u987b\u6ee1\u8db3 \\(a &lt; 0\\)\uff0c\\(a,b\\) \u90fd\u662f\u5b9e\u6570\u3002</p> <p>\u5f53\u5c0f\u9e1f\u843d\u56de\u5730\u9762\uff08\u5373 \\(x\\) \u8f74\uff09\u65f6\uff0c\u5b83\u5c31\u4f1a\u77ac\u95f4\u6d88\u5931\u3002</p> <p>\u5728\u6e38\u620f\u7684\u67d0\u4e2a\u5173\u5361\u91cc\uff0c\u5e73\u9762\u7684\u7b2c\u4e00\u8c61\u9650\u4e2d\u6709 \\(n\\) \u53ea\u7eff\u8272\u7684\u5c0f\u732a\uff0c\u5176\u4e2d\u7b2c \\(i\\) \u53ea\u5c0f\u732a\u6240\u5728\u7684\u5750\u6807\u4e3a \\(\\left(x_i,y_i \\right)\\)\u3002</p> <p>\u5982\u679c\u67d0\u53ea\u5c0f\u9e1f\u7684\u98de\u884c\u8f68\u8ff9\u7ecf\u8fc7\u4e86 \\(\\left( x_i, y_i \\right)\\)\uff0c\u90a3\u4e48\u7b2c \\(i\\) \u53ea\u5c0f\u732a\u5c31\u4f1a\u88ab\u6d88\u706d\u6389\uff0c\u540c\u65f6\u5c0f\u9e1f\u5c06\u4f1a\u6cbf\u7740\u539f\u5148\u7684\u8f68\u8ff9\u7ee7\u7eed\u98de\u884c\uff1b</p> <p>\u5982\u679c\u4e00\u53ea\u5c0f\u9e1f\u7684\u98de\u884c\u8f68\u8ff9\u6ca1\u6709\u7ecf\u8fc7 \\(\\left( x_i, y_i \\right)\\)\uff0c\u90a3\u4e48\u8fd9\u53ea\u5c0f\u9e1f\u98de\u884c\u7684\u5168\u8fc7\u7a0b\u5c31\u4e0d\u4f1a\u5bf9\u7b2c \\(i\\) \u53ea\u5c0f\u732a\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u3002</p> <p>\u4f8b\u5982\uff0c\u82e5\u4e24\u53ea\u5c0f\u732a\u5206\u522b\u4f4d\u4e8e \\((1,3)\\) \u548c \\((3,3)\\)\uff0cKiana \u53ef\u4ee5\u9009\u62e9\u53d1\u5c04\u4e00\u53ea\u98de\u884c\u8f68\u8ff9\u4e3a \\(y=-x^2+4x\\) \u7684\u5c0f\u9e1f\uff0c\u8fd9\u6837\u4e24\u53ea\u5c0f\u732a\u5c31\u4f1a\u88ab\u8fd9\u53ea\u5c0f\u9e1f\u4e00\u8d77\u6d88\u706d\u3002</p> <p>\u800c\u8fd9\u4e2a\u6e38\u620f\u7684\u76ee\u7684\uff0c\u5c31\u662f\u901a\u8fc7\u53d1\u5c04\u5c0f\u9e1f\u6d88\u706d\u6240\u6709\u7684\u5c0f\u732a\u3002</p> <p>\u8fd9\u6b3e\u795e\u5947\u6e38\u620f\u7684\u6bcf\u4e2a\u5173\u5361\u5bf9 Kiana \u6765\u8bf4\u90fd\u5f88\u96be\uff0c\u6240\u4ee5 Kiana \u8fd8\u8f93\u5165\u4e86\u4e00\u4e9b\u795e\u79d8\u7684\u6307\u4ee4\uff0c\u4f7f\u5f97\u81ea\u5df1\u80fd\u66f4\u8f7b\u677e\u5730\u5b8c\u6210\u8fd9\u4e2a\u6e38\u620f\u3002\u8fd9\u4e9b\u6307\u4ee4\u5c06\u5728\u3010\u8f93\u5165\u683c\u5f0f\u3011\u4e2d\u8be6\u8ff0\u3002</p> <p>\u5047\u8bbe\u8fd9\u6b3e\u6e38\u620f\u4e00\u5171\u6709 \\(T\\) \u4e2a\u5173\u5361\uff0c\u73b0\u5728 Kiana \u60f3\u77e5\u9053\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5173\u5361\uff0c\u81f3\u5c11\u9700\u8981\u53d1\u5c04\u591a\u5c11\u53ea\u5c0f\u9e1f\u624d\u80fd\u6d88\u706d\u6240\u6709\u7684\u5c0f\u732a\u3002\u7531\u4e8e\u5979\u4e0d\u4f1a\u7b97\uff0c\u6240\u4ee5\u5e0c\u671b\u7531\u4f60\u544a\u8bc9\u5979\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 \\(T\\)\uff0c\u8868\u793a\u6e38\u620f\u7684\u5173\u5361\u603b\u6570\u3002</p> <p>\u4e0b\u9762\u4f9d\u6b21\u8f93\u5165\u8fd9 \\(T\\) \u4e2a\u5173\u5361\u7684\u4fe1\u606f\u3002\u6bcf\u4e2a\u5173\u5361\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u975e\u8d1f\u6574\u6570 \\(n,m\\)\uff0c\u5206\u522b\u8868\u793a\u8be5\u5173\u5361\u4e2d\u7684\u5c0f\u732a\u6570\u91cf\u548c Kiana \u8f93\u5165\u7684\u795e\u79d8\u6307\u4ee4\u7c7b\u578b\u3002\u63a5\u4e0b\u6765\u7684 \\(n\\) \u884c\u4e2d\uff0c\u7b2c \\(i\\) \u884c\u5305\u542b\u4e24\u4e2a\u6b63\u5b9e\u6570 \\(x_i,y_i\\)\uff0c\u8868\u793a\u7b2c \\(i\\) \u53ea\u5c0f\u732a\u5750\u6807\u4e3a \\((x_i,y_i)\\)\u3002\u6570\u636e\u4fdd\u8bc1\u540c\u4e00\u4e2a\u5173\u5361\u4e2d\u4e0d\u5b58\u5728\u4e24\u53ea\u5750\u6807\u5b8c\u5168\u76f8\u540c\u7684\u5c0f\u732a\u3002</p> <p>\u5982\u679c \\(m=0\\)\uff0c\u8868\u793a Kiana \u8f93\u5165\u4e86\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\u7684\u6307\u4ee4\u3002</p> <p>\u5982\u679c \\(m=1\\)\uff0c\u5219\u8fd9\u4e2a\u5173\u5361\u5c06\u4f1a\u6ee1\u8db3\uff1a\u81f3\u591a\u7528 \\(\\lceil n/3 + 1 \\rceil\\) \u53ea\u5c0f\u9e1f\u5373\u53ef\u6d88\u706d\u6240\u6709\u5c0f\u732a\u3002</p> <p>\u5982\u679c \\(m=2\\)\uff0c\u5219\u8fd9\u4e2a\u5173\u5361\u5c06\u4f1a\u6ee1\u8db3\uff1a\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u89e3\uff0c\u5176\u4e2d\u6709\u4e00\u53ea\u5c0f\u9e1f\u6d88\u706d\u4e86\u81f3\u5c11 \\(\\lfloor n/3 \\rfloor\\) \u53ea\u5c0f\u732a\u3002</p> <p>\u4fdd\u8bc1 \\(1\\leq n \\leq 18\\)\uff0c\\(0\\leq m \\leq 2\\)\uff0c\\(0 &lt; x_i,y_i &lt; 10\\)\uff0c\u8f93\u5165\u4e2d\u7684\u5b9e\u6570\u5747\u4fdd\u7559\u5230\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d\u3002</p> <p>\u4e0a\u6587\u4e2d\uff0c\u7b26\u53f7 \\(\\lceil c \\rceil\\) \u548c \\(\\lfloor c \\rfloor\\) \u5206\u522b\u8868\u793a\u5bf9 \\(c\\) \u5411\u4e0a\u53d6\u6574\u548c\u5411\u4e0b\u53d6\u6574\uff0c\u4f8b\u5982\uff1a\\(\\lceil 2.1 \\rceil = \\lceil 2.9 \\rceil = \\lceil 3.0 \\rceil = \\lfloor 3.0 \\rfloor = \\lfloor 3.1 \\rfloor = \\lfloor 3.9 \\rfloor = 3\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#_2","title":"\u601d\u8def","text":"<p>\u6211\u4eec\u8981\u6c42\u51fa\u4f7f\u7528\u6700\u5c11\u7684\u629b\u7269\u7ebf\u8986\u76d6\u6240\u6709\u70b9\u3002\u9996\u5148\u660e\u786e\u4e24\u4e2a\u70b9\uff08\u9664(0,0)\uff09\u53ef\u4ee5\u786e\u5b9a\u4e00\u6761\u629b\u7269\u7ebf\uff0c\u4e24\u4e2a\u70b9x\u4e0d\u76f8\u540c\u3002\u90a3\u4e48\u4e00\u5171\u5c31\u53ea\u6709\\(n^2\\)\u6761\u629b\u7269\u7ebf\u3002\u6211\u4eec\u8981\u7528\u6570\u5b66\u65b9\u6cd5\u6c42\u51fa\u6bcf\u6761\u629b\u7269\u7ebf\u7ecf\u8fc7\u4e86\u90a3\u4e9b\u70b9</p> <p>\u662f\u5178\u578b\u7684\u91cd\u590d\u8986\u76d6\u95ee\u9898\u3002\u7528dancing links\u662f\u6700\u4f18\u89e3\u3002</p> <p>\u66b4\u529b\u7684\u8bdd\u5c31\u662f</p> <p></p> <p></p> <p>\u5de6\u56fe\u4e2d\u6bcf\u4e00\u6761\u7d2b\u8272\u5757\u5c31\u662f\u4e00\u4e2a\u70b9\uff0c\u767d\u7ebf\u5c31\u662f\u629b\u7269\u7ebf\u3002\u5757\u8986\u76d6\u7684\u767d\u7ebf\u8868\u793a\u8be5\u6761\u629b\u7269\u7ebf\u53ef\u4ee5\u8986\u76d6\u8be5\u70b9\u3002\u6211\u4eec\u89e3\u51b3\u95ee\u9898\u5c31\u662f\u8981\u627e\u6700\u5c11\u7684\u767d\u7ebf\u4f7f\u5f97\u6bcf\u4e00\u5757\u4e0a\u90fd\u6709\u767d\u7ebf\u7ecf\u8fc7\u3002</p> <p>\u672c\u9898\u7684dp\u5c31\u662f\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\u8bb0\\(f_s\\)\u6765\u4fdd\u5b58\u72b6\u6001\u4e3as\u65f6\u7684res\u9632\u6b62\u91cd\u590d\u641c\u7d22\u3002</p> <p></p> <p>\u6ce8\u610f\u9a8c\u8bc1\u4e8c\u6b21\u51fd\u6570\u5408\u6cd5\u6027\uff1a\\(a&lt;0,x1\u2260x2\\)</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pb push_back\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=1e3+5;\nconst int M=5e6+5;\nconst int INF=2e9+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint f[M],n,m;\n\nvector&lt;int&gt; s;//\u72b6\u6001\nint pa[N][N];\nstruct node{\n    double x,y;\n}q[N];\n\nbool cmp(double a,double b){\n    if(fabs(a-b)&lt;0.000001)return 1;\n    return 0;\n}\n\nsigned main(){\n    // freopen(\"P5431_1.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n    // ios::sync_with_stdio(false);\n    // cin.tie(0);cout.tie(0);\n    int T=rd;\n    while(T--){\n        n=rd,m=rd;\n        for(int i=0;i&lt;n;i++)cin&gt;&gt;q[i].x&gt;&gt;q[i].y;\n        memset(pa,0,sizeof pa);\n        for(int i=0;i&lt;n;i++){\n            pa[i][i]=1&lt;&lt;i;\n            for(int j=0;j&lt;n;j++){\n                double x1=q[i].x,y1=q[i].y;\n                double x2=q[j].x,y2=q[j].y;\n                if(cmp(x1,x2))continue;//\u6ce8\u610feps\u4e0d\u80fd\u7528==\n                double a=(y1/x1-y2/x2)/(x1-x2);\n                // cerr&lt;&lt;\"a=\"&lt;&lt;a&lt;&lt;endl;\n                if(a&gt;=0)continue;\n                double b=(y1/x1)-a*x1;\n                int cnt=0;\n                for(int k=0;k&lt;n;k++){\n                    double x=q[k].x,y=q[k].y;\n                    if(cmp(a*x*x/\u6807\u8bb0\u7ecf\u8fc7\n                }\n                pa[i][j]=cnt;\n\n            }\n        }\n\n        memset(f,0x3f,sizeof(f));\n        f[0]=0;\n        for(int i=0;i+1&lt;1&lt;&lt;n;i++){\n            int x=0;\n            for(int j=0;j&lt;n;j++){\n                if(!(i&gt;&gt;j&amp;1)){x=j;break;}\n            }\n            for(int j=0;j&lt;n;j++)f[i|pa[x][j]]=min(f[i]+1,f[i|pa[x][j]]);\n        }\n\n        cout&lt;&lt;f[(1&lt;&lt;n)-1]&lt;&lt;endl;\n    }\n    return 0;\n}\n/*\n5 4\nPHPP\nPPHH\nPPPP\nPHPP\nPHHP\n\n*/\n</code></pre> <p>\u3010\u6570\u636e\u8303\u56f4\u3011</p> \u6d4b\u8bd5\u70b9\u7f16\u53f7 \\(n\\leqslant\\) \\(m=\\) \\(T\\leqslant\\) \\(1\\) \\(2\\) \\(0\\) \\(10\\) \\(2\\) \\(2\\) \\(0\\) \\(30\\) \\(3\\) \\(3\\) \\(0\\) \\(10\\) \\(4\\) \\(3\\) \\(0\\) \\(30\\) \\(5\\) \\(4\\) \\(0\\) \\(10\\) \\(6\\) \\(4\\) \\(0\\) \\(30\\) \\(7\\) \\(5\\) \\(0\\) \\(10\\) \\(8\\) \\(6\\) \\(0\\) \\(10\\) \\(9\\) \\(7\\) \\(0\\) \\(10\\) \\(10\\) \\(8\\) \\(0\\) \\(10\\) \\(11\\) \\(9\\) \\(0\\) \\(30\\) \\(12\\) \\(10\\) \\(0\\) \\(30\\) \\(13\\) \\(12\\) \\(1\\) \\(30\\) \\(14\\) \\(12\\) \\(2\\) \\(30\\) \\(15\\) \\(15\\) \\(0\\) \\(15\\) \\(16\\) \\(15\\) \\(1\\) \\(15\\) \\(17\\) \\(15\\) \\(2\\) \\(15\\) \\(18\\) \\(18\\) \\(0\\) \\(5\\) \\(19\\) \\(18\\) \\(1\\) \\(5\\) \\(20\\) \\(18\\) \\(2\\) \\(5\\)"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#2-noi2001","title":"\u7ec3\u4e60 #2 [NOI2001] \u70ae\u5175\u9635\u5730","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u53f8\u4ee4\u90e8\u7684\u5c06\u519b\u4eec\u6253\u7b97\u5728 \\(N\\times M\\) \u7684\u7f51\u683c\u5730\u56fe\u4e0a\u90e8\u7f72\u4ed6\u4eec\u7684\u70ae\u5175\u90e8\u961f\u3002</p> <p>\u4e00\u4e2a \\(N\\times M\\) \u7684\u5730\u56fe\u7531 \\(N\\) \u884c \\(M\\) \u5217\u7ec4\u6210\uff0c\u5730\u56fe\u7684\u6bcf\u4e00\u683c\u53ef\u80fd\u662f\u5c71\u5730\uff08\u7528 \\(\\texttt{H}\\) \u8868\u793a\uff09\uff0c\u4e5f\u53ef\u80fd\u662f\u5e73\u539f\uff08\u7528 \\(\\texttt{P}\\) \u8868\u793a\uff09\uff0c\u5982\u4e0b\u56fe\u3002</p> <p>\u5728\u6bcf\u4e00\u683c\u5e73\u539f\u5730\u5f62\u4e0a\u6700\u591a\u53ef\u4ee5\u5e03\u7f6e\u4e00\u652f\u70ae\u5175\u90e8\u961f\uff08\u5c71\u5730\u4e0a\u4e0d\u80fd\u591f\u90e8\u7f72\u70ae\u5175\u90e8\u961f\uff09\uff1b\u4e00\u652f\u70ae\u5175\u90e8\u961f\u5728\u5730\u56fe\u4e0a\u7684\u653b\u51fb\u8303\u56f4\u5982\u56fe\u4e2d\u9ed1\u8272\u533a\u57df\u6240\u793a\uff1a</p> <p></p> <p>\u5982\u679c\u5728\u5730\u56fe\u4e2d\u7684\u7070\u8272\u6240\u6807\u8bc6\u7684\u5e73\u539f\u4e0a\u90e8\u7f72\u4e00\u652f\u70ae\u5175\u90e8\u961f\uff0c\u5219\u56fe\u4e2d\u7684\u9ed1\u8272\u7684\u7f51\u683c\u8868\u793a\u5b83\u80fd\u591f\u653b\u51fb\u5230\u7684\u533a\u57df\uff1a\u6cbf\u6a2a\u5411\u5de6\u53f3\u5404\u4e24\u683c\uff0c\u6cbf\u7eb5\u5411\u4e0a\u4e0b\u5404\u4e24\u683c\u3002</p> <p>\u56fe\u4e0a\u5176\u5b83\u767d\u8272\u7f51\u683c\u5747\u653b\u51fb\u4e0d\u5230\u3002\u4ece\u56fe\u4e0a\u53ef\u89c1\u70ae\u5175\u7684\u653b\u51fb\u8303\u56f4\u4e0d\u53d7\u5730\u5f62\u7684\u5f71\u54cd\u3002</p> <p>\u73b0\u5728\uff0c\u5c06\u519b\u4eec\u89c4\u5212\u5982\u4f55\u90e8\u7f72\u70ae\u5175\u90e8\u961f\uff0c\u5728\u9632\u6b62\u8bef\u4f24\u7684\u524d\u63d0\u4e0b\uff08\u4fdd\u8bc1\u4efb\u4f55\u4e24\u652f\u70ae\u5175\u90e8\u961f\u4e4b\u95f4\u4e0d\u80fd\u4e92\u76f8\u653b\u51fb\uff0c\u5373\u4efb\u4f55\u4e00\u652f\u70ae\u5175\u90e8\u961f\u90fd\u4e0d\u5728\u5176\u4ed6\u652f\u70ae\u5175\u90e8\u961f\u7684\u653b\u51fb\u8303\u56f4\u5185\uff09\uff0c\u5728\u6574\u4e2a\u5730\u56fe\u533a\u57df\u5185\u6700\u591a\u80fd\u591f\u6446\u653e\u591a\u5c11\u6211\u519b\u7684\u70ae\u5175\u90e8\u961f\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#_3","title":"\u601d\u8def","text":"<p>\u5047\u5982\u6211\u4eec\u53ea\u8003\u8651\u7ad6\u76f4\u65b9\u5411\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u8003\u8651\u7b2ci\u884c\u65f6\u8981\u77e5\u9053i-1,i-2\u884c\u7684\u72b6\u6001\u3002\u5982\u679c\u5728\u7b2cj\u5217\uff0ci-1\u6216\u8005i-2\u884c\u6709\u70ae\u5175\uff0c\u90a3\u4e48\u7b2ci\u884c\u5c31\u4e0d\u80fd\u6446\u70ae\u5175\u3002\u540c\u65f6\u70ae\u5175\u4e0d\u80fd\u5728\u5c71\u5730\u4e0a</p> <p>\u8bb0\u5f55\\(f_{i,j,k}\\)\u4e3a\u8003\u8651\u7b2ci\u884c\uff0c\u7b2ci-1,i\u884c\u7684\u72b6\u6001\u5206\u522b\u4e3aj,k\u7684\u5408\u6cd5\u72b6\u6001\u7684\u6700\u5927\u72b6\u6001\u6570\u3002\u4e3a\u4e86\u77e5\u9053i-1,i-2\u884c\u7684\u72b6\u6001\uff0c\u6211\u4eec\u4ece\\(f_{i-1}\\)\u8f6c\u79fb\u6765\u5373\u53ef\u3002</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pb push_back\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=1e3+5;\nconst int M=2e3+5;\nconst int INF=2e9+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint f[2][M][M],cnt[M],n,m;\nint g[N];//\u6bcf\u4e00\u884c\u7684\u5c71\u5730\u72b6\u6001\n\nvector&lt;int&gt; s;//\u72b6\u6001\n\nbool check(int s){\n    for(int i=0;i&lt;m;i++){\n        if((s&gt;&gt;i&amp;1)&amp;&amp;((s&gt;&gt;i/\u53ea\u6709\u5f53\u524d\u8fd9\u4e00\u4f4d\u662f1\u624d\u9700\u8981\u5224\u5b9a\u4e0e\u7b2ci-1,i-2\u884c\u662f\u5426\u5408\u6cd5\n    }\n    return 1;\n}\nint count(int x){//\u8ba1\u7b97x\u7684\u4e8c\u8fdb\u5236\u4e0b\u6709\u51e0\u4e2a1\n    int res=0;\n    while(x){\n        res+=x&amp;1;\n        x&gt;&gt;=1;\n    }\n    return res;\n}\n\nsigned main(){\n    // freopen(\"P5431_1.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n    // ios::sync_with_stdio(false);\n    // cin.tie(0);cout.tie(0);\n\n    n=rd,m=rd;\n    for(int i=0;i&lt;n;i++){\n        for(int j=0;j&lt;m;j++){\n            char c;\n            cin&gt;&gt;c;\n            if(c=='H')g[i]+=1&lt;&lt;j;\n        }\n    }\n    for(int i=0;i&lt;1&lt;&lt;m;i++){\n        if(check(i)){\n            s.pb(i);\n            cnt[i]=count(i);\n        }\n    }\n    // cerr&lt;&lt;s.size()&lt;&lt;endl;\n    // cerr&lt;&lt;\"OK\";\n\n    for(int i=0;i&lt;n+2;i++){\n        for(int j=0;j&lt;s.size();j++){\n            for(int k=0;k&lt;s.size();k++){\n                for(int u=0;u&lt;s.size();u++){\n                    int a=s[u],b=s[j],c=s[k];\n                    // cerr&lt;&lt;\"U\";\n                    if((a&amp;b)||(a&amp;c)||(b&amp;c))continue;\n                    if(g[i]&amp;c)continue;\n                    // cerr&lt;&lt;\"K\";\n                    f[i&amp;1][j][k]=max(f[i&amp;1][j][k],f[i-1&amp;1][u][j]+cnt[c]);\n                }\n            }\n        }\n    }\n    cout&lt;&lt;f[n+1&amp;1][0][0];\n\n    return 0;\n}\n/*\n\n\n*/\n</code></pre> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\leq N\\le 100\\)\uff0c\\(1 \\leq M\\le 10\\)\uff0c\u4fdd\u8bc1\u5b57\u7b26\u4ec5\u5305\u542b <code>P</code> \u4e0e <code>H</code>\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#3-noip2017","title":"\u7ec3\u4e60 #3 [NOIP2017 \u63d0\u9ad8\u7ec4] \u5b9d\u85cf","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>NOIP2017 D2T2</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u53c2\u4e0e\u8003\u53e4\u6316\u6398\u7684\u5c0f\u660e\u5f97\u5230\u4e86\u4e00\u4efd\u85cf\u5b9d\u56fe\uff0c\u85cf\u5b9d\u56fe\u4e0a\u6807\u51fa\u4e86 \\(n\\) \u4e2a\u6df1\u57cb\u5728\u5730\u4e0b\u7684\u5b9d\u85cf\u5c4b\uff0c \u4e5f\u7ed9\u51fa\u4e86\u8fd9 \\(n\\) \u4e2a\u5b9d\u85cf\u5c4b\u4e4b\u95f4\u53ef\u4f9b\u5f00\u53d1\u7684 \\(m\\) \u6761\u9053\u8def\u548c\u5b83\u4eec\u7684\u957f\u5ea6\u3002</p> <p>\u5c0f\u660e\u51b3\u5fc3\u4eb2\u81ea\u524d\u5f80\u6316\u6398\u6240\u6709\u5b9d\u85cf\u5c4b\u4e2d\u7684\u5b9d\u85cf\u3002\u4f46\u662f\uff0c\u6bcf\u4e2a\u5b9d\u85cf\u5c4b\u8ddd\u79bb\u5730\u9762\u90fd\u5f88\u8fdc\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece\u5730\u9762\u6253\u901a\u4e00\u6761\u5230\u67d0\u4e2a\u5b9d\u85cf\u5c4b\u7684\u9053\u8def\u662f\u5f88\u56f0\u96be\u7684\uff0c\u800c\u5f00\u53d1\u5b9d\u85cf\u5c4b\u4e4b\u95f4\u7684\u9053\u8def\u5219\u76f8\u5bf9\u5bb9\u6613\u5f88\u591a\u3002</p> <p>\u5c0f\u660e\u7684\u51b3\u5fc3\u611f\u52a8\u4e86\u8003\u53e4\u6316\u6398\u7684\u8d5e\u52a9\u5546\uff0c\u8d5e\u52a9\u5546\u51b3\u5b9a\u514d\u8d39\u8d5e\u52a9\u4ed6\u6253\u901a\u4e00\u6761\u4ece\u5730\u9762\u5230\u67d0\u4e2a\u5b9d\u85cf\u5c4b\u7684\u901a\u9053\uff0c\u901a\u5f80\u54ea\u4e2a\u5b9d\u85cf\u5c4b\u5219\u7531\u5c0f\u660e\u6765\u51b3\u5b9a\u3002</p> <p>\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u5c0f\u660e\u8fd8\u9700\u8981\u8003\u8651\u5982\u4f55\u5f00\u51ff\u5b9d\u85cf\u5c4b\u4e4b\u95f4\u7684\u9053\u8def\u3002\u5df2\u7ecf\u5f00\u51ff\u51fa\u7684\u9053\u8def\u53ef\u4ee5 \u4efb\u610f\u901a\u884c\u4e0d\u6d88\u8017\u4ee3\u4ef7\u3002\u6bcf\u5f00\u51ff\u51fa\u4e00\u6761\u65b0\u9053\u8def\uff0c\u5c0f\u660e\u5c31\u4f1a\u4e0e\u8003\u53e4\u961f\u4e00\u8d77\u6316\u6398\u51fa\u7531\u8be5\u6761\u9053\u8def\u6240\u80fd\u5230\u8fbe\u7684\u5b9d\u85cf\u5c4b\u7684\u5b9d\u85cf\u3002\u53e6\u5916\uff0c\u5c0f\u660e\u4e0d\u60f3\u5f00\u53d1\u65e0\u7528\u9053\u8def\uff0c\u5373\u4e24\u4e2a\u5df2\u7ecf\u88ab\u6316\u6398\u8fc7\u7684\u5b9d\u85cf\u5c4b\u4e4b\u95f4\u7684\u9053\u8def\u65e0\u9700\u518d\u5f00\u53d1\u3002</p> <p>\u65b0\u5f00\u53d1\u4e00\u6761\u9053\u8def\u7684\u4ee3\u4ef7\u662f \\(\\mathrm{L} \\times \\mathrm{K}\\)\u3002\u5176\u4e2d \\(L\\) \u4ee3\u8868\u8fd9\u6761\u9053\u8def\u7684\u957f\u5ea6\uff0c\\(K\\) \u4ee3\u8868\u4ece\u8d5e\u52a9\u5546\u5e2e\u4f60\u6253\u901a\u7684\u5b9d\u85cf\u5c4b\u5230\u8fd9\u6761\u9053\u8def\u8d77\u70b9\u7684\u5b9d\u85cf\u5c4b\u6240\u7ecf\u8fc7\u7684\u5b9d\u85cf\u5c4b\u7684\u6570\u91cf\uff08\u5305\u62ec\u8d5e\u52a9\u5546\u5e2e\u4f60\u6253\u901a\u7684\u5b9d\u85cf\u5c4b\u548c\u8fd9\u6761\u9053\u8def\u8d77\u70b9\u7684\u5b9d\u85cf\u5c4b\uff09 \u3002</p> <p>\u8bf7\u4f60\u7f16\u5199\u7a0b\u5e8f\u4e3a\u5c0f\u660e\u9009\u5b9a\u7531\u8d5e\u52a9\u5546\u6253\u901a\u7684\u5b9d\u85cf\u5c4b\u548c\u4e4b\u540e\u5f00\u51ff\u7684\u9053\u8def\uff0c\u4f7f\u5f97\u5de5\u7a0b\u603b\u4ee3\u4ef7\u6700\u5c0f\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#_4","title":"\u601d\u8def","text":"<p>\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4e00\u9897\u6811\uff0c\u7b54\u6848\u5373\u7c7b\u4f3c\u6700\u5c0f\u751f\u6210\u6811\u3002\u4f46\u662f\u8fd9\u91cc\u7684\u8def\u5f84\u7b49\u4ef7\u662f\u4e0d\u56fa\u5b9a\u7684\uff0c\u5bf9\u4e8e\u8d77\u70b9\u7684\u957f\u5ea6\\times \u8def\u5f84\u957f\u5ea6\u3002</p> <p>\u5b9a\u4e49\u72b6\u6001f_{i,j}\u4e3a\u6811\u7684\u524dj\u5c42\u7684\u70b9\u96c6\u4e3ai\u65f6\u7684\u6700\u5c0f\u503c\u3002<sub>~\u7136\u540e\u6211\u4eec\u679a\u4e3e\u7b2cj+1\u5c42\u7684\u70b9\u96c6s\uff0c\u8ba1\u7b97\u51fai\uff0c\u6839\u636ef_{i,j}\u8ba1\u7b97\u51faf_{i|s,j+1}</sub>~\u7136\u540e\u6211\u4eec\u4ecei\u4e2d\u679a\u4e3e\u5b50\u96c6s\u4f5c\u4e3a\u7b2cj\u5c42\u7684\u70b9\u96c6\uff0c\u8ba1\u7b97\u51fa\u524dj-1\u5c42\u7684\u70b9\u96c6\u4e3ai^s\uff0c\u7136\u540e\u6839\u636ef_{i^s,j-1}\u8ba1\u7b97\u51faf_{i,j}\u3002\uff1b</p> <p>\u4e3a\u4e86\u52a0\u5feb\u8f6c\u79fb\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406g(i,j)\u4e3a\u4ece\u70b9i\u5230\u70b9\u96c6j\u7684\u6700\u5c0f\u8ddd\u79bb</p> <p></p> <p>\u4e00\u4e2a\u679a\u4e3e\u5b50\u96c6\u7684\u5c0f\u6280\u5de7\uff0c\u590d\u6742\u5ea6O(2^{n+1})</p> <pre><code>for(int i=1;i&lt;1&lt;&lt;n;i++){\n    for(int j=i-1&amp;i;j;j=j-1&amp;i){\n        //\u679a\u4e3ei\u7684\u5b50\u96c6\n    }\n}\n</code></pre> <p>\u56fe\u793a</p> <p></p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pb push_back\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=1e2+5;\nconst int M=5e3+5;\nconst int INF=2e9+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint f[M][N],dis[N][N],n,m;\nint g[N][M];//\u6bcf\u4e00\u884c\u7684\u5c71\u5730\u72b6\u6001\n\nvector&lt;int&gt; s;//\u72b6\u6001\n\nbool check(int s){\n    for(int i=0;i&lt;m;i++){\n        if((s&gt;&gt;i&amp;1)&amp;&amp;((s&gt;&gt;i/\u53ea\u6709\u5f53\u524d\u8fd9\u4e00\u4f4d\u662f1\u624d\u9700\u8981\u5224\u5b9a\u4e0e\u7b2ci-1,i-2\u884c\u662f\u5426\u5408\u6cd5\n    }\n    return 1;\n}\nint count(int x){//\u8ba1\u7b97x\u7684\u4e8c\u8fdb\u5236\u4e0b\u6709\u51e0\u4e2a1\n    int res=0;\n    while(x){\n        res+=x&amp;1;\n        x&gt;&gt;=1;\n    }\n    return res;\n}\n\nsigned main(){\n    // freopen(\"P5431_1.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n    // ios::sync_with_stdio(false);\n    // cin.tie(0);cout.tie(0);\n\n    n=rd,m=rd;\n    memset(dis,0x3f,sizeof dis);\n    for(int i=0;i&lt;n;i++)dis[i][i]=0;\n    for(int i=1;i&lt;=m;i++){\n        int a=rd-1,b=rd-1,c=rd;//\u504f\u79fb\n        dis[a][b]=dis[b][a]=min(c,dis[a][b]);\n    }\n    memset(g,0x3f,sizeof g);\n    for(int i=0;i&lt;n;i++){\n        for(int j=0;j&lt;1&lt;&lt;n;j++){\n            for(int k=0;k&lt;n;k++){\n                if(j&gt;&gt;k&amp;1)g[i][j]=min(g[i][j],dis[i][k]);\n            }\n        }\n    }\n\n    memset(f,0x3f,sizeof f);\n    for(int i=0;i&lt;n;i++){\n        f[1&lt;&lt;i][0]=0;\n    }\n\n    for(int i=1;i&lt;1&lt;&lt;n;i++){\n        for(int j=i-1&amp;i;j;j=j-1&amp;i){\n            //\u679a\u4e3ei\u7684\u5b50\u96c6\n            int r=i^j,res=0;\n            for(int k=0;k&lt;n;k++){\n                if(j&gt;&gt;k&amp;1){\n                    res+=g[k][r];\n                    if(res&gt;=INF)break;\n                }\n            }\n            if(res&gt;=INF)continue;\n            for(int k=1;k&lt;n;k++)f[i][k]=min(f[i][k],f[r][k-1]/k\u4e3a\u5c42\u6570\n\n        }\n    }\n\n    int ans=INF;\n    for(int i=0;i&lt;n;i++)ans=min(ans,f[(1&lt;&lt;n)-1][i]);\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n/*\n5 4\nPHPP\nPPHH\nPPPP\nPHPP\nPHHP\n\n*/\n</code></pre> <p>\u5bf9\u4e8e $ 100\\%$ \u7684\u6570\u636e\uff1a \\(1 \\le n \\le 12\\)\uff0c\\(0 \\le m \\le 10^3\\)\uff0c\\(v \\le  5\\times 10^5\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%8A%B6%E5%8E%8BDP/#4-noi2015","title":"\u7ec3\u4e60 #4 [NOI2015] \u5bff\u53f8\u665a\u5bb4","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u4e3a\u4e86\u5e86\u795d NOI \u7684\u6210\u529f\u5f00\u5e55\uff0c\u4e3b\u529e\u65b9\u4e3a\u5927\u5bb6\u51c6\u5907\u4e86\u4e00\u573a\u5bff\u53f8\u665a\u5bb4\u3002\u5c0f G \u548c\u5c0f W \u4f5c\u4e3a\u53c2\u52a0 NOI \u7684\u9009\u624b\uff0c\u4e5f\u88ab\u9080\u8bf7\u53c2\u52a0\u4e86\u5bff\u53f8\u665a\u5bb4\u3002</p> <p>\u5728\u665a\u5bb4\u4e0a\uff0c\u4e3b\u529e\u65b9\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e86 \\(n\u22121\\) \u79cd\u4e0d\u540c\u7684\u5bff\u53f8\uff0c\u7f16\u53f7 \\(1,2,3,\\ldots,n-1\\)\uff0c\u5176\u4e2d\u7b2c \\(i\\) \u79cd\u5bff\u53f8\u7684\u7f8e\u5473\u5ea6\u4e3a \\(i+1\\)\u3002\uff08\u5373\u5bff\u53f8\u7684\u7f8e\u5473\u5ea6\u4e3a\u4ece \\(2\\) \u5230 \\(n\\)\uff09</p> <p>\u73b0\u5728\u5c0f G \u548c\u5c0f W \u5e0c\u671b\u6bcf\u4eba\u9009\u4e00\u4e9b\u5bff\u53f8\u79cd\u7c7b\u6765\u54c1\u5c1d\uff0c\u4ed6\u4eec\u89c4\u5b9a\u4e00\u79cd\u54c1\u5c1d\u65b9\u6848\u4e3a\u4e0d\u548c\u8c10\u7684\u5f53\u4e14\u4ec5\u5f53\uff1a\u5c0f G \u54c1\u5c1d\u7684\u5bff\u53f8\u79cd\u7c7b\u4e2d\u5b58\u5728\u4e00\u79cd\u7f8e\u5473\u5ea6\u4e3a \\(x\\) \u7684\u5bff\u53f8\uff0c\u5c0f W \u54c1\u5c1d\u7684\u5bff\u53f8\u4e2d\u5b58\u5728\u4e00\u79cd\u7f8e\u5473\u5ea6\u4e3a \\(y\\) \u7684\u5bff\u53f8\uff0c\u800c \\(x\\) \u4e0e \\(y\\) \u4e0d\u4e92\u8d28\u3002</p> <p>\u73b0\u5728\u5c0f G \u548c\u5c0f W \u5e0c\u671b\u7edf\u8ba1\u4e00\u5171\u6709\u591a\u5c11\u79cd\u548c\u8c10\u7684\u54c1\u5c1d\u5bff\u53f8\u7684\u65b9\u6848\uff08\u5bf9\u7ed9\u5b9a\u7684\u6b63\u6574\u6570 \\(p\\) \u53d6\u6a21\uff09\u3002\u6ce8\u610f\u4e00\u4e2a\u4eba\u53ef\u4ee5\u4e0d\u5403\u4efb\u4f55\u5bff\u53f8\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u6587\u4ef6\u7684\u7b2c \\(1\\) \u884c\u5305\u542b \\(2\\) \u4e2a\u6b63\u6574\u6570 \\(n, p\\) \u4e2d\u95f4\u7528\u5355\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u8868\u793a\u5171\u6709 \\(n\\) \u79cd\u5bff\u53f8\uff0c\u6700\u7ec8\u548c\u8c10\u7684\u65b9\u6848\u6570\u8981\u5bf9 \\(p\\) \u53d6\u6a21\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u4e00\u884c\u5305\u542b \\(1\\) \u4e2a\u6574\u6570\uff0c\u8868\u793a\u6240\u6c42\u7684\u65b9\u6848\u6a21 \\(p\\) \u7684\u7ed3\u679c\u3002</p> <p></p> <p>\u52d8\u8bef\uff1a$0 &lt; p \\le 10^9 $</p> <p>\u9898\u610f\uff1a</p> <p>\u6c42\u65b9\u6848\u6570\uff0c\u4f7f\u5f97\u4e24\u4e2a\u4eba\u9009\u62e9\u7684\u6570\u5b57\uff08[2,n]\u7684\u5b50\u96c6\uff09\u4e24\u4e24\u4e92\u8d28\u3002</p> <p>\u8981\u8ba9\u4e24\u4e2a\u4eba\u9009\u7684\u6570\u5b57\u5168\u90e8\u4e92\u8d28\uff0c\u90a3\u4e48\u6709\u4e00\u4e2a\u663e\u7136\u7684\u5145\u8981\u6761\u4ef6\uff1a\u7532\u9009\u7684\u6570\u5b57\u7684\u8d28\u56e0\u6570\u96c6\u5408\u548c\u4e59\u9009\u7684\u6570\u5b57\u7684\u8d28\u56e0\u6570\u96c6\u5408\u6ca1\u6709\u4ea4\u96c6</p> <p>\u5982\u679c\u662fn&lt;30\uff0c\u90a3\u4e48\u8303\u56f4\u5185\u7684\u8d28\u6570\u5f88\u5c11\uff0c\u6211\u4eec\u53ef\u4ee5\u72b6\u6001\u538b\u7f29</p> <p>\u8bb0f_{i,S_1,S_2}\u4e3a\u8003\u8651i\u4e2a\u6570\u5b57\u65f6\uff0c\u7532\u96c6\u5408\u7684\u8d28\u56e0\u6570\u96c6\u5408\u4e3aS_1\uff0c\u4e59\u96c6\u5408\u7684\u8d28\u56e0\u6570\u96c6\u5408\u4e3a S_2\u65f6\u7684\u65b9\u6848\u6570\u3002\u538b\u53bb\u7b2c\u4e00\u7ef4\u3002</p> <p>\u5982\u679c\u662fn\u2264500\uff0c\u53d1\u73b0\u6bcf\u4e00\u4e2a\u6570\uff0c\u5176\\(&gt;\\sqrt{500}\\)\u7684\u8d28\u6570\u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u5355\u72ec\u8bb0\u5f55\u8fd9\u4e2a\u8d28\u6570\u3002</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u628a2-n\u8fd9\u4e9b\u6570\u6309\u7167\u5927\u8d28\u56e0\u5b50\u5927\u5c0f\u6392\u5e8f\uff0c\u8fd9\u6837\u4ee4\u5927\u8d28\u56e0\u5b50\u76f8\u540c\u7684\u6570\u6392\u5728\u4e00\u8d77\uff08\u4e5f\u5c31\u662f\u4e0d\u80fd\u7532\u4e59\u540c\u65f6\u9009\u7684\uff09</p> <p>\u6211\u4eec\u8bb0\u5f55\u4e09\u4e2a\u76f8\u540c\u6570\u7ec4\uff1adp[S1\u200b][S2\u200b],f1[][],f2[][]\uff0c\u56e0\u4e3a\u5c0f\u8d28\u56e0\u6570\u53ea\u67098\u4e2a\uff0c\u6240\u4ee50\u2264S1\u200b,S2\u200b\u2264255</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u5927\u8d28\u56e0\u5b50\u76f8\u540c\u7684\u6570\uff0c\u6211\u4eec\u5728\u8fd9\u4e00\u6bb5\u5f00\u59cb\u7684\u65f6\u5019\u628adp\u7684\u503c\u8d4b\u7ed9f1\u548cf2\uff0c\u7136\u540e\u5728\u8fd9\u4e00\u6bb5\u5185\u90e8\u7528\u5237\u8868\u6cd5\u63a8f1\u548cf2\uff0c\u5176\u4e2df1\u8868\u793a\u7684\u5c31\u662f\u8fd9\u4e2a\u5927\u8d28\u56e0\u5b50\u8ba9\u7b2c\u4e00\u4e2a\u4eba\u9009\uff0cf2\u5c31\u662f\u8fd9\u4e2a\u5927\u8d28\u56e0\u5b50\u8ba9\u7b2c\u4e8c\u4e2a\u4eba\u9009\u3002</p> <p>\u8fd9\u4e00\u6bb5\u6570\u63a8\u5b8c\u4ee5\u540e\uff0c\u518d\u628af1f2\u5408\u5e76\u5230dp\u91cc\u9762\uff0cdp[S1\u200b][S2\u200b]=f1[S1\u200b][S2\u200b]+f2[S1\u200b][S2\u200b]\u2212dp[S1\u200b][S2\u200b]</p> <p>\u8fd9\u91cc\u51cf\u6389\u4e00\u4e2adp\u662f\u56e0\u4e3a\u4e24\u79cd\u60c5\u51b5\u4f1a\u91cd\u590d\u7edf\u8ba1\u4e24\u4e2a\u4eba\u90fd\u4e0d\u9009\u7684\u60c5\u51b5\uff08\u4e5f\u5c31\u662f\u539f\u6765\u7684dp[S_1][S_2]\u7684\u503c\uff09\uff0c\u51cf\u6389\u5373\u53ef\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 5e2+ 5;\nconst int INF = 1e18;\nconst int M = 1e7;\n int MOD = 1e9 + 7;\n\n\nint n;\n\n\nint p[11]={0,2,3,5,7,11,13,17,19,23};\n\nstruct node{\n    int big,s;\n    int v;\n\n    void init(){\n        int t=v;\n\n        big=-1;//\u552f\u4e00\u4e00\u4e2a\u5927\u8d28\u6570\u5355\u72ec\u5904\u7406\n        for(int i=1;i&lt;=8;i++){\n            if(t%p[i]) continue;\n            s|=(1&lt;&lt;i-1);\n            while(t%p[i]==0) t/=p[i];\n        }\n        if(t!=1) big=t; \n    }\n}a[N];\n\n\nbool cmp(node a,node b){\n    return a.big&lt;b.big;\n}\n\n\nint f[N][N],f1[N][N],f2[N][N];\n\nvoid solve(){\n    n=rd,MOD=rd;\n    for(int i=1;i&lt;n;i++){\n        a[i].v=i+1;\n        a[i].init();\n    }\n\n    sort(a+1,a+n,cmp);\n\n    f[0][0]=1;\n\n    for(int i=1;i&lt;n;i++){\n        if(i==1||a[i].big!=a[i-1].big||a[i].big==-1){\n            memcpy(f1,f,sizeof f1);\n            memcpy(f2,f,sizeof f2);\n        }\n\n        for(int j=255;~j;j--){\n            for(int k=255;~k;k--){\n                if(j&amp;k)continue;\n                if((a[i].s&amp;j)==0) f2[j][k|a[i].s]=(f2[j][k|a[i].s]+f2[j][k]+MOD)%MOD;\n                if((a[i].s&amp;k)==0) f1[j|a[i].s][k]=(f1[j|a[i].s][k]+f1[j][k]+MOD)%MOD;\n            }\n        }\n\n        if(i==n-1||a[i].big!=a[i+1].big||a[i].big==-1){\n            for(int j=255;~j;j--){\n                for(int k=255;~k;k--){\n                    if(j&amp;k)continue;\n                    f[j][k]=(f1[j][k]+f2[j][k]+MOD-f[j][k]+MOD)%MOD;\n                }\n            }\n        }\n    }\n    int ans=0;\n    for(int j=255;~j;j--){\n        for(int k=255;~k;k--){\n            if(j&amp;k)continue;\n            if(f[j][k])ans=(ans+f[j][k])%MOD;\n        }\n    }\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/","title":"\u80cc\u5305","text":"<p>\u8865\u5145\u8d44\u6599</p> <p>https://www.cnblogs.com/ailanxier/p/13370753.html</p> <ul> <li> <p>01\u80cc\u5305    1267 \u3010\u4f8b9.11\u301101\u80cc\u5305\u95ee\u9898</p> </li> <li> <p>\u5b8c\u5168\u80cc\u5305    1268 \u3010\u4f8b9.12\u3011\u5b8c\u5168\u80cc\u5305\u95ee\u9898</p> </li> <li> <p>\u591a\u91cd  1269 \u3010\u4f8b9.13\u3011\u5e86\u529f\u4f1a</p> </li> <li> <p>\u6df7\u5408  1270 \u3010\u4f8b9.14\u3011\u6df7\u5408\u80cc\u5305</p> </li> <li> <p>\u4e8c\u7ef4  1271 \u3010\u4f8b9.15\u3011\u6f5c\u6c34\u5458</p> </li> <li> <p>\u5206\u7ec4  1272 \u3010\u4f8b9.16\u3011\u5206\u7ec4\u80cc\u5305</p> </li> <li> <p>\u8ba1\u6570  1273 \u3010\u4f8b9.17\u3011\u8d27\u5e01\u7cfb\u7edf</p> </li> </ul> <p>01\u80cc\u5305</p> <p>\u5b8c\u5168\u80cc\u5305</p> <p>\u591a\u91cd\u80cc\u5305</p> <p>\u6df7\u5408\u80cc\u5305</p> <p>\u5206\u7ec4\u80cc\u5305</p> <p>\u4f9d\u8d56\u80cc\u5305</p> <p>\u8ba1\u6570\u80cc\u5305</p> <p>\u5229\u7528\u7279\u6b8a\u6027\u8d28\u5b9e\u73b0\u80cc\u5305\u7684\u591a\u6b21\u6c42\u89e3</p> <p>\u4e8c\u7ef4\u80cc\u5305</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E9%AB%98%E7%BA%A7DP/","title":"\u9ad8\u7ea7DP","text":"<p>\u63d2\u5934DP</p> <p>\u8ba1\u6570DP</p> <p>\u52a8\u6001\u6811\u5206\u6cbb</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96/","title":"\u51b3\u7b56\u5355\u8c03\u6027\u4e4b \u4f18\u5148\u961f\u5217\u4f18\u5316","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96/#_2","title":"\u57fa\u7840\u6700\u4f18\u5316\u7ec3\u4e60\u9898","text":"<p>YSGH \u6709\u4e00\u4e2a\u6570 \\(x\\)\uff0c\u521d\u503c\u4e3a \\(0\\)\u3002\u63a5\u4e0b\u6765 \\(n\\) \u5206\u949f\uff0c\u6bcf\u5206\u949f YSGH \u53ef\u4ee5\u7ed9 \\(x\\) \u52a0\u4e0a\u6574\u6570 \\(y\\)\uff0c\u5176\u4e2d \\(y \\in [-k, k]\\)\uff0c\u540c\u65f6 YSGH \u9700\u8981\u4fdd\u8bc1\u7b2c \\(i\\) \u5206\u949f\u7ed3\u675f\u65f6 \\(x \\le a_i\\)\u3002</p> <p>\u8bbe \\(b_i\\) \u4e3a\u7b2c \\(i\\) \u5206\u949f\u7ed3\u675f\u65f6 \\(x\\) \u7684\u503c\uff0c\u73b0\u5728 YSGH \u7ed9\u4f60\u4e00\u4e2a \\(n\\) \u4e2a\u6570\u7684\u5e8f\u5217 \\(w\\)\uff0c\u4f60\u9700\u8981\u6700\u5927\u5316 \\(\\displaystyle \\sum_{i = 1}^{n} b_i w_i\\)\u3002</p> <p>\u4f60\u53ea\u9700\u8981\u8f93\u51fa\u6700\u5927\u503c\u5373\u53ef\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6b63\u6574\u6570 \\(n, k\\)\uff0c\u610f\u4e49\u540c\u9898\u9762\u63cf\u8ff0\u3002</p> <p>\u7b2c\u4e8c\u884c\u5171 \\(n\\) \u4e2a\u6574\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u8868\u793a \\(a_i\\)\uff0c\u610f\u4e49\u540c\u9898\u9762\u63cf\u8ff0\u3002</p> <p>\u7b2c\u4e09\u884c\u5171 \\(n\\) \u4e2a\u6574\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u8868\u793a \\(w_i\\)\uff0c\u610f\u4e49\u540c\u9898\u9762\u63cf\u8ff0\u3002</p> <p>\u4fdd\u8bc1\u8f93\u5165\u6570\u636e\u4f7f\u5f97\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5e8f\u5217 \\(b\\) \u6ee1\u8db3\u6761\u4ef6\u3002</p> <p>\u5bf9\u4e8e \\(10\\%\\) \u7684\u6570\u636e\uff0c\\(n \\le 10\\)\uff0c\\(k \\le 1\\)\u3002 \u5bf9\u4e8e \\(20\\%\\) \u7684\u6570\u636e\uff0c\\(n \\le 100\\)\u3002 \u5bf9\u4e8e \\(30\\%\\) \u7684\u6570\u636e\uff0c\\(n \\le {10}^3\\)\u3002 \u5bf9\u4e8e \\(50\\%\\) \u7684\u6570\u636e\uff0c\\(n \\le {10}^4\\)\u3002 \u53e6\u6709 \\(10\\%\\) \u7684\u6570\u636e\uff0c\\(w_i \\ge 0\\)\u3002 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\le n \\le {10}^6\\)\uff0c\\(-{10}^6 \\le w_i \\le {10}^6\\)\uff0c\\(0 \\le a_i \\le {10}^8\\)\uff0c\\(1 \\le k \\le 100\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96/#_3","title":"\u601d\u8def","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96/#_4","title":"\u4ee3\u7801","text":"<pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define nl dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s &lt;&lt; ' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nstruct node{\n    int w,k;\n    node(){}\n    node (int w,int k):w(w),k(k){};\n    friend bool operator &lt; (node a, node b) { return a.w &gt; b.w; }//rev\n    friend bool operator &gt; (node a, node b) { return a.w &lt; b.w; }\n};\n\npriority_queue&lt;node&gt; pq;\nint n,K,a[N],w[N];\n\nvoid solve(){\n    n=rd;K=rd;\n    rep(i,1,n)a[i]=rd;\n    rep(i,1,n)w[i]=rd;\n    per(i,n,1)w[i]+=w[i+1];\n    int x=0,res=0;\n    rep(i,1,n){\n        if(w[i]&gt;0)\n        {\n            res += K * w[i];\n            pq.push(node(w[i],K&lt;&lt;1));\n            x+=K;\n        }else{\n            res-=K*w[i];\n            x-=K;\n        }\n        int c=x-a[i];\n        x=min(x,a[i]);\n        while(pq.size()&amp;&amp;c&gt;0){\n            node x=pq.top();pq.pop();\n            int t=min(c,x.k);\n            res-=t*x.w;\n            c-=t;\n            x.k-=t;\n            if(x.k)pq.push(x);\n        }\n\n    }\n    cout&lt;&lt;res&lt;&lt;endl;\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%80%8D%E5%A2%9E%E4%BC%98%E5%8C%96/","title":"\u500d\u589e\u4f18\u5316","text":"<p>\u9664\u4e86\u591a\u91cd\u80cc\u5305\u7684\u4e8c\u8fdb\u5236\u62c6\u5206\u4f18\u5316\uff0c\u8fd8\u6709\u4ec0\u4e48\uff1f</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%80%8D%E5%A2%9E%E4%BC%98%E5%8C%96/#1-usaco16open-262144-p","title":"\u4f8b\u9898 #1 [USACO16OPEN] 262144 P","text":"<p>Bessie likes downloading games to play on her cell phone, even though she  doesfind the small touch screen rather cumbersome to use with her large hooves.</p> <p>She is particularly intrigued by the current game she is playing.The game starts with a sequence of \\(N\\) positive integers (\\(2 \\leq N\\leq 262,144\\)), each in the range \\(1 \\ldots 40\\).  In one move, Bessiecan take two adjacent numbers with equal values and replace them asingle number of value one greater (e.g., she might replace twoadjacent 7s with an 8). The goal is to maximize the value of thelargest number present in the sequence at the end of the game.  Pleasehelp Bessie score as highly as possible!</p> <p>Bessie\u559c\u6b22\u5728\u624b\u673a\u4e0a\u4e0b\u6e38\u620f\u73a9\uff08\u2026\u2026\uff09\uff0c\u7136\u800c\u5979\u8e44\u5b50\u592a\u5927\uff0c\u5f88\u96be\u5728\u5c0f\u5c0f\u7684\u624b\u673a\u5c4f\u5e55\u4e0a\u9762\u64cd\u4f5c\u3002</p> <p>\u5979\u88ab\u5979\u6700\u8fd1\u73a9\u7684\u4e00\u6b3e\u6e38\u620f\u8ff7\u4f4f\u4e86\uff0c\u6e38\u620f\u4e00\u5f00\u59cb\u6709n\u4e2a\u6b63\u6574\u6570\uff0c(2&lt;=n&lt;=262144)\uff0c\u8303\u56f4\u57281-40\u3002\u5728\u4e00\u6b65\u4e2d\uff0c\u8d1d\u897f\u53ef\u4ee5\u9009\u76f8\u90bb\u7684\u4e24\u4e2a\u76f8\u540c\u7684\u6570\uff0c\u7136\u540e\u5408\u5e76\u6210\u4e00\u4e2a\u6bd4\u539f\u6765\u7684\u5927\u4e00\u7684\u6570\uff08\u4f8b\u5982\u4e24\u4e2a7\u5408\u5e76\u6210\u4e00\u4e2a8)\uff0c\u76ee\u6807\u662f\u4f7f\u5f97\u6700\u5927\u7684\u6570\u6700\u5927\uff0c\u8bf7\u5e2e\u52a9Bessie\u6765\u6c42\u6700\u5927\u503c\u3002</p> <p>The first line of input contains \\(N\\), and the next \\(N\\) lines give the sequence</p> <p>of \\(N\\) numbers at the start of the game.</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%80%8D%E5%A2%9E%E4%BC%98%E5%8C%96/#_2","title":"\u601d\u8def","text":"<p>\u4e4d\u4e00\u770b\u6211\u4eec\u89c9\u5f97\u5e94\u8be5\u662f\u4e00\u9053\u533a\u95f4dp\u7684\u9898\u76ee\uff0c\u4f46\u662f\u5f53\u6211\u770b\u5230\u6570\u636e\u8303\u56f4\u65f6\uff0c\u5c31\u5426\u5b9a\u4e86\u4f20\u7edf\u7684\u533a\u95f4dp\u601d\u60f3\u3002\u90a3\u9664\u4e86\u4f7f\u7528\u533a\u95f4dp\uff0c\u8fd8\u80fd\u600e\u4e48\u505a\u5462\uff1f</p> <p>\u6211\u4eec\u8003\u8651\u500d\u589e\u3002\u5b9a\u4e49f_{i,j}\u4e3a\u4ee5i\u4e3a\u5de6\u7aef\u70b9\u5408\u6210\u6570\u5b57j\u7684\u533a\u95f4\u53f3\u7aef\u70b9\u3002\u90a3\u4e48\u6211\u4eec\u6709\u8f6c\u79fb\u5f0f</p> <p>\\(f_{i,j}=f_{f_{i,j-1}+1,j-1}\\)</p> <p>\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f1a\u60f3\u5230\u4f7f\u7528\u500d\u589e\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\uff0c\u4e24\u4e2a\u6570\u5b57\u5408\u6210\u4e00\u4e2a\u6570\uff0c\u50cf\u6781\u4e86\u4e24\u4e2a2<sup>i\u76f8\u52a0\u5408\u62102</sup>\uff0c\u5e76\u4e14\u6070\u597d\u5c31\u662f\u5176\u6307\u6570\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u8003\u8651\u4f7f\u7528\u500d\u589e\u4fe9\u8bb0\u5f55\u533a\u95f4\u957f\u5ea6\u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u8fd8\u53ef\u4ee5i\u8ba1\u7b97\u51fa\u6211\u4eec\u6700\u5927\u53ef\u4ee5\u5408\u6210\u7684\u6570\u5b57\u4e3a58\uff0c\u6240\u4ee5j\u7684\u4e0a\u754c\u5c31\u662f58.\u6ce8\u610f\u6211\u4eec\u5728\u8f6c\u79fb\u65f6\u8981\u7528\u5230j-1\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u4e5f\u8be5\u628aj\u653e\u5728\u6700\u5916\u9762\u3002</p> <p>\u6ce8\u610f\u4e0d\u8981\u4ece\u4e0d\u5b58\u5728\u65b9\u6848\u7684\u5730\u65b9\u8f6c\u79fb\u8fc7\u6765\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n// #define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define nl dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 0;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s &lt;&lt; ' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\nconst int N = 1e6 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nint a[N],ans,f[N][66];\n\nvoid solve(){\n    int n=rd;\n    rep(i,1,n){\n        a[i]=rd;\n        f[i][a[i]]=i;\n    }\n    rep(j,1,58){\n        rep(i,1,n){\n            if(f[i][j-1])f[i][j]=max(f[i][j],f[f[i][j-1]+1][j-1]);\n            dbg(f[i][j]);\n            if(f[i][j]&lt;=n+1&amp;&amp;f[i][j]&gt;0)ans=j;\n        }\n    nl;\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n// #define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define nl dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s &lt;&lt; ' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\nconst int N = 1e6 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nint a[N],ans,f[N][66];\n\nvoid solve(){\n    int n=rd;\n    rep(i,1,n){\n        a[i]=rd;\n        f[i][a[i]]=i+1;\n    }\n    rep(j,1,58){\n        rep(i,1,n){\n            f[i][j]=max(f[i][j],f[f[i][j-1]][j-1]);\n            if(f[i][j]&lt;=n+1&amp;&amp;f[i][j]&gt;0)ans=j;\n        }\n\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%80%8D%E5%A2%9E%E4%BC%98%E5%8C%96/#2","title":"\u4f8b\u9898 #2 \u8dd1\u8def","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5c0f A \u7684\u5de5\u4f5c\u4e0d\u4ec5\u7e41\u7410\uff0c\u66f4\u6709\u82db\u523b\u7684\u89c4\u5b9a\uff0c\u8981\u6c42\u5c0f A \u6bcf\u5929\u65e9\u4e0a\u5728 \\(6:00\\) \u4e4b\u524d\u5230\u8fbe\u516c\u53f8\uff0c\u5426\u5219\u8fd9\u4e2a\u6708\u5de5\u8d44\u6e05\u96f6\u3002\u53ef\u662f\u5c0f A \u504f\u504f\u53c8\u6709\u8d56\u5e8a\u7684\u574f\u6bdb\u75c5\u3002\u4e8e\u662f\u4e3a\u4e86\u4fdd\u4f4f\u81ea\u5df1\u7684\u5de5\u8d44\uff0c\u5c0f A \u4e70\u4e86\u4e00\u4e2a\u7a7a\u95f4\u8dd1\u8def\u5668\uff0c\u6bcf\u79d2\u949f\u53ef\u4ee5\u8dd1 \\(2^k\\) \u5343\u7c73\uff08\\(k\\) \u662f\u4efb\u610f\u81ea\u7136\u6570\uff09\u3002\u5f53\u7136\uff0c\u8fd9\u4e2a\u673a\u5668\u662f\u7528 <code>longint</code> \u5b58\u7684\uff0c\u6240\u4ee5\u603b\u8dd1\u8def\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 <code>maxlongint</code> \u5343\u7c73\u3002\u5c0f A \u7684\u5bb6\u5230\u516c\u53f8\u7684\u8def\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u5c0f A \u5bb6\u4e3a\u70b9 \\(1\\)\uff0c\u516c\u53f8\u4e3a\u70b9 \\(n\\)\uff0c\u6bcf\u6761\u8fb9\u957f\u5ea6\u5747\u4e3a\u4e00\u5343\u7c73\u3002\u5c0f A \u60f3\u6bcf\u5929\u80fd\u9192\u5730\u5c3d\u91cf\u665a\uff0c\u6240\u4ee5\u8ba9\u4f60\u5e2e\u4ed6\u7b97\u7b97\uff0c\u4ed6\u6700\u5c11\u9700\u8981\u51e0\u79d2\u624d\u80fd\u5230\u516c\u53f8\u3002\u6570\u636e\u4fdd\u8bc1 \\(1\\) \u5230 \\(n\\) \u81f3\u5c11\u6709\u4e00\u6761\u8def\u5f84\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570 \\(n,m\\)\uff0c\u8868\u793a\u70b9\u7684\u4e2a\u6570\u548c\u8fb9\u7684\u4e2a\u6570\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\u6bcf\u884c\u4e24\u4e2a\u6570\u5b57 \\(u,v\\)\uff0c\u8868\u793a\u4e00\u6761 \\(u\\) \u5230 \\(v\\) \u7684\u8fb9\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e00\u884c\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u5230\u516c\u53f8\u7684\u6700\u5c11\u79d2\u6570\u3002</p> <p>\u63d0\u793a</p> <p>\u3010\u6837\u4f8b\u89e3\u91ca\u3011</p> <p>\\(1 \\to 1 \\to 2 \\to 3 \\to 4\\)\uff0c\u603b\u8def\u5f84\u957f\u5ea6\u4e3a \\(4\\) \u5343\u7c73\uff0c\u76f4\u63a5\u4f7f\u7528\u4e00\u6b21\u8dd1\u8def\u5668\u5373\u53ef\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011</p> <p>\\(50\\%\\) \u7684\u6570\u636e\u6ee1\u8db3\u6700\u4f18\u89e3\u8def\u5f84\u957f\u5ea6 \\(\\leq 1000\\)\uff1b</p> <p>\\(100\\%\\) \u7684\u6570\u636e\u6ee1\u8db3 \\(2\\leq n \\leq 50\\)\uff0c\\(m \\leq 10 ^ 4\\)\uff0c\u6700\u4f18\u89e3\u8def\u5f84\u957f\u5ea6 \\(\\leq\\) <code>maxlongint</code>\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%80%8D%E5%A2%9E%E4%BC%98%E5%8C%96/#_3","title":"\u601d\u8def","text":"<p>\u8fd9\u9053\u9898\u76ee\u6c42\u7684\u662f\u4ece1\u53f7\u70b9\u5230n\u53f7\u70b9\u6700\u5c11\u8981\u51e0\u79d2\u5230\u8fbe\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u8dd1\u8def\u5668\uff0c\u6bcf\u79d2\u8dd12<sup>k\u6761\u8fb9\uff08\u6bcf\u6761\u8fb91km\uff09\uff0c\u6240\u4ee5\u5462\uff0c\u8fd9\u9053\u9898\u76ee\u660e\u663e\u5c31\u548c\u201c\u500d\u589e\u201d\u626f\u4e0a\u4e86\u5173\u7cfb\u3002\u56de\u5fc6\u500d\u589e\uff0c\u6211\u4eec\u603b\u662f\u7528\u4e00\u4e2a\u53c2\u6570k\u8868\u793a2</sup>k\uff0c\u8fd9\u9053\u9898\u76ee\u4e5f\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u7528\u4e00\u4e2abool\u7c7b\u578bG\u6570\u7ec4\uff0cG[i][j][k]\u4ee3\u8868\u4ecei\u5230j\u662f\u5426\u5b58\u5728\u4e00\u6761\u957f\u5ea6\u4e3a2^k\u7684\u8def\u5f84\u3002\u518d\u7528dis\u6570\u7ec4\u6765\u8bb0\u5f55\u4e24\u70b9\u4e4b\u95f4\u9700\u8981\u7528\u591a\u4e45\u5230\u8fbe\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u7528G\u6765\u4fdd\u5b58\u6240\u6709\u7684\u8fb9\uff0c\u5e76\u4e14\u8fdb\u884c\u9884\u5904\u7406\uff0c\u628a\u6240\u6709\u4e00\u79d2\u80fd\u5230\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u8fde\u4e0a\u8fb9\uff0c\u5e76\u628a\u8ddd\u79bb\u76f8\u5e94\u8c03\u6574\u4e3a1\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u6240\u6709\u4e00\u79d2\u80fd\u5230\u7684\u70b9\u4e4b\u95f4\u90fd\u94fa\u4e0a\u4e86\u8fb9\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8981\u6c42\u51fa\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5566\uff0c\u90a3\u4e48\uff0c\u5927\u5bb6\u90fd\u660e\u767d\u4e86\uff0c\u5bf9\u4e8e50\u7684\u6570\u636e\uff0cFloyd\u7edd\u5bf9\u662f\u6700\u7b80\u5355\u53ef\u884c\u7684\u529e\u6cd5\u4e86\u3002</p> <p>\u4e3a\u4e86\u5904\u7406G\u6570\u7ec4\uff0c\u6211\u4eec\u8dd1\u4e00\u6b21\u7c7b\u4f3cflyd\u7684\u7b97\u6cd5\u3002\u679a\u4e3e\u4e09\u4e2a\u70b9 i,j,t\uff0c\u5982\u679ci\u5230t\u5b58\u5728\u4e00\u67612<sup>k-1\u957f\u5ea6\u7684\u8def\u5f84\uff0c\u5e76\u4e14t\u5230j\u5b58\u5728\u4e00\u67612</sup>k-1\u957f\u5ea6\u7684\u8def\u5f84\uff0c\u5c31\u8bf4\u660ei\u5230t\uff0ct\u5230j\u90fd\u53ef\u4ee5\u4e00\u79d2\u5230\u8fbe\uff0c \u8def\u7a0b*2\u521a\u597d\u662f2\u7684\u5e42\uff0c\u4e5f\u53ef\u4ee5\u4e00\u79d2\u5230\u8fbe</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(l, r, i) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(r, l, i) for (int i = r, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define int long long\n#define pii pair&lt;int, int&gt;\n\n#define lc(x) (x &lt;&lt; 1)\n#define rc(x) (x &lt;&lt; 1 | 1)\n\n#define rd read()\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int N = 2e5 + 15;\nconst int INF = 1e9 + 5;\nconst int MOD = 998244353;\n\nint dis[60][60], n, m;\nbool G[60][60][65];\n\nvoid init() {\n  memset(G, false, sizeof(G));\n  memset(dis, 10, sizeof(dis));\n  scanf(\"%lld%lld\", &amp;n, &amp;m);\n  for (int i = 1; i &lt;= m; i++) {\n    int x, y;\n    scanf(\"%lld%lld\", &amp;x, &amp;y);\n    dis[x][y] = 1;\n    G[x][y][0] = true;\n  }\n}\nvoid work() {\n  for (int k = 1; k &lt;= 64; k++)\n    for (int i = 1; i &lt;= n; i++)\n      for (int t = 1; t &lt;= n; t++)\n        for (int j = 1; j &lt;= n; j++)\n          if (G[i][t][k - 1] &amp;&amp; G[t][j][k - 1]) {\n            G[i][j][k] = true;\n            dis[i][j] = 1;\n          }\n}\nvoid floyd() {\n  for (int k = 1; k &lt;= n; k++)\n    for (int i = 1; i &lt;= n; i++)\n      for (int j = 1; j &lt;= n; j++)\n        dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);\n}\n\nsigned main() {\n  init();\n  work();\n  floyd();\n  printf(\"%lld\", dis[1][n]);\n  return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%80%8D%E5%A2%9E%E4%BC%98%E5%8C%96/#3-noip2012","title":"\u4f8b\u9898 #3 [NOIP2012 \u63d0\u9ad8\u7ec4] \u5f00\u8f66\u65c5\u884c","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5c0f \\(\\text{A}\\) \u548c\u5c0f \\(\\text{B}\\) \u51b3\u5b9a\u5229\u7528\u5047\u671f\u5916\u51fa\u65c5\u884c\uff0c\u4ed6\u4eec\u5c06\u60f3\u53bb\u7684\u57ce\u5e02\u4ece $1 $ \u5230 \\(n\\) \u7f16\u53f7\uff0c\u4e14\u7f16\u53f7\u8f83\u5c0f\u7684\u57ce\u5e02\u5728\u7f16\u53f7\u8f83\u5927\u7684\u57ce\u5e02\u7684\u897f\u8fb9\uff0c\u5df2\u77e5\u5404\u4e2a\u57ce\u5e02\u7684\u6d77\u62d4\u9ad8\u5ea6\u4e92\u4e0d\u76f8\u540c\uff0c\u8bb0\u57ce\u5e02 \\(i\\) \u7684\u6d77\u62d4\u9ad8\u5ea6\u4e3a\\(h_i\\)\uff0c\u57ce\u5e02 \\(i\\) \u548c\u57ce\u5e02 \\(j\\) \u4e4b\u95f4\u7684\u8ddd\u79bb \\(d_{i,j}\\) \u6070\u597d\u662f\u8fd9\u4e24\u4e2a\u57ce\u5e02\u6d77\u62d4\u9ad8\u5ea6\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u5373 \\(d_{i,j}=|h_i-h_j|\\)\u3002</p> <p>\u65c5\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5c0f \\(\\text{A}\\) \u548c\u5c0f \\(\\text{B}\\) \u8f6e\u6d41\u5f00\u8f66\uff0c\u7b2c\u4e00\u5929\u5c0f \\(\\text{A}\\) \u5f00\u8f66\uff0c\u4e4b\u540e\u6bcf\u5929\u8f6e\u6362\u4e00\u6b21\u3002\u4ed6\u4eec\u8ba1\u5212\u9009\u62e9\u4e00\u4e2a\u57ce\u5e02 \\(s\\) \u4f5c\u4e3a\u8d77\u70b9\uff0c\u4e00\u76f4\u5411\u4e1c\u884c\u9a76\uff0c\u5e76\u4e14\u6700\u591a\u884c\u9a76 \\(x\\) \u516c\u91cc\u5c31\u7ed3\u675f\u65c5\u884c\u3002</p> <p>\u5c0f \\(\\text{A}\\) \u548c\u5c0f \\(\\text{B}\\) \u7684\u9a7e\u9a76\u98ce\u683c\u4e0d\u540c\uff0c\u5c0f \\(\\text{B}\\) \u603b\u662f\u6cbf\u7740\u524d\u8fdb\u65b9\u5411\u9009\u62e9\u4e00\u4e2a\u6700\u8fd1\u7684\u57ce\u5e02\u4f5c\u4e3a\u76ee\u7684\u5730\uff0c\u800c\u5c0f \\(\\text{A}\\) \u603b\u662f\u6cbf\u7740\u524d\u8fdb\u65b9\u5411\u9009\u62e9\u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\u4f5c\u4e3a\u76ee\u7684\u5730\uff08\u6ce8\u610f\uff1a\u672c\u9898\u4e2d\u5982\u679c\u5f53\u524d\u57ce\u5e02\u5230\u4e24\u4e2a\u57ce\u5e02\u7684\u8ddd\u79bb\u76f8\u540c\uff0c\u5219\u8ba4\u4e3a\u79bb\u6d77\u62d4\u4f4e\u7684\u90a3\u4e2a\u57ce\u5e02\u66f4\u8fd1\uff09\u3002\u5982\u679c\u5176\u4e2d\u4efb\u4f55\u4e00\u4eba\u65e0\u6cd5\u6309\u7167\u81ea\u5df1\u7684\u539f\u5219\u9009\u62e9\u76ee\u7684\u57ce\u5e02\uff0c\u6216\u8005\u5230\u8fbe\u76ee\u7684\u5730\u4f1a\u4f7f\u884c\u9a76\u7684\u603b\u8ddd\u79bb\u8d85\u51fa \\(x\\) \u516c\u91cc\uff0c\u4ed6\u4eec\u5c31\u4f1a\u7ed3\u675f\u65c5\u884c\u3002</p> <p>\u5728\u542f\u7a0b\u4e4b\u524d\uff0c\u5c0f \\(\\text{A}\\) \u60f3\u77e5\u9053\u4e24\u4e2a\u95ee\u9898\uff1a</p> <p>1\u3001 \u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684 \\(x=x_0\\)\uff0c\u4ece\u54ea\u4e00\u4e2a\u57ce\u5e02\u51fa\u53d1\uff0c\u5c0f \\(\\text{A}\\) \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4e0e\u5c0f \\(\\text{B}\\) \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u7684\u6bd4\u503c\u6700\u5c0f\uff08\u5982\u679c\u5c0f \\(\\text{B}\\) \u7684\u884c\u9a76\u8def\u7a0b\u4e3a \\(0\\)\uff0c\u6b64\u65f6\u7684\u6bd4\u503c\u53ef\u89c6\u4e3a\u65e0\u7a77\u5927\uff0c\u4e14\u4e24\u4e2a\u65e0\u7a77\u5927\u89c6\u4e3a\u76f8\u7b49\uff09\u3002\u5982\u679c\u4ece\u591a\u4e2a\u57ce\u5e02\u51fa\u53d1\uff0c\u5c0f \\(\\text{A}\\) \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4e0e\u5c0f \\(\\text{B}\\) \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u7684\u6bd4\u503c\u90fd\u6700\u5c0f\uff0c\u5219\u8f93\u51fa\u6d77\u62d4\u6700\u9ad8\u7684\u90a3\u4e2a\u57ce\u5e02\u3002</p> <p>2\u3001\u5bf9\u4efb\u610f\u7ed9\u5b9a\u7684 \\(x=x_i\\) \u548c\u51fa\u53d1\u57ce\u5e02 \\(s_i\\)\uff0c\u5c0f \\(\\text{A}\\) \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4ee5\u53ca\u5c0f \\(\\text B\\) \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 \\(n\\)\uff0c\u8868\u793a\u57ce\u5e02\u7684\u6570\u76ee\u3002</p> <p>\u7b2c\u4e8c\u884c\u6709 \\(n\\) \u4e2a\u6574\u6570\uff0c\u6bcf\u4e24\u4e2a\u6574\u6570\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u4f9d\u6b21\u8868\u793a\u57ce\u5e02 \\(1\\) \u5230\u57ce\u5e02 \\(n\\) \u7684\u6d77\u62d4\u9ad8\u5ea6\uff0c\u5373 \\(h_1,h_2 ... h_n\\)\uff0c\u4e14\u6bcf\u4e2a \\(h_i\\) \u90fd\u662f\u4e92\u4e0d\u76f8\u540c\u7684\u3002</p> <p>\u7b2c\u4e09\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 \\(x_0\\)\u3002</p> <p>\u7b2c\u56db\u884c\u4e3a\u4e00\u4e2a\u6574\u6570 \\(m\\)\uff0c\u8868\u793a\u7ed9\u5b9a \\(m\\) \u7ec4 \\(s_i\\) \u548c \\(x_i\\)\u3002</p> <p>\u63a5\u4e0b\u6765\u7684 \\(m\\) \u884c\uff0c\u6bcf\u884c\u5305\u542b \\(2\\) \u4e2a\u6574\u6570 \\(s_i\\) \u548c \\(x_i\\)\uff0c\u8868\u793a\u4ece\u57ce\u5e02\\(s_i\\) \u51fa\u53d1\uff0c\u6700\u591a\u884c\u9a76 \\(x_i\\) \u516c\u91cc\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u5171 \\(m+1\\) \u884c\u3002</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 \\(s_0\\)\uff0c\u8868\u793a\u5bf9\u4e8e\u7ed9\u5b9a\u7684 \\(x_0\\)\uff0c\u4ece\u7f16\u53f7\u4e3a \\(s_0\\) \u7684\u57ce\u5e02\u51fa\u53d1\uff0c\u5c0f \\(\\text A\\) \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4e0e\u5c0f \\(\\text B\\) \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u7684\u6bd4\u503c\u6700\u5c0f\u3002</p> <p>\u63a5\u4e0b\u6765\u7684 \\(m\\) \u884c\uff0c\u6bcf\u884c\u5305\u542b \\(2\\) \u4e2a\u6574\u6570\uff0c\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u4f9d\u6b21\u8868\u793a\u5728\u7ed9\u5b9a\u7684 \\(s_i\\) \u548c \\(x_i\\) \u4e0b\u5c0f \\(\\text A\\) \u884c\u9a76\u7684\u91cc\u7a0b\u603b\u6570\u548c\u5c0f \\(\\text B\\) \u884c\u9a76\u7684\u91cc\u7a0b\u603b\u6570\u3002</p> <p>\u63d0\u793a</p> <p>\u3010\u6837\u4f8b1\u8bf4\u660e\u3011</p> <p></p> <p>\u5404\u4e2a\u57ce\u5e02\u7684\u6d77\u62d4\u9ad8\u5ea6\u4ee5\u53ca\u4e24\u4e2a\u57ce\u5e02\u95f4\u7684\u8ddd\u79bb\u5982\u4e0a\u56fe\u6240\u793a\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(1\\) \u51fa\u53d1\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u57ce\u5e02\u4e3a \\(2,3,4\\)\uff0c\u8fd9\u51e0\u4e2a\u57ce\u5e02\u4e0e\u57ce\u5e02 \\(1\\) \u7684\u8ddd\u79bb\u5206\u522b\u4e3a \\(1,1,2\\)\uff0c\u4f46\u662f\u7531\u4e8e\u57ce\u5e02 \\(3\\) \u7684\u6d77\u62d4\u9ad8\u5ea6\u4f4e\u4e8e\u57ce\u5e02 \\(2\\)\uff0c\u6240\u4ee5\u6211\u4eec\u8ba4\u4e3a\u57ce\u5e02 \\(3\\) \u79bb\u57ce\u5e02 \\(1\\) \u6700\u8fd1\uff0c\u57ce\u5e02 \\(2\\) \u79bb\u57ce\u5e02 \\(1\\) \u7b2c\u4e8c\u8fd1\uff0c\u6240\u4ee5\u5c0fA\u4f1a\u8d70\u5230\u57ce\u5e02 \\(2\\)\u3002\u5230\u8fbe\u57ce\u5e02 \\(2\\) \u540e\uff0c\u524d\u9762\u53ef\u4ee5\u5230\u8fbe\u7684\u57ce\u5e02\u4e3a \\(3,4\\)\uff0c\u8fd9\u4e24\u4e2a\u57ce\u5e02\u4e0e\u57ce\u5e02 \\(2\\)  \u7684\u8ddd\u79bb\u5206\u522b\u4e3a \\(2,1\\)\uff0c\u6240\u4ee5\u57ce\u5e02 \\(4\\) \u79bb\u57ce\u5e02 \\(2\\) \u6700\u8fd1\uff0c\u56e0\u6b64\u5c0fB\u4f1a\u8d70\u5230\u57ce\u5e02\\(4\\)\u3002\u5230\u8fbe\u57ce\u5e02 \\(4\\) \u540e\uff0c\u524d\u9762\u5df2\u6ca1\u6709\u53ef\u5230\u8fbe\u7684\u57ce\u5e02\uff0c\u6240\u4ee5\u65c5\u884c\u7ed3\u675f\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(2\\) \u51fa\u53d1\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u57ce\u5e02\u4e3a \\(3,4\\)\uff0c\u8fd9\u4e24\u4e2a\u57ce\u5e02\u4e0e\u57ce\u5e02 \\(2\\) \u7684\u8ddd\u79bb\u5206\u522b\u4e3a \\(2,1\\)\uff0c\u7531\u4e8e\u57ce\u5e02 \\(3\\) \u79bb\u57ce\u5e02 \\(2\\) \u7b2c\u4e8c\u8fd1\uff0c\u6240\u4ee5\u5c0f \\(\\text A\\) \u4f1a\u8d70\u5230\u57ce\u5e02 \\(3\\)\u3002\u5230\u8fbe\u57ce\u5e02 \\(3\\) \u540e\uff0c\u524d\u9762\u5c1a\u672a\u65c5\u884c\u7684\u57ce\u5e02\u4e3a \\(4\\)\uff0c\u6240\u4ee5\u57ce\u5e02 \\(4\\) \u79bb\u57ce\u5e02 \\(3\\) \u6700\u8fd1\uff0c\u4f46\u662f\u5982\u679c\u8981\u5230\u8fbe\u57ce\u5e02 \\(4\\)\uff0c\u5219\u603b\u8def\u7a0b\u4e3a \\(2+3=5&gt;3\\)\uff0c\u6240\u4ee5\u5c0f \\(\\text B\\) \u4f1a\u76f4\u63a5\u5728\u57ce\u5e02 \\(3\\) \u7ed3\u675f\u65c5\u884c\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(3\\) \u51fa\u53d1\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u57ce\u5e02\u4e3a \\(4\\)\uff0c\u7531\u4e8e\u6ca1\u6709\u79bb\u57ce\u5e02 \\(3\\) \u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\uff0c\u56e0\u6b64\u65c5\u884c\u8fd8\u672a\u5f00\u59cb\u5c31\u7ed3\u675f\u4e86\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(4\\) \u51fa\u53d1\uff0c\u6ca1\u6709\u53ef\u4ee5\u5230\u8fbe\u7684\u57ce\u5e02\uff0c\u56e0\u6b64\u65c5\u884c\u8fd8\u672a\u5f00\u59cb\u5c31\u7ed3\u675f\u4e86\u3002</p> <p>\u3010\u6837\u4f8b2\u8bf4\u660e\u3011</p> <p>\u5f53 \\(x=7\\) \u65f6\uff0c\u5982\u679c\u4ece\u57ce\u5e02 \\(1\\) \u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a \\(1 \\to 2 \\to 3 \\to 8 \\to 9\\)\uff0c\u5c0f \\(\\text A\\) \u8d70\u7684\u8ddd\u79bb\u4e3a \\(1+2=3\\)\uff0c\u5c0f \\(\\text B\\) \u8d70\u7684\u8ddd\u79bb\u4e3a \\(1+1=2\\)\u3002\uff08\u5728\u57ce\u5e02 \\(1\\) \u65f6\uff0c\u8ddd\u79bb\u5c0f \\(\\text A\\) \u6700\u8fd1\u7684\u57ce\u5e02\u662f \\(2\\) \u548c \\(6\\)\uff0c\u4f46\u662f\u57ce\u5e02 \\(2\\) \u7684\u6d77\u62d4\u66f4\u9ad8\uff0c\u89c6\u4e3a\u4e0e\u57ce\u5e02 \\(1\\) \u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\uff0c\u6240\u4ee5\u5c0f \\(\\text A\\) \u6700\u7ec8\u9009\u62e9\u57ce\u5e02 \\(2\\)\uff1b\u8d70\u5230\\(9\\) \u540e\uff0c\u5c0f \\(\\text A\\) \u53ea\u6709\u57ce\u5e02 \\(10\\) \u53ef\u4ee5\u8d70\uff0c\u6ca1\u6709\u7b2c\u4e8c\u9009\u62e9\u53ef\u4ee5\u9009\uff0c\u6240\u4ee5\u6ca1\u6cd5\u505a\u51fa\u9009\u62e9\uff0c\u7ed3\u675f\u65c5\u884c\uff09</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(2\\) \u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a \\(2 \\to 6 \\to 7\\)\uff0c\u5c0f \\(\\text A\\) \u548c\u5c0f \\(\\text B\\) \u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a \\(2,4\\)\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(3\\) \u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a \\(3 \\to 8 \\to 9\\)\uff0c\u5c0f \\(\\text A\\) \u548c\u5c0f \\(\\text B\\) \u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a\\(2,1\\)\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(4\\) \u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a \\(4 \\to 6 \\to 7\\)\uff0c\u5c0f \\(\\text A\\) \u548c\u5c0f \\(\\text B\\) \u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a \\(2,4\\)\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(5\\) \u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a \\(5 \\to 7 \\to 8\\)\uff0c\u5c0f \\(\\text A\\) \u548c\u5c0f \\(\\text B\\) \u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a \\(5,1\\)\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(6\\) \u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a \\(6 \\to 8 \\to 9\\)\uff0c\u5c0f \\(\\text A\\) \u548c\u5c0f \\(\\text B\\) \u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a\\(5,1\\)\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(7\\) \u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a \\(7 \\to 9 \\to 10\\)\uff0c\u5c0f \\(\\text A\\) \u548c\u5c0f \\(\\text B\\) \u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a\\(2,1\\)\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(8\\) \u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a \\(8 \\to 10\\)\uff0c\u5c0f \\(\\text A\\) \u548c\u5c0f \\(\\text B\\) \u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a\\(2,0\\)\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(9\\) \u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a \\(9\\)\uff0c\u5c0f \\(\\text A\\) \u548c\u5c0f \\(\\text B\\) \u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a \\(0,0\\)\uff08\u65c5\u884c\u4e00\u5f00\u59cb\u5c31\u7ed3\u675f\u4e86\uff09\u3002</p> <p>\u5982\u679c\u4ece\u57ce\u5e02 \\(10\\) \u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a \\(10\\)\uff0c\u5c0f \\(\\text A\\) \u548c\u5c0f \\(\\text B\\) \u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a\\(0,0\\)\u3002</p> <p>\u4ece\u57ce\u5e02 \\(2\\) \u6216\u8005\u57ce\u5e02 \\(4\\) \u51fa\u53d1\u5c0f \\(\\text A\\) \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4e0e\u5c0f \\(\\text B\\) \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u7684\u6bd4\u503c\u90fd\u6700\u5c0f\uff0c\u4f46\u662f\u57ce\u5e02 \\(2\\) \u7684\u6d77\u62d4\u66f4\u9ad8\uff0c\u6240\u4ee5\u8f93\u51fa\u7b2c\u4e00\u884c\u4e3a \\(2\\)\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u4e0e\u7ea6\u5b9a\u3011</p> <p>\u5bf9\u4e8e \\(30\\%\\) \u7684\u6570\u636e\uff0c\u6709\\(1\\le n \\le 20,1\\le m\\le 20\\)\uff1b \u5bf9\u4e8e\\(40\\%\\) \u7684\u6570\u636e\uff0c\u6709\\(1\\le n \\le 100,1\\le m\\le 100\\)\uff1b \u5bf9\u4e8e \\(50\\%\\) \u7684\u6570\u636e\uff0c\u6709\\(1\\le n \\le 100,1\\le m\\le 1000\\)\uff1b \u5bf9\u4e8e \\(70\\%\\) \u7684\u6570\u636e\uff0c\u6709\\(1\\le n \\le 1000,1\\le m\\le 10^4\\)\uff1b \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff1a\\(1\\le n,m \\le 10^5\\)\uff0c\\(-10^9 \\le h_i\u226410^9\\)\uff0c\\(1 \\le s_i \\le n\\)\uff0c$0 \\le x_i \\le 10^9 $\u6570\u636e\u4fdd\u8bc1 \\(h_i\\) \u4e92\u4e0d\u76f8\u540c\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%80%8D%E5%A2%9E%E4%BC%98%E5%8C%96/#_4","title":"\u601d\u8def","text":"<p>\u9996\u5148\u8fd9\u91cc\u6bcf\u4e2a\u70b9\u6240\u5bf9\u5e94\u7684\u7b2c\u4e00\u548c\u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u51fa\u6765\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u95ee\u98981</p> <p>\u95ee\u98981</p> <p>\u5982\u679c\u6211\u4eec\u8981\u679a\u4e3e\u8d77\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u80fd\u7528O(\\log n)\u7684\u590d\u6742\u5ea6\u5b8c\u6210\u6bcf\u4e00\u6b21\u6a21\u62df\u5f00\u8f66\u4e86\u3002\u90a3\u4e48\u8fd9\u6837\u7684\u8bdd\u5176\u5b9e\u6211\u4eec\u5982\u679c\u53ef\u4ee5\u7528O(\\log n)\u65f6\u95f4\u5b8c\u6210\u6bcf\u4e00\u4e2a\u95ee\u98982\uff0c\u90a3\u4e48\u95ee\u98981\u4e5f\u5c31\u8fce\u5203\u800c\u89e3\u4e86\u3002\u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u80fd\u6765\u8ba8\u8bba\u95ee\u98982</p> <p>\u95ee\u98982</p> <p>\u6211\u4eec\u8981\u5728O(\\log n)\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u4e00\u6b21\u6a21\u62df\u5f00\u8f66\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u5230\u7684\u662f\u500d\u589e\u3002\u53ef\u662f\u600e\u4e48\u6837\u500d\u589e\u5462\uff1f</p> <p>std</p> <p>INF\u5f00\u5927</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(l, r, i) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(r, l, i) for (int i = r, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n// #define int long long\n#define pii pair&lt;int, int&gt;\n#define LL __int128\n\n#define lc(x) (x &lt;&lt; 1)\n#define rc(x) (x &lt;&lt; 1 | 1)\n\n#define rd read()\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(LL out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int N = 1e5 + 15;\nconst int INF = 1e18 + 5;\n// const int MOD = 1 &lt;&lt; 30;\n\nstruct node {\n  long long h;\n  int id;\n} h[N], ga[N], gb[N];\nstruct point {\n  long long la, lb;\n};\nbool operator&lt;(node as, node bs) {\n  if (as.h != bs.h)\n    return as.h &lt; bs.h;\n  else\n    return as.id &lt; bs.id;\n}\nset&lt;node&gt; q;\ndouble ans = INF;\nint n, f[20][N][3];\nlong long da[20][N][3], db[20][N][3];\nbool cmp(node as, node bs) { \n    return as.h &lt; bs.h; \n}\npoint Calc(int p, int x) {\n  long long la = 0, lb = 0;\n  for (int i = 18; i &gt;= 0; i--) {\n    if (f[i][p][0] &amp;&amp; la + lb + da[i][p][0] + db[i][p][0] &lt;= x) {\n      la += da[i][p][0];\n      lb += db[i][p][0];\n      p = f[i][p][0];\n    }\n  }\n  return {la, lb};\n}\nsigned main() {\n  n = rd;\n  q.insert({INF, 0});\n  q.insert({INF - 1, 0});\n  q.insert({-INF, 0});\n  q.insert({-INF + 1, 0});\n  for (int i = 1; i &lt;= n; i++) {\n    h[i].h = rd;\n    h[i].id = i;\n  }\n\n  for (int i = n; i &gt;= 1; i--) {\n    q.insert(h[i]);\n    node t[5];\n    t[1] = *--q.lower_bound(h[i]);\n    t[2] = *--q.lower_bound(t[1]);\n    t[3] = *q.upper_bound(h[i]);\n    t[4] = *q.upper_bound(t[3]);\n    for (int j = 1; j &lt;= 4; j++)\n      t[j].h = abs(t[j].h - h[i].h);\n    sort(t + 1, t + 5, cmp);\n    ga[i] = t[2];\n    gb[i] = t[1];\n  }\n  for (int i = 1; i &lt; n; i++) {\n    f[0][i][0] = ga[i].id;\n    f[0][i][1] = gb[i].id;\n  }\n  for (int i = 1; i &lt;= 18; i++)\n    for (int j = 1; j &lt;= n; j++)\n      if (j + (1 &lt;&lt; i) &lt;= n)\n        for (int k = 0; k &lt;= 1; k++) {\n          if (i == 1)\n            f[1][j][k] = f[0][f[0][j][k]][1 - k];\n          else\n            f[i][j][k] = f[i - 1][f[i - 1][j][k]][k];\n        }\n  memset(da, 127 / 3, sizeof(da));\n  memset(db, 127 / 3, sizeof(db));\n  for (int i = 1; i &lt;= n; i++) {\n    da[0][i][0] = ga[i].h;\n    da[0][i][1] = 0;\n  }\n  for (int i = 1; i &lt;= 18; i++)\n    for (int j = 1; j &lt;= n; j++)\n      if (j + (1 &lt;&lt; i) &lt;= n)\n        for (int k = 0; k &lt;= 1; k++) {\n          if (i == 1) {\n            da[1][j][k] = da[0][j][k] + da[0][f[0][j][k]][1 - k];\n          } else\n            da[i][j][k] = da[i - 1][j][k] + da[i - 1][f[i - 1][j][k]][k];\n        }\n  for (int i = 1; i &lt;= n; i++) {\n    db[0][i][0] = 0;\n    db[0][i][1] = gb[i].h;\n  }\n  for (int i = 1; i &lt;= 18; i++)\n    for (int j = 1; j &lt;= n; j++)\n      if (j + (1 &lt;&lt; i) &lt;= n)\n        for (int k = 0; k &lt;= 1; k++) {\n          if (i == 1) {\n            db[1][j][k] = db[0][j][k] + db[0][f[0][j][k]][k ^ 1];\n          } else\n            db[i][j][k] = db[i - 1][j][k] + db[i - 1][f[i - 1][j][k]][k];\n        }\n  int x0 = rd, m;\n  int t = 0;\n  for (int i = 1; i &lt;= n; i++) {\n    point tmp = Calc(i, x0);\n    if (tmp.lb == 0)\n      continue;\n    double ccf = (long double)tmp.la / (long double)tmp.lb;\n    if (ccf &lt; ans)\n      ans = ccf, t = i;\n  }\n  printf(\"%lld\\n\", t);\n\n  m = rd;\n  for (int i = 1; i &lt;= m; i++) {\n    int si = rd, xi = rd;\n    point tmp = Calc(si, xi);\n    printf(\"%lld %lld\\n\", tmp.la, tmp.lb);\n  }\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%88%86%E6%B2%BB%E4%BC%98%E5%8C%96/","title":"\u5206\u6cbb\u4f18\u5316","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%88%86%E6%B2%BB%E4%BC%98%E5%8C%96/#1-partition-game","title":"\u4f8b\u9898 #1 Partition Game","text":"<p>\u9898\u9762\u7ffb\u8bd1</p> <p>\\(hater\\)\u6254\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a\\(n\\)\u5e8f\u5217\uff0c\u5b9a\u4e49\u5176\u4e2d\u4e00\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217\\(t\\)\u7684\u4ee3\u4ef7\u4e3a\uff1a</p> <p>\\(cost(t)=\\sum_{x\\in set(t)}last(x)\u2212first(x)\\)</p> <p>\u5176\u4e2d\\(set(t)\\)\u8868\u793a\u8be5\u5b50\u5e8f\u5217\u7684\u5143\u7d20\u96c6\u5408\uff0c\\(last(x)\\)\u8868\u793a\\(x\\)\u5728\u8be5\u5b50\u5e8f\u5217\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\\(first(x)\\)\u8868\u793a\\(x\\)\u5728\u8be5\u5b50\u5e8f\u5217\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217\u7684\u8d21\u732e\u4e3a\u5bf9\u4e8e\u5176\u4e2d\u6bcf\u79cd\u5143\u7d20\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0e\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7684\u4e0b\u6807\u5dee\u7684\u548c\u3002</p> <p>\u73b0\u5728\u4f60\u8981\u628a\u539f\u5e8f\u5217\u5212\u5206\u6210\\(k\\)\u4e2a\u8fde\u7eed\u5b50\u5e8f\u5217\uff0c\u6c42\u6700\u5c0f\u4ee3\u4ef7\u548c\u3002</p> <p>\u5176\u4e2d\\(1\\leq n\\leq35000,1\\leq k\\leq min(n,100),1\\leq a_i \\leq n\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96/","title":"\u51b3\u7b56\u5355\u8c03\u6027\u4e4b \u5355\u8c03\u961f\u5217\u4f18\u5316","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96/#usaco10nov-buying-feed-g","title":"[USACO10NOV] Buying Feed G","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ea6\u7ff0\u5f00\u8f66\u6765\u5230\u9547\u4e0a\uff0c\u4ed6\u8981\u5e26\\(K\\)\u5428\u9972\u6599\u56de\u5bb6\u3002\u8fd0\u9001\u9972\u6599\u662f\u9700\u8981\u82b1\u94b1\u7684\uff0c\u5982\u679c\u4ed6\u7684\u8f66\u4e0a\u6709\\(X\\)\u5428\u9972\u6599\uff0c\u6bcf\u516c\u91cc\u5c31\u8981\u82b1\u8d39\\(X^2\\)\u5143\uff0c\u5f00\u8f66D\u516c\u91cc\u5c31\u9700\u8981\\(D\\times  X^2\\)\u5143\u3002\u7ea6\u7ff0\u53ef\u4ee5\u4ece\\(N\\)\u5bb6\u5546\u5e97\u8d2d\u4e70\u9972\u6599\uff0c\u6240\u6709\u5546\u5e97\u90fd\u5728\u4e00\u4e2a\u5750\u6807\u8f74\u4e0a\uff0c\u7b2c\\(i\\)\u5bb6\u5e97\u7684\u4f4d\u7f6e\u662f\\(X_i\\)\uff0c\u9972\u6599\u7684\u552e\u4ef7\u4e3a\u6bcf\u5428\\(C_i\\)\u5143\uff0c\u5e93\u5b58\u4e3a\\(F_i\\)\u3002</p> <p>\u7ea6\u7ff0\u4ece\u5750\u6807\\(X=0\\)\u5f00\u59cb\u6cbf\u5750\u6807\u8f74\u6b63\u65b9\u5411\u524d\u8fdb\uff0c\u4ed6\u5bb6\u5728\u5750\u6807\\(X=E\\)\u4e0a\u3002\u4e3a\u4e86\u5e26\\(K\\)\u5428\u9972\u6599\u56de\u5bb6\uff0c\u7ea6\u7ff0\u6700\u5c11\u7684\u82b1\u8d39\u662f\u591a\u5c11\u5462\uff1f\u5047\u8bbe\u6240\u6709\u5546\u5e97\u7684\u5e93\u5b58\u4e4b\u548c\u4e0d\u4f1a\u5c11\u4e8e\\(K\\)\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6709\u4e09\u5bb6\u5546\u5e97\uff0c\u60c5\u51b5\u5982\u4e0b\u6240\u793a\uff1a</p> \u5750\u6807 \\(X=1\\) \\(X=3\\) \\(X=4\\) \\(E=5\\) \u5e93\u5b58 \\(1\\) \\(1\\) \\(1\\) \u552e\u4ef7 \\(1\\) \\(2\\) \\(2\\) <p>\u5982\u679c\\(K=2\\)\uff0c\u7ea6\u7ff0\u7684\u6700\u4f18\u9009\u62e9\u662f\u5728\u79bb\u5bb6\u8f83\u8fd1\u7684\u4e24\u5bb6\u5546\u5e97\u8d2d\u4e70\u9972\u6599\uff0c\u5219\u82b1\u5728\u8def\u4e0a\u7684\u94b1\u662f\\(1+4=5\\)\uff0c\u82b1\u5728\u5546\u5e97\u7684\u94b1\u662f\\(2+2=4\\)\uff0c\u5171\u9700\u8981\\(9\\)\u5143\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\\(1\\)\u884c:\u4e09\u4e2a\u6574\u6570\\(K,E,N\\) \u7b2c\\(2..N+1\\)\u884c:\u7b2c\\(i+1\\)\u884c\u7684\u4e09\u4e2a\u6574\u6570\u4ee3\u8868,\\(X_i,F_i,C_i\\).</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e00\u4e2a\u6574\u6570,\u4ee3\u8868\u6700\u5c0f\u82b1\u8d39</p> <p>\\(1 \\leq K \\leq 10000 , 1 \\leq E \\leq 500 , 1 \\leq N \\leq 500\\)</p> <p>\\(0 &lt; Xi &lt; E, 1 \\leq Fi \\leq 10000, 1 \\leq C_i \\leq 10^7\\)</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96/#_2","title":"\u601d\u8def","text":"<p>\u7406\u89e3\u4e0d\u96be\u3002</p> <p>Luogu P4544 [USACO10NOV]Buying Feed G - \u71c3\u70e7\u7684\u51b0\u5757_husky \u7684\u535a\u5ba2 - \u6d1b\u8c37\u535a\u5ba2</p> <p>std</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include &lt;algorithm&gt;\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define err cerr&lt;&lt;\"Error\"\n#define rd read()\n// #define nl putc('\\n')\n#define ot write\n#define nl putchar('\\n')\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int INF = 1e13;\n\nconst int S=1e6+5;\nconst int maxlog = 10;\n\nconst int N = 510;\nconst int M = 10010;\n\ntemplate &lt;class T&gt;\ninline T min(T a, T b) {\n    return a &lt; b ? a : b;\n}\n\nstruct node {\n    int x;\n    int w;\n    int v;\n\n    node(): x(0), w(0), v(0){}\n    node(int x_, int w_, int v_): x(x_), w(w_), v(v_) {}\n    inline bool operator &lt; (node &amp;a) {\n        return this-&gt;x &lt; a.x;\n    }\n};\n\nnode s[N];\nint W, n, d[N][M];\nint  que[M];\n\ninline int calc(int i, int k) {\n    return d[i - 1][k] + (s[i].x - s[i - 1].x) * k * k - s[i].v * k;\n}\n\nsigned main() {\n    int E;\n    W=rd,E=rd,n=rd;\n    s[0] = node(0, 0, 0);   \n    for (int i = 1, x, w, v; i &lt;= n; ++i) {\n        x=rd,w=rd,v=rd;\n        s[i] = node(x, w, v);\n    }\n    s[n + 1] = node(E, 0, 0);  \n    sort(s, s + n + 2);\n    memset(d, 0x3f, sizeof(d));\n    d[0][0] = 0;\n    for (int i = 1; i &lt;= n + 1; ++i) {   \n        int l = 1, r = 0;\n        for (int j = 0; j &lt;= W; ++j) {   \n            while (calc(i, que[r]) &gt; calc(i, j) &amp;&amp; l &lt;= r)\n                --r;\n            if (j - que[l] &gt; s[i].w &amp;&amp; l &lt;= r)\n                ++l;\n            que[++r] = j;\n            d[i][j] = calc(i, que[l]) + s[i].v * j;           \n        }\n    }\n    printf(\"%lld\", d[n + 1][W]);\n}\n\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96/#csp-s2019","title":"[CSP-S2019] \u5212\u5206","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>2048 \u5e74\uff0c\u7b2c\u4e09\u5341\u5c4a CSP \u8ba4\u8bc1\u7684\u8003\u573a\u4e0a\uff0c\u4f5c\u4e3a\u9009\u624b\u7684\u5c0f\u660e\u6253\u5f00\u4e86\u7b2c\u4e00\u9898\u3002\u8fd9\u4e2a\u9898\u7684\u6837\u4f8b\u6709 \\(n\\) \u7ec4\u6570\u636e\uff0c\u6570\u636e\u4ece \\(1 \\sim n\\) \u7f16\u53f7\uff0c\\(i\\) \u53f7\u6570\u636e\u7684\u89c4\u6a21\u4e3a \\(a_i\\)\u3002</p> <p>\u5c0f\u660e\u5bf9\u8be5\u9898\u8bbe\u8ba1\u51fa\u4e86\u4e00\u4e2a\u66b4\u529b\u7a0b\u5e8f\uff0c\u5bf9\u4e8e\u4e00\u7ec4\u89c4\u6a21\u4e3a \\(u\\) \u7684\u6570\u636e\uff0c\u8be5\u7a0b\u5e8f\u7684**\u8fd0\u884c\u65f6\u95f4**\u4e3a \\(u^2\\)\u3002\u7136\u800c\u8fd9\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u5b8c\u4e00\u7ec4\u89c4\u6a21\u4e3a \\(u\\) \u7684\u6570\u636e\u4e4b\u540e\uff0c\u5b83\u5c06\u5728\u4efb\u4f55\u4e00\u7ec4\u89c4\u6a21**\u5c0f\u4e8e** \\(u\\) \u7684\u6570\u636e\u4e0a\u8fd0\u884c\u9519\u8bef\u3002\u6837\u4f8b\u4e2d\u7684 \\(a_i\\) \u4e0d\u4e00\u5b9a\u9012\u589e\uff0c\u4f46\u5c0f\u660e\u53c8\u60f3\u5728\u4e0d\u4fee\u6539\u7a0b\u5e8f\u7684\u60c5\u51b5\u4e0b\u6b63\u786e\u8fd0\u884c\u6837\u4f8b\uff0c\u4e8e\u662f\u5c0f\u660e\u51b3\u5b9a\u4f7f\u7528\u4e00\u79cd\u975e\u5e38\u539f\u59cb\u7684\u89e3\u51b3\u65b9\u6848\uff1a\u5c06\u6240\u6709\u6570\u636e\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u6570\u636e\u6bb5\uff0c\u6bb5\u5185\u6570\u636e\u7f16\u53f7**\u8fde\u7eed**\uff0c\u63a5\u7740\u5c06\u540c\u4e00\u6bb5\u5185\u7684\u6570\u636e\u5408\u5e76\u6210\u65b0\u6570\u636e\uff0c\u5176\u89c4\u6a21\u7b49\u4e8e\u6bb5\u5185\u539f\u6570\u636e\u7684**\u89c4\u6a21\u4e4b\u548c**\uff0c\u5c0f\u660e\u5c06\u8ba9\u65b0\u6570\u636e\u7684\u89c4\u6a21\u80fd\u591f\u9012\u589e\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c0f\u660e\u9700\u8981\u627e\u5230\u4e00\u4e9b\u5206\u754c\u70b9 \\(1 \\leq k_1 \\lt k_2 \\lt \\cdots \\lt k_p \\lt n\\)\uff0c\u4f7f\u5f97</p> <p>\\(\\sum_{i=1}^{k_1} a_i \\leq \\sum_{i=k_1+1}^{k_2} a_i \\leq \\cdots \\leq \\sum_{i=k_p+1}^{n} a_i\\)</p> <p>\u6ce8\u610f \\(p\\) \u53ef\u4ee5\u4e3a \\(0\\) \u4e14\u6b64\u65f6 \\(k_0 = 0\\)\uff0c\u4e5f\u5c31\u662f\u5c0f\u660e\u53ef\u4ee5\u5c06\u6240\u6709\u6570\u636e\u5408\u5e76\u5728\u4e00\u8d77\u8fd0\u884c\u3002</p> <p>\u5c0f\u660e\u5e0c\u671b\u4ed6\u7684\u7a0b\u5e8f\u5728\u6b63\u786e\u8fd0\u884c\u6837\u4f8b\u60c5\u51b5\u4e0b\uff0c\u8fd0\u884c\u65f6\u95f4\u4e5f\u80fd\u5c3d\u91cf\u5c0f\uff0c\u4e5f\u5c31\u662f**\u6700\u5c0f\u5316**</p> <p>\\((\\sum_{i=1}^{k_1} a_i)^2 + (\\sum_{i=k_1+1}^{k_2} a_i)^2 + \\cdots + (\\sum_{i=k_p+1}^{n} a_i)^2\\)</p> <p>\u5c0f\u660e\u89c9\u5f97\u8fd9\u4e2a\u95ee\u9898\u975e\u5e38\u6709\u8da3\uff0c\u5e76\u5411\u4f60\u8bf7\u6559\uff1a\u7ed9\u5b9a \\(n\\) \u548c \\(a_i\\)\uff0c\u8bf7\u4f60\u6c42\u51fa\u6700\u4f18\u5212\u5206\u65b9\u6848\u4e0b\uff0c\u5c0f\u660e\u7684\u7a0b\u5e8f\u7684\u6700\u5c0f\u8fd0\u884c\u65f6\u95f4\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7531\u4e8e\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u8f83\u5927\uff0c\u90e8\u5206\u6d4b\u8bd5\u70b9\u7684 \\(a_i\\) \u5c06\u5728\u7a0b\u5e8f\u5185\u751f\u6210\u3002</p> <p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570 \\(n, type\\)\u3002\\(n\\) \u7684\u610f\u4e49\u89c1\u9898\u76ee\u63cf\u8ff0\uff0c\\(type\\) \u8868\u793a\u8f93\u5165\u65b9\u5f0f\u3002</p> <ol> <li> <p>\u82e5 \\(type = 0\\)\uff0c\u5219\u8be5\u6d4b\u8bd5\u70b9\u7684 \\(a_i\\) \u76f4\u63a5\u7ed9\u51fa\u3002\u8f93\u5165\u6587\u4ef6\u63a5\u4e0b\u6765\uff1a\u7b2c\u4e8c\u884c \\(n\\) \u4e2a\u4ee5\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570 \\(a_i\\)\uff0c\u8868\u793a\u6bcf\u7ec4\u6570\u636e\u7684\u89c4\u6a21\u3002</p> </li> <li> <p>\u82e5 \\(type = 1\\)\uff0c\u5219\u8be5\u6d4b\u8bd5\u70b9\u7684 \\(a_i\\) \u5c06**\u7279\u6b8a\u751f\u6210**\uff0c\u751f\u6210\u65b9\u5f0f\u89c1\u540e\u6587\u3002\u8f93\u5165\u6587\u4ef6\u63a5\u4e0b\u6765\uff1a\u7b2c\u4e8c\u884c\u516d\u4e2a\u4ee5\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570 \\(x, y, z, b_1, b_2, m\\)\u3002\u63a5\u4e0b\u6765 \\(m\\) \u884c\u4e2d\uff0c\u7b2c \\(i (1 \\leq i \\leq m)\\) \u884c\u5305\u542b\u4e09\u4e2a\u4ee5\u7a7a\u683c\u5206\u9694\u7684\u6b63\u6574\u6570 \\(p_i, l_i, r_i\\)\u3002</p> </li> </ol> <p>\u5bf9\u4e8e \\(type = 1\\) \u7684 23~25 \u53f7\u6d4b\u8bd5\u70b9\uff0c\\(a_i\\) \u7684\u751f\u6210\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <p>\u7ed9\u5b9a\u6574\u6570 \\(x, y, z, b_1, b_2, m\\)\uff0c\u4ee5\u53ca \\(m\\) \u4e2a\u4e09\u5143\u7ec4 \\((p_i, l_i, r_i)\\)\u3002</p> <p>\u4fdd\u8bc1 \\(n \\geq 2\\)\u3002\u82e5 \\(n \\gt 2\\)\uff0c\u5219 \\(\\forall 3 \\leq i \\leq n, b_i = (x \\times b_{i\u22121} + y \\times b_{i\u22122} + z) \\mod 2^{30}\\)\u3002</p> <p>\u4fdd\u8bc1 \\(1 \\leq p_i \\leq n, p_m = n\\)\u3002\u4ee4 \\(p_0 = 0\\)\uff0c\u5219 \\(p_i\\) \u8fd8\u6ee1\u8db3 \\(\\forall 0 \\leq i \\lt m\\) \u6709 \\(p_i \\lt p_{i+1}\\)\u3002</p> <p>\u5bf9\u4e8e\u6240\u6709 \\(1 \\leq j \\leq m\\)\uff0c\u82e5\u4e0b\u6807\u503c \\(i (1 \\leq i \\leq n)\\)\u6ee1\u8db3 \\(p_{j\u22121} \\lt i \\leq p_j\\)\uff0c\u5219\u6709</p> <p>\\(a_i = \\left(b_i \\mod \\left( r_j \u2212 l_j + 1 \\right) \\right) + l_j\\)</p> <p>\u4e0a\u8ff0\u6570\u636e\u751f\u6210\u65b9\u5f0f\u4ec5\u662f\u4e3a\u4e86\u51cf\u5c11\u8f93\u5165\u91cf\u5927\u5c0f\uff0c\u6807\u51c6\u7b97\u6cd5\u4e0d\u4f9d\u8d56\u4e8e\u8be5\u751f\u6210\u65b9\u5f0f\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7b54\u6848\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011</p> \u6d4b\u8bd5\u70b9\u7f16\u53f7 \\(n \\leq\\) \\(a_i \\leq\\) \\(type =\\) \\(1 \\sim 3\\) \\(10\\) \\(10\\) 0 \\(4 \\sim 6\\) \\(50\\) \\(10^3\\) 0 \\(7 \\sim 9\\) \\(400\\) \\(10^4\\) 0 \\(10 \\sim 16\\) \\(5000\\) \\(10^5\\) 0 \\(17 \\sim 22\\) \\(5 \\times 10^5\\) \\(10^6\\) 0 \\(23 \\sim 25\\) \\(4 \\times 10^7\\) \\(10^9\\) 1 <p>\u5bf9\u4e8e\\(type=0\\)\u7684\u6240\u6709\u6d4b\u8bd5\u70b9,\u4fdd\u8bc1\u6700\u540e\u8f93\u51fa\u7684\u7b54\u6848\\(\\leq 4 \\times 10^{18}\\)</p> <p>\u6240\u6709\u6d4b\u8bd5\u70b9\u6ee1\u8db3\uff1a\\(type \\in \\{0,1\\}\\)\uff0c\\(2 \\leq n \\leq 4 \\times 10^7\\)\uff0c\\(1 \\leq a_i \\leq 10^9\\)\uff0c\\(1 \\leq m \\leq 10^5\\)\uff0c\\(1 \\leq l_i \\leq r_i \\leq 10^9\\)\uff0c\\(0 \\leq x,y,z,b_1,b_2 \\lt 2^{30}\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E4%BC%98%E5%8C%96/#_3","title":"\u601d\u8def","text":"<p>csps19~22</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%9B%9B%E8%BE%B9%E5%BD%A2%E4%B8%8D%E7%AD%89%E5%BC%8F%E4%BC%98%E5%8C%96/","title":"\u51b3\u7b56\u5355\u8c03\u6027\u4e4b \u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\u4f18\u5316\uff08\u51b3\u7b56\u5355\u8c03\u6027\u4f18\u5316 dp\uff09","text":"<p>\u901a\u5e38\u662f\u7528\u6765\u8bc1\u660edp\u7684\u4e00\u4e9b\u7279\u6b8a\u6027\u8d28\uff0c\u4f1a\u548c\u5176\u5b83dp\u4f18\u5316\u65b9\u6cd5\u7ed3\u5408\uff0c\u5982\u659c\u7387\u4f18\u5316\u3002</p> <p>\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\u4f18\u5316\u548c\u659c\u7387\u4f18\u5316\u672c\u8d28\u4e0a\u90fd\u662f\u5229\u7528\u4e86**\u5355\u8c03\u6027**\uff0c\u6240\u4ee5\u6709\u4e00\u4e9b\u65f6\u5019\u53ef\u4ee5\u901a\u7528\u3002</p> <p>\u5173\u4e8e\u51b3\u7b56\u5355\u8c03\u6027\u4f18\u5316 dp\uff0c\u4e0b\u9762\u7684\u535a\u5ba2\u8bb2\u7684\u5f88\u6e05\u695a</p> <p>www.luogu.com.cn</p> <p>\u4e0b\u9762\u662f\u4e00\u4e9b\u6458\u5f55</p> <p>\u4ec0\u4e48\u662f\u51b3\u7b56\u5355\u8c03\u6027\u4f18\u5316 dp\uff1f</p> <p>\u5f62\u5982 \\(dp_i=\\min/\\max(dp_j/\\max\\) \u7684 \\(j\\)\uff0c\uff08\u5176\u5b9e \\(t_i\\) \u5c31\u53eb\u6700\u4f18\u51b3\u7b56\uff09\u82e5 \\(t_i\\) \u5177\u6709\u5355\u8c03\u6027\uff0c\u5219\u8fd9\u4e2a dp \u5f0f\u5b50\u5c31\u6ee1\u8db3\u51b3\u7b56\u5355\u8c03\u6027\u3002</p> <p>\u5177\u4f53\u5982\u4f55\u5224\u65ad\uff1f</p> <p>\u4ee4 \\(f_j(i)\\) \u4e3a\u7528 \\(j\\) \u8f6c\u79fb\u65f6 \\(dp_i\\) \u7684\u503c\uff08\u5373 \\(dp_j+f(j,i)\\)\uff09\u3002</p> <p>\u82e5\u5bf9\u4e8e\u4efb\u610f \\(j_1&lt;j_2\\)\uff0c\\(f_{j_1}(i)\\) \u548c \\(f_{j_2}(i)\\) \u7684\u51fd\u6570\u56fe\u50cf\u81f3\u591a\u6709\u4e00\u4e2a\u4ea4\u70b9\uff0c\u5728\u8fd9\u4e2a\u4ea4\u70b9\u4e4b\u524d\u662f \\(f_{j_1}(i)\\) \u66f4\u5c0f\uff0c\u5728\u8fd9\u4e2a\u4ea4\u70b9\u540e\u662f \\(f_{j_2}(i)\\) \u66f4\u5c0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u6ee1\u8db3\u51b3\u7b56\u5355\u8c03\u6027\u3002</p> <p>\u56e0\u4e3a\u4ea4\u70b9\u4e4b\u524d\u7684 \\(i\\) \u7684\u51b3\u7b56\u90fd\u662f \\(j_1\\)\uff0c\u4ea4\u70b9\u540e\u7684\u51b3\u7b56\u90fd\u662f \\(j_2\\)\u3002\u6b63\u597d\u6ee1\u8db3\u51b3\u7b56\u5355\u8c03\u6027\u3002</p> <p>\uff08\u5176\u5b9e\u5982\u679c\u53cd\u4e4b\uff0c\u5728\u4ea4\u70b9\u524d\u90fd\u662f \\(j_2\\) \u66f4\u4f18\u800c\u4ea4\u70b9\u540e\u90fd\u662f \\(j_1\\) \u66f4\u4f18\uff0c\u662f\u4e00\u79cd\u4e0d\u540c\u7684\u51b3\u7b56\u5355\u8c03\u6027\u95ee\u9898\uff0c\u56e0\u4e0e\u672c\u9898\u65e0\u5173\u6b64\u5904\u7565\u53bb\u3002\uff09</p> <p>\u51b3\u7b56\u5355\u8c03\u6027\u7684\u4f18\u5316\u65b9\u6cd5\u5927\u81f4\u6709\u51b3\u7b56\u6808\uff0c\u51b3\u7b56\u961f\u5217\u548c\u5206\u6cbb\u3002\u4e0b\u9762\u8bf4\u660e\u51b3\u7b56\u961f\u5217\u4f18\u5316\u3002</p> <p>\u51b3\u7b56\u961f\u5217\u5177\u4f53\u662f\u8fd9\u6837\u505a\u7684\uff1a</p> <p>\u961f\u5217\u7ef4\u62a4\u51b3\u7b56\u4e09\u5143\u7ec4 \\((p,l,r)\\) \u8868\u793a\u76ee\u524d\u770b\u6765 \\(t_l,t_{l+1}\\dots t_r\\) \u90fd\u662f \\(p\\)\u3002\u4e00\u822c\u6765\u8bf4\u4e00\u5f00\u59cb\u961f\u5217\u91cc\u53ea\u6709\u4e09\u5143\u7ec4 \\((0,1,n)\\)\u3002</p> <p>\u6bcf\u6b21\u8ba1\u7b97 \\(dp_i\\) \u65f6\uff0c\u5c31\u5148\u628a\u961f\u5217\u4e2d\u65e0\u7528\u7684\u4e09\u5143\u7ec4\u5f39\u51fa\uff08\\(r&lt;i\\)\uff09\uff0c\u5e76\u628a\u65b0\u7684\u961f\u9996\u7684 \\(l\\) \u8bbe\u4e3a \\(i\\)\u3002\u6b64\u65f6 \\(i\\) \u5728\u961f\u9996\uff0c\u6240\u4ee5 \\(i\\) \u7684\u51b3\u7b56\u5c31\u662f\u961f\u9996\u7684 \\(p\\)\u3002\u7528 \\(dp_p\\) \u66f4\u65b0 \\(dp_i\\)\u3002</p> <p>\u63a5\u4e0b\u6765\u4ece\u961f\u5c3e\u5f00\u59cb\u626b\uff0c\u5982\u679c\u7528 \\(i\\) \u6765\u66f4\u65b0\u961f\u5c3e\u7684 \\(l\\) \u6bd4\u961f\u5c3e\u7684 \\(p\\) \u66f4\u65b0\u961f\u5c3e\u7684 \\(l\\) \u66f4\u4f18\uff0c\u8bf4\u660e\u961f\u5c3e\u7684\u51b3\u7b56\u5e94\u8be5\u6bd4 \\(p\\) \u66f4\u5927\uff08\u56e0\u4e3a\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u679a\u4e3e \\(i\\)\uff09\uff0c\u90a3\u4e48\u6839\u636e\u51b3\u7b56\u5355\u8c03\u6027\uff0c\u6574\u4e2a\u4e09\u5143\u7ec4\u4e2d\u7684\u51b3\u7b56\u90fd\u6bd4 \\(p\\) \u5927\u3002\u4e8e\u662f\u4fbf\u53ef\u4ee5\u5f39\u51fa\u961f\u5c3e\u3002</p> <p>\u5230\u6700\u540e\u7528 \\(i\\) \u6765\u66f4\u65b0\u961f\u5c3e\u7684 \\(l\\) \u6ca1\u6709\u961f\u5c3e\u7684 \\(p\\) \u66f4\u65b0\u961f\u5c3e\u7684 \\(l\\) \u4f18\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u627e\u51fa\u51b3\u7b56\u53d8\u4e3a \\(i\\) \u7684\u5206\u754c\u70b9\u3002\u7531\u4e8e\u51b3\u7b56\u5177\u6709\u5355\u8c03\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u3002\u4e8c\u5206\u8fb9\u754c\u5c31\u662f\u961f\u5c3e\u4e09\u5143\u7ec4\u7684 \\(l\\) \u548c \\(n\\)\uff08\u4e3a\u4ec0\u4e48\u4e0d\u662f \\(r\\)\uff1f\u56e0\u4e3a\u53ef\u80fd\u8fd9\u6574\u4e2a\u4e09\u5143\u7ec4\u90fd\u6ee1\u8db3\u539f\u6765\u7684\u51b3\u7b56\uff0c\u6b64\u65f6\u4e8c\u5206\u5374\u4f1a\u628a\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u62c6\u8d70\uff09\u3002</p> <p>\u4e8c\u5206\u51fa\u5206\u754c\u70b9 \\(x\\) \u540e\uff0c\u961f\u5c3e\u4e09\u5143\u7ec4\u7684 \\(r\\) \u5e94\u6539\u4e3a \\(x-1\\)\uff08\u4e4b\u540e\u7684\u51b3\u7b56\u90fd\u8981\u53d8\uff09\u3002\u961f\u5c3e\u518d\u65b0\u52a0\u5165\u4e00\u4e2a\u4e09\u5143\u7ec4 \\((i,x,n)\\)\uff0c\u8868\u793a \\(x\\) \u5230 \\(n\\) \u7684\u51b3\u7b56\u90fd\u53ef\u4ee5\u6539\u4e3a\u66f4\u4f18\u7684 \\(i\\)\u3002</p> <p>\u81f3\u6b64\u7b97\u6cd5\u7ed3\u675f\u3002</p> <p>\u56e0\u4e3a\u6bcf\u4e00\u4e2a \\(i\\) \u90fd\u4f1a\u81f3\u591a\u6dfb\u52a0\u4e00\u4e2a\u4e09\u5143\u7ec4\uff0c\u5bf9\u4e00\u4e2a\u4e09\u5143\u7ec4\u8fdb\u884c\u4e8c\u5206\uff0c\u53c8\u56e0\u4e3a\u4e00\u4e2a\u4e09\u5143\u7ec4\u81f3\u591a\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a \\(O(n\\log n)\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%9B%9B%E8%BE%B9%E5%BD%A2%E4%B8%8D%E7%AD%89%E5%BC%8F%E4%BC%98%E5%8C%96/#noi2009-g","title":"[NOI2009] \u8bd7\u4eba\u5c0fG","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5c0f G \u662f\u4e00\u4e2a\u51fa\u8272\u7684\u8bd7\u4eba\uff0c\u7ecf\u5e38\u4f5c\u8bd7\u81ea\u5a31\u81ea\u4e50\u3002\u4f46\u662f\uff0c\u4ed6\u4e00\u76f4\u88ab\u4e00\u4ef6\u4e8b\u60c5\u6240\u56f0\u6270\uff0c\u90a3\u5c31\u662f\u8bd7\u7684\u6392\u7248\u95ee\u9898\u3002</p> <p>\u4e00\u9996\u8bd7\u5305\u542b\u4e86\u82e5\u5e72\u4e2a\u53e5\u5b50\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u8fde\u7eed\u7684\u77ed\u53e5\uff0c\u53ef\u4ee5\u5c06\u5b83\u4eec\u7528\u7a7a\u683c\u9694\u5f00\u5e76\u653e\u5728\u4e00\u884c\u4e2d\uff0c\u6ce8\u610f\u4e00\u884c\u4e2d\u53ef\u4ee5\u653e\u7684\u53e5\u5b50\u6570\u76ee\u662f\u6ca1\u6709\u9650\u5236\u7684\u3002\u5c0f G \u7ed9\u6bcf\u9996\u8bd7\u5b9a\u4e49\u4e86\u4e00\u4e2a\u884c\u6807\u51c6\u957f\u5ea6\uff08\u884c\u7684\u957f\u5ea6\u4e3a\u4e00\u884c\u4e2d\u7b26\u53f7\u7684\u603b\u4e2a\u6570\uff09\uff0c\u4ed6\u5e0c\u671b\u6392\u7248\u540e\u6bcf\u884c\u7684\u957f\u5ea6\u90fd\u548c\u884c\u6807\u51c6\u957f\u5ea6\u76f8\u5dee\u4e0d\u8fdc\u3002\u663e\u7136\u6392\u7248\u65f6\uff0c\u4e0d\u5e94\u6539\u53d8\u539f\u6709\u7684\u53e5\u5b50\u987a\u5e8f\uff0c\u5e76\u4e14\u5c0f G \u4e0d\u5141\u8bb8\u628a\u4e00\u4e2a\u53e5\u5b50\u5206\u5728\u4e24\u884c\u6216\u8005\u66f4\u591a\u7684\u884c\u5185\u3002\u5728\u6ee1\u8db3\u4e0a\u9762\u4e24\u4e2a\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u5c0f G \u5bf9\u4e8e\u6392\u7248\u4e2d\u7684\u6bcf\u884c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e0d\u534f\u8c03\u5ea6, \u4e3a\u8fd9\u884c\u7684\u5b9e\u9645\u957f\u5ea6\u4e0e\u884c\u6807\u51c6\u957f\u5ea6\u5dee\u503c\u7edd\u5bf9\u503c\u7684 \\(P\\) \u6b21\u65b9\uff0c\u800c\u4e00\u4e2a\u6392\u7248\u7684\u4e0d\u534f\u8c03\u5ea6\u4e3a\u6240\u6709\u884c\u4e0d\u534f\u8c03\u5ea6\u7684\u603b\u548c\u3002</p> <p>\u5c0f G \u6700\u8fd1\u53c8\u4f5c\u4e86\u51e0\u9996\u8bd7\uff0c\u73b0\u5728\u8bf7\u4f60\u5bf9\u8fd9\u9996\u8bd7\u8fdb\u884c\u6392\u7248\uff0c\u4f7f\u5f97\u6392\u7248\u540e\u7684\u8bd7\u5c3d\u91cf\u534f\u8c03\uff08\u5373\u4e0d\u534f\u8c03\u5ea6\u5c3d\u91cf\u5c0f\uff09\uff0c\u5e76\u628a\u6392\u7248\u7684\u7ed3\u679c\u544a\u8bc9\u4ed6\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6574\u6570 \\(T\\)\uff0c\u8868\u793a\u8bd7\u7684\u6570\u91cf\u3002</p> <p>\u63a5\u4e0b\u6765\u4e3a \\(T\\) \u9996\u8bd7\uff0c\u8fd9\u91cc\u4e00\u9996\u8bd7\u5373\u4e3a\u4e00\u7ec4\u6d4b\u8bd5\u6570\u636e\u3002\u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\u4e2d\u7684\u7b2c\u4e00\u884c\u4e3a\u4e09\u4e2a\u7531\u7a7a\u683c\u5206\u9694\u7684\u6b63\u6574\u6570 \\(N,L,P\\)\uff0c\u5176\u4e2d\uff1a\\(N\\) \u8868\u793a\u8fd9\u9996\u8bd7\u53e5\u5b50\u7684\u6570\u76ee\uff0c\\(L\\) \u8868\u793a\u8fd9\u9996\u8bd7\u7684\u884c\u6807\u51c6\u957f\u5ea6\uff0c\\(P\\) \u7684\u542b\u4e49\u89c1\u95ee\u9898\u63cf\u8ff0\u3002</p> <p>\u4ece\u7b2c\u4e8c\u884c\u5f00\u59cb\uff0c\u6bcf\u884c\u4e3a\u4e00\u4e2a\u53e5\u5b50\uff0c\u53e5\u5b50\u7531\u82f1\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u6807\u70b9\u7b26\u53f7\u7b49\u7b26\u53f7\u7ec4\u6210\uff08ASCII \u7801 \\(33 \\sim 127\\)\uff0c\u4f46\u4e0d\u5305\u542b <code>-</code>\uff09\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e8e\u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u82e5\u6700\u5c0f\u7684\u4e0d\u534f\u8c03\u5ea6\u4e0d\u8d85\u8fc7 \\(10^{18}\\)\uff0c\u5219\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6570\uff0c\u8868\u793a\u4e0d\u534f\u8c03\u5ea6\u3002\u63a5\u4e0b\u6765\u82e5\u5e72\u884c\uff0c\u8868\u793a\u4f60\u6392\u7248\u4e4b\u540e\u7684\u8bd7\u3002\u6ce8\u610f\uff1a\u5728\u540c\u4e00\u884c\u7684\u76f8\u90bb\u4e24\u4e2a\u53e5\u5b50\u4e4b\u95f4\u9700\u8981\u7528\u4e00\u4e2a\u7a7a\u683c\u5206\u5f00\u3002</p> <p>\u5982\u679c\u6709\u591a\u4e2a\u53ef\u884c\u89e3\uff0c\u5b83\u4eec\u7684\u4e0d\u534f\u8c03\u5ea6\u90fd\u662f\u6700\u5c0f\u503c\uff0c\u5219\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u89e3\u5747\u53ef\u3002\u82e5\u6700\u5c0f\u7684\u4e0d\u534f\u8c03\u5ea6\u8d85\u8fc7 \\(10^{18}\\)\uff0c\u5219\u8f93\u51fa <code>Too hard to arrange</code>\u3002\u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\u7ed3\u675f\u540e\u8f93\u51fa <code>--------------------</code>\uff0c\u5171 20 \u4e2a <code>-</code>\uff0c<code>-</code> \u7684 ASCII \u7801\u4e3a 45\uff0c\u8bf7\u52ff\u8f93\u51fa\u591a\u4f59\u7684\u7a7a\u884c\u6216\u8005\u7a7a\u683c\u3002</p> <p>\u524d\u4e24\u7ec4\u8f93\u5165\u6570\u636e\u4e2d\u6bcf\u884c\u7684\u5b9e\u9645\u957f\u5ea6\u5747\u4e3a \\(6\\)\uff0c\u540e\u4e24\u7ec4\u8f93\u5165\u6570\u636e\u6bcf\u884c\u7684\u5b9e\u9645\u957f\u5ea6\u5747\u4e3a \\(4\\)\u3002\u4e00\u4e2a\u6392\u7248\u65b9\u6848\u4e2d\u6bcf\u884c\u76f8\u90bb\u4e24\u4e2a\u53e5\u5b50\u4e4b\u95f4\u7684\u7a7a\u683c\u4e5f\u7b97\u5728\u8fd9\u884c\u7684\u957f\u5ea6\u4e2d\uff08\u53ef\u53c2\u89c1\u6837\u4f8b\u4e2d\u7b2c\u4e8c\u7ec4\u6570\u636e\uff09\u3002\u6bcf\u884c\u672b\u5c3e\u6ca1\u6709\u7a7a\u683c\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%9B%9B%E8%BE%B9%E5%BD%A2%E4%B8%8D%E7%AD%89%E5%BC%8F%E4%BC%98%E5%8C%96/#_1","title":"\u601d\u8def","text":"<p>\u5f88\u663e\u7136\u7684 dp \u65b9\u7a0b\uff1a</p> <p>\\(f_i=\\min(f_j+|\\text{sum}_i-\\text{sum}_j+i-j-1-L|^P)\\)</p> <p>\u5176\u4e2d\\(\\text{sum}_x=\\sum_{i=1}^xa_i\\)\uff0c\u5373\u8fd9\u91cc\u4f7f\u7528\u524d\u7f00\u548c\u4f18\u5316\u3002a_i\u4e3a\u7b2ci\u4e2a\u53e5\u5b50\u7684\u957f\u5ea6\u3002\u90a3\u4e48\u600e\u4e48\u4f18\u5316\u5462\uff1f\u56e0\u4e3a\u6709\u4e00\u4e2aP\u6b21\u65b9\uff0c\u6570\u636e\u7ed3\u6784\u4f18\u5316\u662f\u6ca1\u529e\u6cd5\u4e86\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0|\\text{sum}_i-\\text{sum}_j+i-j-1-L|^P\u662f\u5b58\u5728\u51b3\u7b56\u5355\u8c03\u6027\u7684\u3002\u4e0b\u9762\u8003\u8651\u8bc1\u660e\uff1a</p> <p>\u5bf9\u4e8e(i,j)(k,m)\uff0c\u8bbei&lt;j,k&lt;m\uff0c\u4e14ii\uff0c\u5219\u6ee1\u8db3\u51b3\u7b56\u5355\u8c03\u6027\u3002 <p>\u8bc1\u660e\u5982\u4e0b</p> <p>www.luogu.com.cn</p> <p>\u4ee5\u4e0b\u662f\u8282\u9009</p> <p>\u6211\u4eec\u53ea\u9700\u8bc1\u660e\u51fd\u6570\\(G_j(i)=|\\text{sum}_i+i-(\\text{sum}_j+j)-(1+L)|^P\\)\u6ee1\u8db3\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\u3002</p> <p>\\(\\Leftrightarrow\\ G_j(i+1)+G_{j+1}(i)\\geq G_{j}(i)+G_{j+1}(i+1)\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(l, r, i) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(r, l, i) for (int i = r, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define int long long\n#define pii pair&lt;int, int&gt;\n\n#define lc(x) (x &lt;&lt; 1)\n#define rc(x) (x &lt;&lt; 1 | 1)\n#define ld long double\n\n#define rd read()\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int N = 2e5 + 15;\nconst int INF = 1e9 + 5;\nconst int MOD = 998244353;\n\nint n,L,P,s[N],q[N],k[N],pr[N];\nld f[N];\nchar str[N][33];\n\nld ksm(ld b){\n    ld a=1;\n    for(int k=P;k;k&gt;&gt;=1,b*=b)\n        if(k&amp;1)a*=b;\n    return a;\n}\nld Calc(int i,int j){return f[j]+ksm(abs(s[i]-s[j]-L));}\nint bound(int x,int y){\n    int l=x,r=n+1,m;\n    while(l&lt;r){\n        m=(l+r)&gt;&gt;1;\n        Calc(m,x)&gt;=Calc(m,y)?r=m:l=m+1;\n    }\n    return l;\n}\nsigned main(){\n    int T=rd,i,h,t;\n    while(T--){\n        n=rd;L=rd+1;P=rd;\n        for(i=1;i&lt;=n;++i){\n            if(scanf(\"%s\",str[i]));\n            s[i]=s[i-1]+strlen(str[i])+1;\n        }\n        for(q[i=h=t=1]=0;i&lt;=n;++i){\n            while(h&lt;t&amp;&amp;k[h]&lt;=i)++h;\n            f[i]=Calc(i,q[h]);pr[i]=q[h];\n            while(h&lt;t&amp;&amp;k[t-1]&gt;=bound(q[t],i))--t;\n            k[t]=bound(q[t],i);q[++t]=i;\n        }\n        if(f[n]&gt;1e18)puts(\"Too hard to arrange\");\n        else{\n            printf(\"%.0Lf\\n\",f[n]);\n            for(q[t=0]=i=n;i;q[++t]=i=pr[i]);\n            for(;t;--t){\n                for(i=q[t]+1;i&lt;q[t-1];++i)\n                    printf(\"%s \",str[i]);\n                puts(str[i]);\n            }\n        }\n        puts(\"--------------------\");\n    }\n    return 0;\n}\n</code></pre> <p>\u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a</p> \u6d4b\u8bd5\u70b9 \\(T\\) \\(N\\) \\(L\\) \\(P\\) \\(1\\) \\(\\le 10\\) \\(\\le18\\) \\(\\le 100\\) \\(\\le5\\) \\(2\\) \\(\\le 10\\) \\(\\le 2\\times 10^3\\) \\(\\le 6\\times 10^4\\) \\(\\le10\\) \\(3\\) \\(\\le 10\\) \\(\\le 2\\times 10^3\\) \\(\\le 6\\times 10^4\\) \\(\\le10\\) \\(4\\) \\(\\le 5\\) \\(\\le 10^5\\) \\(\\le 200\\) \\(\\le10\\) \\(5\\) \\(\\le 5\\) \\(\\le 10^5\\) \\(\\le 200\\) \\(\\le10\\) \\(6\\) \\(\\le 5\\) \\(\\le 10^5\\) \\(\\le 3\\times 10^6\\) \\(2\\) \\(7\\) \\(\\le 5\\) \\(\\le 10^5\\) \\(\\le 3\\times 10^6\\) \\(2\\) \\(8\\) \\(\\le 5\\) \\(\\le 10^5\\) \\(\\le 3\\times 10^6\\) \\(\\le10\\) \\(9\\) \\(\\le 5\\) \\(\\le 10^5\\) \\(\\le 3\\times 10^6\\) \\(\\le10\\) \\(10\\) \\(\\le 5\\) \\(\\le 10^5\\) \\(\\le 3\\times 10^6\\) \\(\\le10\\) <p>\u6240\u6709\u53e5\u5b50\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(30\\) \u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%9B%9B%E8%BE%B9%E5%BD%A2%E4%B8%8D%E7%AD%89%E5%BC%8F%E4%BC%98%E5%8C%96/#hnoi2008","title":"[HNOI2008] \u73a9\u5177\u88c5\u7bb1","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>P \u6559\u6388\u8981\u53bb\u770b\u5965\u8fd0\uff0c\u4f46\u662f\u4ed6\u820d\u4e0d\u4e0b\u4ed6\u7684\u73a9\u5177\uff0c\u4e8e\u662f\u4ed6\u51b3\u5b9a\u628a\u6240\u6709\u7684\u73a9\u5177\u8fd0\u5230\u5317\u4eac\u3002\u4ed6\u4f7f\u7528\u81ea\u5df1\u7684\u538b\u7f29\u5668\u8fdb\u884c\u538b\u7f29\uff0c\u5176\u53ef\u4ee5\u5c06\u4efb\u610f\u7269\u54c1\u53d8\u6210\u4e00\u5806\uff0c\u518d\u653e\u5230\u4e00\u79cd\u7279\u6b8a\u7684\u4e00\u7ef4\u5bb9\u5668\u4e2d\u3002</p> <p>P \u6559\u6388\u6709\u7f16\u53f7\u4e3a \\(1 \\cdots n\\) \u7684 \\(n\\) \u4ef6\u73a9\u5177\uff0c\u7b2c \\(i\\) \u4ef6\u73a9\u5177\u7ecf\u8fc7\u538b\u7f29\u540e\u7684\u4e00\u7ef4\u957f\u5ea6\u4e3a \\(C_i\\)\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u6574\u7406\uff0cP\u6559\u6388\u8981\u6c42\uff1a</p> <ul> <li> <p>\u5728\u4e00\u4e2a\u4e00\u7ef4\u5bb9\u5668\u4e2d\u7684\u73a9\u5177\u7f16\u53f7\u662f\u8fde\u7eed\u7684\u3002</p> </li> <li> <p>\u540c\u65f6\u5982\u679c\u4e00\u4e2a\u4e00\u7ef4\u5bb9\u5668\u4e2d\u6709\u591a\u4e2a\u73a9\u5177\uff0c\u90a3\u4e48\u4e24\u4ef6\u73a9\u5177\u4e4b\u95f4\u8981\u52a0\u5165\u4e00\u4e2a\u5355\u4f4d\u957f\u5ea6\u7684\u586b\u5145\u7269\u3002\u5f62\u5f0f\u5730\u8bf4\uff0c\u5982\u679c\u5c06\u7b2c \\(i\\) \u4ef6\u73a9\u5177\u5230\u7b2c \\(j\\) \u4e2a\u73a9\u5177\u653e\u5230\u4e00\u4e2a\u5bb9\u5668\u4e2d\uff0c\u90a3\u4e48\u5bb9\u5668\u7684\u957f\u5ea6\u5c06\u4e3a \\(x=j-i+\\sum\\limits_{k=i}^{j}C_k\\)\u3002</p> </li> </ul> <p>\u5236\u4f5c\u5bb9\u5668\u7684\u8d39\u7528\u4e0e\u5bb9\u5668\u7684\u957f\u5ea6\u6709\u5173\uff0c\u6839\u636e\u6559\u6388\u7814\u7a76\uff0c\u5982\u679c\u5bb9\u5668\u957f\u5ea6\u4e3a \\(x\\)\uff0c\u5176\u5236\u4f5c\u8d39\u7528\u4e3a \\((x-L)^2\\)\u3002\u5176\u4e2d \\(L\\) \u662f\u4e00\u4e2a\u5e38\u91cf\u3002P \u6559\u6388\u4e0d\u5173\u5fc3\u5bb9\u5668\u7684\u6570\u76ee\uff0c\u4ed6\u53ef\u4ee5\u5236\u4f5c\u51fa\u4efb\u610f\u957f\u5ea6\u7684\u5bb9\u5668\uff0c\u751a\u81f3\u8d85\u8fc7 \\(L\\)\u3002\u4f46\u4ed6\u5e0c\u671b\u6240\u6709\u5bb9\u5668\u7684\u603b\u8d39\u7528\u6700\u5c0f\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6574\u6570\uff0c\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u4ee3\u8868 \\(n\\) \u548c \\(L\\)\u3002</p> <p>\u7b2c \\(2\\) \u5230 \u7b2c \\((n + 1)\\) \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u7b2c \\((i + 1)\\) \u884c\u7684\u6574\u6570\u4ee3\u8868\u7b2c \\(i\\) \u4ef6\u73a9\u5177\u7684\u957f\u5ea6 \\(C_i\\)\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u4ee3\u8868\u6240\u6709\u5bb9\u5668\u7684\u603b\u8d39\u7528\u6700\u5c0f\u662f\u591a\u5c11\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\\(1 \\leq n \\leq 5 \\times 10^4\\)\uff0c\\(1 \\leq L \\leq 10^7\\)\uff0c\\(1 \\leq C_i \\leq 10^7\\)\u3002</p> <p>std</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(l, r, i) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(r, l, i) for (int i = r, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define int long long\n#define pii pair&lt;int, int&gt;\n\n#define lc(x) (x &lt;&lt; 1)\n#define rc(x) (x &lt;&lt; 1 | 1)\n\n#define X(j) S[j]\n#define Y(j) (dp[j]+(S[j]+L)*(S[j]+L))\n\n#define rd read()\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int N = 2e5 + 15;\nconst int INF = 1e9 + 5;\nconst int MOD = 1 &lt;&lt; 30;\n\nint i,j,n,L,h=1,t=0,Q[N],S[N],dp[N];\n\ninline int min(int a,int b){return a&lt;b?a:b;}\ninline long double slope(int i,int j){return (long double)(Y(j)-Y(i))/(X(j)-X(i));}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;L);++L; \n    for(i=1;i&lt;=n;S[i]+=S[i-1]+1,++i)scanf(\"%lld\",&amp;S[i]);\n    Q[++t]=0;\n    for(i=1;i&lt;=n;++i){\n        while(h&lt;t&amp;&amp;slope(Q[h],Q[h+1])&lt;=2*S[i])++h;\n        dp[i]=dp[j=Q[h]]+(S[i]-S[j]-L)*(S[i]-S[j]-L);\n        while(h&lt;t&amp;&amp;slope(Q[t-1],Q[t])&gt;=slope(Q[t-1],i))--t;\n        Q[++t]=i;\n    }\n    printf(\"%lld\",dp[n]);\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%9B%9B%E8%BE%B9%E5%BD%A2%E4%B8%8D%E7%AD%89%E5%BC%8F%E4%BC%98%E5%8C%96/#ioi2000","title":"[IOI2000] \u90ae\u5c40","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u9ad8\u901f\u516c\u8def\u65c1\u8fb9\u6709\u4e00\u4e9b\u6751\u5e84\u3002\u9ad8\u901f\u516c\u8def\u8868\u793a\u4e3a\u6574\u6570\u8f74\uff0c\u6bcf\u4e2a\u6751\u5e84\u7684\u4f4d\u7f6e\u7528\u5355\u4e2a\u6574\u6570\u5750\u6807\u6807\u8bc6\u3002\u6ca1\u6709\u4e24\u4e2a\u5728\u540c\u6837\u5730\u65b9\u7684\u6751\u5e84\u3002\u4e24\u4e2a\u4f4d\u7f6e\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u5176\u6574\u6570\u5750\u6807\u5dee\u7684\u7edd\u5bf9\u503c\u3002</p> <p>\u90ae\u5c40\u5c06\u5efa\u5728\u4e00\u4e9b\uff0c\u4f46\u4e0d\u4e00\u5b9a\u662f\u6240\u6709\u7684\u6751\u5e84\u4e2d\u3002\u4e3a\u4e86\u5efa\u7acb\u90ae\u5c40\uff0c\u5e94\u9009\u62e9\u4ed6\u4eec\u5efa\u9020\u7684\u4f4d\u7f6e\uff0c\u4f7f\u6bcf\u4e2a\u6751\u5e84\u4e0e\u5176\u6700\u8fd1\u7684\u90ae\u5c40\u4e4b\u95f4\u7684\u8ddd\u79bb\u603b\u548c\u6700\u5c0f\u3002</p> <p>\u4f60\u8981\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5df2\u77e5\u6751\u5e84\u7684\u4f4d\u7f6e\u548c\u90ae\u5c40\u7684\u6570\u91cf\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u6751\u5e84\u548c\u6700\u8fd1\u7684\u90ae\u5c40\u4e4b\u95f4\u6240\u6709\u8ddd\u79bb\u7684\u6700\u5c0f\u53ef\u80fd\u7684\u603b\u548c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570\uff1a\u7b2c\u4e00\u4e2a\u662f\u6751\u5e84 \\(V\\) \u7684\u6570\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u662f\u90ae\u5c40\u7684\u6570\u91cf \\(P\\)\u3002</p> <p>\u7b2c\u4e8c\u884c\u5305\u542b \\(V\\) \u4e2a\u6574\u6570\u3002\u8fd9\u4e9b\u6574\u6570\u662f\u6751\u5e84\u7684\u4f4d\u7f6e\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570\\(S\\)\uff0c\u5b83\u662f\u6bcf\u4e2a\u6751\u5e84\u4e0e\u5176\u6700\u8fd1\u7684\u90ae\u5c40\u4e4b\u95f4\u7684\u6240\u6709\u8ddd\u79bb\u7684\u603b\u548c\u3002</p> <p>\u5bf9\u4e8e \\(40\\%\\) \u7684\u6570\u636e\uff0c\\(V \\leq 300\\)\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\leq P \\leq 300\\)\uff0c\\(P \\leq V  \\leq 3000\\)\uff0c$1 \\leq $ \u6751\u5e84\u4f4d\u7f6e \\(\\leq 10000\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E5%9B%9B%E8%BE%B9%E5%BD%A2%E4%B8%8D%E7%AD%89%E5%BC%8F%E4%BC%98%E5%8C%96/#_2","title":"\u601d\u8def","text":"<p>\u63d0\u524d\u9884\u5904\u7406\u51faw\uff0cw\u662f\u53ef\u4ee5O(V2)\u9012\u63a8\u51fa\u6765\u7684\uff0c\u6839\u636e\u653e\u7f6e\u4e00\u4e2a\u90ae\u5c40\uff0c\u90ae\u5c40\u4f4d\u7f6e\u603b\u662f\u5728\u4e2d\u4f4d\u6570\u5904\uff0c\u4fbf\u53ef\u63a8\u5f97\u3002</p> <p>\u7136\u540e\u56e0\u4e3adp\u6ee1\u8db3\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\uff0c\u6240\u4ee5\u5bf9\u4e8edp[i][j]\u7684\u6700\u4f18\u51b3\u7b56d[i][j]\uff0cd[i][j\u22121]\u2264d[i][j]\u2264d[i+1][j]</p> <p>\u4e8e\u662f\u72b6\u6001\u8f6c\u79fbdp[i][j]\u65f6\uff0c\u4ece[d[i][j\u22121],d[i+1][j]]\u4e2d\u627e\u6700\u4f18\u51b3\u7b56\u3002</p> <pre><code>/*\nCB Ntsc111\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n// #define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define err cerr&lt;&lt;\"Error\"\n#define rd read()\n// #define nl putc('\\n')\n#define ot write\n#define nl putchar('\\n')\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int INF = 1e9;\nconst int N = 3e3+5;\nconst int M = 1e6+5;\nconst int S=1e6+5;\nconst int maxlog = 10;\n\nint v,p,pos[N],dp[N][N],w[N][N],d[N][N];\n\nvoid init() {\n    for(int l=1;l&lt;=v;l++) {\n        w[l][l]=0;\n        for(int r=l+1;r&lt;=v;r++) {\n            w[l][r]=w[l][r-1]+pos[r]-pos[l+r&gt;&gt;1];\n        }\n    }\n}\n\nint main() {\n  v=rd,p=rd;\n    for(int i=1;i&lt;=v;i++) pos[i]=rd;\n\n    init();\n    sort(pos+1,pos+v+1);\n    memset(dp,0x3f,sizeof(dp));\n    dp[0][0]=0;\n    for(int j=1;j&lt;=p;j++) {\n        d[v+1][j]=v;\n        for(int i=v;i&gt;=1;i--) {\n            int minn=INF,minid;\n            for(int k=d[i][j-1];k&lt;=d[i+1][j];k++) {\n                if(dp[k][j-1]+w[k+1][i]&lt;minn) {\n                    minn=dp[k][j-1]+w[k+1][i];\n                    minid=k;\n                }\n            }\n            dp[i][j]=minn;\n            d[i][j]=minid;\n        }\n    }\n\n    cout&lt;&lt;dp[v][p]&lt;&lt;endl;\n\n    return 0;\n}\n\n/*\n4\n()()\n1 -1 5 11\n\n4\n()()\n1 6 5 11\n*/\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%98%E5%8C%96/","title":"\u6570\u636e\u7ed3\u6784\u4f18\u5316","text":"<p>\u6570\u636e\u7ed3\u6784\u4f18\u5316</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%98%E5%8C%96/#_1","title":"\u6570\u636e\u7ed3\u6784\u4f18\u5316","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%98%E5%8C%96/#noi2020","title":"[NOI2020] \u547d\u8fd0","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u63d0\u793a\uff1a\u6211\u4eec\u5728\u9898\u76ee\u63cf\u8ff0\u7684\u6700\u540e\u4e00\u6bb5\u63d0\u4f9b\u4e86\u4e00\u4efd\u7b80\u8981\u7684\u3001\u5f62\u5f0f\u5316\u63cf\u8ff0\u7684\u9898\u9762\u3002</p> <p>\u5728\u9065\u8fdc\u7684\u672a\u6765\uff0c\u7269\u7406\u5b66\u5bb6\u7ec8\u4e8e\u53d1\u73b0\u4e86\u65f6\u95f4\u548c\u56e0\u679c\u7684\u81ea\u7136\u89c4\u5f8b\u3002\u5373\u4f7f\u5728\u4e00\u4e2a\u4eba\u51fa\u751f\u524d\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7406\u8bba\u5206\u6790\u77e5\u6653\u4ed6\u6216\u5979\u4eba\u751f\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u6362\u8a00\u4e4b\uff0c\u7269\u7406\u5b66\u5141\u8bb8\u6211\u4eec\u4ece\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u201c\u9884\u8a00\u201d\u4e00\u4e2a\u4eba\u7684\u201c\u547d\u8fd0\u201d\u3002</p> <p>\u7b80\u5355\u6765\u8bf4\uff0c\u4e00\u4e2a\u4eba\u7684\u547d\u8fd0\u662f\u4e00\u68f5\u7531\u65f6\u95f4\u70b9\u6784\u6210\u7684\u6709\u6839\u6811 \\(T\\)\uff1a\u6811\u7684\u6839\u7ed3\u70b9\u4ee3\u8868\u7740\u51fa\u751f\uff0c\u800c\u53f6\u7ed3\u70b9\u4ee3\u8868\u7740\u6b7b\u4ea1\u3002\u6bcf\u4e2a\u975e\u53f6\u7ed3\u70b9 \\(u\\) \u90fd\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5b69\u5b50 \\(v_1, v_2,\\dots , v_{c_u}\\)\uff0c\u8868\u793a\u8fd9\u4e2a\u4eba\u5728 \\(u\\) \u6240\u4ee3\u8868\u7684\u65f6\u95f4\u70b9\u505a\u51fa\u7684 \\(c_u\\) \u4e2a\u4e0d\u540c\u7684\u9009\u62e9\u53ef\u4ee5\u5bfc\u5411\u7684\u4e0d\u540c\u7684\u53ef\u80fd\u6027\u3002\u5f62\u5f0f\u5316\u7684\uff0c\u4e00\u4e2a\u9009\u62e9\u5c31\u662f\u6811\u4e0a\u7684\u4e00\u6761\u8fb9 \\((u, v_i)\\)\uff0c\u5176\u4e2d \\(u\\) \u662f \\(v_i\\) \u7684\u7236\u7ed3\u70b9\u3002</p> <p>\u4e00\u4e2a\u4eba\u7684\u4e00\u751f\u662f\u4ece\u51fa\u751f\uff08\u5373\u6839\u7ed3\u70b9\uff09\u5230\u6b7b\u4ea1\uff08\u5373\u67d0\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff09\u7684\u4e00\u6761\u4e0d\u7ecf\u8fc7\u91cd\u590d\u7ed3\u70b9\u7684\u8def\u5f84\uff0c\u8fd9\u6761\u8def\u5f84\u4e0a\u4efb\u4f55\u4e00\u4e2a\u5305\u542b\u81f3\u5c11\u4e00\u6761\u8fb9\u7684\u5b50\u8def\u5f84\u90fd\u662f\u8fd9\u4e2a\u4eba\u7684\u4e00\u6bb5**\u4eba\u751f\u7ecf\u5386**\uff0c\u800c\u4ed6\u6216\u5979\u4ee5\u6240\u6709\u53ef\u80fd\u7684\u65b9\u5f0f\u5ea6\u8fc7\u4e00\u751f\uff0c\u4ece\u800c\u62e5\u6709\u7684\u6240\u6709\u4eba\u751f\u7ecf\u5386\uff0c\u90fd\u88ab\u79f0\u4e3a**\u6f5c\u5728\u7684\u4eba\u751f\u7ecf\u5386**\u3002\u6362\u8a00\u4e4b\uff0c\u6240\u6709\u6f5c\u5728\u7684\u4eba\u751f\u7ecf\u5386\u5c31\u662f\u6240\u6709 \\(u\\) \u5230 \\(v\\) \u7684\u8def\u5f84\uff0c\u6ee1\u8db3 \\(u, v \\in T\\)\uff0c\\(u \\neq v\\)\uff0c\u5e76\u4e14 \\(u\\) \u662f \\(v\\) \u7684\u7956\u5148\u3002\u5728\u6570\u5b66\u4e0a\uff0c\u8fd9\u6837\u4e00\u4e2a\u6f5c\u5728\u7684\u4eba\u751f\u7ecf\u5386\u88ab\u8bb0\u4f5c\u6709\u5e8f\u5bf9 \\((u, v)\\)\uff0c\u6811 \\(T\\) \u6240\u6709\u6f5c\u5728\u7684\u4eba\u751f\u7ecf\u5386\u7684\u96c6\u5408\u8bb0\u4f5c \\(\\mathcal P_T\\)\u3002</p> <p>\u7269\u7406\u7406\u8bba\u4e0d\u4ec5\u5141\u8bb8\u6211\u4eec\u89c2\u6d4b\u4ee3\u8868\u547d\u8fd0\u7684\u6811\uff0c\u8fd8\u80fd\u8ba9\u6211\u4eec\u5206\u6790\u4e00\u4e9b\u6f5c\u5728\u7684\u4eba\u751f\u7ecf\u5386\u662f\u5426\u662f\u201c\u91cd\u8981\u201d\u7684\u3002\u4e00\u4e2a\u4eba\u6240\u4f5c\u51fa\u7684\u6bcf\u4e00\u4e2a\u9009\u62e9\u2014\u2014\u5373\u6811\u4e0a\u7684\u6bcf\u4e00\u6761\u8fb9\u2014\u2014\u90fd\u53ef\u80fd\u662f**\u91cd\u8981**\u6216**\u4e0d\u91cd\u8981**\u7684\u3002\u4e00\u6bb5\u6f5c\u5728\u7684\u4eba\u751f\u7ecf\u5386\u88ab\u79f0\u4e3a\u91cd\u8981\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u5bf9\u5e94\u7684\u8def\u5f84\u4e0a\u5b58\u5728\u4e00\u6761\u8fb9\u662f\u91cd\u8981\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u89c2\u6d4b\u5230\u4e00\u4e9b\u6f5c\u5728\u7684\u4eba\u751f\u7ecf\u5386\u662f\u91cd\u8981\u7684\uff1a\u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u6d4b\u5f97\u5230\u4e00\u4e2a\u96c6\u5408 \\(\\mathcal Q \\subseteq \\mathcal P_T\\)\uff0c\u6ee1\u8db3\u5176\u4e2d\u7684\u6240\u6709\u6f5c\u5728\u7684\u4eba\u751f\u7ecf\u5386 \\((u, v) \\in \\mathcal Q\\) \u90fd\u662f\u91cd\u8981\u7684\u3002</p> <p>\u6811 \\(T\\) \u7684\u5f62\u6001\u65e9\u5df2\u88ab\u8ba1\u7b97\u786e\u5b9a\uff0c\u96c6\u5408 \\(\\mathcal Q\\) \u4e5f\u65e9\u5df2\u88ab\u89c2\u6d4b\u5f97\u5230\uff0c\u4e00\u4e2a\u4eba\u547d\u8fd0\u7684\u4e0d\u786e\u5b9a\u6027\u5df2\u7ecf\u5927\u5927\u964d\u4f4e\u4e86\u3002\u4f46\u4e0d\u786e\u5b9a\u6027\u4ecd\u7136\u662f\u5de8\u5927\u7684\u2014\u2014\u6765\u8ba1\u7b97\u4e00\u4e0b\u5427\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6811 \\(T\\) \u548c\u96c6\u5408 \\(\\mathcal Q\\)\uff0c\u5b58\u5728\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6848\u786e\u5b9a\u6bcf\u6761\u8fb9\u662f\u5426\u662f\u91cd\u8981\u7684\uff0c\u4f7f\u4e4b\u6ee1\u8db3\u6240\u89c2\u6d4b\u5230\u7684 \\(\\mathcal Q\\) \u6240\u5bf9\u5e94\u7684\u9650\u5236\uff1a\u5373\u5bf9\u4e8e\u4efb\u610f \\((u, v) \\in \\mathcal Q\\)\uff0c\u90fd\u5b58\u5728\u4e00\u6761 \\(u\\) \u5230 \\(v\\) \u8def\u5f84\u4e0a\u7684\u8fb9\u88ab\u786e\u5b9a\u4e3a\u91cd\u8981\u7684\u3002</p> <p>\u5f62\u5f0f\u5316\u7684\uff1a\u7ed9\u5b9a\u4e00\u68f5\u6811 \\(T = (V, E)\\) \u548c\u70b9\u5bf9\u96c6\u5408 \\(\\mathcal Q \\subseteq V \\times V\\) \uff0c\u6ee1\u8db3\u5bf9\u4e8e\u6240\u6709 \\((u, v) \\in \\mathcal Q\\)\uff0c\u90fd\u6709 \\(u \\neq v\\)\uff0c\u5e76\u4e14 \\(u\\) \u662f \\(v\\) \u5728\u6811 \\(T\\) \u4e0a\u7684\u7956\u5148\u3002\u5176\u4e2d \\(V\\) \u548c \\(E\\) \u5206\u522b\u4ee3\u8868\u6811 \\(T\\) \u7684\u7ed3\u70b9\u96c6\u548c\u8fb9\u96c6\u3002\u6c42\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u51fd\u6570 \\(f\\) : \\(E \\to \\{0, 1\\}\\)\uff08\u5c06\u6bcf\u6761\u8fb9 \\(e \\in E\\) \u7684 \\(f(e)\\) \u503c\u7f6e\u4e3a \\(0\\) \u6216 \\(1\\)\uff09\uff0c\u6ee1\u8db3\u5bf9\u4e8e\u4efb\u4f55 \\((u, v) \\in \\mathcal Q\\)\uff0c\u90fd\u5b58\u5728 \\(u\\) \u5230 \\(v\\) \u8def\u5f84\u4e0a\u7684\u4e00\u6761\u8fb9 \\(e\\) \u4f7f\u5f97 \\(f(e) = 1\\)\u3002\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u975e\u5e38\u5927\uff0c\u4f60\u53ea\u9700\u8981\u8f93\u51fa\u7ed3\u679c\u5bf9 \\(998,244,353\\)\uff08\u4e00\u4e2a\u7d20\u6570\uff09\u53d6\u6a21\u7684\u7ed3\u679c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u4ece\u6587\u4ef6 destiny.in \u4e2d\u8bfb\u5165\u6570\u636e\u3002</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 \\(n\\)\uff0c\u8868\u793a\u6811 \\(T\\) \u7684\u5927\u5c0f\uff0c\u6811\u4e0a\u7ed3\u70b9\u4ece \\(1\\) \u5230 \\(n\\) \u7f16\u53f7\uff0c\\(1\\) \u53f7\u7ed3\u70b9\u4e3a\u6839\u7ed3\u70b9\uff1b</p> <p>\u63a5\u4e0b\u6765 \\(n - 1\\) \u884c\u6bcf\u884c\u5305\u542b\u7a7a\u683c\u9694\u5f00\u7684\u4e24\u4e2a\u6570 \\(x_i, y_i\\)\uff0c\u6ee1\u8db3 \\(1 \\leq x_i, y_i \\leq n\\)\uff0c\u8868\u793a\u6811\u4e0a\u7684\u7ed3\u70b9 \\(x_i\\) \u548c \\(y_i\\) \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9\uff0c\u4f46\u5e76\u4e0d\u4fdd\u8bc1\u8fd9\u6761\u8fb9\u7684\u65b9\u5411\uff1b</p> <p>\u63a5\u4e0b\u6765\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 \\(m\\)\uff0c\u8868\u793a\u6240\u89c2\u6d4b\u5f97\u5230\u4fe1\u606f\u7684\u6761\u6570\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\u6bcf\u884c\u5305\u542b\u7a7a\u683c\u9694\u5f00\u7684\u4e24\u4e2a\u6570 \\(u_i, v_i\\)\uff0c\u8868\u793a \\((u_i, v_i) \\in \\mathcal Q\\)\u3002\u8bf7\u6ce8\u610f\uff1a\u8f93\u5165\u6570\u636e\u53ef\u80fd\u5305\u542b\u91cd\u590d\u7684\u4fe1\u606f\uff0c\u6362\u8a00\u4e4b\u53ef\u80fd\u5b58\u5728 \\(i \\neq j\\)\uff0c\u6ee1\u8db3 \\(u_i = u_j\\) \u4e14 \\(v_i = v_j\\)\u3002</p> <p>\u8f93\u5165\u6570\u636e\u89c4\u6a21\u548c\u9650\u5236\u53c2\u89c1\u672c\u9898\u672b\u5c3e\u7684\u8868\u683c\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u5230\u6587\u4ef6 destiny.out \u4e2d\u3002</p> <p>\u8f93\u51fa\u4ec5\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u65b9\u6848\u6570\u5bf9 \\(998, 244, 353\\) \u53d6\u6a21\u7684\u7ed3\u679c\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%98%E5%8C%96/#1","title":"\u6837\u4f8b 1 \u89e3\u91ca","text":"<p>\u5171\u6709 \\(16\\) \u79cd\u65b9\u6848\uff0c\u5176\u4e2d\u4e0d\u6ee1\u8db3\u9898\u610f\u7684\u65b9\u6848\u6709\u4ee5\u4e0b \\(6\\) \u79cd\uff1a</p> <ul> <li> <p>\\((1, 2),(2, 3),(3, 5)\\) \u786e\u5b9a\u4e3a\u4e0d\u91cd\u8981\uff0c\\((3, 4)\\) \u786e\u5b9a\u4e3a\u91cd\u8981\uff1a\u96c6\u5408 \\(\\mathcal Q\\) \u4e2d\u6ca1\u6709\u9650\u5236\u88ab\u6ee1\u8db3\u3002</p> </li> <li> <p>\\((1, 2),(2, 3),(3, 4),(3, 5)\\) \u786e\u5b9a\u4e3a\u4e0d\u91cd\u8981\uff1a\u96c6\u5408 \\(\\mathcal Q\\) \u4e2d\u6ca1\u6709\u9650\u5236\u88ab\u6ee1\u8db3\u3002</p> </li> <li> <p>\\((1, 2),(2, 3)\\) \u786e\u5b9a\u4e3a\u4e0d\u91cd\u8981\uff0c\\((3, 4),(3, 5)\\) \u786e\u5b9a\u4e3a\u91cd\u8981\uff1a\u96c6\u5408 \\(\\mathcal Q\\) \u4e2d \\((1, 3)\\) \u6ca1\u88ab\u6ee1\u8db3\u3002</p> </li> <li> <p>\\((1, 2),(2, 3),(3, 4)\\) \u786e\u5b9a\u4e3a\u4e0d\u91cd\u8981\uff0c\\((3, 5)\\) \u786e\u5b9a\u4e3a\u91cd\u8981\uff1a\u96c6\u5408 \\(\\mathcal Q\\) \u4e2d \\((1, 3)\\) \u6ca1\u88ab\u6ee1\u8db3\u3002</p> </li> <li> <p>\\((2, 3),(3, 5)\\) \u786e\u5b9a\u4e3a\u4e0d\u91cd\u8981\uff0c\\((1, 2),(3, 4)\\) \u786e\u5b9a\u4e3a\u91cd\u8981\uff1a\u96c6\u5408 \\(\\mathcal Q\\) \u4e2d \\((2, 5)\\) \u6ca1\u88ab\u6ee1\u8db3\u3002</p> </li> <li> <p>\\((2, 3),(3, 4),(3, 5)\\) \u786e\u5b9a\u4e3a\u4e0d\u91cd\u8981\uff0c\\((1, 2)\\) \u786e\u5b9a\u4e3a\u91cd\u8981\uff1a\u96c6\u5408 \\(\\mathcal Q\\) \u4e2d \\((2, 5)\\) \u6ca1\u88ab\u6ee1\u8db3\u3002</p> </li> <li> <p>\u5176\u4ed6\u65b9\u6848\u4e0b\uff0c\u96c6\u5408 \\(\\mathcal Q\\) \u4e2d\u7684\u9650\u5236\u90fd\u88ab\u6ee1\u8db3\u4e86\u3002</p> </li> </ul>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%98%E5%8C%96/#3","title":"\u6837\u4f8b 3","text":"<p>\u89c1\u9009\u624b\u76ee\u5f55\u4e0b\u7684 destiny/destiny3.in \u4e0e destiny/destiny3.ans\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%98%E5%8C%96/#4","title":"\u6837\u4f8b 4","text":"<p>\u89c1\u9009\u624b\u76ee\u5f55\u4e0b\u7684 destiny/destiny4.in \u4e0e destiny/destiny4.ans\u3002</p> \u6d4b\u8bd5\u70b9\u7f16\u53f7 \\(n\\) \\(m\\) \\(T\\) \u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811 \\(1\\sim 4\\) \\(\\le 10\\) \\(\\le 10\\) \u5426 \\(5\\) \\(\\le 500\\) \\(\\le 15\\) \u5426 \\(6\\) \\(\\le 10^4\\) \\(\\le 10\\) \u5426 \\(7\\) \\(\\le 10^5\\) \\(\\le 16\\) \u5426 \\(8\\) \\(\\le 5\\times 10^5\\) \\(\\le 16\\) \u5426 \\(9\\) \\(\\le 10^5\\) \\(\\le 22\\) \u5426 \\(10\\) \\(\\le 5\\times 10^5\\) \\(\\le 22\\) \u5426 \\(11\\) \\(\\le 600\\) \\(\\le 600\\) \u5426 \\(12\\) \\(\\le 10^3\\) \\(\\le 10^3\\) \u5426 \\(13\\sim 14\\) \\(\\le 2\\times 10^3\\) \\(\\le 5\\times 10^5\\) \u5426 \\(15\\sim 16\\) \\(\\le 5\\times 10^5\\) \\(\\le 2\\times 10^3\\) \u5426 \\(17\\sim 18\\) \\(\\le 10^5\\) \\(\\le 10^5\\) \u662f \\(19\\) \\(\\le 5\\times 10^4\\) \\(\\le 10^5\\) \u5426 \\(20\\) \\(\\le 8\\times 10^4\\) \\(\\le 10^5\\) \u5426 \\(21\\sim 22\\) \\(\\le 10^5\\) \\(\\le 5\\times 10^5\\) \u5426 \\(23\\sim 25\\) \\(\\le 5\\times 10^5\\) \\(\\le 5\\times 10^5\\) \u5426"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%98%E5%8C%96/#_2","title":"\u6d4b\u8bd5\u70b9\u7ea6\u675f","text":"<p>\u5168\u90e8\u6570\u636e\u6ee1\u8db3\uff1a\\(n \\leq 5 \\times 10^5\\)\uff0c\\(m \\leq 5 \\times 10^5\\)\u3002\u8f93\u5165\u6784\u6210\u4e00\u68f5\u6811\uff0c\u5e76\u4e14\u5bf9\u4e8e \\(1 \\leq i \\leq m\\)\uff0c\\(u_i\\) \u59cb\u7ec8\u4e3a \\(v_i\\) \u7684\u7956\u5148\u7ed3\u70b9\u3002</p> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u5728\u672c\u9898\u4e2d\uff0c\u6bcf\u4e2a\u975e\u53f6\u7ed3\u70b9\u90fd\u6709\u5de6\u53f3\u5b50\u7ed3\u70b9\uff0c\u4e14\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u6df1\u5ea6\u76f8\u540c\u7684\u6811\u79f0\u4e3a\u6ee1\u4e8c\u53c9\u6811\uff1b\u5c06\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7684\u7ed3\u70b9\u6309\u7167\u4ece\u4e0a\u5230\u4e0b\u3001\u4ece\u5de6\u5411\u53f3\u7684\u987a\u5e8f\u7f16\u53f7\uff0c\u7f16\u53f7\u6700\u5c0f\u7684\u82e5\u5e72\u4e2a\u7ed3\u70b9\u5f62\u6210\u7684\u6811\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%98%E5%8C%96/#noi1998","title":"[NOI1998] \u514d\u8d39\u7684\u9985\u997c","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>SERKOI \u6700\u65b0\u63a8\u51fa\u4e86\u4e00\u79cd\u53eb\u505a\u201c\u514d\u8d39\u9985\u997c\u201d\u7684\u6e38\u620f\uff1a\u6e38\u620f\u5728\u4e00\u4e2a\u821e\u53f0\u4e0a\u8fdb\u884c\u3002\u821e\u53f0\u7684\u5bbd\u5ea6\u4e3a \\(w\\) \u683c\uff08\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u7528 \\(1\\) \u5230 \\(w\\) \u7f16\u53f7\uff09\uff0c\u6e38\u620f\u8005\u5360\u4e00\u683c\u3002\u5f00\u59cb\u65f6\u6e38\u620f\u8005\u53ef\u4ee5\u7ad9\u5728\u821e\u53f0\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c\u624b\u91cc\u62ff\u7740\u4e00\u4e2a\u6258\u76d8\u3002\u4e0b\u56fe\u4e3a\u5929\u5e55\u7684\u9ad8\u5ea6\u4e3a \\(4\\) \u683c\u65f6\u67d0\u4e00\u4e2a\u65f6\u523b\u6e38\u620f\u8005\u63a5\u9985\u997c\u7684\u60c5\u666f\u3002</p> <p></p> <p>\u6e38\u620f\u5f00\u59cb\u540e\uff0c\u4ece\u821e\u53f0\u5929\u5e55\u9876\u7aef\u7684\u683c\u5b50\u4e2d\u4e0d\u65ad\u51fa\u73b0\u9985\u997c\u5e76\u5782\u76f4\u4e0b\u843d\u3002\u6e38\u620f\u8005\u5de6\u53f3\u79fb\u52a8\u53bb\u63a5\u9985\u997c\u3002\u6e38\u620f\u8005\u6bcf\u79d2\u53ef\u4ee5\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u4e00\u683c\u6216\u4e24\u683c\uff0c\u4e5f\u53ef\u4ee5\u7ad9\u5728\u539f\u5730\u4e0d\u52a8\u3002</p> <p>\u5f53\u9985\u997c\u5728\u67d0\u4e00\u65f6\u523b\u6070\u597d\u5230\u8fbe\u6e38\u620f\u8005\u6240\u5728\u7684\u683c\u5b50\u4e2d\uff0c\u6e38\u620f\u8005\u5c31\u6536\u96c6\u5230\u4e86\u8fd9\u5757\u9985\u997c\u3002\u5f53\u9985\u997c\u843d\u5728\u4e00\u4e2a\u6e38\u620f\u8005\u4e0d\u5728\u7684\u683c\u5b50\u91cc\u65f6\u8be5\u9985\u997c\u5c31\u6d88\u5931\u3002</p> <p>\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5e2e\u52a9\u6211\u4eec\u7684\u6e38\u620f\u8005\u6536\u96c6\u9985\u997c\uff0c\u4f7f\u5f97\u6240\u6536\u96c6\u9985\u997c\u7684\u5206\u6570\u4e4b\u548c\u6700\u5927\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u662f\u7528\u7a7a\u683c\u9694\u5f00\u7684\u4e24\u4e2a\u6b63\u6574\u6570\uff0c\u5206\u522b\u7ed9\u51fa\u4e86\u821e\u53f0\u7684\u5bbd\u5ea6 \\(w\\) \u548c\u9985\u997c\u7684\u4e2a\u6570 \\(n\\)\u3002</p> <p>\u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u4e00\u884c\u7ed9\u51fa\u4e86\u4e00\u5757\u9985\u997c\u7684\u4fe1\u606f\u3002</p> <p>\u7531\u4e09\u4e2a\u6b63\u6574\u6570\u7ec4\u6210\uff0c\u5206\u522b\u8868\u793a\u4e86\u6bcf\u4e2a\u9985\u997c\u843d\u5230\u821e\u53f0\u4e0a\u7684\u65f6\u523b \\(t_i\\)\uff0c\u6389\u5230\u821e\u53f0\u4e0a\u7684\u683c\u5b50\u7684\u7f16\u53f7 \\(p_i\\)\uff0c\u4ee5\u53ca\u5206\u503c \\(v_i\\)\u3002</p> <p>\u6e38\u620f\u5f00\u59cb\u65f6\u523b\u4e3a \\(0\\)\u3002</p> <p>\u8f93\u5165\u6587\u4ef6\u4e2d\u540c\u4e00\u884c\u76f8\u90bb\u4e24\u9879\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002</p> <p>\u8f93\u5165\u6570\u636e\u4e2d\u53ef\u80fd\u5b58\u5728\u4e24\u4e2a\u9985\u997c\u7684 \\(t_i\\) \u548c \\(p_i\\) \u90fd\u4e00\u6837\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e00\u4e2a\u6570\uff0c\u8868\u793a\u6e38\u620f\u8005\u83b7\u5f97\u7684\u6700\u5927\u603b\u5f97\u5206\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\leq w \\leq 10^8\\)\uff0c\\(1 \\leq n \\leq 10^5\\)\uff0c\\(1\\leq t_i \\leq 10^8\\)\uff0c\\(1\\leq p_i \\leq w\\)\uff0c\\(1\\leq v_i \\leq 1000\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%98%E5%8C%96/#_3","title":"\u601d\u8def","text":"<p>\u597d\u7ecf\u5178\u7684\u73a9\u6cd5</p> <p>\u54b3\u54b3\uff0c\u6211\u4eec\u6765\u770b\u9898\u76ee\u3002\u7b80\u5316\u9898\u610f\uff0c\u4f60\u6709\u4e00\u4e2a\u6307\u9488\uff0c\u6bcf\u4e00\u79d2\u53ef\u4ee5\u5411\u5de6\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\u3002\u7ed9\u5b9an\u4e2a\u6761\u4ef6\uff0c\u5f53\u5728t_i\u65f6\u523b\u6307\u9488\u5904\u4e8ep_i\uff0c\u5c31\u53ef\u4ee5\u5f971\u5206\u3002\u6c42\u6700\u9ad8\u5f97\u5206\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u8bbe\u5b9af_i\u4e3a\u8868\u793a\u62ff\u5230\u4e86\u7b2ci\u4e2a\u5f97\u5206\u6761\u4ef6\u65f6\u6700\u5927\u5f97\u5206\u3002</p> <p>\u90a3\u4e48\u8003\u8651\u8f6c\u79fb\u3002\u5f88\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u7279\u70b9\u7684\u67d0\u4e9bf_j\u5904\u8f6c\u79fb\u3002\u5f62\u5f0f\u5316\u5730\uff0c\u6709\\(f_i=\\max(f_i,v_i+f_j),|p_i-p_j|\u22642t_i-2t_j\\)</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u7ef4\u62a4\u6700\u5c0f\u503c\u7684\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u7b26\u5408\u6761\u4ef6\u7684\u6700\u5c0f\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7684\u662f\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u663e\u7136\u6211\u4eec\u9700\u8981\u5bf9\u6761\u4ef6\u8fdb\u884c\u4e00\u4e9b\u53d8\u5f62\u3002\u5f88\u663e\u7136\u6211\u4eec\u9700\u8981\u628a\u4e0a\u9762\u7684\u4e0d\u7b49\u5f0f\u6309\u4e0b\u6807\u79fb\u9879\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u8ba8\u8bba\u90a3\u70e6\u4eba\u7684\u7edd\u5bf9\u503c\u4e86\u3002</p> <ul> <li> <p>\u82e5p_i&gt;p_j\uff0c\u5219\u53d8\u5f62\u4e3ap_i-p_j\u22642t_i-2t_j\uff0c\u5373\\(2t_j-p_j\u22642t_i-p_i\\)</p> </li> <li> <p>\u82e5p_i&lt;p_j\uff0c\u5219\u53d8\u5f62\u4e3a-p_i+p_j\u22642t_i-2t_j\uff0c\u5373\\(p_j+2t_j\u22642t_i+p_i\\)</p> </li> </ul> <p>\u90a3\u8fd9\u548b\u529e\u5462\uff1f\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u662f\u4e0d\u53ef\u6572\u7684\u3002</p> <p>\u6211\u4eec\u9700\u8981\u67e5\u8be2p_j\u6ee1\u8db3\\(p_i-t_i+t_j\u2264p_j\u2264p_i+t_i-t_j\\)\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5f53t_i-t_j&gt;0\u5927\u524d\u63d0\u6210\u7acb\u65f6\uff0c\u82e5p_i-p_j\u22642t_i-2t_j\u6210\u7acb\uff0c\u5219\u5fc5\u6709p_i&gt;p_j\u3002\u53e6\u5916\u4e00\u4e2a\u540c\u7406\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6ee1\u8db3\u4e0b\u9762\u5373\u53ef</p> <p>\\(2t_j-p_j\u22642t_i-p_i\\)\u4e14\\(p_j+2t_j\u22642t_i+p_i\\)\u3002\u56e0\u6b64\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\u3002</p> <p>\u601d\u8003\u4e00\u4e0b\uff1a\u4e3a\u4ec0\u4e48\u662f\u201c\u4e14\u201d\uff1f</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define rep(l,r,i) for(int i=l,END##i=r;i&lt;=END##i;++i)\n#define per(r,l,i) for(int i=r,END##i=l;i&gt;=END##i;--i)\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n\n#define lc(x) (x&lt;&lt;1)\n#define rc(x) (x&lt;&lt;1|1)\n\n#define rd read()\nint read(){\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\nvoid write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=2e5+15;\nconst int INF=1e9+5;\nconst int MOD=998244353;\n\n\nint b[N],w,n,k,c[N];\n\nstruct node{\n    int t,p,v,l,r;\n}a[N];\nbool cmpl(node x,node y){\n    return x.l&gt;y.l;\n}\nbool cmpr(node x,node y){\n    return x.r&lt;y.r;\n}\n\nvoid update(int x,int val){\n    while(x&lt;=k){\n        c[x]=max(c[x],val);\n        x+=x&amp;-x;\n    }\n}\n\nint query(int x){\n    int res=0;\n    while(x){\n        res=max(res,c[x]);\n        x-=x&amp;-x;\n    }\n    return res;\n}\n\nsigned main(){\n    w=rd,n=rd;\n    for(int i=1;i&lt;=n;i++){\n        a[i].t=rd,a[i].p=rd,a[i].v=rd;\n        a[i].l=a[i].p-2*a[i].t;\n        a[i].r=b[i]=a[i].p+2*a[i].t;\n    }\n\n    sort(a+1,a+n+1,cmpr);\n    sort(b+1,b+n+1);\n    k=unique(b+1,b+n+1)-b;\n    for(int i=1;i&lt;=n;i++)\n        a[i].r=lower_bound(b+1,b+n+1,a[i].r)-b;\n\n    sort(a+1,a+n+1,cmpl);\n    for(int i=1;i&lt;=n;i++){\n        int tmp=query(a[i].r);\n        update(a[i].r,tmp/\u5bf9\u4e8e\u521a\u8f6c\u79fb\u5f97\u5230\u7684dp\u503ctmp\uff0c\u52a0\u5165\u5230\u6811\u72b6\u6570\u7ec4\u91cc\n    }\n    cout&lt;&lt;query(k);\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/","title":"\u51b3\u7b56\u5355\u8c03\u6027\u4e4b \u659c\u7387\u4f18\u5316","text":"<p>\u659c\u7387\u4f18\u5316\u9700\u8981\u6574\u7406\u7684\u76ee\u6807\u5f0f\u5b50 - x\u662f\u4e0ej\u76f8\u5173\u7684\u5b9a\u91cf - y\u662f\u4ec5\u5305\u542b\u4ee5\u4e0ej\u76f8\u5173\u7684\u91cf\uff0c\u4e14\u5305\u542bf_j - k\u662f\u548ci\u76f8\u5173\u7684\u5b9a\u503c - b\u662f\u4ec5\u5305\u542b\u4ee5\u4e0ei\u76f8\u5173\u7684\u91cf\uff0c\u4e14\u5305\u542bf_i</p> <p></p> <p>www.luogu.com.cn</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/#noi2014","title":"[NOI2014] \u8d2d\u7968","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u4eca\u5e74\u590f\u5929\uff0cNOI \u5728 SZ \u5e02\u8fce\u6765\u4e86\u5979\u4e09\u5341\u5468\u5c81\u7684\u751f\u65e5\u3002\u6765\u81ea\u5168\u56fd \\(n\\) \u4e2a\u57ce\u5e02\u7684 OIer \u4eec\u90fd\u4f1a\u4ece\u5404\u5730\u51fa\u53d1\uff0c\u5230 SZ \u5e02\u53c2\u52a0\u8fd9\u6b21\u76db\u4f1a\u3002</p> <p>\u5168\u56fd\u7684\u57ce\u5e02\u6784\u6210\u4e86\u4e00\u68f5\u4ee5 SZ \u5e02\u4e3a\u6839\u7684\u6709\u6839\u6811\uff0c\u6bcf\u4e2a\u57ce\u5e02\u4e0e\u5b83\u7684\u7236\u4eb2\u7528\u9053\u8def\u8fde\u63a5\u3002\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u5168\u56fd\u7684 \\(n\\) \u4e2a\u57ce\u5e02\u7528 \\(1\\sim n\\) \u7684\u6574\u6570\u7f16\u53f7\u3002\u5176\u4e2d SZ \u5e02\u7684\u7f16\u53f7\u4e3a \\(1\\)\u3002\u5bf9\u4e8e\u9664 SZ \u5e02\u4e4b\u5916\u7684\u4efb\u610f\u4e00\u4e2a\u57ce\u5e02 \\(v\\)\uff0c\u6211\u4eec\u7ed9\u51fa\u4e86\u5b83\u5728\u8fd9\u68f5\u6811\u4e0a\u7684\u7236\u4eb2\u57ce\u5e02 \\(f_v\\)  \u4ee5\u53ca\u5230\u7236\u4eb2\u57ce\u5e02\u9053\u8def\u7684\u957f\u5ea6 \\(s_v\\)\u3002</p> <p>\u4ece\u57ce\u5e02 \\(v\\) \u524d\u5f80 SZ \u5e02\u7684\u65b9\u6cd5\u4e3a\uff1a\u9009\u62e9\u57ce\u5e02 \\(v\\) \u7684\u4e00\u4e2a\u7956\u5148 \\(a\\)\uff0c\u652f\u4ed8\u8d2d\u7968\u7684\u8d39\u7528\uff0c\u4e58\u5750\u4ea4\u901a\u5de5\u5177\u5230\u8fbe \\(a\\)\u3002\u518d\u9009\u62e9\u57ce\u5e02 \\(a\\) \u7684\u4e00\u4e2a\u7956\u5148 \\(b\\)\uff0c\u652f\u4ed8\u8d39\u7528\u5e76\u5230\u8fbe \\(b\\)\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u81f3\u5230\u8fbe SZ \u5e02\u3002</p> <p>\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u57ce\u5e02 \\(v\\)\uff0c\u6211\u4eec\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u4ea4\u901a\u5de5\u5177\u7684\u8ddd\u79bb\u9650\u5236 \\(l_v\\)\u3002\u5bf9\u4e8e\u57ce\u5e02 \\(v\\) \u7684\u7956\u5148 A\uff0c\u53ea\u6709\u5f53\u5b83\u4eec\u4e4b\u95f4\u6240\u6709\u9053\u8def\u7684\u603b\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(l_v\\)  \u65f6\uff0c\u4ece\u57ce\u5e02 \\(v\\) \u624d\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u8d2d\u7968\u5230\u8fbe\u57ce\u5e02 A\uff0c\u5426\u5219\u4e0d\u80fd\u901a\u8fc7\u4e00\u6b21\u8d2d\u7968\u5230\u8fbe\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u57ce\u5e02 \\(v\\)\uff0c\u6211\u4eec\u8fd8\u4f1a\u7ed9\u51fa\u4e24\u4e2a\u975e\u8d1f\u6574\u6570 \\(p_v,q_v\\)  \u4f5c\u4e3a\u7968\u4ef7\u53c2\u6570\u3002\u82e5\u57ce\u5e02 \\(v\\) \u5230\u57ce\u5e02 A \u6240\u6709\u9053\u8def\u7684\u603b\u957f\u5ea6\u4e3a \\(d\\)\uff0c\u90a3\u4e48\u4ece\u57ce\u5e02 \\(v\\) \u5230\u57ce\u5e02 A \u8d2d\u4e70\u7684\u7968\u4ef7\u4e3a \\(dp_v+q_v\\)\u3002</p> <p>\u6bcf\u4e2a\u57ce\u5e02\u7684 OIer \u90fd\u5e0c\u671b\u81ea\u5df1\u5230\u8fbe SZ \u5e02\u65f6\uff0c\u7528\u4e8e\u8d2d\u7968\u7684\u603b\u8d44\u91d1\u6700\u5c11\u3002\u4f60\u7684\u4efb\u52a1\u5c31\u662f\uff0c\u544a\u8bc9\u6bcf\u4e2a\u57ce\u5e02\u7684 OIer \u4ed6\u4eec\u6240\u82b1\u7684\u6700\u5c11\u8d44\u91d1\u662f\u591a\u5c11\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u975e\u8d1f\u6574\u6570 \\(n,t\\)\uff0c\u5206\u522b\u8868\u793a\u57ce\u5e02\u7684\u4e2a\u6570\u548c\u6570\u636e\u7c7b\u578b\uff08\u5176\u610f\u4e49\u5c06\u5728\u300c\u63d0\u793a\u4e0e\u8bf4\u660e\u300d\u4e2d\u63d0\u5230\uff09\u3002</p> <p>\u63a5\u4e0b\u6765 \\(2 \\sim n\\) \u884c\uff0c\u6bcf\u884c\u63cf\u8ff0\u4e00\u4e2a\u9664 SZ \u4e4b\u5916\u7684\u57ce\u5e02\u3002\u5176\u4e2d\u7b2c \\(v\\) \u884c\u5305\u542b\u4e94\u4e2a\u975e\u8d1f\u6574\u6570 \\(f_v,s_v,p_v,q_v,l_v\\)\uff0c\u5206\u522b\u8868\u793a\u57ce\u5e02 \\(v\\) \u7684\u7236\u4eb2\u57ce\u5e02\uff0c\u5b83\u5230\u7236\u4eb2\u57ce\u5e02\u9053\u8def\u7684\u957f\u5ea6\uff0c\u7968\u4ef7\u7684\u4e24\u4e2a\u53c2\u6570\u548c\u8ddd\u79bb\u9650\u5236\u3002</p> <p>\u8bf7\u6ce8\u610f\uff1a\u8f93\u5165\u4e0d\u5305\u542b\u7f16\u53f7\u4e3a 1 \u7684 SZ \u5e02\uff0c\u7b2c \\(2\\sim n\\) \u884c\u5206\u522b\u63cf\u8ff0\u7684\u662f\u57ce\u5e02 \\(2\\) \u5230\u57ce\u5e02 \\(n\\)\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u5305\u542b \\(n-1\\) \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570\u3002</p> <p>\u5176\u4e2d\u7b2c \\(v\\) \u884c\u8868\u793a\u4ece\u57ce\u5e02 \\(v+1\\) \u51fa\u53d1\uff0c\u5230\u8fbe SZ \u5e02\u6700\u5c11\u7684\u8d2d\u7968\u8d39\u7528\u3002</p> <p>\u540c\u6837\u8bf7\u6ce8\u610f\uff1a\u8f93\u51fa\u4e0d\u5305\u542b\u7f16\u53f7\u4e3a 1 \u7684 SZ \u5e02\u3002</p> <p></p> <p>\u5bf9\u4e8e\u6240\u6709\u6570\u636e\uff0c\\(n\\leq 2 \\times 10^5, 0 \\leq p_v \\leq 10^6,\\ 0 \\leq q_v \\leq 10^{12},\\ 1\\leq f_v&lt;v,\\ 0&lt;s_v\\leq lv \\leq 2 \\times 10^{11}\\)\uff0c\u4e14\u4efb\u610f\u57ce\u5e02\u5230 SZ \u5e02\u7684\u603b\u8def\u7a0b\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(2 \\times 10^{11}\\)\u3002</p> <p>\u8f93\u5165\u7684 \\(t\\) \u8868\u793a\u6570\u636e\u7c7b\u578b\uff0c\\(0\\leq t&lt;4\\)\uff0c\u5176\u4e2d\uff1a</p> <ul> <li> <p>\u5f53 \\(t=0\\) \u6216 \\(2\\) \u65f6\uff0c\u5bf9\u8f93\u5165\u7684\u6240\u6709\u57ce\u5e02 \\(v\\)\uff0c\u90fd\u6709 \\(f_v=v-1\\)\uff0c\u5373\u6240\u6709\u57ce\u5e02\u6784\u6210\u4e00\u4e2a\u4ee5 SZ \u5e02\u4e3a\u7ec8\u70b9\u7684\u94fe\uff1b</p> </li> <li> <p>\u5f53 \\(t=0\\) \u6216 \\(1\\) \u65f6\uff0c\u5bf9\u8f93\u5165\u7684\u6240\u6709\u57ce\u5e02 \\(v\\)\uff0c\u90fd\u6709 \\(l_v=2 \\times 10^{11}\\)\uff0c\u5373\u6ca1\u6709\u79fb\u52a8\u7684\u8ddd\u79bb\u9650\u5236\uff0c\u6bcf\u4e2a\u57ce\u5e02\u90fd\u80fd\u5230\u8fbe\u5b83\u7684\u6240\u6709\u7956\u5148\uff1b</p> </li> <li> <p>\u5f53 \\(t=3\\) \u65f6\uff0c\u6570\u636e\u6ca1\u6709\u7279\u6b8a\u6027\u8d28\u3002</p> </li> </ul>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/#noi2007","title":"[NOI2007] \u8d27\u5e01\u5151\u6362","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5c0f Y \u6700\u8fd1\u5728\u4e00\u5bb6\u91d1\u5238\u4ea4\u6613\u6240\u5de5\u4f5c\u3002\u8be5\u91d1\u5238\u4ea4\u6613\u6240\u53ea\u53d1\u884c\u4ea4\u6613\u4e24\u79cd\u91d1\u5238\uff1aA \u7eaa\u5ff5\u5238\uff08\u4ee5\u4e0b\u7b80\u79f0 A \u5238\uff09\u548c B \u7eaa\u5ff5\u5238\uff08\u4ee5\u4e0b\u7b80\u79f0 B \u5238\uff09\u3002\u6bcf\u4e2a\u6301\u6709\u91d1\u5238\u7684\u987e\u5ba2\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u5e10\u6237\u3002\u91d1\u5238\u7684\u6570\u76ee\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b9e\u6570\u3002</p> <p>\u6bcf\u5929\u968f\u7740\u5e02\u573a\u7684\u8d77\u4f0f\u6ce2\u52a8\uff0c\u4e24\u79cd\u91d1\u5238\u90fd\u6709\u81ea\u5df1\u5f53\u65f6\u7684\u4ef7\u503c\uff0c\u5373\u6bcf\u4e00\u5355\u4f4d\u91d1\u5238\u5f53\u5929\u53ef\u4ee5\u5151\u6362\u7684\u4eba\u6c11\u5e01\u6570\u76ee\u3002\u6211\u4eec\u8bb0\u5f55\u7b2c \\(K\\) \u5929\u4e2d A \u5238\u548c B \u5238\u7684\u4ef7\u503c\u5206\u522b\u4e3a \\(A_K\\) \u548c \\(B_K\\)\uff08\u5143/\u5355\u4f4d\u91d1\u5238\uff09\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u987e\u5ba2\uff0c\u91d1\u5238\u4ea4\u6613\u6240\u63d0\u4f9b\u4e86\u4e00\u79cd\u975e\u5e38\u65b9\u4fbf\u7684\u4ea4\u6613\u65b9\u5f0f\uff1a\u6bd4\u4f8b\u4ea4\u6613\u6cd5\u3002</p> <p>\u6bd4\u4f8b\u4ea4\u6613\u6cd5\u5206\u4e3a\u4e24\u4e2a\u65b9\u9762\uff1a</p> <p>a)  \u5356\u51fa\u91d1\u5238\uff1a\u987e\u5ba2\u63d0\u4f9b\u4e00\u4e2a \\([0, 100]\\) \u5185\u7684\u5b9e\u6570 \\(OP\\) \u4f5c\u4e3a\u5356\u51fa\u6bd4\u4f8b\uff0c\u5176\u610f\u4e49\u4e3a\uff1a\u5c06 \\(OP\\%\\) \u7684 A \u5238\u548c \\(OP\\%\\) \u7684 B \u5238\u4ee5\u5f53\u65f6\u7684\u4ef7\u503c\u5151\u6362\u4e3a\u4eba\u6c11\u5e01\uff1b</p> <p>b)  \u4e70\u5165\u91d1\u5238\uff1a\u987e\u5ba2\u652f\u4ed8 \\(IP\\) \u5143\u4eba\u6c11\u5e01\uff0c\u4ea4\u6613\u6240\u5c06\u4f1a\u5151\u6362\u7ed9\u7528\u6237\u603b\u4ef7\u503c\u4e3a \\(IP\\) \u7684\u91d1\u5238\uff0c\u5e76\u4e14\uff0c\u6ee1\u8db3\u63d0\u4f9b\u7ed9\u987e\u5ba2\u7684 A \u5238\u548c B \u5238\u7684\u6bd4\u4f8b\u5728\u7b2c \\(K\\) \u5929\u6070\u597d\u4e3a \\(\\mathrm{Rate}_ K\\)\uff1b</p> <p>\u4f8b\u5982\uff0c\u5047\u5b9a\u63a5\u4e0b\u6765 \\(3\\) \u5929\u5185\u7684 \\(A_K,B_K,\\mathrm{Rate}_ K\\) \u7684\u53d8\u5316\u5206\u522b\u4e3a\uff1a</p> \u65f6\u95f4 \\(A_K\\) \\(B_K\\) \\(\\mathrm{Rate}_ K\\) \u7b2c\u4e00\u5929 \\(1\\) \\(1\\) \\(1\\) \u7b2c\u4e8c\u5929 \\(1\\) \\(2\\) \\(2\\) \u7b2c\u4e09\u5929 \\(2\\) \\(2\\) \\(3\\) <p>\u5047\u5b9a\u5728\u7b2c\u4e00\u5929\u65f6\uff0c\u7528\u6237\u624b\u4e2d\u6709 \\(100\\) \u5143\u4eba\u6c11\u5e01\u4f46\u662f\u6ca1\u6709\u4efb\u4f55\u91d1\u5238\u3002</p> <p>\u7528\u6237\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u7684\u64cd\u4f5c\uff1a</p> \u65f6\u95f4 \u7528\u6237\u64cd\u4f5c \u4eba\u6c11\u5e01(\u5143) A \u5238\u7684\u6570\u91cf B \u5238\u7684\u6570\u91cf \u5f00\u6237 \u65e0 \\(100\\) \\(0\\) \\(0\\) \u7b2c\u4e00\u5929 \u4e70\u5165 \\(100\\) \u5143 \\(0\\) \\(50\\) \\(50\\) \u7b2c\u4e8c\u5929 \u5356\u51fa \\(50\\%\\) \\(75\\) \\(25\\) \\(25\\) \u7b2c\u4e8c\u5929 \u4e70\u5165 \\(60\\) \u5143 \\(15\\) \\(55\\) \\(40\\) \u7b2c\u4e09\u5929 \u5356\u51fa \\(100\\%\\) \\(205\\) \\(0\\) \\(0\\) <p>\u6ce8\u610f\u5230\uff0c\u540c\u4e00\u5929\u5185\u53ef\u4ee5\u8fdb\u884c\u591a\u6b21\u64cd\u4f5c\u3002</p> <p>\u5c0f Y \u662f\u4e00\u4e2a\u5f88\u6709\u7ecf\u6d4e\u5934\u8111\u7684\u5458\u5de5\uff0c\u901a\u8fc7\u8f83\u957f\u65f6\u95f4\u7684\u8fd0\u4f5c\u548c\u884c\u60c5\u6d4b\u7b97\uff0c\u4ed6\u5df2\u7ecf\u77e5\u9053\u4e86\u672a\u6765 \\(N\\) \u5929\u5185\u7684 A \u5238\u548c B \u5238\u7684\u4ef7\u503c\u4ee5\u53ca \\(\\mathrm{Rate}\\)\u3002\u4ed6\u8fd8\u5e0c\u671b\u80fd\u591f\u8ba1\u7b97\u51fa\u6765\uff0c\u5982\u679c\u5f00\u59cb\u65f6\u62e5\u6709 \\(S\\) \u5143\u94b1\uff0c\u90a3\u4e48 \\(N\\) \u5929\u540e\u6700\u591a\u80fd\u591f\u83b7\u5f97\u591a\u5c11\u5143\u94b1\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6b63\u6574\u6570 \\(N,S\\)\uff0c\u5206\u522b\u8868\u793a\u5c0f Y \u80fd\u9884\u77e5\u7684\u5929\u6570\u4ee5\u53ca\u521d\u59cb\u65f6\u62e5\u6709\u7684\u94b1\u6570\u3002</p> <p>\u63a5\u4e0b\u6765 \\(N\\) \u884c\uff0c\u7b2c \\(K\\) \u884c\u4e09\u4e2a\u5b9e\u6570 \\(A_K,B_K,\\mathrm{Rate} _ K\\) \uff0c\u610f\u4e49\u5982\u9898\u76ee\u4e2d\u6240\u8ff0\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u53ea\u6709\u4e00\u4e2a\u5b9e\u6570 \\(\\mathrm{MaxProfit}\\)\uff0c\u8868\u793a\u7b2c \\(N\\) \u5929\u7684\u64cd\u4f5c\u7ed3\u675f\u65f6\u80fd\u591f\u83b7\u5f97\u7684\u6700\u5927\u7684\u91d1\u94b1\u6570\u76ee\u3002\u7b54\u6848\u4fdd\u7559 \\(3\\) \u4f4d\u5c0f\u6570\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u6ee1\u8db3\uff1a</p> <p>\\(0 &lt; A_K \\leq 10\\)\uff0c\\(0 &lt; B_K\\le 10\\)\uff0c\\(0 &lt; \\mathrm{Rate}_K \\le 100\\)\uff0c\\(\\mathrm{MaxProfit}  \\leq 10^9\\)\u3002</p> <p>\u8f93\u5165\u6587\u4ef6\u53ef\u80fd\u5f88\u5927\uff0c\u8bf7\u91c7\u7528\u5feb\u901f\u7684\u8bfb\u5165\u65b9\u5f0f\u3002</p> <p>\u5fc5\u7136\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u7684\u4e70\u5356\u65b9\u6848\u6ee1\u8db3\uff1a</p> <p>\u6bcf\u6b21\u4e70\u8fdb\u64cd\u4f5c\u4f7f\u7528\u5b8c\u6240\u6709\u7684\u4eba\u6c11\u5e01\uff0c\u6bcf\u6b21\u5356\u51fa\u64cd\u4f5c\u5356\u51fa\u6240\u6709\u7684\u91d1\u5238\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/#_2","title":"\u601d\u8def","text":"<p>\u6700\u91cd\u8981\u7684\u5f80\u5f80\u5728\u6700\u540e\u5934\u7406\uff01</p> <p>\u5fc5\u7136\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u7684\u4e70\u5356\u65b9\u6848\u6ee1\u8db3\uff1a</p> <p>\u6bcf\u6b21\u4e70\u8fdb\u64cd\u4f5c\u4f7f\u7528\u5b8c\u6240\u6709\u7684\u4eba\u6c11\u5e01\uff0c\u6bcf\u6b21\u5356\u51fa\u64cd\u4f5c\u5356\u51fa\u6240\u6709\u7684\u91d1\u5238\u3002</p> <p>\u90a3\u4e48\u8fd9\u5c31\u6709\u5229\u4e8e\u6211\u4eec\u8bbe\u8ba1\u672c\u9898\u7684dp\u4e86\uff0c\u5e76\u4e14\u672c\u9898\u5c31\u548c\u80a1\u7968\u4e70\u5356\uff08https://www.acwing.com/problem/content/1057/\uff09\u5dee\u4e0d\u591a\u4e86\u3002\u8bbef_i\u8868\u793a\u7b2ci\u5929\u6700\u591a\u7684\u4eba\u6c11\u5e01\u6570\uff0c\u90a3\u4e48\u6709\u4e24\u79cd\u8f6c\u79fb</p> <ul> <li> <p>\u4e70\u5165\u91d1\u5238\uff0c\u90a3\u4e48\u5230\u8fd9\u91cc\u6211\u4eec\u4f1a\u4e0d\u4f1a\u60f3\u5230\u600e\u4e48\u6837\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\u8fd8\u5269\u4e0b\u591a\u5c11\u91d1\u5238\u5462\uff1f\u5176\u5b9e\u662f\u4e0d\u7528\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u5bf9\u4e8e\u6bcf\u4e2af_i\u53ef\u4ee5\u4e70\u591a\u5c11\u91d1\u5238\u5373\u53ef\u3002\u5e76\u4e14\u4e70\u5165\u91d1\u5238\u5bf9f\u662f\u8d1f\u8d21\u732e\uff0c\u6211\u4eec\u6ca1\u5fc5\u8981\u8f6c\u79fb</p> </li> <li> <p>\u5356\u51fa\u91d1\u5238\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u679a\u4e3e\u5f53\u524d\u7684\u91d1\u5238\u662f\u5728\u90a3\u4e00\u5929j\u4e70\u5165\u7684\uff0c\u90a3\u4e48\u8f6c\u79fb\\(f_{i}=\\max(f_i,A_ix_j+B_iy_j)\\)\uff0cx_j,y_j\u8868\u793a\u4f7f\u7528f_j\u5168\u989d\u8d2d\u4e70\u91d1\u5238\u53ef\u5f97A,B\u5238\u6570\u91cf\u3002\u5176\u4e2dx_j=\\frac{}{}\u3002\u53d8\u5f62\u5f97\\(f_{i}=\\max(f_i,A_i(x_j+\\frac{B_i}{A_i}y_j))=\\max(f_i,A_i(b+kx))\\)\uff0c\u5176\u4e2db=x_j,k=y_i,x\u662f\u6052\u5b9a\u503cfrac{B_i}{A_i}\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u674e\u8d85\u6811\u4f18\u5316\u3002</p> </li> <li> <p>\u4e0d\u505a\u4e8b\uff0cf_i=\\max(f_i,f_{i-1})</p> </li> </ul>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/#ceoi2017-building-bridges","title":"[CEOI2017] Building Bridges","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6709 \\(n\\) \u6839\u67f1\u5b50\u4f9d\u6b21\u6392\u5217\uff0c\u6bcf\u6839\u67f1\u5b50\u90fd\u6709\u4e00\u4e2a\u9ad8\u5ea6\u3002\u7b2c \\(i\\) \u6839\u67f1\u5b50\u7684\u9ad8\u5ea6\u4e3a \\(h_i\\)\u3002</p> <p>\u73b0\u5728\u60f3\u8981\u5efa\u9020\u82e5\u5e72\u5ea7\u6865\uff0c\u5982\u679c\u4e00\u5ea7\u6865\u67b6\u5728\u7b2c \\(i\\) \u6839\u67f1\u5b50\u548c\u7b2c \\(j\\) \u6839\u67f1\u5b50\u4e4b\u95f4\uff0c\u90a3\u4e48\u9700\u8981 \\((h_i-h_j)^2\\)\u200b\u200b \u7684\u4ee3\u4ef7\u3002</p> <p>\u5728\u9020\u6865\u524d\uff0c\u6240\u6709\u7528\u4e0d\u5230\u7684\u67f1\u5b50\u90fd\u4f1a\u88ab\u62c6\u9664\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4f1a\u5e72\u6270\u9020\u6865\u8fdb\u7a0b\u3002\u7b2c \\(i\\) \u6839\u67f1\u5b50\u88ab\u62c6\u9664\u7684\u4ee3\u4ef7\u4e3a \\(w_i\\)\uff0c\u6ce8\u610f \\(w_i\\) \u4e0d\u4e00\u5b9a\u975e\u8d1f\uff0c\u56e0\u4e3a\u53ef\u80fd\u653f\u5e9c\u5e0c\u671b\u62c6\u9664\u67d0\u4e9b\u67f1\u5b50\u3002</p> <p>\u73b0\u5728\u653f\u5e9c\u60f3\u8981\u77e5\u9053\uff0c\u901a\u8fc7\u6865\u6881\u628a\u7b2c \\(1\\) \u6839\u67f1\u5b50\u548c\u7b2c \\(n\\) \u6839\u67f1\u5b50\u8fde\u63a5\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u6ce8\u610f\u6865\u6881\u4e0d\u80fd\u5728\u7aef\u70b9\u4ee5\u5916\u7684\u4efb\u4f55\u5730\u65b9\u76f8\u4ea4\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570 \\(n\\)\u3002</p> <p>\u7b2c\u4e8c\u884c \\(n\\) \u4e2a\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570\uff0c\u4f9d\u6b21\u8868\u793a \\(h_1,h_2,\\cdots,h_n\\)\u200b\u200b\u3002</p> <p>\u7b2c\u4e09\u884c \\(n\\) \u4e2a\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570\uff0c\u4f9d\u6b21\u8868\u793a \\(w_1,w_2,\\cdots,w_n\\)\u200b\u200b\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u6700\u5c0f\u4ee3\u4ef7\uff0c\u6ce8\u610f\u6700\u5c0f\u4ee3\u4ef7\u4e0d\u4e00\u5b9a\u662f\u6b63\u6570\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u6709 \\(2\\le n\\le 10^5;0\\le h_i,\\vert w_i\\vert\\le 10^6\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/#_3","title":"\u601d\u8def","text":"<p>\u9996\u5148\uff0c \\(O(n^2)\\) \u7684 dp \u8f6c\u79fb\u65b9\u7a0b\u6781\u5176\u663e\u7136\uff1a</p> <p>\\(f_i=\\min\\{f_j+h_i^2-2h_ih_j+h_j^2+s_{i-1}-s_j\\}\\)</p> <p>\u5176\u4e2d\uff0c \\(s\\) \u662f\u62c6\u9664\u4ee3\u4ef7 \\(w\\) \u7684\u524d\u7f00\u548c\u3002</p> <p>\u5c06\u5f0f\u5b50\u5316\u7b80\uff0c\u5f97\u5230\uff1a</p> <p>\\(f_i=h_i^2+s_{i-1}+\\min\\{f_j-2h_ih_j+h_j^2-s_j\\}\\)</p> <p>\u4ee4 \\(a_j=-2h_j\\) \uff0c \\(b_j=f_j+h_j^2-s_j\\) \uff0c\u5219\uff1a</p> <p>\\(f_i=h_i^2+s_{i-1}+\\min\\{a_jh_i+b_j\\}\\)</p> <p>\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u63d2\u5165\u76f4\u7ebf \\(y_j=a_jx+b_j\\) \uff0c\u6c42 \\(x=h_i\\) \u65f6 \\(y_j\\) \u7684\u6700\u5c0f\u503c\u3002</p> <p>\u5f88\u660e\u663e\uff0c\u53ef\u4ee5\u7528\u674e\u8d85\u7ebf\u6bb5\u6811\u4f18\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n\\log n)\\) \u3002</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define err cerr&lt;&lt;\"Error\"\n#define rd read()\n// #define nl putc('\\n')\n#define ot write\n#define nl putchar('\\n')\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int INF = 1e13;\nconst int N = 2e5+5;\nconst int M = 1e6+5;\nconst int S=1e6+5;\nconst int maxlog = 10;\n\nint a[N],b[N],h[N],w[N],f[N];\nint s[M&lt;&lt;2],u;\ninline int g(int x,int k){\n    return b[k]+a[k]*x;}\n\n\n\nvoid change(int k,int l,int r,int t){\n    if(l==r){\n        if(g(l,t)&lt;g(l,s[k]))s[k]=t;\n        return;\n    }\n    int m=l+r&gt;&gt;1;\n    if(g(m,t)&lt;g(m,s[k]))swap(t,s[k]);\n    if(g(l,t)&lt;g(l,s[k]))change(k&lt;&lt;1,l,m,t);\n    else if(g(r,t)&lt;g(r,s[k]))change(k&lt;&lt;1|1,m+1,r,t);\n}\n\nint query(int k,int l,int r){\n    if(l==r)return g(u,s[k]);\n    int m=l+r&gt;&gt;1;\n    return min(g(u,s[k]),u&lt;=m?query(k&lt;&lt;1,l,m):query(k&lt;&lt;1|1,m+1,r));\n}\nsigned main(){\n    int n=rd;\n    b[0]=INF;\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",h+i);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",w+i),w[i]+=w[i-1];\n    a[1]=-2*h[1],b[1]=h[1]*h[1]-w[1],change(1,0,M,1);\n    for(int i=2;i&lt;=n;++i){\n        u=h[i],f[i]=h[i]*h[i]+w[i-1]+query(1,0,M);\n        a[i]=-2*h[i],b[i]=f[i]+h[i]*h[i]-w[i],change(1,0,M,i);\n    }\n    printf(\"%lld\",f[n]);\n    return 0;\n}\n\n\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/#apio2014","title":"[APIO2014] \u5e8f\u5217\u5206\u5272","text":"<p>\u4f60\u6b63\u5728\u73a9\u4e00\u4e2a\u5173\u4e8e\u957f\u5ea6\u4e3a \\(n\\) \u7684\u975e\u8d1f\u6574\u6570\u5e8f\u5217\u7684\u6e38\u620f\u3002\u8fd9\u4e2a\u6e38\u620f\u4e2d\u4f60\u9700\u8981\u628a\u5e8f\u5217\u5206\u6210 \\(k + 1\\) \u4e2a\u975e\u7a7a\u7684\u5757\u3002\u4e3a\u4e86\u5f97\u5230 \\(k + 1\\) \u5757\uff0c\u4f60\u9700\u8981\u91cd\u590d\u4e0b\u9762\u7684\u64cd\u4f5c \\(k\\) \u6b21\uff1a</p> <p>\u9009\u62e9\u4e00\u4e2a\u6709\u8d85\u8fc7\u4e00\u4e2a\u5143\u7d20\u7684\u5757\uff08\u521d\u59cb\u65f6\u4f60\u53ea\u6709\u4e00\u5757\uff0c\u5373\u6574\u4e2a\u5e8f\u5217\uff09</p> <p>\u9009\u62e9\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u628a\u8fd9\u4e2a\u5757\u4ece\u4e2d\u95f4\u5206\u5f00\uff0c\u5f97\u5230\u4e24\u4e2a\u975e\u7a7a\u7684\u5757\u3002</p> <p>\u6bcf\u6b21\u64cd\u4f5c\u540e\u4f60\u5c06\u83b7\u5f97\u90a3\u4e24\u4e2a\u65b0\u4ea7\u751f\u7684\u5757\u7684\u5143\u7d20\u548c\u7684\u4e58\u79ef\u7684\u5206\u6570\u3002\u4f60\u60f3\u8981\u6700\u5927\u5316\u6700\u540e\u7684\u603b\u5f97\u5206\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 \\(n\\) \u548c \\(k\\)\u3002\u4fdd\u8bc1 \\(k + 1 \\leq n\\)\u3002</p> <p>\u7b2c\u4e8c\u884c\u5305\u542b \\(n\\) \u4e2a\u975e\u8d1f\u6574\u6570 \\(a_1, a_2, \\cdots, a_n\\) \\((0 \\leq a_i \\leq 10^4)\\)\uff0c\u8868\u793a\u524d\u6587\u6240\u8ff0\u7684\u5e8f\u5217\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u8f93\u51fa\u4f60\u80fd\u83b7\u5f97\u7684\u6700\u5927\u603b\u5f97\u5206\u3002</p> <p>\u7b2c\u4e8c\u884c\u8f93\u51fa \\(k\\) \u4e2a\u4ecb\u4e8e \\(1\\) \u5230 \\(n - 1\\) \u4e4b\u95f4\u7684\u6574\u6570\uff0c\u8868\u793a\u4e3a\u4e86\u4f7f\u5f97\u603b\u5f97\u5206\u6700\u5927\uff0c\u4f60\u6bcf\u6b21\u64cd\u4f5c\u4e2d\u5206\u5f00\u4e24\u4e2a\u5757\u7684\u4f4d\u7f6e\u3002\u7b2c \\(i\\) \u4e2a\u6574\u6570 \\(s_i\\) \u8868\u793a\u7b2c \\(i\\) \u6b21\u64cd\u4f5c\u5c06\u5728 \\(s_i\\) \u548c \\(s_{i + 1}\\) \u4e4b\u95f4\u628a\u5757\u5206\u5f00\u3002</p> <p>\u5982\u679c\u6709\u591a\u79cd\u65b9\u6848\u4f7f\u5f97\u603b\u5f97\u5206\u6700\u5927\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u65b9\u6848\u5373\u53ef\u3002</p> <p>\u63d0\u793a</p> <p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u8fd9\u4e9b\u64cd\u4f5c\u83b7\u5f97 \\(108\\) \u5206\uff1a</p> <p>\u521d\u59cb\u65f6\u4f60\u6709\u4e00\u5757 \\((4, 1, 3, 4, 0, 2, 3)\\)\u3002\u5728\u7b2c \\(1\\) \u4e2a\u5143\u7d20\u540e\u9762\u5206\u5f00\uff0c\u83b7\u5f97 \\(4 \\times (1 + 3 + 4 + 0 + 2 + 3) = 52\\) \u5206\u3002</p> <p>\u4f60\u73b0\u5728\u6709\u4e24\u5757 \\((4), (1, 3, 4, 0, 2, 3)\\)\u3002\u5728\u7b2c \\(3\\) \u4e2a\u5143\u7d20\u540e\u9762\u5206\u5f00\uff0c\u83b7\u5f97 \\((1 + 3) \\times (4 + 0 + 2 + 3) = 36\\) \u5206\u3002</p> <p>\u4f60\u73b0\u5728\u6709\u4e09\u5757 \\((4), (1, 3), (4, 0, 2, 3)\\)\u3002\u5728\u7b2c \\(5\\) \u4e2a\u5143\u7d20\u540e\u9762\u5206\u5f00\uff0c\u83b7\u5f97 \\((4 + 0) \\times (2 + 3) = 20\\) \u5206\u3002</p> <p>\u6240\u4ee5\uff0c\u7ecf\u8fc7\u8fd9\u4e9b\u64cd\u4f5c\u540e\u4f60\u53ef\u4ee5\u83b7\u5f97\u56db\u5757 \\((4), (1, 3), (4, 0), (2, 3)\\) \u5e76\u83b7\u5f97 \\(52 + 36 + 20 = 108\\) \u5206\u3002</p> <p>\u9650\u5236\u4e0e\u7ea6\u5b9a</p> <p>\u7b2c\u4e00\u4e2a\u5b50\u4efb\u52a1\u5171 11 \u5206\uff0c\u6ee1\u8db3 \\(1 \\leq k &lt; n \\leq 10\\)\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u5b50\u4efb\u52a1\u5171 11 \u5206\uff0c\u6ee1\u8db3 \\(1 \\leq k &lt; n \\leq 50\\)\u3002</p> <p>\u7b2c\u4e09\u4e2a\u5b50\u4efb\u52a1\u5171 11 \u5206\uff0c\u6ee1\u8db3 \\(1 \\leq k &lt; n \\leq 200\\)\u3002</p> <p>\u7b2c\u56db\u4e2a\u5b50\u4efb\u52a1\u5171 17 \u5206\uff0c\u6ee1\u8db3 \\(2 \\leq n \\leq 1000, 1 \\leq k \\leq \\min\\{n - 1, 200\\}\\)\u3002</p> <p>\u7b2c\u4e94\u4e2a\u5b50\u4efb\u52a1\u5171 21 \u5206\uff0c\u6ee1\u8db3 \\(2 \\leq n \\leq 10000, 1 \\leq k \\leq \\min\\{n - 1, 200\\}\\)\u3002</p> <p>\u7b2c\u516d\u4e2a\u5b50\u4efb\u52a1\u5171 29 \u5206\uff0c\u6ee1\u8db3 \\(2 \\leq n \\leq 100000, 1 \\leq k \\leq \\min\\{n - 1, 200\\}\\)\u3002</p> <p>\u611f\u8c22@larryzhong  \u63d0\u4f9b\u7684\u52a0\u5f3a\u6570\u636e</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/#_4","title":"\u601d\u8def\u200b","text":"<p>\u9996\u5148\uff0c\u8fd9\u9898**\u7b54\u6848\u4e0e\u5207\u7684\u987a\u5e8f\u65e0\u5173**</p> <p>\u6211\u4eec\u8003\u8651\u5148\u5199\u51fa\u8f6c\u79fb\u5f0f</p> <p>\u5b9a\u4e49f i,j\u4e3a\u524di\u4e2a\u6570\u5212\u5206\u51faj\u4e2a\u533a\u95f4\uff0c\u4e14\u5012\u6570\u7b2c\u4e8c\u4e2a\u533a\u95f4\u7684\u6709\u7aef\u70b9\u4e3ai\u7684\u6700\u5927\u4ef7\u503c\u3002\u6b64\u65f6\u6211\u4eec\u9ed8\u8ba4\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u8fd8\u6ca1\u6709\u88ab\u5212\u5206\uff0c\u5373\u5b58\u5728\u5728\u4e00\u4e2a\u533a\u95f4\u4e3a[j,n]</p> <p>\u90a3\u4e48\u6709\\(f_{i,j}=\\max(f_{k,j-1}+(s_n-s_{i})(s_{i}-s_{k}))\\)\u3002</p> <p>\u6574\u7406\u4e00\u4e0b\u2014\u2014\u6211\u4eec\u9700\u8981\u63d0\u53d6\u7684\u56e0\u53d8\u91cf\u548c\u81ea\u53d8\u91cf\u5206\u522b\u4e3a\u548ck\u6709\u5173\u7684\u53d8\u91cf\u3001\u548ci\u6709\u5173\u7684\u53d8\u91cf\u3002\u6682\u65f6\u5148\u7701\u7565j\u7ef4\u5ea6\u3002</p> <p>\\(f_i=f_k+(s_n-s_{i})(s_{i}-s_{k})\\)</p> <p>\u5176\u4e2ds_n,s_i\u4e3a\u5e38\u91cf\uff0c\u90a3\u4e48\u6574\u7406\u4e3ay=kx+b\u5f97\u5230</p> <p>\u659c\u7387\u4f18\u5316\u9700\u8981\u6574\u7406\u7684\u76ee\u6807\u5f0f\u5b50 - x\u662f\u4e0ej\u76f8\u5173\u7684\u5b9a\u91cf - y\u662f\u4ec5\u5305\u542b\u4ee5\u4e0ej\u76f8\u5173\u7684\u91cf\uff0c\u4e14\u5305\u542bf_j - k\u662f\u548ci\u76f8\u5173\u7684\u5b9a\u503c - b\u662f\u4ec5\u5305\u542b\u4ee5\u4e0ei\u76f8\u5173\u7684\u91cf\uff0c\u4e14\u5305\u542bf_i</p> <ul> <li> <p>\\(f_i=f_k+s_i(s_n-s_i)-s_k(s_n-s_i)=f_k+s_i(s_n-s_i)-s_ks_n+s_ks_i\\)</p> </li> <li> <p>\\(f_k-s_ks_n=-s_ks_i+f_i-s_i(s_n-s_i)\\)</p> </li> </ul> <p>\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u9700\u8981f_i\u5c3d\u53ef\u80fd\u5927\uff0c\u5373\u622a\u8ddd\u8981\u5c3d\u53ef\u80fd\u5927\u3002\u6211\u4eec\u628a\u6240\u6709\u53ef\u8f6c\u79fb\u70b9\u4ee5\\((-s_k,f_k-s_ks_n)\\)\u7684\u5f62\u5f0f\u5728\u5750\u6807\u7cfb\u4e2d\u6807\u51fa\uff0c\u5e76\u4e14\u6211\u4eec\u4f7f\u7528\u659c\u7387k=s_i\u7684\u76f4\u7ebf\u53bb\u4ece\u4e0a\u5f80\u4e0b\u622a\u6240\u6709\u70b9\uff0c\u7b2c\u4e00\u4e2a\u70b9\u5c31\u662f\u6700\u4f73\u51b3\u7b56\u70b9\u3002</p> <p>\u5206\u6790\u5f97\u6211\u4eec\u5e94\u8be5\u7ef4\u62a4\u4e00\u4e2a\u4e0a\u51f8\u51fd\u6570\u3002\u7c7b\u6bd4\u5206\u6790\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/#_5","title":"\u4ee3\u7801","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E7%9F%A9%E9%98%B5%E4%BC%98%E5%8C%96/","title":"\u77e9\u9635\u4f18\u5316","text":"<p>\u56e0\u4e3a\u77e9\u9635\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b(\u81ea\u884c\u641c\u7d22),\u6240\u4ee5\u77e9\u9635\u5feb\u901f\u5e42\u548c\u5feb\u901f\u5e42\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u5feb\u901f\u5e42\u4e2d\u7684\u6570\u4e58\uff08res*=a\uff0ca*=a\u53d8\u6210\u4e86\u4e24\u4e2a\u77e9\u9635\u76f8\u4e58\uff09\u3002\u800c\u56e0\u4e3a\u77e9\u9635\u53ef\u4ee5\u5b9e\u73b0\u5e76\u884c\u8ba1\u7b97\uff0c\u5e76\u4e14\u5c06\u4e0b\u4e00\u4e2a\u9636\u6bb5\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u7ed3\u679c\u77e9\u9635\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u77e9\u9635\u6765\u52a0\u901f\u9012\u63a8\u5f0f\u7684\u63a8\u5bfc\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E7%9F%A9%E9%98%B5%E4%BC%98%E5%8C%96/#1-decoding-genome","title":"\u4f8b\u9898 #1 Decoding Genome","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6700\u8fd1\uff0c\u5bf9\u706b\u661f\u7684\u4e00\u6b21\u79d8\u5bc6\u7814\u7a76\u62c9\u5f00\u5e37\u5e55\uff0c\u5728\u8fd9\u6b21\u63a2\u5bfb\u4e2d\uff0c\u79d1\u5b66\u5bb6\u4eec\u53d1\u73b0\u4e86\u706b\u661f\u4e0a\u7684DNA\u3002</p> <p>\u4ed6\u4eec\u53d1\u73b0\uff0c\u706b\u661fDNA\u5305\u542b \\(n\\) \u4e2a\u6838\u82f7\u9178\uff0c\u4e14\u7531 \\(m\\) \u79cd\u4e0d\u540c\u6838\u82f7\u9178\u6784\u6210\uff08\u7f16\u53f7\u4e3a \\(1\\)~\\(m\\)\uff09\u3002</p> <p>\u4ed6\u4eec\u8fd8\u53d1\u73b0\u51fa\u4e8e\u67d0\u4e9b\u7279\u6b8a\u7684\u539f\u56e0\uff0c\u5b58\u5728 \\(k\\) \u5bf9\u6838\u82f7\u9178\uff0c\u4e00\u5bf9\u8fd9\u6837\u7684\u6838\u82f7\u9178\u4e0d\u4f1a\u8fde\u7eed\u51fa\u73b0\u5728\u706b\u661fDNA\u4e2d\u3002</p> <p>\u4f8b\u5982\u5b58\u5728\u4e00\u5bf9\u8fd9\u6837\u7684\u6838\u82f7\u9178 (1,2) \uff0c\u5219\u6838\u82f7\u91782\u4e0d\u80fd\u7d27\u8fde\u7740\u6838\u82f7\u91781\uff08\u5373DNA\u4e2d\u4e0d\u4f1a\u8fde\u7eed\u51fa\u73b0 1,2\uff09\uff1b\u4f46\u662f\u53ef\u4ee5\u8fde\u7eed\u51fa\u73b0 2,1</p> <p>\u79d1\u5b66\u5bb6\u4eec\u60f3\u77e5\u9053\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u706b\u661fDNA\uff08\u5982\u679c\u4e24\u4e2aDNA\u5b58\u5728\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4f7f\u5f97\u4e24\u4e2aDNA\u7684\u8be5\u4f4d\u7f6e\u7684\u6838\u82f7\u9178\u4e0d\u540c\uff0c\u5219\u8ba4\u4e3a\u8fd9\u4e24\u4e2aDNA\u4e0d\u540c\uff09\u3002</p> <p>\u8f93\u5165</p> <p>\u7b2c\u4e00\u884c\u5305\u542b \\(3\\) \u4e2a\u6574\u6570 \\(n,m,k\\) \uff0c\u542b\u4e49\u89c1\u9898\u76ee\u63cf\u8ff0\uff1b</p> <p>\u63a5\u4e0b\u6765 \\(k\\) \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(2\\) \u7684\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u7531\u5c0f\u5199\u5b57\u6bcd\u548c\u5927\u5199\u5b57\u6bcd\u6784\u6210\u2014\u2014\u5b57\u6bcd'a'-'z'\u8868\u793a\u6838\u82f7\u9178 \\(1\\)\\(26\\)\uff0c'A'-'Z'\u8868\u793a\u6838\u82f7\u9178 \\(27\\)\\(52\\)\uff1b\u8868\u793a\u9898\u76ee\u63cf\u8ff0\u4e2d\u7684 \\(k\\) \u5bf9\u6838\u82f7\u9178\u3002</p> <p>\u8f93\u51fa</p> <p>\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684DNA\uff0c\u7b54\u6848\u5bf9 \\((10^9+7)\\) \u53d6\u6a21\u3002</p> <p>\u6570\u636e\u89c4\u6a21</p> <p>\\(1\\leq n\\leq 10^{15},1\\leq m\\leq 52,0\\leq k\\leq m^2\\)\u3002</p> <p>\u9996\u5148\u6211\u4eec\u9700\u8981\u5199\u51fa\u57fa\u672c\u7684dp\u8f6c\u79fb</p> <p>\\(f_{i,j}=\\sum f_{i-1,k}[used_{j,k}==1]\\)</p> <p>\\(used_{j,k}\\)\u8868\u793a(j,k)\u987a\u5e8f\u76f8\u90bb\u5bf9\u662f\u5426\u51b2\u7a81\u3002</p> <pre><code>for(itn i=2;i&lt;=n;i++){\n     for(itn j=1;j&lt;=m;j++){\n         for(int k=1;k&lt;=m;k++){\n             f[i][j]+=f[i-1][k]*(used[k][j]==0);\n             f[i][j]%=MOD;\n         }\n     }\n }\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u53d1\u73b0\u5b83\u53ef\u4ee5\u5199\u6210\u9012\u63a8\u5f0f\u7684\u5f62\u5f0f\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u77e9\u9635\u6765\u52a0\u901f\u5b83\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\nint n,m,K;\n\n\n\nstruct mxu{\n    int a[66][66];\n\n\n    void base(){\n        for(int i=1;i&lt;=m;i++){\n            a[i][i]=1;\n        }\n    }\n\n    void clear(){\n\n        for(int i=0;i&lt;=60;i++){\n            for(int j=0;j&lt;=60;j++){\n                a[i][j]=0;\n            }\n        }\n    }\n}used,f;\n\n\nmxu add(mxu a,mxu b){\n    mxu r;\n    r.clear();//!\u4e0d\u6e05\u4f1a\u6302\n    for(int i=1;i&lt;=60;i++){\n        for(itn j=1;j&lt;=60;j++){\n            for(int k=1;k&lt;=60;k++){\n                (r.a[i][j]+=a.a[i][k]*b.a[k][j])%=MOD;\n            }\n        }\n    }\n    return r;\n}\n\n// \u8bbe f_i,j \u8868\u793a\u786e\u5b9a\u4e86\u524d i\u4e2a\u957f\u5ea6\u7684\u6838\u82f7\u9178\uff0c\u5176\u4e2d\u7b2c i\u4e2a\u7684\u6838\u82f7\u9178\u7684\u79cd\u7c7b\u662f j\u7684\u65b9\u6848\u6570\n\ninline int C(char c){\n    if(c&gt;='a')return c-'a'+1;\n    return c-'A'+27;\n}\n\nmxu ksm(mxu a,int b){\n    mxu r;\n    r.base();\n    while(b){\n        if(b&amp;1)r=add(r,a);\n        a=add(a,a);\n        b&gt;&gt;=1;    \n    }\n    return r;\n}\n\n\n\nvoid solve(){\n    n=rd,m=rd,K=rd;\n\n\n    for(int i=1;i&lt;=m;i++){\n        for(int j=1;j&lt;=m;j++){\n            used.a[i][j]=1;\n        }\n    }\n    for(int i=1;i&lt;=K;i++){\n        string s;\n        cin&gt;&gt;s;\n        used.a[C(s[0])][C(s[1])]=0;\n    }\n\n    for(int i=1;i&lt;=m;i++){\n        f.a[1][i]=1;\n    }\n\n    used=ksm(used,n-1);// \u53d8\u6362n-1\u6b21\n    f=add(f,used);\n\n\n    int ans=0;\n    for(itn i=1;i&lt;=m;i++){\n        ans+=f.a[1][i];\n        ans%=MOD;\n    }\n\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E4%BC%98%E5%8C%96/%E7%9F%A9%E9%98%B5%E4%BC%98%E5%8C%96/#2-product-oriented-recurrence","title":"\u4f8b\u9898 #2 Product Oriented Recurrence","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5f53 \\(x \\geq 4\\) \u65f6\uff0c\\(f_x = c^{2x - 6} \\cdot f_{x - 1} \\cdot f_{x - 2} \\cdot f_{x - 3}\\) \u3002</p> <p>\u73b0\u5728\u5df2\u77e5 \\(n,f_1,f_2,f_3,c\\) \u7684\u503c\uff0c\u6c42 \\(f_n\\) \u7684\u503c\uff0c\u5bf9 \\(10^9 + 7\\) \u53d6\u6a21\u3002</p> <p>\\((4 \\leq n \\leq 10^{18},1 \\leq f_1,f_2,f_3,c \\leq 10^9)\\)</p> <p>\u8fd9\u9053\u9898\u5176\u5b9e\u4e0d\u662fdp\uff0c\u4f46\u662f\u4e00\u9053\u77e9\u9635\u52a0\u901f\u7684\u597d\u9898\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u7684\u8f6c\u79fb\u5f0f\u4e2d\u5305\u542b\u4e86\u4e0d\u77e5\u4e00\u4e2a\u7248\u672c\u7684\u4fe1\u606f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u592a\u597d\u6b63\u89e3\u8fdb\u884c\u8f6c\u79fb\u3002</p> <p>\u6211\u4eec\u5148\u6a21\u62df\u4e00\u4e0b\uff0c\u8bd5\u7740\u628a\\(f_7\\)\u5199\u6210\\(f_1^if_2^jf_3^kc^a\\)\u7684\u5f62\u5f0f\u3002</p> <p>\u4e0d\u77e5\u9053\u4f60\u6709\u6ca1\u6709\u53d1\u73b0\uff0c\u5728\u6a21\u62df\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u77e9\u9635\u52a0\u901f\u8fd9\u4e2a\u6a21\u62df\u7684\u8fc7\u7a0b\u3002\u4e5f\u5c31\u662f\u8bf4\u672c\u9898\u7684\u77e9\u9635\u662f\u7528\u6765\u52a0\u901f\u8ba1\u7b97\u6700\u7ec8\u7b54\u6848\u7684\u6307\u6570\u7684\u3002\uff08\u4e5f\u5c31\u662f\u4e0a\u9762\u7684i,j,k,a\uff09\u3002</p> <p>\u6700\u540e\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662fi,j,k,a\u53ef\u80fd\u4f1a\u7206LL\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6b27\u62c9\u5b9a\u7406\u5c06\u5176\u7ea6\u675f\u5728LL\u8303\u56f4\u5185\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T a,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; a;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nint n;\nint c;\nint f1, f2, f3;\n\n\nstruct matrix {\n    int a[6][6];\n    matrix() {memset(a, 0, sizeof a);};\n    matrix operator * (const matrix &amp;b) const {\n        matrix res;\n        for(int i = 1;i &lt;= 5;i++) {\n            for(int j = 1;j &lt;= 5;j++) {\n                for(int k = 1;k &lt;= 5;k++) {\n                    res.a[i][j] += a[i][k] * b.a[k][j];\n                    res.a[i][j] %= (MOD - 1);\n                }\n            }\n        }\n        return res;\n    }\n}mx, mx2, w, x, y, z;\n\n\n\nvoid init() {\n    mx.a[1][1] = mx.a[1][2] = mx.a[2][1] = 1;\n    mx.a[2][3] = mx.a[3][1] = mx.a[4][1] = 1;\n    mx.a[4][4] = 1, mx.a[5][4] = 1, mx.a[5][5] = 1;\n    mx2.a[1][1] = mx2.a[1][2] = mx2.a[2][1] = 1;\n    mx2.a[3][1] = mx2.a[2][3] = 1;\n\n\n    w.a[1][1] = 0, \n    w.a[1][2] = 0, \n    w.a[1][3] = 0, \n    w.a[1][4] = 2, \n    w.a[1][5] = 2;\n\n\n    x.a[1][3] = 1;\n    y.a[1][2] = 1;\n    z.a[1][1] = 1;\n}\n\n\nvoid ksmmx(int b) {\n    while(b) {\n        if(b &amp; 1) w = w * mx;\n        mx = mx * mx;\n        b &gt;&gt;= 1;\n    }\n}\n\n\n\nvoid ksmmx2(int b) {\n    while(b) {\n        if(b &amp; 1) {\n            x = x * mx2;\n            y = y * mx2;\n            z = z * mx2;\n        }\n        mx2 = mx2 * mx2;\n        b &gt;&gt;= 1;\n    }\n}\n\nint ksm(int a,int b){\n    int r=1;\n    while(b){\n        if(b&amp;1)r=(r*a)%MOD;\n        a=(a*a)%MOD;\n        b&gt;&gt;=1;\n    }\n    return r;\n}\n\n\nvoid solve(){\n    n=rd,f1=rd,f2=rd,f3=rd,c=rd;\n    init();\n    if(n == 1) cout &lt;&lt; f1 &lt;&lt; endl;\n    else if(n == 2) cout &lt;&lt; f2 &lt;&lt; endl;\n    else if(n == 3) cout &lt;&lt; f3 &lt;&lt; endl;\n    else {\n        ksmmx(n - 3);// \u8f6c\u79fbc\u7684\u5e42\n        ksmmx2(n - 3);// \u8f6c\u79fbf1,f2,f3\u7684\u5e42\n        int p1 = w.a[1][1], p2 = x.a[1][1], p3 = y.a[1][1], p4 = z.a[1][1];\n        cout &lt;&lt; (ksm(c, p1) % MOD * ksm(f1, p2) % MOD * ksm(f2, p3) % MOD * ksm(f3, p4) % MOD) % MOD &lt;&lt; endl;\n    }\n}\n\n\n\n\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LCIS%2B%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/","title":"LCIS \u6700\u957f\u516c\u5171\u4e0a\u5347\u5b50\u5e8f\u5217","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LCIS%2B%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/#_1","title":"\u9898\u9762\u7ffb\u8bd1","text":"<p>\u6c42\u4e24\u4e2a\u4e32\u7684\u6700\u957f\u516c\u5171\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u8f93\u51fa\u957f\u5ea6\u4e0e\u5e8f\u5217\u3002</p> <p>The first line contains an integer \\(n\\) ( \\(1&lt;=n&lt;=500\\) ) \u2014 the length of the first sequence. The second line contains \\(n\\) space-separated integers from the range \\([0,10^{9}]\\) \u2014 elements of the first sequence. The third line contains an integer \\(m\\) ( \\(1&lt;=m&lt;=500\\) ) \u2014 the length of the second sequence. The fourth line contains \\(m\\) space-separated integers from the range \\([0,10^{9}]\\) \u2014 elements of the second sequence.</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(l, r, i) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(r, l, i) for (int i = r, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define pb push_back\n// #define mpy make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps b\n#define pf a\n\n#define lc(x) (x &lt;&lt; 1)\n#define rc(x) (x &lt;&lt; 1 | 1)\n\n#define X(j) i[j]\n#define Y(j) (dp[j] + (i[j] + L) * (i[j] + L))\n\n#define rd read()\nint read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n        xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\nconst int N = 1e3 + 15;\nconst int INF = 1e9 + 5;\nconst int MOD = 1e9 + 7;\nconst int M = N * 21;\n\nint n,m,a[N],b[N];\nint s[N],top;\nint pre[N][N],f[N][N];\n    int sp,ans=0;\n\n\n\nsigned  main(){\n    n=rd;\n    for(int i=1;i&lt;=n;i++)a[i]=rd;\n    m=rd;\n    for(int i=1;i&lt;=m;i++)b[i]=rd;\n    a[0]=b[0]=-1;\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            if(a[i]==b[j]){\n                for(int k=0;k&lt;j;k++){\n                    if(a[i]&gt;b[k]&amp;&amp;f[i][j]&lt;f[i-1][k]+1){\n                        f[i][j]=f[i-1][k]+1;\n                        pre[i][j]=k;\n                    }\n                }\n            }else{\n                f[i][j]=f[i-1][j];\n                pre[i][j]=pre[i-1][j];\n\n            }\n        }\n    }\n    for(int j=1;j&lt;=m;j++){\n        if(ans&lt;f[n][j])ans=f[n][j],sp=j;\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n    while(sp){\n        s[++top]=b[sp];\n        sp=pre[n][sp];\n    }\n    while(top)cout&lt;&lt;s[top--]&lt;&lt;' ';\n\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LCS%2B%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/","title":"LCS \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217","text":"<p>\u3010\u6a21\u677f\u3011\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u51fa \\(1,2,\\ldots,n\\) \u7684\u4e24\u4e2a\u6392\u5217 \\(P_1\\) \u548c \\(P_2\\) \uff0c\u6c42\u5b83\u4eec\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u3002</p> <p>\u6211\u4eec\u5148\u8bbe\u8ba1dp\u72b6\u6001\uff0cf_{i,j}\u8868\u793aP_1\u4ee5i\u7ed3\u5c3e\uff0cP_2\u4ee5j\u7ed3\u5c3e\u65f6\u7684LCS\u957f\u5ea6\u3002\u90a3\u4e48\u6709\u8f6c\u79fb</p> <ul> <li> <p>\u82e5P_1[i]=P_2[j]\uff0c\u90a3\u4e48f_{i,j}=f_{i-1-,j-1}+1</p> </li> <li> <p>\u5426\u5219\u5728f_{i-1,j},f_{i,j-1}\u4e2d\u53d6\u6700\u5927\u503c</p> </li> </ul> <p>\u5b9e\u73b0</p> <p>\u4e24\u5c42\u5faa\u73af\u5373\u53ef\u3002</p> <p>\u57fa\u672c\u7684\u5185\u5bb9\u4e0d\u8981\u5fd8\uff01</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN=1e5+5;\nint ans,n,p1[MAXN],p2[MAXN],dp[MAXN],web[MAXN];\nint main(){\n    cin&gt;&gt;n;\n\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;p1[i];web[p1[i]]=i;\n    }\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;p2[i];dp[i]=0x7f;\n    }\n    dp[0]=0;\n    for(int i=1;i&lt;=n;i++){\n        int l=0,r=ans,mid;\n        if(web[p2[i]]&gt;dp[ans])dp[++ans]=web[p2[i]];\n        else{\n            while(l&lt;r){\n                mid=(l/2;\n                if(dp[mid]&gt;web[p2[i]])r=mid;\n                else l=mid+1;\n            }\n            dp[l]=min(web[p2[i]],dp[l]);\n        }\n\n    }\n    cout&lt;&lt;ans;\n    return 0;\n} \n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LCS%2B%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/#_1","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570N\uff0c\u8868\u793a\u6211\u4eec\u8981\u5c061\u5230N\u63d2\u5165\u5e8f\u5217\u4e2d\u3002</p> <p>\u63a5\u4e0b\u662fN\u4e2a\u6570\u5b57\uff0c\u7b2ck\u4e2a\u6570\u5b57Xk\uff0c\u8868\u793a\u6211\u4eec\u5c06k\u63d2\u5165\u5230\u4f4d\u7f6eXk\uff080&lt;=Xk&lt;=k-1,1&lt;=k&lt;=N\uff09</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LCS%2B%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/#_2","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>N\u884c\uff0c\u7b2ci\u884c\u8868\u793ai\u63d2\u5165Xi\u4f4d\u7f6e\u540e\u5e8f\u5217\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u662f\u591a\u5c11\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LCS%2B%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/#1","title":"\u6837\u4f8b #1","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LCS%2B%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/#1_1","title":"\u6837\u4f8b\u8f93\u5165 #1","text":"<pre><code>3\n0 0 2\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LCS%2B%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/#1_2","title":"\u6837\u4f8b\u8f93\u51fa #1","text":"<pre><code>1\n1\n2\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LCS%2B%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/#_3","title":"\u63d0\u793a","text":"<p>100%\u7684\u6570\u636e n&lt;=100000</p> <ul> <li> <p>\u5bf9\u4e8e \\(50\\%\\) \u7684\u6570\u636e\uff0c \\(n \\le 10^3\\)\uff1b</p> </li> <li> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c \\(n \\le 10^5\\)\u3002</p> </li> </ul>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LIS%2B%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/","title":"LIS \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LIS%2B%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/#_1","title":"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u52a8\u89c4\u677f\u5b50\u9898\u3002</p> <p>\u7ed9\u51fa\u4e00\u4e2a\u7531 \\(n(n\\le 5000)\\) \u4e2a\u4e0d\u8d85\u8fc7 \\(10^6\\) \u7684\u6b63\u6574\u6570\u7ec4\u6210\u7684\u5e8f\u5217\u3002\u8bf7\u8f93\u51fa\u8fd9\u4e2a\u5e8f\u5217\u7684**\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217**\u7684\u957f\u5ea6\u3002</p> <p>\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u662f\u6307\uff0c\u4ece\u539f\u5e8f\u5217\u4e2d**\u6309\u987a\u5e8f**\u53d6\u51fa\u4e00\u4e9b\u6570\u5b57\u6392\u5728\u4e00\u8d77\uff0c\u8fd9\u4e9b\u6570\u5b57\u662f**\u9010\u6e10\u589e\u5927**\u7684\u3002</p> <pre><code>int n,m,a[N],f[N];\nint s[N],top;\n\nsigned main(){\n    n=rd;\n    f[0]=1;\n    for(int i=1;i&lt;=n;i++){\n        a[i]=rd;\n    }\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;i;j++){\n            if(a[i]&gt;a[j])f[i]=max(f[i],f[j]+1);\n        }\n    }\n    int ans=0;\n    for(int i=1;i&lt;=n;i++)ans=max(ans,f[i]);\n    cout&lt;&lt;ans+1&lt;&lt;endl;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LIS%2B%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/#lis-pathwalks","title":"\u56fe\u4e0aLIS | Pathwalks","text":"<p>\u7ed9\u5b9a \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u53ef\u80fd\u4e0d\u8fde\u901a\uff0c\u53ef\u80fd\u6709\u91cd\u8fb9\uff0c\u4e5f\u53ef\u80fd\u4f1a\u6709\u81ea\u73af\u3002\u6c42\u6700\u957f\u7684\u8def\u5f84(\u53ef\u4ee5\u7ecf\u8fc7\u91cd\u590d\u8282\u70b9)\uff0c\u4f7f\u5f97\u8fd9\u6761\u8def\u5f84\u7684\u7f16\u53f7\u548c\u6743\u503c\u90fd**\u4e25\u683c**\u5355\u8c03\u9012\u589e\uff0c\u5176\u4e2d\u7f16\u53f7\u6307\u8f93\u5165\u7684\u987a\u5e8f\u3002\u8def\u5f84\u7684\u957f\u5ea6\u662f\u6307\u7ecf\u8fc7\u8fb9\u7684\u6570\u91cf\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570 \\(n,m\\)\u3002</p> <p>\u7b2c\u4e8c\u884c\u5230\u7b2c \\(m+1\\) \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 \\(a,b,k\\)\uff0c\u8868\u793a\u9876\u70b9 \\(a\\) \u4e0e\u9876\u70b9 \\(b\\) \u6709\u4e00\u6761\u8fb9\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a \\(k\\)\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u957f\u7684\u8def\u5f84\u7684\u957f\u5ea6\u3002</p> <p>\\(1\\leq n,m\\leq10^5\\)\uff0c\\(0\\le w_i\\le10^5\\)\u3002</p> <p>retranslated by @\u768e\u6708\u534a\u6d12\u82b1\u3002</p> <p>\u56e0\u4e3a\u4e25\u683c\uff0c\u6240\u4ee5\u6bcf\u4e00\u6761\u8fb9\u81f3\u591a\u88ab\u9009\u4e2d\u4e00\u6b21\uff0c\u56e0\u6b64\u4e0d\u7528\u8003\u8651\u540e\u6548\uff0c\u53ef\u4ee5dp</p> <pre><code>/*\nCB Ntsc111\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned int\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define err cerr &lt;&lt; \"Error\"\n#define rd read()\n// #define nl putc('\\n')\n#define ot write\n#define nl putchar('\\n')\nint rd {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int INF = 1e18;\nconst int N = 1e5 + 5;\nconst int M = 1e6 + 5;\nconst int maxlog = 10;\n\nint ans;\nint res;\nint n, m;\n\nmap&lt;int, int&gt; mp[N];\n\nint dfs(int x, int v) {\n  int res = 0;\n  auto p = mp[x].lower_bound(v);\n  res = (p == mp[x].begin()) ? 0 : ((--p)-&gt;second);\n  return res;\n}\n\nsigned main() {\n  n = rd, m = rd;\n  for (int i = 1; i &lt;= m; ++i) {\n    int x = rd, y = rd, z = rd;\n    res = dfs(x, z);\n    ++res;\n    if (res &gt; dfs(y, z)) {\n      auto p = mp[y].lower_bound(z);\n      mp[y][z] = res;\n      for (auto q = p; q != mp[y].end(); q = mp[y].erase(q)) {\n        if ((q-&gt;second) &gt; res)\n          break;\n      }\n    }\n    ans = std ::max(ans, res);\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n\n/*\n4\n()()\n1 -1 5 11\n\n4\n()()\n1 6 5 11\n*/\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/LIS%2B%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/#tjoi2013","title":"\u4e0d\u65ad\u63d2\u5165\u7684\u591a\u6b21\u8be2\u95ee | [TJOI2013] \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u521d\u59cb\u4e3a\u7a7a\u3002\u73b0\u5728\u6211\u4eec\u5c061\u5230N\u7684\u6570\u5b57\u63d2\u5165\u5230\u5e8f\u5217\u4e2d\uff0c\u6bcf\u6b21\u5c06\u4e00\u4e2a\u6570\u5b57\u63d2\u5165\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u4f4d\u7f6e\u3002\u6bcf\u63d2\u5165\u4e00\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u90fd\u60f3\u77e5\u9053\u6b64\u65f6\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u662f\u591a\u5c11\uff1f</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u56e0\u4e3a\u63d2\u5165\u662f\u4ece\u5c0f\u5230\u5927\u63d2\u5165\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u628a\u6700\u7ec8\u7684\u6570\u7ec4\u6c42\u51fa\u6765\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u6b21LIS\u3002\u7136\u540e\u6211\u4eec\u628a\u4ee5\u6bcf\u4e00\u4e2a\u4f4d\u7f6ei\u4e3a\u7ed3\u5c3e\u7684LIS\u957f\u5ea6\u90fd\u6c42\u51fa\u6765\u3002</p> <p>\u5bf9\u4e8e\u4f4d\u7f6ei\u7684\u7b54\u6848\uff0c\u8bbe\u4f4d\u7f6ei\u7684\u503c\u4e3av_i\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6240\u6709j\u6ee1\u8db3v_j\u2264v_i\u7684ans_j\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\u56e0\u4e3ai\u540e\u9762\u63d2\u5165\u7684\u5176\u4ed6\u6570\u5b57\u5bf9i\u53cai\u7b7e\u540d\u63d2\u5165\u7684\u6570\u5b57\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002</p> <p>\u4e3a\u4e86\u5feb\u901f\u6c42\u51fa\u6700\u540e\u7684\u5e8f\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u94fe\u8868\u3002\u5f53\u7136\uff0cvector\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528vector\u6765\u89e3\u51b3\u3002</p> <p>\u4e0d\u8981\u628a\u7ebf\u6bb5\u6811\u5199\u9519\u554a\u5582\uff0c\u6700\u8fd1\u53c8\u6253\u53cd\u53c8\u6f0fpushdown\u7684\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\n#define rep(l, r, i) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(r, l, i) for (int i = r, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n#define X(j) i[j]\n#define Y(j) (dp[j] + (i[j] + L) * (i[j] + L))\n\n#define rd read()\nint read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\n\nint n;\n\nint t[N&lt;&lt;2];\nvoid pushup(int x,int l,int r){\n    t[x]=max(t[x&lt;&lt;1],t[x&lt;&lt;1|1]);\n    // cerr&lt;&lt;\":pu \"&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;\" v:\"&lt;&lt;t[x]&lt;&lt;endl;\n}\n\nvoid change(int x,int l,int r,int p,int v){\n    if(l==r){\n        t[x]=v;\n        return ;\n    }\n    int mid=l+r&gt;&gt;1;\n    // cerr&lt;&lt;mid&lt;&lt;' '&lt;&lt;p&lt;&lt;endl;\n    if(p&lt;=mid)change(x&lt;&lt;1,l,mid,p,v);//NO mid&lt;=p!!!\n    else change(x&lt;&lt;1|1,mid+1,r,p,v);\n    pushup(x,l,r);\n}\n\nint query(int x,int l,int r,int pl,int pr){\n    if(pl&gt;pr)return 0;\n    if(l&gt;=pl&amp;&amp;r&lt;=pr){\n        // cerr&lt;&lt;\"return at:\"&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;\"withv:\"&lt;&lt;t[x]&lt;&lt;endl;\n        return t[x];}\n    int mid=l+r&gt;&gt;1;\n    int res=0;\n    if(pl&lt;=mid)res=max(res,query(x&lt;&lt;1,l,mid,pl,pr));\n    if(pr&gt;mid)res=max(res,query(x&lt;&lt;1|1,mid+1,r,pl,pr));\n    return res;\n}\nint g[N],f[N],ans[N];\n\nvoid solve(){\n    n=rd;\n    vector&lt;int&gt; v;\n    for(int i=1;i&lt;=n;i++){\n        int loc=rd;\n        v.insert(v.begin()+loc,i);\n    }\n    // for(auto a:v)cerr&lt;&lt;a&lt;&lt;' ';\n\n    for(int i=1;i&lt;=n;i++){\n        g[v[i-1]]=f[i]=query(1,1,n,1,v[i-1]-1)+1;\n        // cerr&lt;&lt;\"q:\"&lt;&lt;query(1,1,n,1,v[i-1]-1)&lt;&lt;\" at:\"&lt;&lt;v[i-1]&lt;&lt;endl;\n        // cerr&lt;&lt;\"change at:\"&lt;&lt;v[i-1]&lt;&lt;\" v:\"&lt;&lt;f[i]&lt;&lt;endl;\n        change(1,1,n,v[i-1],f[i]);\n    }\n    // cerr&lt;&lt;endl;\n    // for(int i=1;i&lt;=n;i++)cerr&lt;&lt;f[i]&lt;&lt;endl;\n    for(int i=1;i&lt;=n;i++){\n        ans[i]=max(ans[i-1],g[i]);\n    }\n    for(int i=1;i&lt;=n;i++){\n        cout&lt;&lt;ans[i]&lt;&lt;endl;\n    }\n\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2/","title":"\u6570\u5b57\u4e09\u89d2\u5f62","text":"<p>\u6570\u5b57\u91d1\u5b57\u5854</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2/#usaco15-ioi1994-number-triangles","title":"[USACO1.5] [IOI1994]\u6570\u5b57\u4e09\u89d2\u5f62 Number Triangles","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u89c2\u5bdf\u4e0b\u9762\u7684\u6570\u5b57\u91d1\u5b57\u5854\u3002</p> <p>\u5199\u4e00\u4e2a\u7a0b\u5e8f\u6765\u67e5\u627e\u4ece\u6700\u9ad8\u70b9\u5230\u5e95\u90e8\u4efb\u610f\u5904\u7ed3\u675f\u7684\u8def\u5f84\uff0c\u4f7f\u8def\u5f84\u7ecf\u8fc7\u6570\u5b57\u7684\u548c\u6700\u5927\u3002\u6bcf\u4e00\u6b65\u53ef\u4ee5\u8d70\u5230\u5de6\u4e0b\u65b9\u7684\u70b9\u4e5f\u53ef\u4ee5\u5230\u8fbe\u53f3\u4e0b\u65b9\u7684\u70b9\u3002</p> <p></p> <p>\u5728\u4e0a\u9762\u7684\u6837\u4f8b\u4e2d\uff0c\u4ece \\(7 \\to 3 \\to 8 \\to 7 \\to 5\\) \u7684\u8def\u5f84\u4ea7\u751f\u4e86\u6700\u5927\u6743\u503c\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le r \\le 1000\\)\uff0c\u6240\u6709\u8f93\u5165\u5728 \\([0,100]\\) \u8303\u56f4\u5185\u3002</p> <p>\u9898\u76ee\u7ffb\u8bd1\u6765\u81eaNOCOW\u3002</p> <p>USACO Training Section 1.5</p> <p>IOI1994 Day1T1</p> <p>\u5b9a\u4e49\\(f_{i,j}\\)\u4e3a\u8d70\u5230(i,j) \u65f6\u7684\u6700\u5927\u6743\u503c\uff0c\uff0c\u8f6c\u79fb\u53ef\u4ee5\u4ece\\(f_{i-1,j},f_{i-1,j-1}\\)\u6765\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/%E6%9E%84%E5%BB%BA%E5%9B%9E%E6%96%87%E4%B8%B2/","title":"\u6784\u5efa\u56de\u6587\u4e32/\u7f16\u8f91\u8ddd\u79bb","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/%E6%9E%84%E5%BB%BA%E5%9B%9E%E6%96%87%E4%B8%B2/#ioi2000","title":"[IOI2000] \u56de\u6587\u5b57\u4e32","text":"<p>\u56de\u6587\u8bcd\u662f\u4e00\u79cd\u5bf9\u79f0\u7684\u5b57\u7b26\u4e32\u3002\u4efb\u610f\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u901a\u8fc7\u63d2\u5165\u82e5\u5e72\u5b57\u7b26\uff0c\u90fd\u53ef\u4ee5\u53d8\u6210\u56de\u6587\u8bcd\u3002\u6b64\u9898\u7684\u4efb\u52a1\u662f\uff0c\u6c42\u51fa\u5c06\u7ed9\u5b9a\u5b57\u7b26\u4e32\u53d8\u6210\u56de\u6587\u8bcd\u6240\u9700\u8981\u63d2\u5165\u7684\u6700\u5c11\u5b57\u7b26\u6570\u3002</p> <p>\u6bd4\u5982 \\(\\verb!Ab3bd!\\) \u63d2\u5165 \\(2\\) \u4e2a\u5b57\u7b26\u540e\u53ef\u4ee5\u53d8\u6210\u56de\u6587\u8bcd \\(\\verb!dAb3bAd!\\) \u6216 \\(\\verb!Adb3bdA!\\)\uff0c\u4f46\u662f\u63d2\u5165\u5c11\u4e8e \\(2\\) \u4e2a\u7684\u5b57\u7b26\u65e0\u6cd5\u53d8\u6210\u56de\u6587\u8bcd\u3002</p> <p>\u6ce8\u610f\uff1a\u6b64\u95ee\u9898\u533a\u5206\u5927\u5c0f\u5199\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u6570\u636e\uff0c\\(0&lt;l\\le 1000\\)\u3002</p> <p>\u6211\u4eec\u8003\u8651\u5427\u539f\u6765\u7684\u4e32S\u53d1\u8fc7\u6765\u53d8\u6210T\uff0c\u6c42S,T\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u90a3\u4e9b\u5b57\u6bcd\u5c31\u662f\u6211\u4eec\u9700\u8981\u63d2\u5165\u7684\u4e86\uff08\u5373\u6211\u4eec\u8981\u63d2\u5165\u7684\u5b57\u7b26\u6570\u662fS\u957f\u5ea6\u51cf\u53bb\u516c\u5171\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff09</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/%E7%BA%BF%E6%80%A7DP%E5%85%B8%E4%BE%8B/","title":"\u7ebf\u6027DP\u5178\u4f8b","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/%E7%BA%BF%E6%80%A7DP%E5%85%B8%E4%BE%8B/#1-agc031b-reversi","title":"\u4f8b\u9898 #1 [AGC031B] Reversi","text":"<p>\u9898\u9762\u7ffb\u8bd1</p> <p>\u6709 \\(N\\) \u5757\u77f3\u5934\u6446\u6210\u4e00\u884c\uff0c\u4ece\u5de6\u6570\u7b2c \\(i\\) \u5757\u77f3\u5934\u7684\u989c\u8272\u662f \\(C_i\\)\u3002</p> <p>\u73b0\u5728\u3059\u306c\u3051\u4f1a\u8fdb\u884c \\(0\\) \u6b21\u6216\u82e5\u5e72\u6b21\u5982\u4e0b\u64cd\u4f5c\uff1a\u9009\u53d6\u4e24\u5757\u989c\u8272\u76f8\u540c\u7684\u77f3\u5934\u5e76\u5c06\u4e24\u5757\u77f3\u5934\u4e4b\u95f4\u7684\u6240\u6709\u77f3\u5934\u90fd\u67d3\u6210\u4e0e\u8fd9\u4e24\u5757\u77f3\u5934\u76f8\u540c\u7684\u989c\u8272\u3002</p> <p>\u6c42\u6700\u7ec8\u6240\u6709\u53ef\u80fd\u7684\u77f3\u5934\u6392\u5217\u65b9\u6848\u6570\uff0c\u7b54\u6848\u5bf9 \\(10^9 + 7\\) \u53d6\u6a21\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/DP%E5%85%A5%E9%97%A8/%E7%BA%BF%E6%80%A7DP%E5%85%B8%E4%BE%8B/#_1","title":"\u601d\u8def","text":"<p>\u3010\u8fd9\u662f\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684dp\u95ee\u9898\u3011</p> <p>\u6211\u4eec\u8003\u8651dp</p> <p>\u5982\u679c\\(c_{i-1}=c_i\\)\uff0c\u90a3\u4e48\\(f_i=f_{i-1}\\)\uff0c\u5426\u5219\u82e5\u5b58\u5728\\(c_j=c_i,j&lt;i\\)\uff0c\u5148\u8003\u8651\u76f4\u63a5\u7ee7\u627f\uff08\u5373\u4e0d\u533a\u95f4\u4fee\u6539\uff09\u65f6\u7684\u8f6c\u79fb\uff0c\u90a3\u4e48\u5c31\u662f\\(f_{i-1}\\)\u3002\u73b0\u5728\u518d\u8003\u8651\u9700\u8981\u533a\u95f4\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u662f\\(f_{j-1}\\)\u3002\u5982\u679c\u6709\u591a\u4e2aj\u90fd\u6ee1\u8db3\uff0c\u90a3\u4e48\u5c31\u52a0\u4e0a\u6240\u6709\u7684\\(f_{j-1}\\)\u3002\u663e\u7136\u8f6c\u79fb\u5373\u53ef\u3002</p> <pre><code>/*\nCode by Ntsc_Hodaka\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define pii pair&lt;int, int&gt;\n\n///----///\n#define rd read()\ninline int read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\ninline void write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\n///----///\nconst int N = 2e6 + 5;\nconst int M = 1e7 + 5;\nconst int INF = 1e12 + 5;\nconst int MOD = 1e9+7;\nconst double eps = 1e-7;\n\nint n;\nint f[N],cnt[N],c[N];\n\n\nsigned main(){\n  n=rd;\n  for(int i=1;i&lt;=n;i++){\n    c[i]=rd;\n  }\n  f[0]=1;\n  for(int i=1;i&lt;=n;i++){\n    f[i]=f[i-1];\n    if(c[i-1]==c[i])continue;\n    (f[i]+=cnt[c[i]])%=MOD;\n    (cnt[c[i]]+=f[i-1])%=MOD;\n  }\n  cout&lt;&lt;f[n]&lt;&lt;endl;\n}\n</code></pre> <ul> <li> <p>\\(1\\ \\leq\\ N\\ \\leq\\ 2\\times\\ 10^5\\)</p> </li> <li> <p>\\(1\\ \\leq\\ C_i\\ \\leq\\ 2\\times\\ 10^5(1\\leq\\ i\\leq\\ N)\\)</p> </li> </ul>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/","title":"01\u80cc\u5305","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/#_1","title":"\u7b80\u4ecb","text":"<p>01\u80cc\u5305\u662f\u5728M\u4ef6\u7269\u54c1\u53d6\u51fa\u82e5\u5e72\u4ef6\u653e\u5728\u7a7a\u95f4\u4e3aW\u7684\u80cc\u5305\u91cc\uff0c\u6bcf\u4ef6\u7269\u54c1\u7684\u4f53\u79ef\u4e3aW1\uff0cW2\u81f3Wn\uff0c\u4e0e\u4e4b\u76f8\u5bf9\u5e94\u7684\u4ef7\u503c\u4e3aP1,P2\u81f3Pn\u300201\u80cc\u5305\u662f\u80cc\u5305\u95ee\u9898\u4e2d\u6700\u7b80\u5355\u7684\u95ee\u9898\u300201\u80cc\u5305\u7684\u7ea6\u675f\u6761\u4ef6\u662f\u7ed9\u5b9a\u51e0\u79cd\u7269\u54c1\uff0c\u6bcf\u79cd\u7269\u54c1\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\uff0c\u5e76\u4e14\u6709\u6743\u503c\u548c\u4f53\u79ef\u4e24\u4e2a\u5c5e\u6027\u3002\u572801\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u56e0\u4e3a\u6bcf\u79cd\u7269\u54c1\u53ea\u6709\u4e00\u4e2a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7269\u54c1\u53ea\u9700\u8981\u8003\u8651\u9009\u4e0e\u4e0d\u9009\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u4e0d\u9009\u62e9\u5c06\u5176\u653e\u5165\u80cc\u5305\u4e2d\uff0c\u5219\u4e0d\u9700\u8981\u5904\u7406\u3002\u5982\u679c\u9009\u62e9\u5c06\u5176\u653e\u5165\u80cc\u5305\u4e2d\uff0c\u7531\u4e8e\u4e0d\u6e05\u695a\u4e4b\u524d\u653e\u5165\u7684\u7269\u54c1\u5360\u636e\u4e86\u591a\u5927\u7684\u7a7a\u95f4\uff0c\u9700\u8981\u679a\u4e3e\u5c06\u8fd9\u4e2a\u7269\u54c1\u653e\u5165\u80cc\u5305\u540e\u53ef\u80fd\u5360\u636e\u80cc\u5305\u7a7a\u95f4\u7684\u6240\u6709\u60c5\u51b5\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/#_2","title":"\u601d\u60f3","text":"<p>DP\u601d\u60f3</p> <p>\u8bb0\u4e00\u4e2a\u6570\u7ec4<code>f[i][j]</code>\uff0c\u8868\u793a\u5f53\u524d\u9009\u5b8c\u7b2ci\u4ef6\u7269\u54c1\uff0c\u80cc\u5305\u5df2\u5360\u7528\u7a7a\u95f4\u4e3aj\u65f6\u80fd\u53d6\u5230\u7684\u6700\u5927\u4ef7\u503c</p> <p>\u51b3\u7b56</p> <p><code>f[i][j] = max(f[i - 1][j], f[i - 1][j - w[i]] + c[i])</code></p> <p><code>f[i][j]</code>\u53d6\u4ee5\u4e0b\u60c5\u51b5\u4e2d\u7684\u6700\u5927\u503c</p> <ul> <li> <p>\u4e0d\u53d6\u7b2ci\u4ef6\u7269\u54c1\u3002<code>f[i - 1][j]</code></p> </li> <li> <p>\u53d6\u7b2ci\u4ef6\u7269\u54c1<code>f[i - 1][j - w[i]] + c[i])</code></p> </li> </ul> <p><code>w[i]</code>\u8868\u793ai\u7684\u5360\u7528\u7a7a\u95f4 <code>c[i]</code>\u8868\u793ai\u7684\u4ef7\u503c \u8bf7\u601d\u8003\u3002</p> <p>\u5faa\u73af</p> <p>i++{j++}</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/#1","title":"\u4f8b\u9898 #1","text":"<p>\u4e00\u4e2a\u65c5\u884c\u8005\u6709\u4e00\u4e2a\u6700\u591a\u80fd\u88c5 M\u516c\u65a4\u7684\u80cc\u5305\uff0c\u73b0\u5728\u6709 n\u4ef6\u7269\u54c1\uff0c\u5b83\u4eec\u7684\u91cd\u91cf\u5206\u522b\u662fW1\uff0cW2\uff0c...,Wn,\u5b83\u4eec\u7684\u4ef7\u503c\u5206\u522b\u4e3aC1,C2,...,Cn\uff0c\u6c42\u65c5\u884c\u8005\u80fd\u83b7\u5f97\u6700\u5927\u603b\u4ef7\u503c\u3002</p> <p>\u8d2a\u5fc3\u53cd\u4f8b\uff1a</p> <p>w=90 c=90</p> <p>w=50 c=49</p> <p>w=50 c=49</p> <p>M=100</p> <p>\u4ee3\u7801</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint m, n, w[205], c[205], f[205][205];\n\nint main() {\n    cin &gt;&gt; m &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; w[i] &gt;&gt; c[i];\n    for (int i = 1; i &lt;= n; i++) {\n        for (int j = m; j &gt; 0; j--) {\n            if (w[i] &lt;= j)\n                f[i][j] = max(f[i - 1][j], f[i - 1][j - w[i]] + c[i]);\n            else\n                f[i][j] = f[i - 1][j];\n        }\n    }\n\n    cout &lt;&lt; f[n][m];\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/#2-01","title":"\u4f8b\u9898 #2 \u9ad8\u7ef4\u5ea6\u768401\u80cc\u5305","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/#usaco03fall-cow-exhibition-g","title":"[USACO03FALL] Cow Exhibition G","text":"<p>\u5976\u725b\u60f3\u8bc1\u660e\u5b83\u4eec\u662f\u806a\u660e\u800c\u98ce\u8da3\u7684\u3002\u4e3a\u6b64\uff0c\u8d1d\u897f\u7b79\u5907\u4e86\u4e00\u4e2a\u5976\u725b\u535a\u89c8\u4f1a\uff0c\u5979\u5df2\u7ecf\u5bf9 \\(N\\) \u5934\u5976\u725b\u8fdb\u884c\u4e86\u9762\u8bd5\uff0c\u786e\u5b9a\u4e86\u6bcf\u5934\u5976\u725b\u7684\u667a\u5546\u548c\u60c5\u5546\u3002</p> <p>\u8d1d\u897f\u6709\u6743\u9009\u62e9\u8ba9\u54ea\u4e9b\u5976\u725b\u53c2\u52a0\u5c55\u89c8\u3002\u7531\u4e8e\u8d1f\u7684\u667a\u5546\u6216\u60c5\u5546\u4f1a\u9020\u6210\u8d1f\u9762\u6548\u679c\uff0c\u6240\u4ee5\u8d1d\u897f\u4e0d\u5e0c\u671b\u51fa\u5c55\u5976\u725b\u7684\u667a\u5546\u4e4b\u548c\u5c0f\u4e8e\u96f6\uff0c\u6216\u60c5\u5546\u4e4b\u548c\u5c0f\u4e8e\u96f6\u3002\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\u4e0b\uff0c\u5979\u5e0c\u671b\u51fa\u5c55\u5976\u725b\u7684\u667a\u5546\u4e0e\u60c5\u5546\u4e4b\u548c\u8d8a\u5927\u8d8a\u597d\uff0c\u8bf7\u5e2e\u52a9\u8d1d\u897f\u6c42\u51fa\u8fd9\u4e2a\u6700\u5927\u503c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\uff1a\u5355\u4e2a\u6574\u6570 \\(N\\)\uff0c\\(1 \\le N \\le 400\\)\u3002</p> <p>\u7b2c\u4e8c\u884c\u5230\u7b2c \\(N+1\\) \u884c\uff1a\u7b2c \\(i+1\\) \u884c\u6709\u4e24\u4e2a\u6574\u6570\uff1a\\(S_i\\) \u548c \\(F_i\\)\uff0c\u8868\u793a\u7b2c \\(i\\) \u5934\u5976\u725b\u7684\u667a\u5546\u548c\u60c5\u5546\uff0c\u2212 \\(1000 \\le S_i;F_i \\le 1000\\)\u3002</p> <p>\u6211\u4eec\u628a\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u80cc\u5305\u5bb9\u91cf\uff0c\u4e00\u4e2a\u8f6c\u5316\u4e3a\u6c42\u8be5\u7ef4\u5ea6\u7684\u6700\u5927\u503c\u5373\u53ef\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/01%E8%83%8C%E5%8C%85/#1_1","title":"\u7ec3\u4e60 #1 \u6d88\u5931\u4e4b\u7269","text":"<p>\u63cf\u8ff0</p> <p>ftiasch \u6709 \\(n\\) \u4e2a\u7269\u54c1, \u4f53\u79ef\u5206\u522b\u662f \\(w_1,w_2,\\dots,w_n\\)\u3002\u7531\u4e8e\u5979\u7684\u758f\u5ffd\uff0c\u7b2c \\(i\\) \u4e2a\u7269\u54c1\u4e22\u5931\u4e86\u3002</p> <p>\u201c\u8981\u4f7f\u7528\u5269\u4e0b\u7684 \\(n-1\\) \u7269\u54c1\u88c5\u6ee1\u5bb9\u79ef\u4e3a \\(x\\) \u7684\u80cc\u5305\uff0c\u6709\u51e0\u79cd\u65b9\u6cd5\u5462\uff1f\u201d\u2014\u2014\u8fd9\u662f\u7ecf\u5178\u7684\u95ee\u9898\u4e86\u3002</p> <p>\u5979\u628a\u7b54\u6848\u8bb0\u4e3a \\(\\text{cnt}(i,x)\\) \uff0c\u60f3\u8981\u5f97\u5230\u6240\u6709\\(i \\in [1,n]\\), \\(x \\in [1,m]\\) \u7684 \\(\\text{cnt}(i,x)\\) \u8868\u683c\u3002</p> <p></p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570 \\(n,m\\)\uff0c\u8868\u793a\u7269\u54c1\u7684\u6570\u91cf\u548c\u6700\u5927\u7684\u5bb9\u79ef\u3002 \u7b2c\u4e8c\u884c \\(n\\) \u4e2a\u6574\u6570 \\(w_1,w_2,\\dots,w_n\\)\uff0c\u8868\u793a\u6bcf\u4e2a\u7269\u54c1\u7684\u4f53\u79ef\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u4e00\u4e2a \\(n \\times m\\) \u7684\u77e9\u9635\uff0c\u8868\u793a \\(\\text{cnt}(i,x)\\) \u7684**\u672b\u4f4d\u6570\u5b57**\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m \\le 2000\\)\uff0c\u4e14 \\(1\\le v_i\\le m\\)\u3002</p> <p>\u3010\u6837\u4f8b\u89e3\u91ca\u3011 \u5982\u679c\u7269\u54c1 3 \u4e22\u5931\u7684\u8bdd\uff0c\u53ea\u6709\u4e00\u79cd\u65b9\u6cd5\u88c5\u6ee1\u5bb9\u91cf\u662f 2 \u7684\u80cc\u5305\uff0c\u5373\u9009\u62e9\u7269\u54c1 1 \u548c\u7269\u54c1 2\u3002</p> <p>\\(\\text{upd 2023.8.11}\\)\uff1a\u65b0\u589e\u52a0\u4e94\u7ec4 Hack \u6570\u636e\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E4%BA%8C%E7%BB%B4%E8%83%8C%E5%8C%85/","title":"\u4e8c\u7ef4\u80cc\u5305","text":"<p>\u4e8c\u7ef4\u80cc\u5305\uff08\u4e8c\u7ef401\u80cc\u5305\uff09\u5c31\u662f\u5728\u539f01\u80cc\u5305\u5de6\u53f3\u4e00\u4e2a\u9650\u5236\u2014\u2014\u91cd\u91cf\u7684\u57fa\u7840\u4e0a\uff0c\u518d\u6dfb\u52a0\u4e00\u4e2a\u9650\u5236\u2014\u2014\u4f53\u79ef\u3002</p> <p>\u7ed9\u5b9an nn\u79cd\u7269\u54c1\u548c\u4e00\u80cc\u5305\u3002\u7269\u54c1i ii\u7684\u91cd\u91cf\u662fw_i\uff0c\u4f53\u79ef\u662fb_i\uff0c\u5176\u4ef7\u503c\u4e3av_i\uff0c\u80cc\u5305\u7684\u5bb9\u91cf\u4e3ac cc\uff0c\u5bb9\u79ef\u4e3ad dd\u3002\u95ee\u5e94\u5982\u4f55\u9009\u62e9\u88c5\u5165\u80cc\u5305\u4e2d\u7684\u7269\u54c1\uff0c\u4f7f\u5f97\u88c5\u5165\u80cc\u5305\u4e2d\u7269\u54c1\u7684\u603b\u4ef7\u503c\u6700\u5927\uff1f</p> <p>\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u5728\u539f\u6709dp\u72b6\u6001\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u7b2c3\u4e2a\u7ef4\u5ea6\u3002</p> <p>\u8bbe\u8ba1dp\u72b6\u6001\u4e3af_{i,j,k}\u8868\u793a\u53ef\u9009\u7269\u54c1\u4e3ai,i+1,\u2026,n\uff1b\u80cc\u5305\u5bb9\u91cf\u4e3aj\uff0c\u80cc\u5305\u5bb9\u79ef\u4e3ak\u65f6\u7684\u4e8c\u7ef401\u80cc\u5305\u95ee\u9898\u7684\u6700\u4f18\u503c\u3002\u5728\u8f6c\u79fb\u65f6\u5ef6\u752801\u80cc\u5305\u7684\u8f6c\u79fb\u65b9\u6cd5\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u5224\u65ad\u4e24\u4e2a\u6761\u4ef6\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nVM)\u3002</p> <p>\u4f18\u5316\u4e0a\u5ef6\u752801\u80cc\u5305\u4f18\u5316\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u7b2c\u4e00\u7ef4\u538b\u53bb\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E4%BE%9D%E8%B5%96%E8%83%8C%E5%8C%85/","title":"\u4f9d\u8d56\u80cc\u5305","text":"<p>\u4f9d\u8d56\u80cc\u5305\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u6811\u5f62dp\u89e3\u51b3\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E4%BE%9D%E8%B5%96%E8%83%8C%E5%8C%85/#1","title":"\u4f8b\u9898 #1 \u6709\u7ebf\u7535\u89c6\u7f51","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u67d0\u6536\u8d39\u6709\u7ebf\u7535\u89c6\u7f51\u8ba1\u5212\u8f6c\u64ad\u4e00\u573a\u91cd\u8981\u7684\u8db3\u7403\u6bd4\u8d5b\u3002\u4ed6\u4eec\u7684\u8f6c\u64ad\u7f51\u548c\u7528\u6237\u7ec8\u7aef\u6784\u6210\u4e00\u68f5\u6811\u72b6\u7ed3\u6784\uff0c\u8fd9\u68f5\u6811\u7684\u6839\u7ed3\u70b9\u4f4d\u4e8e\u8db3\u7403\u6bd4\u8d5b\u7684\u73b0\u573a\uff0c\u6811\u53f6\u4e3a\u5404\u4e2a\u7528\u6237\u7ec8\u7aef\uff0c\u5176\u4ed6\u4e2d\u8f6c\u7ad9\u4e3a\u8be5\u6811\u7684\u5185\u90e8\u8282\u70b9\u3002</p> <p>\u4ece\u8f6c\u64ad\u7ad9\u5230\u8f6c\u64ad\u7ad9\u4ee5\u53ca\u4ece\u8f6c\u64ad\u7ad9\u5230\u6240\u6709\u7528\u6237\u7ec8\u7aef\u7684\u4fe1\u53f7\u4f20\u8f93\u8d39\u7528\u90fd\u662f\u5df2\u77e5\u7684\uff0c\u4e00\u573a\u8f6c\u64ad\u7684\u603b\u8d39\u7528\u7b49\u4e8e\u4f20\u8f93\u4fe1\u53f7\u7684\u8d39\u7528\u603b\u548c\u3002</p> <p>\u73b0\u5728\u6bcf\u4e2a\u7528\u6237\u90fd\u51c6\u5907\u4e86\u4e00\u7b14\u8d39\u7528\u60f3\u89c2\u770b\u8fd9\u573a\u7cbe\u5f69\u7684\u8db3\u7403\u6bd4\u8d5b\uff0c\u6709\u7ebf\u7535\u89c6\u7f51\u6709\u6743\u51b3\u5b9a\u7ed9\u54ea\u4e9b\u7528\u6237\u63d0\u4f9b\u4fe1\u53f7\u800c\u4e0d\u7ed9\u54ea\u4e9b\u7528\u6237\u63d0\u4f9b\u4fe1\u53f7\u3002</p> <p>\u5199\u4e00\u4e2a\u7a0b\u5e8f\u627e\u51fa\u4e00\u4e2a\u65b9\u6848\u4f7f\u5f97\u6709\u7ebf\u7535\u89c6\u7f51\u5728\u4e0d\u4e8f\u672c\u7684\u60c5\u51b5\u4e0b\u4f7f\u89c2\u770b\u8f6c\u64ad\u7684\u7528\u6237\u5c3d\u53ef\u80fd\u591a\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570 \\(N\\) \u548c \\(M\\)\uff0c\u5176\u4e2d \\(2 \\le N \\le 3000\\)\uff0c\\(1 \\le M \\le N-1\\)\uff0c\\(N\\) \u4e3a\u6574\u4e2a\u6709\u7ebf\u7535\u89c6\u7f51\u7684\u7ed3\u70b9\u603b\u6570\uff0c\\(M\\) \u4e3a\u7528\u6237\u7ec8\u7aef\u7684\u6570\u91cf\u3002</p> <p>\u7b2c\u4e00\u4e2a\u8f6c\u64ad\u7ad9\u5373\u6811\u7684\u6839\u7ed3\u70b9\u7f16\u53f7\u4e3a \\(1\\)\uff0c\u5176\u4ed6\u7684\u8f6c\u64ad\u7ad9\u7f16\u53f7\u4e3a \\(2\\) \u5230 \\(N-M\\)\uff0c\u7528\u6237\u7ec8\u7aef\u7f16\u53f7\u4e3a \\(N-M+1\\) \u5230 \\(N\\)\u3002</p> <p>\u63a5\u4e0b\u6765\u7684 \\(N-M\\) \u884c\u6bcf\u884c\u8868\u793a\u2014\u4e2a\u8f6c\u64ad\u7ad9\u7684\u6570\u636e\uff0c\u7b2c \\(i+1\\) \u884c\u8868\u793a\u7b2c \\(i\\) \u4e2a\u8f6c\u64ad\u7ad9\u7684\u6570\u636e\uff0c\u5176\u683c\u5f0f\u5982\u4e0b\uff1a</p> <p>\\(K \\ \\ A_1 \\ \\ C_1 \\ \\ A_2 \\ \\ C_2 \\ \\ \\ldots \\ \\ A_k \\ \\ C_k\\)</p> <p>\\(K\\) \u8868\u793a\u8be5\u8f6c\u64ad\u7ad9\u4e0b\u63a5 \\(K\\) \u4e2a\u7ed3\u70b9\uff08\u8f6c\u64ad\u7ad9\u6216\u7528\u6237\uff09\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u5bf9\u5e94\u4e00\u5bf9\u6574\u6570 \\(A\\) \u4e0e \\(C\\) \uff0c\\(A\\) \u8868\u793a\u7ed3\u70b9\u7f16\u53f7\uff0c\\(C\\) \u8868\u793a\u4ece\u5f53\u524d\u8f6c\u64ad\u7ad9\u4f20\u8f93\u4fe1\u53f7\u5230\u7ed3\u70b9 \\(A\\) \u7684\u8d39\u7528\u3002\u6700\u540e\u4e00\u884c\u4f9d\u6b21\u8868\u793a\u6240\u6709\u7528\u6237\u4e3a\u89c2\u770b\u6bd4\u8d5b\u800c\u51c6\u5907\u652f\u4ed8\u7684\u94b1\u6570\u3002\u5355\u6b21\u4f20\u8f93\u6210\u672c\u548c\u7528\u6237\u613f\u610f\u4ea4\u7684\u8d39\u7528\u5747\u4e0d\u8d85\u8fc7 10\u3002</p> <p>https://paste.ubuntu.com/p/xN9NRmYvpY/</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u6587\u4ef6\u4ec5\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4e0a\u8ff0\u95ee\u9898\u6240\u8981\u6c42\u7684\u6700\u5927\u7528\u6237\u6570\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E4%BE%9D%E8%B5%96%E8%83%8C%E5%8C%85/#_1","title":"\u601d\u8def","text":"<p>\u7528\u6811\u5f62dp\u6765\u89e3\u91ca\u5206\u7ec4\u80cc\u5305\u5c31\u5f88\u7b80\u5355\u4e86\u3002\u8bbef_{i,j}\u4e3a\u5728\u5b50\u6811i\u4e2d\u9009\u62e9j\u4e2a\u7528\u6237\u6ee1\u8db3\uff0c\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u5229\u6da6\u3002\u4e3a\u4e86\u4fdd\u8bc1\u88ab\u6ee1\u8db3\u7684\u7528\u6237\u548ci\u4e4b\u95f4\u7684\u8def\u7ebf\u5168\u90e8\u6253\u901a\uff0c\u5728\u8f6c\u79fb\u4e2d\u5f88\u663e\u7136\u53ef\u4ee5\u4fdd\u8bc1\u3002</p> <p>\\(f_{i,j}=\\max(f_{i,j-k}+f_{son(i),k}-cost(i,son(i)))\\)</p> <p>\u6700\u540e\u4ece\u5927\u5230\u5c0f\u627e\u5230\u7b2c\u4e00\u4e2a\u22650\u7684f_{1,i}\u5373\u53ef\u3002</p> <pre><code>/*\nCB Ntsc111\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define ull unsigned int\n#define pii pair&lt;int, int&gt;\n#define pf to\n#define ps second\n#define int long long\n\n#define err cerr &lt;&lt; \"Error\"\n#define rd read()\n\n#define ot write\n#define nl putchar('\\n')\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int M = 800;\nconst int mxxlog = 10;\nint MOD = 1e9 + 57;\nconst int N = 1 + 4e3 + 3;\nconst int INF = 1e9;\nconst double eps = 1e-10;\n\nint n, m, to[N], nxt[N], w[N], v[N], c[N];\nint f[N][N];\nint cnt = 0;\nvoid add(int a, int b, int c) {\n  v[++cnt] = b;\n  w[cnt] = c;\n  nxt[cnt] = to[a];\n  to[a] = cnt;\n}\n\nint dfs(int u) {\n  if (u &gt; n - m) {\n    f[u][1] = c[u];\n    return 1;\n  }\n  int sum = 0;\n  for (int i = to[u]; i != -1; i = nxt[i]) {\n    int x = dfs(v[i]);\n    sum += x;\n    for (int j = sum; j; j--)\n      for (int k = 1; k &lt;= x; k++)\n        f[u][j] = max(f[u][j], f[u][j - k] + f[v[i]][k] - w[i]);\n  }\n  return sum;\n}\n\nsigned main() {\n  n = rd, m = rd;\n  for (int i = 1; i &lt;= n; i++)\n    to[i] = -1;\n  for (int u = 1, son; u &lt;= n - m; u++) {\n    son = rd;\n    for (int j = 1, v, w; j &lt;= son; j++) {\n      v = rd, w = rd;\n      add(u, v, w);\n    }\n  }\n  for (int u = n - m + 1; u &lt;= n; u++)\n    c[u] = rd;\n  memset(f, -60, sizeof(f));\n  for (int u = 1; u &lt;= n; u++)\n    f[u][0] = 0;\n  dfs(1);\n\n  for (int i = m; i; i--)\n    if (f[1][i] &gt;= 0) {\n      printf(\"%lld\", i);\n      break;\n    }\n\n  return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%88%86%E7%BB%84%E8%83%8C%E5%8C%85/","title":"\u5206\u7ec4\u80cc\u5305","text":"<p>\u5206\u7ec4\u80cc\u5305\u7684\u660e\u663e\u7279\u5f81\u5c31\u662f\u7269\u54c1\u95f4\u6709\u660e\u663e\u7684\u5206\u7ec4\u3002</p> <p>\u5e38\u89c1\u7684\u6a21\u578b\u6709\uff1a</p> <ul> <li> <p>\u6bcf\u7ec4\u4e2d\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\u7269\u54c1</p> </li> <li> <p>\u6bcf\u591a\u53d6\u4e00\u7ec4\u5c31\u8981\u4ea7\u751f\u989d\u5916\u82b1\u8d39\u2192\u53c2\u8003\u4f9d\u8d56\u80cc\u5305</p> </li> </ul> <p>\u5728\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u5206\u522b\u8003\u8651\uff0c\u6700\u540e\u5c06\u7b54\u6848\u7ec4\u5408\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%88%86%E7%BB%84%E8%83%8C%E5%8C%85/#1-acboy-needs-your-help","title":"\u4f8b\u9898 #1 ACboy needs your help","text":"<p>Problem Description \u95ee\u9898\u63cf\u8ff0</p> <p>ACbboy \u8fd9\u5b66\u671f\u6709 N \u95e8\u8bfe\u7a0b\uff0c\u4ed6\u8ba1\u5212\u6700\u591a\u82b1 M \u5929\u65f6\u95f4\u5b66\u4e60\u3002\u5f53\u7136\uff0c\u4ed6\u5c06\u4ece\u4e0d\u540c\u7684\u8bfe\u7a0b\u4e2d\u83b7\u5f97\u7684\u5229\u6da6\u53d6\u51b3\u4e8e\u4ed6\u82b1\u5728\u4e0a\u9762\u7684\u65e5\u5b50\u3002\u5982\u4f55\u5b89\u6392N\u95e8\u8bfe\u7a0b\u7684M\u5929\uff0c\u5b9e\u73b0\u5229\u6da6\u6700\u5927\u5316\uff1f</p> <p>Input \u8f93\u5165</p> <p>\u8f93\u5165\u7531\u591a\u4e2a\u6570\u636e\u96c6\u7ec4\u6210\u3002\u6570\u636e\u96c6\u4ece\u5305\u542b\u4e24\u4e2a\u6b63\u6574\u6570 N \u548c M \u7684\u884c\u5f00\u59cb\uff0cN \u662f\u8bfe\u7a0b\u6570\uff0cM \u662f ACboy \u7684\u5929\u6570\u3002\u63a5\u4e0b\u6765\u662f\u77e9\u9635 A[i][j]\uff0c\uff081&lt;=i&lt;=N&lt;=100,1&lt;=j&lt;=M&lt;=100\uff09\u3002A[i][j] \u8868\u793a\u5982\u679c ACboy \u5728 i \u8bfe\u7a0b\u4e0a\u82b1\u8d39 j \u5929\uff0c\u4ed6\u5c06\u83b7\u5f97\u4ef7\u503c A[i][j] \u7684\u5229\u6da6\u3002 N = 0 \u548c M = 0 \u65f6\u7ed3\u675f\u8f93\u5165\u3002</p> <p>Output \u8f93\u51fa</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u636e\u96c6\uff0c\u60a8\u7684\u7a0b\u5e8f\u5e94\u8f93\u51fa\u4e00\u884c\uff0c\u5176\u4e2d\u5305\u542b ACboy \u5c06\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\u7684\u6570\u91cf\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%88%A9%E7%94%A8%E7%89%B9%E6%AE%8A%E6%80%A7%E8%B4%A8%E5%AE%9E%E7%8E%B0%E8%83%8C%E5%8C%85%E7%9A%84%E5%A4%9A%E6%AC%A1%E6%B1%82%E8%A7%A3/","title":"\u5229\u7528\u7279\u6b8a\u6027\u8d28\u5b9e\u73b0\u80cc\u5305\u7684\u591a\u6b21\u6c42\u89e3","text":"<p>DP | \u80cc\u5305\u95ee\u9898</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%88%A9%E7%94%A8%E7%89%B9%E6%AE%8A%E6%80%A7%E8%B4%A8%E5%AE%9E%E7%8E%B0%E8%83%8C%E5%8C%85%E7%9A%84%E5%A4%9A%E6%AC%A1%E6%B1%82%E8%A7%A3/#_1","title":"\u5229\u7528\u7279\u6b8a\u6027\u8d28\u5b9e\u73b0\u80cc\u5305\u7684\u591a\u6b21\u6c42\u89e3","text":"<p>\u300c\u96c5\u793c\u96c6\u8bad 2017 Day5\u300d\u73e0\u5b9d /\u300cNAIPC2016\u300dJewel Thief</p> <p>\u7ed9\u70b901\u80cc\u5305\u6a21\u578b\uff0c\u5f53\u8981\u6c42\u80cc\u5305\u5bb9\u91cf\u5728\\(1\\sim k\\)\u65f6\u7684\u6700\u5927\u4ef7\u503c\u3002</p> <p>n\u22641e6,k\u22645e4,v_i\u2264300</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%88%A9%E7%94%A8%E7%89%B9%E6%AE%8A%E6%80%A7%E8%B4%A8%E5%AE%9E%E7%8E%B0%E8%83%8C%E5%8C%85%E7%9A%84%E5%A4%9A%E6%AC%A1%E6%B1%82%E8%A7%A3/#_2","title":"\u601d\u8def","text":"<p>\u8fd9\u91cc\u6211\u4eec\u8f6c\u79fb\u5230\u7269\u54c1\u7684\u4f53\u79ef\u6709\u5f88\u591a\u662f\u76f8\u540c\u7684\u3002\u90a3\u4e48\u5bf9\u4e8e\u76f8\u540c\u4f53\u79ef\u7684\u7269\u54c1\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u4f18\u5148\u9009\u62e9\u4ef7\u503c\u5927\u7684\u3002\u73b0\u5728\u7684\u95ee\u9898\u8c8c\u4f3c\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u4e0d\u5b8c\u5168\u7684\u591a\u91cd\u80cc\u5305\u4e86\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c31\u6309\u7167\u591a\u91cd\u80cc\u5305\u6765\u5199\uff0c\u5b9a\u4e49f_{i,j} \u4e3a\u5728\u5df2\u7ecf\u8003\u8651\u4e86\u524di\u79cd\u7269\u54c1\uff0c\u4e14\u80cc\u5305\u5360\u7528\u4f53\u79ef\u4e3aj\u65f6\u7684\u6700\u5927\u4ef7\u503c</p> <p>\u6211\u4eec\u6709\u8f6c\u79fb</p> <p>f_{i,j}=\\max(f_{i-1,j-v_ik}+w(i,k))\uff0c\u5176\u4e2dw(i,k)\u4e3a\u7b2ci\u7c7b\u7269\u54c1\uff08\u540c\u4e00\u7c7b\u7269\u54c1\u5373\u4f53\u79ef\u76f8\u7b49\u7684\u7269\u54c1\uff09\u62ffk\u4e2a\u7684\u6700\u5927\u4ef7\u503c\uff0c\u5373\u8d2a\u5fc3\u9009\u62e9\u5176\u4e2d\u4ef7\u503c\u524dk\u5927\u7684\u7269\u54c1\u7684\u4ef7\u503c\u548c\u3002</p> <p>\u538b\u7ef4\u53ef\u4ee5\u5199\u6210f_{j}=\\max(f_{v-v_ik}+w(i,k))</p> <p>\u90a3\u4e48\u5e94\u7528\u51b3\u7b56\u5355\u8c03\u6027\uff0c\u9996\u5148\u6211\u4eec\u5f97\u627e\u5230\u6ee1\u8db3\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u80fd\u4ece\u4ef7\u503c\u51fd\u6570\u4e2d\u770b\u770b\u4e86</p> <p>\u9996\u5148\u6211\u4eec\u7684w(i,k)\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2ai\u90fd\u5199\u6210\u4e00\u4e2a\u6570\u7ec4w_{i,k}\uff0c\u7701\u7565i\u7ef4\uff0c\u90a3\u4e48\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e00\u7ef4\u7684\u6570\u7ec4w_k\u3002\u4f46\u662f\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u6ee1\u8db3\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\u4e86\u3002\u56de\u987eDP | \u533a\u95f4dp\u4e2d\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\u7684\u6761\u4ef6\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u529e\uff1f\u8003\u8651**\u628a\u4e00\u7ef4\u7684\u51fd\u6570\u53d8\u4e3a\u4e8c\u7ef4\u3002**\u6211\u4eec\u53d8\u6362\u51fd\u6570w_k\u4e3aw'{j-k,j}\uff0c\u6620\u5c04\u5173\u7cfb\u4e3af:w'\u3002\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u9a8c\u8bc1\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\u6761\u4ef6\uff1a\u4ea4\u53c9\u4f18\u4e8e\u5305\u542b\u3002}\u2192w_{j-i</p> <p>\u56e0\u4e3a\u6211\u4eec\u9a8c\u8bc1\u4ea4\u53c9\u4f18\u4e8e\u5305\u542b\u7684\u4e24\u79cd\u60c5\u51b5\u4e2d\u7684\u4e24\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\u548c\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u662f\u8f6c\u5316\u56dew\u6570\u7ec4\uff0c\u5c31\u53d8\u6210\u4e86</p> <ul> <li> <p>\u4ea4\u53c9\uff1aw_i+w_j</p> </li> <li> <p>\u5305\u542b\uff1aw_l+w_r\uff0c\u5176\u4e2di+j=l+r,lj\u3002 <p>\u90a3\u4e48\u5f88\u663e\u7136\uff0cw_i+w_j&gt;w_l+w_r\u3002</p> <p>\u56de\u5230\u8f6c\u79fb\u5f0f\uff0c\u6211\u4eec\u7684\u51b3\u7b56\u70b9\u5373k\uff0c\u90a3\u4e48\u73b0\u5728j-k\u662f\u5355\u8c03\u7684\uff0c\u8f6c\u79fb\u4e5f\u5c31\u5355\u8c03\u4e86\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%88%A9%E7%94%A8%E7%89%B9%E6%AE%8A%E6%80%A7%E8%B4%A8%E5%AE%9E%E7%8E%B0%E8%83%8C%E5%8C%85%E7%9A%84%E5%A4%9A%E6%AC%A1%E6%B1%82%E8%A7%A3/#_3","title":"\u4ee3\u7801","text":"<pre><code>hole\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/","title":"\u591a\u91cd\u80cc\u5305","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/#_2","title":"\u601d\u60f3","text":"<p>\u7c7b\u4f3c\u5b8c\u5168\u80cc\u5305\uff0c\u53ea\u4e0d\u8fc7k\u5faa\u73af\uff0c\u679a\u4e3e\u7b2ci\u4ef6\u7269\u54c1\u53d6k\u4efd\u7684\u6761\u4ef6\u6539\u53d8\u4e86</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/#_3","title":"\u6ce8\u610f","text":"<p>\u89c2\u5bdf<code>f[i][j]</code>\u4e2d\u4fdd\u5b58\u7684\u4fe1\u606f\u548c\u9898\u76ee\uff0c\u6211\u4eec**\u4e0d\u53ef\u4ee5**\u628ak\u5faa\u73af\u53bb\u6389\uff0c\u8bf7\u601d\u8003\uff01</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/#1","title":"\u4f8b\u9898 #1","text":"<p>\u7b2c\u4e00\u884c\u4e8c\u4e2a\u6570n(n\u2264500)\uff0cm(m\u22646000)\uff0c\u5176\u4e2dn\u4ee3\u8868\u5e0c\u671b\u8d2d\u4e70\u7684\u5956\u54c1\u7684\u79cd\u6570\uff0cm\u8868\u793a\u62e8\u6b3e\u91d1\u989d\u3002</p> <p>\u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c3\u4e2a\u6570\uff0cv\u3001w\u3001s\uff0c\u5206\u522b\u8868\u793a\u7b2cI\u79cd\u5956\u54c1\u7684\u4ef7\u683c\u3001\u4ef7\u503c\uff08\u4ef7\u683c\u4e0e\u4ef7\u503c\u662f\u4e0d\u540c\u7684\u6982\u5ff5\uff09\u548c\u80fd\u8d2d\u4e70\u7684\u6700\u5927\u6570\u91cf\uff08\u4e700\u4ef6\u5230s\u4ef6\u5747\u53ef\uff09\uff0c\u5176\u4e2dv\u2264100\uff0cw\u22641000\uff0cs\u226410\u3002 \u6c42\u6b64\u6b21\u8d2d\u4e70\u80fd\u83b7\u5f97\u7684\u6700\u5927\u7684\u4ef7\u503c\uff08\u6ce8\u610f\uff01\u4e0d\u662f\u4ef7\u683c\uff09\u3002</p> <p>\u89e3\u51b3</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint m, n, w[10005], c[10005], f[10005], s[10005];\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m ;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; c[i] &gt;&gt; w[i] &gt;&gt; s[i];\n    for (int i = 1; i &lt;= n; i++) {\n        for (int j = m; j &gt;= 0; j--)\n            for (int k = 0; k &lt;= s[i]; k++) {\n                if (j - k * c[i] &lt; 0)\n                    break;\n                f[j] = max(f[j], f[j - k * c[i]] + k * w[i]);\n            }\n    }\n\n    cout &lt;&lt; f[m];\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/#2-balticoi-2022-day1-uplifting-excursion","title":"\u4f8b\u9898 #2 [BalticOI 2022 Day1] Uplifting Excursion","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6709 \\(2m+1\\) \u79cd\u7269\u54c1\uff0c\u91cd\u91cf\u5206\u522b\u4e3a \\(-m,-m+1,\\ldots, m-1,m\\)\u3002\u91cd\u91cf\u4e3a \\(i\\) \u7684\u7269\u54c1\u6709 \\(a_i\\) \u4e2a\u3002</p> <p>\u4f60\u9700\u8981\u62ff\u8d70\u82e5\u5e72\u7269\u54c1\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u7269\u54c1\u91cd\u91cf\u4e4b\u548c\u6070\u597d\u4e3a \\(l\\)\u3002\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u4f60\u9700\u8981\u62ff\u5c3d\u53ef\u80fd\u591a\u7684\u7269\u54c1\u3002</p> <p>\u95ee\u5728\u7269\u54c1\u91cd\u91cf\u4e4b\u548c\u6070\u597d\u4e3a \\(l\\) \u7684\u57fa\u7840\u4e0a\uff0c\u4f60\u6700\u591a\u80fd\u62ff\u591a\u5c11\u7269\u54c1\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/#_4","title":"\u601d\u8def","text":"<p>\u6211\u4eec\u8003\u8651\u8fd9\u9053\u9898\uff0c\u5e94\u8be5\u5c31\u662f\u4e00\u9053\u80cc\u5305\u7684\u9898\u76ee.\u4f46\u662f\u540c\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u6709\u4e00\u4e9b\u7269\u54c1\u7684\u91cd\u91cf\u662f\u53ef\u4ee5\u62b5\u6d88\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5148\u9009\u4e2d\u8fd9\u4e9b\u7269\u54c1\u3002</p> <p>\u597d\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u8fd8\u6709\u4e00\u4e9b\u7269\u54c1\uff0c\u4ee5\u53ca\u4e00\u4e2a\u9700\u8981\u88ab\u586b\u6ee1\u7684\uff0c\u5bb9\u91cf\u4e3al\u7684\u4e14\u5f53\u524d\u4e3a\u7a7a\u7684\u80cc\u5305\u3002\u8fd9\u91cc\u6211\u4eec\u5173\u6ce8\u5230\u4e00\u70b9\uff0c\u5c31\u662f\u6211\u4eec\u521a\u624d\u7684\u8d2a\u5fc3\u679a\u4e3e\u5176\u5b9e\u4e0d\u4e00\u5b9a\u6b63\u786e\u2014\u2014\u4e3a\u4e86\u8fd9\u91cc\u6211\u4eec\u6070\u597d\u586b\u6ee1\u5bb9\u91cf\u4e3al\u7684\u80cc\u5305\uff0c\u6211\u4eec\u53ef\u80fd\u4e0d\u5f97\u4e0d\u4ece\u7528\u6765\u62b5\u6d88\u80cc\u5305\u5bb9\u91cf\u7684\u7269\u54c1\uff08\u5373\u91cd\u91cf\u4e3a\u8d1f\u7684\u7269\u54c1\uff09\u4e2d\u5254\u9664\u4e00\u90e8\u5206\uff0c\u4ee5\u4fbf\u4e8e\u6211\u4eec\u53ef\u4ee5\u8fbe\u5230l\u7684\u603b\u91cd\u91cf\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\uff0cl\u5b9e\u5728\u662f\u592a\u5927\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u5730\u591a\u62ff\u4e00\u4e9b\u7269\u54c1\u3002\u4e8b\u5b9e\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u7684l\u592a\u5927\u4e86\uff0c\u6211\u4eec\u5e94\u8be5\u8003\u8651\u5982\u4f55\u51cf\u5c0f\u8fd9\u4e2a\u503c\u57df\u3002</p> <p>\u4e3a\u4e86\u907f\u514d\u5206\u7c7b\u8ba8\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u5f00\u59cb\u5c31\u628a\u6240\u6709\u7269\u54c1\u53d6\u4e0b\uff0c\u8bbe\u6240\u6709\u7269\u54c1\u7684\u91cd\u91cf\u548c\u4e3as\uff0c\u82e5s&gt;l\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u9009\u4e2d\u6700\u5927\u7684\u6570\u5220\u9664\uff0c\u76f4\u5230s\u2264l\u3002\u8fd9\u91cc\u6211\u4eec\u6ce8\u610f\u5230\u6bcf\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u90fd\u662f1\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u8d2a\u5fc3\u662f\u6b63\u786e\u7684\u3002</p> <p>\u82e5sl\u4e3a\u6b62\u3002 <p>\u64cd\u4f5c\u5b8c\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u73b0\u5728\u80cc\u5305\u8fd8\u5269\u4f59\u7684\u7a7a\u95f4\u662f&lt;m\u7684\uff01\u73b0\u5728\u6211\u4eec\u770b\u4f3c\u5c31\u53ef\u4ee5\u8fdb\u884c\u80cc\u5305\u4e86\u3002\u6211\u4eec\u8981\u8003\u8651\u53cd\u6094\u64cd\u4f5c\u3002</p> <p>\u6211\u4eec\u7ed9\u5df2\u7ecf\u9009\u62e9\u7684\u7269\u54c1\u8d4b\u8d1f\u91cd\u91cf\u548c\u8d1f\u4ef7\u503c\uff0c\u6ca1\u6709\u9009\u62e9\u7684\u7269\u54c1\u76f4\u63a5\u52a0\u5165\uff0c\u7136\u540e\u8dd1\u591a\u91cd\u80cc\u5305\u5373\u53ef\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/#_5","title":"\u4ee3\u7801","text":"<p>\u8fd9\u91cc\u6211\u4eec\u72e0\u72e0\u5730\u6307\u51fa\uff0c\u8981\u5f04\u660e\u767d\u504f\u79fb\u91cf\u548c\u8fb9\u754c\u3002\uff08\u8c03\u4e862\u5c0f\u65f6\uff09</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\nconst char el='\\n';\nconst bool enable_dbg = 0;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s &lt;&lt; ' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e5;\nconst int MOD = 1e9 + 7;\n\n\n\nint used[N];\nstruct node{\n    int w,v;\n}o[N];\nint ans,f[2][N],cnt;\nint n,m,l,a[N];\nint sum;\n\nvoid ins(int x){\n    int b=1;\n    int cur=a[x]-used[x],w=x-m;\n    dbg(x,cur);\n    while(cur){\n        if(b&gt;cur)b=cur;//\u6ce8\u610f\uff0c\u53ea\u9700\u8981\u4e00\u6b212^k\uff0c\u5269\u4e0b\u7684\u76f4\u63a5\u539f\u6570\u52a0\u5165\uff0c\u4e0d\u9700\u8981\u518d\u4e8c\u8fdb\u5236\u5206\u89e3\n        o[++cnt]={w*b,b};\n        cur-=b;\n        b&lt;&lt;=1;\n    }\n    cur=used[x];\n    b=1;\n    while(cur){\n        if(b&gt;cur)b=cur;\n        o[++cnt]={-w*b,-b};\n        cur-=b;\n        b&lt;&lt;=1;\n    }\n}\n\nvoid solve(){\n    m=rd,l=rd;\n    for(int i=0;i&lt;=m*2;i++){\n        a[i]=rd;\n        if(i&gt;m)continue;\n        sum+=a[i]*(i-m);\n        used[i]=a[i];\n        ans+=a[i];\n    }\n    for(int i=m/\u4f18\u5148\u52a0\u5165\u5c0f\u7684\n        int num=min((l-sum)/(i-m),a[i]);\n        used[i]=num;\n        ans+=num;\n        sum+=num*(i-m);\n    }\n    for(int i=0;i&lt;m;i++){//\u4f18\u5148\u5220\u5c0f\u7684,0\u4e0d\u9700\u8981\u8003\u8651\n        int num=min((l-sum)/(m-i),a[i]);\n        used[i]-=num;\n        ans-=num;\n        sum-=num*(i-m);\n    }\n    if(l-sum&gt;m){\n        puts(\"impossible\");\n        return ;\n    }\n\n    dbg(\"ok\");\n\n    for(int i=0;i&lt;=2*m;i++){\n        if(i==m)continue;\n        ins(i);\n    }\n    // dbg(\"ok\");\n\n    //WA below\n\n    // memset(f,-0x3f,sizeof f);\n    // f[0][M]=0;\n    // for(int i=1;i&lt;=cnt;i++){\n    //     for(int j=M+m;j&gt;=M-m;j--){\n    //         f[i&amp;1][j]=f[i&amp;1^1][j];\n    //         if(j&gt;=o[i].w &amp;&amp; j - o[i].w &lt; N)\n    //             f[i&amp;1][j]=max(f[i&amp;1][j],f[i&amp;1^1][j-o[i].w]+o[i].v);\n    //     }\n    // }\n\n    memset(f, -0x3f, sizeof f);\n    f[0][M] = 0;\n    for (int i=1;i&lt;=cnt;i++){\n        for (int j=M/\u6ce8\u610f\u8fb9\u754c\uff08\u8c03\u4e862hrs TT\uff09\n        {\n            f[i&amp;1][j]=f[(i-1)&amp;1][j];\n            if(j&gt;=o[i].w&amp;&amp;j-o[i].w&lt;=M+m*m)f[i&amp;1][j]=max(f[i&amp;1][j],f[(i-1)&amp;1][j-o[i].w]+o[i].v);\n        }\n    }\n\n    if(f[cnt&amp;1][l-sum+M]+ans&lt;0)puts(\"impossible\");\n    else cout&lt;&lt;f[cnt&amp;1][l-sum+M]+ans&lt;&lt;endl;\n\n\n}   \n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>\u5bf9\u4e8e\u6240\u6709\u6570\u636e\uff0c\u6ee1\u8db3 \\(1\\leq m \\leq 300\\)\uff0c\\(-10^{18}\\le l \\le 10^{18}\\)\uff0c\\(0\\le a_i\\le 10^{12}\\)\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/","title":"\u5b8c\u5168\u80cc\u5305","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/#_2","title":"\u7b80\u4ecb","text":"<p>\u9898\u76ee \u6709N\u79cd\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3aV\u7684\u80cc\u5305\uff0c\u6bcf\u79cd\u7269\u54c1\u90fd\u6709\u65e0\u9650\u4ef6\u53ef\u7528\u3002 \u7b2ci\u79cd\u7269\u54c1\u7684\u4f53\u79ef\u662fc\uff0c\u4ef7\u503c\u662fw\u3002\u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u4f53\u79ef\u603b\u548c\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u4ef7\u503c\u603b\u548c\u6700\u5927\u3002</p> <p>\u57fa\u672c\u601d\u8def</p> <p>\u8fd9\u4e2a\u95ee\u9898\u975e\u5e38\u7c7b\u4f3c\u4e8e01\u80cc\u5305\u95ee\u9898\uff0c\u6240\u4e0d\u540c\u7684\u662f\u6bcf\u79cd\u7269\u54c1\u6709\u65e0\u9650\u4ef6\uff0c\u4e5f\u5c31\u662f\u4ece\u6bcf\u79cd\u7269\u54c1\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u4e0e\u5b83\u76f8\u5173\u7684\u7b56\u7565\u5df2\u5e76\u975e\u53d6\u6216\u4e0d\u53d6\u4e24\u79cd\uff0c\u800c\u662f\u6709\u53d60\u4ef6\u3001\u53d61\u4ef6\u3001\u53d62\u4ef6\u2026\u2026\u53d6[V/c]\u4ef6\u7b49\u5f88\u591a\u79cd\u3002\u5982\u679c\u4ecd\u7136\u6309\u7167\u89e301\u80cc\u5305\u65f6\u7684\u601d\u8def\uff0c\u4ee4f[v]\u8868\u793a\u524di\u79cd\u7269\u54c1\u6070\u653e\u5165\u4e00\u4e2a\u5bb9\u91cf\u4e3av\u7684\u80cc\u5305\u7684\u6700\u5927\u6743\u503c\u3002\u4ecd\u7136\u53ef\u4ee5\u6309\u7167\u6bcf\u79cd\u7269\u54c1\u4e0d\u540c\u7684\u7b56\u7565\u5199\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u50cf\u8fd9\u6837\uff1a</p> <pre><code>f[j]=max{f[j],f[j-k*c]+k*w}\uff080&lt;=k*c&lt;=v\uff09\n</code></pre> <p>\u8fd9\u8ddf01\u80cc\u5305\u95ee\u9898\u4e00\u6837\u6709\\(O(N*V)\\)\u4e2a\u72b6\u6001\u9700\u8981\u6c42\u89e3\uff0c\u4f46\u6c42\u89e3\u6bcf\u4e2a\u72b6\u6001f[v]\u7684\u65f6\u95f4\u662f\\(O(V/c)\\)\uff0c\u603b\u7684\u590d\u6742\u5ea6\u662f\u8d85\u8fc7\\(O(VN)\\)\u7684\u3002 \u5c0601\u80cc\u5305\u95ee\u9898\u7684\u57fa\u672c\u601d\u8def\u52a0\u4ee5\u6539\u8fdb\uff0c\u5f97\u5230\u4e86\u8fd9\u6837\u4e00\u4e2a\u6e05\u6670\u7684\u65b9\u6cd5\u3002\u8fd9\u8bf4\u660e01\u80cc\u5305\u95ee\u9898\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u53ef\u4ee5\u63a8\u53ca\u5176\u5b83\u7c7b\u578b\u7684\u80cc\u5305\u95ee\u9898\u3002\u4f46\u662f\u7531\u4e8e\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u6211\u4eec\u8fd8\u662f\u8bd5\u56fe\u6539\u8fdb\u8fd9\u4e2a\u590d\u6742\u5ea6\u3002</p> <p>\u7b80\u5355\u6709\u6548\u4f18\u5316</p> <p>\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u6709\u4e00\u4e2a\u5f88\u7b80\u5355\u6709\u6548\u7684\u4f18\u5316\uff0c\u662f\u8fd9\u6837\u7684\uff1a\u82e5\u4e24\u4ef6\u7269\u54c1i\u3001j\u6ee1\u8db3<code>c[i]&lt;=c[j]</code>\u4e14<code>w[i]&gt;=w[j]</code>\uff0c\u5219\u5c06\u7269\u54c1j\u53bb\u6389\uff0c\u4e0d\u7528\u8003\u8651\u3002\u8fd9\u4e2a\u4f18\u5316\u7684\u6b63\u786e\u6027\u663e\u7136\uff1a\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u53ef\u5c06\u4ef7\u503c\u5c0f\u8d39\u7528\u9ad8\u5f97j\u6362\u6210\u7269\u7f8e\u4ef7\u5ec9\u7684i\uff0c\u5f97\u5230\u81f3\u5c11\u4e0d\u4f1a\u66f4\u5dee\u7684\u65b9\u6848\u3002\u5bf9\u4e8e\u968f\u673a\u751f\u6210\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5f80\u5f80\u4f1a\u5927\u5927\u51cf\u5c11\u7269\u54c1\u7684\u4ef6\u6570\uff0c\u4ece\u800c\u52a0\u5feb\u901f\u5ea6\u3002\u7136\u800c\u8fd9\u4e2a\u5e76\u4e0d\u80fd\u6539\u5584\u6700\u574f\u60c5\u51b5\u7684\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u7279\u522b\u8bbe\u8ba1\u7684\u6570\u636e\u53ef\u4ee5\u4e00\u4ef6\u7269\u54c1\u4e5f\u53bb\u4e0d\u6389\u3002\u8fd9\u4e2a\u4f18\u5316\u53ef\u4ee5\u7b80\u5355\u7684\\(O(N^2)\\)\u5730\u5b9e\u73b0\uff0c\u4e00\u822c\u90fd\u53ef\u4ee5\u627f\u53d7\u3002 \u53e6\u5916\uff0c\u9488\u5bf9\u80cc\u5305\u95ee\u9898\u800c\u8a00\uff0c\u6bd4\u8f83\u4e0d\u9519\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\uff1a\u9996\u5148\u5c06\u8d39\u7528\u5927\u4e8eV\u7684\u7269\u54c1\u53bb\u6389\uff0c\u7136\u540e\u4f7f\u7528\u7c7b\u4f3c\u8ba1\u6570\u6392\u5e8f\u7684\u505a\u6cd5\uff0c\u8ba1\u7b97\u51fa\u8d39\u7528\u76f8\u540c\u7684\u7269\u54c1\u4e2d\u4ef7\u503c\u6700\u9ad8\u7684\u662f\u54ea\u4e2a\uff0c\u53ef\u4ee5\\(O(V+N)\\)\u5730\u5b8c\u6210\u8fd9\u4e2a\u4f18\u5316\u3002\u8fd9\u4e2a\u4e0d\u592a\u91cd\u8981\u7684\u8fc7\u7a0b\u5c31\u4e0d\u7ed9\u51fa\u4f2a\u4ee3\u7801\u4e86\uff0c\u5e0c\u671b\u4f60\u80fd\u72ec\u7acb\u601d\u8003\u5199\u51fa\u4f2a\u4ee3\u7801\u6216\u7a0b\u5e8f\u3002 \u65e2\u713601\u80cc\u5305\u95ee\u9898\u662f\u6700\u57fa\u672c\u7684\u80cc\u5305\u95ee\u9898\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u8f6c\u5316\u4e3a01\u80cc\u5305\u95ee\u9898\u6765\u89e3\u3002\u6700\u7b80\u5355\u7684\u60f3\u6cd5\u662f\uff0c\u8003\u8651\u5230\u7b2ci\u79cd\u7269\u54c1\u6700\u591a\u9009V/c\u4ef6\uff0c\u4e8e\u662f\u53ef\u4ee5\u628a\u7b2ci\u79cd\u7269\u54c1\u8f6c\u5316\u4e3aV/c\u4ef6\u8d39\u7528\u4e3ac[I]\u53ca\u4ef7\u503cw[I]\u7684\u7269\u54c1\uff0c\u7136\u540e\u6c42\u89e3\u8fd9\u4e2a01\u80cc\u5305\u95ee\u9898\u3002\u8fd9\u6837\u5b8c\u5168\u6ca1\u6709\u6539\u8fdb\u57fa\u672c\u601d\u8def\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4f46\u8fd9\u6bd5\u7adf\u7ed9\u4e86\u6211\u4eec\u5c06\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u8f6c\u5316\u4e3a01\u80cc\u5305\u95ee\u9898\u7684\u601d\u8def\uff1a\u5c06\u4e00\u79cd\u7269\u54c1\u62c6\u6210\u591a\u4ef6\u7269\u54c1\u3002 \u66f4\u9ad8\u6548\u7684\u8f6c\u5316\u65b9\u6cd5\u662f\uff1a\u628a\u7b2ci\u79cd\u7269\u54c1\u62c6\u6210\u8d39\u7528\u4e3a\\(c*2^k\\)\u3001\u4ef7\u503c\u4e3a\\(w*2^k\\)\u7684\u82e5\u5e72\u4ef6\u7269\u54c1\uff0c\u5176\u4e2dk\u6ee1\u8db3\\(0&lt;=k&lt;=\\log_2(V/c)/c))\\)\u4ef6\u7269\u54c1\uff0c\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6539\u8fdb\u3002</p> <p>\u6700\u4f18\u89e3\u6cd5</p> <pre><code>for i=1..N\n    for j=c..V\n        f[j]=max{f[j],f[j-c]+w}\n</code></pre> <p>\u4f60\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e2a\u4f2a\u4ee3\u7801\u4e0e01\u80cc\u5305\u7684\u4f2a\u4ee3\u7801\u53ea\u6709v\u7684\u5faa\u73af\u6b21\u5e8f\u4e0d\u540c\u800c\u5df2\u3002\u4e3a\u4ec0\u4e48\u8fd9\u6837\u4e00\u6539\u5c31\u53ef\u884c\u5462\uff1f \u9996\u5148\u60f3\u60f3\u4e3a\u4ec0\u4e48**01\u80cc\u5305\u4e2d\u8981\u6309\u7167v=V..0\u7684\u9006\u5e8f\u6765\u5faa\u73af\u3002\u8fd9\u662f\u56e0\u4e3a\u8981\u4fdd\u8bc1\u7b2ci\u6b21\u5faa\u73af\u4e2d\u7684\u72b6\u6001f[v]\u662f\u7531\u72b6\u6001f[v-c]\u9012\u63a8\u800c\u6765\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u6b63\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6bcf\u4ef6\u7269\u54c1\u53ea\u9009\u4e00\u6b21\uff0c\u4fdd\u8bc1\u5728\u8003\u8651\u201c\u9009\u5165\u7b2ci\u4ef6\u7269\u54c1\u201d\u8fd9\u4ef6\u7b56\u7565\u65f6\uff0c\u4f9d\u636e\u7684\u662f\u4e00\u4e2a\u6ca1\u6709\u5df2\u7ecf\u9009\u5165\u7b2ci\u4ef6\u7269\u54c1\u7684\u5b50\u7ed3\u679cf[v-c]\u3002 \u800c\u5f53\u524d**\u5b8c\u5168\u80cc\u5305\u7684\u7279\u70b9\u6070\u662f\u6bcf\u79cd\u7269\u54c1\u53ef\u9009\u65e0\u9650\u4ef6\uff0c\u6240\u4ee5\u5728\u8003\u8651\u201c\u52a0\u9009\u4e00\u4ef6\u7b2ci\u79cd\u7269\u54c1\u201d\u8fd9\u79cd\u7b56\u7565\u65f6\uff0c\u5374\u6b63\u9700\u8981\u4e00\u4e2a\u53ef\u80fd\u5df2\u9009\u5165\u7b2ci\u79cd\u7269\u54c1\u7684\u5b50\u7ed3\u679cf[v-c]\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5e76\u4e14\u5fc5\u987b\u91c7\u7528v=0..V\u7684\u987a\u5e8f\u5faa\u73af\u3002\u8fd9\u5c31\u662f\u8fd9\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\u4e3a\u4f55\u6210\u7acb\u7684\u9053\u7406\u3002 \u8fd9\u4e2a\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u4ee5\u53e6\u5916\u7684\u601d\u8def\u5f97\u51fa\u3002\u4f8b\u5982\uff0c\u57fa\u672c\u601d\u8def\u4e2d\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u53ef\u4ee5\u7b49\u4ef7\u5730\u53d8\u5f62\u6210\u8fd9\u79cd\u5f62\u5f0f\uff1a</p> <pre><code>f[j]=max{f[j],f[j-c]+w}\n</code></pre> <p>\u5c06\u8fd9\u4e2a\u65b9\u7a0b\u7528\u4e00\u7ef4\u6570\u7ec4\u5b9e\u73b0\uff0c\u4fbf\u5f97\u5230\u4e86\u4e0a\u9762\u7684\u4f2a\u4ee3\u7801\u3002 \u6700\u540e\u62bd\u8c61\u51fa\u5904\u7406\u4e00\u4ef6\u5b8c\u5168\u80cc\u5305\u7c7b\u7269\u54c1\u7684\u8fc7\u7a0b\u4f2a\u4ee3\u7801\uff0c\u4ee5\u540e\u4f1a\u7528\u5230\uff1a</p> <pre><code>procedure CompletePack(c,w)\n    for j=c..V\n        f[j]=max{f[j],f[j-c]+w}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/#_3","title":"\u601d\u60f3","text":"<p>\u7c7b\u4f3c01\u80cc\u5305\uff0c\u53ea\u4e0d\u8fc7\u591a\u4e00\u5c42\u5faa\u73af\uff0c\u679a\u4e3e\u7b2ci\u4ef6\u7269\u54c1\u53d6k\u4efd<code>(k=1,k++,j-k*w[i]&gt;=0)</code></p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/#_4","title":"\u6ce8\u610f","text":"<p>\u89c2\u5bdf<code>f[i][j]</code>\u4e2d\u4fdd\u5b58\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u628ak\u5faa\u73af\u53bb\u6389\uff0c\u8bf7\u601d\u8003\uff01</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/#_5","title":"\u4f8b\u9898","text":"<p>\u8bbe\u6709n \u79cd\u7269\u54c1\uff0c\u6bcf\u79cd\u7269\u54c1\u6709\u4e00\u4e2a\u91cd\u91cf\u53ca\u4e00\u4e2a\u4ef7\u503c\u3002\u4f46\u6bcf\u79cd\u7269\u54c1\u7684\u6570\u91cf\u662f\u65e0\u9650\u7684\uff0c\u540c\u65f6\u6709\u4e00\u4e2a\u80cc\u5305\uff0c\u6700\u5927\u8f7d\u91cd\u91cf\u4e3aM \uff0c\u4eca\u4ecen \u79cd\u7269\u54c1\u4e2d\u9009\u53d6\u82e5\u5e72\u4ef6(\u540c\u4e00\u79cd\u7269\u54c1\u53ef\u4ee5\u591a\u6b21\u9009\u53d6)\uff0c\u4f7f\u5176\u91cd\u91cf\u7684\u548c\u5c0f\u4e8e\u7b49\u4e8eM \uff0c\u800c\u4ef7\u503c\u7684\u548c\u4e3a\u6700\u5927\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/#_6","title":"\u89e3\u51b3","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint m, n, w[205], c[205], f[205][205];\n\nint main() {\n    cin &gt;&gt; m &gt;&gt; n;\n    for (int i = 1; i &lt;= n; i++)\n        cin &gt;&gt; w[i] &gt;&gt; c[i];\n    for (int i = 1; i &lt;= n; i++) {\n        for (int j = 1; j &lt;= m; j++) {\n            if (j &lt; w[i])\n                f[i][j] = f[i - 1][j];\n\n            else if (f[i - 1][j] &gt; f[i][j - w[i]] + c[i])\n                f[i][j] = f[i - 1][j];\n            else\n                f[i][j] = f[i][j - w[i]] + c[i];\n        }\n    }\n\n    cout &lt;&lt; \"max=\" &lt;&lt; f[n][m];\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E6%B7%B7%E5%90%88%E8%83%8C%E5%8C%85/","title":"\u6df7\u5408\u80cc\u5305","text":"<p>\u6df7\u5408\u80cc\u5305\uff0c\u5c31\u662f\u5c06\u5404\u79cd\u80cc\u5305\u6df7\u5408\u540e\u7684\u80cc\u5305\u6a21\u578b\u3002</p> <p>\u6709 N \u79cd\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u662f V \u7684\u80cc\u5305\u3002\u7269\u54c1\u4e00\u5171\u6709\u4e09\u7c7b\uff0c\u6bcf\u79cd\u4f53\u79ef\u662f vi\uff0c\u4ef7\u503c\u662f wi\u3002</p> <p>\u7b2c\u4e00\u7c7b\u7269\u54c1\u53ea\u80fd\u75281\u6b21\uff0801\u80cc\u5305\uff09\uff1b \u7b2c\u4e8c\u7c7b\u7269\u54c1\u53ef\u4ee5\u7528\u65e0\u9650\u6b21\uff08\u5b8c\u5168\u80cc\u5305\uff09\uff1b \u7b2c\u4e09\u7c7b\u7269\u54c1\u6700\u591a\u53ea\u80fd\u7528 si \u6b21\uff08\u591a\u91cd\u80cc\u5305\uff09\uff1b</p> <p>\u4e0a\u9762\u4e09\u79cd\u60c5\u51b5\u5176\u5b9e\u90fd\u662f\u5b8c\u5168\u80cc\u5305\uff0c\u5f88\u597d\u7406\u89e3\u3002</p> <p>\u6709\u4e9b\u65f6\u5019\uff0c\u6df7\u5408\u80cc\u5305\u8fd8\u4f1a\u548c\u5206\u7ec4\u80cc\u5305\u7ed3\u5408\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4f8b\u9898\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E6%B7%B7%E5%90%88%E8%83%8C%E5%8C%85/#1","title":"\u4f8b\u9898 #1","text":"<p>\u6709N\u4e2a\u7269\u54c1\uff0c\u7269\u54c1\u4e2a\u6570\u4e3aAi\uff08Ai\u4e3a0\u5219\u65e0\u4e2a\u6570\u9650\u5236\uff09\uff0c\u4ef7\u503c\u4e3aWi\uff0c\u4f53\u79ef\u4e3aCi\uff0c\u7ed9\u51faG\u7ec4\u9650\u5236\uff0c\u6bcf\u7ec4\u4e2d\u7684\u7269\u54c1\u6700\u591a\u53ea\u80fd\u53d6\u4e00\u79cd\uff0c\u95ee\u7269\u54c1\u4f53\u79ef\u521a\u597d\u4e3aD\u65f6\uff0c\u6700\u5927\u4ef7\u503c\u662f\u591a\u5c11</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E6%B7%B7%E5%90%88%E8%83%8C%E5%8C%85/#_2","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570N\u548c D\u3002 \u63a5\u4e0b\u6765N\u884c\uff0c\u6bcf\u884c3\u4e2a\u6574\u6570Ai\uff0cWi\uff0cCi \u3002 \u7b2cN+2\u884c\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 G \u3002 \u63a5\u4e0b\u6765G\u884c\uff0c\u5f00\u5934\u4e00\u4e2a\u6574\u6570L\uff0c\u8868\u793a\u7ec4\u7684\u5927\u5c0f\uff0c\u7136\u540eL\u4e2a\u6574\u6570\uff0c\u8868\u793a\u8be5\u7ec4\u7684\u7269\u54c1\u7f16\u53f7\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u7269\u54c1\u6700\u591a\u51fa\u73b0\u5728\u4e00\u7ec4\u4e2d\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E6%B7%B7%E5%90%88%E8%83%8C%E5%8C%85/#_3","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u8868\u793a\u6700\u5927\u7684\u4ef7\u503c\u3002\u82e5\u6700\u5927\u4ef7\u503c\u4e3a\u8d1f\u6216\u65e0\u6cd5\u6ee1\u8db3\u4f53\u79ef\u6070\u597d\u4e3aV\uff0c\u5219\u8f93\u51fa\u201ci'm sorry...\u201d\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\nint f[N];\nint vis[N];\nvector&lt;int&gt; e[N];\n\nint a[N],w[N],c[N];\n\n\nvoid solve(){\n    int n=rd,v=rd;\n    for(int i=1;i&lt;=n;i++){\n        a[i]=rd,w[i]=rd,c[i]=rd;\n        if(!a[i])a[i]=INF;\n    }   \n    int q=rd;\n    for(int i=1;i&lt;=q;i++){\n        int l=rd;\n        while(l--){\n            int a=rd;\n            e[i].push_back(a);\n            vis[a]=1;\n        }\n    }\n\n\n    for(int i=1;i&lt;=n;i++){\n        if(vis[i])continue;\n        e[+/\u5c06\u4e3a\u672a\u5206\u7ec4\u7684\u90fd\u72ec\u7acb\u5206\u7ec4\n    }\n\n\n    for(int i=0;i&lt;N;i++)f[i]=-INF;\n    f[0]=0;\n\n    for(int i=1;i&lt;=q;i++){\n        for(int j=v;j;j--){\n            for(auto k:e[i]){\n                //\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u90fd\u72ec\u7acb\u8003\u8651\n\n                for(int l=1;l&lt;=a[k]&amp;&amp;l*c[k]&lt;=j;l++){\n                    if(f[j-l*c[k]]==-INF)continue;\n                    f[j]=max(f[j],f[j-l*c[k]]+l*w[k]);\n                }\n            }\n        }\n\n    }\n    if(f[v]==-INF)cout&lt;&lt;\"i'm sorry...\"&lt;&lt;endl;\n    else cout&lt;&lt;f[v]&lt;&lt;endl;\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E8%AE%A1%E6%95%B0%E8%83%8C%E5%8C%85/","title":"\u8ba1\u6570\u80cc\u5305","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E8%AE%A1%E6%95%B0%E8%83%8C%E5%8C%85/#1","title":"\u4f8b\u9898 #1 \u6574\u6570\u5212\u5206","text":"<p>\u4e00\u4e2a\u6b63\u6574\u6570 n \u53ef\u4ee5\u8868\u793a\u6210\u82e5\u5e72\u4e2a\u6b63\u6574\u6570\u4e4b\u548c\uff0c\u5f62\u5982\uff1an=n1+n2+\u2026+nk\uff0c\u5176\u4e2d n1\u2265n2\u2265\u2026\u2265nk,k\u22651\u3002</p> <p>\u6211\u4eec\u5c06\u8fd9\u6837\u7684\u4e00\u79cd\u8868\u793a\u79f0\u4e3a\u6b63\u6574\u6570 n \u7684\u4e00\u79cd\u5212\u5206\u3002</p> <p>\u73b0\u5728\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n\uff0c\u8bf7\u4f60\u6c42\u51fa n \u5171\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u5212\u5206\u65b9\u6cd5\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E8%AE%A1%E6%95%B0%E8%83%8C%E5%8C%85/#_2","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570 n\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E8%AE%A1%E6%95%B0%E8%83%8C%E5%8C%85/#_3","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u5171\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u603b\u5212\u5206\u6570\u91cf\u3002</p> <p>\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u8f93\u51fa\u7ed3\u679c\u8bf7\u5bf9 10^9+7 \u53d6\u6a21\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E8%AE%A1%E6%95%B0%E8%83%8C%E5%8C%85/#_4","title":"\u6570\u636e\u8303\u56f4","text":"<p>1\u2264n\u22641000</p> <p>\u8fd9\u9053\u9898\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5b8c\u5168\u80cc\u5305\u95ee\u9898\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6570\u53ef\u4ee5\u62ff\u65e0\u6570\u6b21</p> <p>\u5b8c\u5168\u80cc\u5305\u7684\u72b6\u6001\u8f6c\u79fb</p> <p>F_{i,j}=max\uff08F_{i-1,j}\uff0cF_{i,j-w}</p> <p>\u4f18\u5316\u6210\u4e00\u7ef4 F_j=max\uff08 F_j\uff0cf_{j-w}\uff09\u987a\u5e8f\u5faa\u73af</p> <p>\u5bf9\u4e8e\u672c\u9898\uff0c\u6211\u4eec\u770b\u54df\u8fd9\u6837\u5b9a\u4e49\u72b6\u6001\uff1a</p> <p>f_{i,j}\u8868\u793a\u8003\u8651\u4ece[1,i]\u4e2d\u53d6\u6570\uff0c\u4e14\u603b\u548c\u7b49\u4e8ej\u7684\u65b9\u6848\u6570\uff0c\u5176\u4e2df_{0,0}=1\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E8%AE%A1%E6%95%B0%E8%83%8C%E5%8C%85/#2","title":"\u4f8b\u9898 #2 \u9e23\u4eba\u7684\u5f71\u5206\u8eab","text":"<p>\u5728\u706b\u5f71\u5fcd\u8005\u7684\u4e16\u754c\u91cc\uff0c\u4ee4\u654c\u4eba\u6349\u6478\u4e0d\u900f\u662f\u975e\u5e38\u5173\u952e\u7684\u3002</p> <p>\u6211\u4eec\u7684\u4e3b\u89d2\u6f29\u6da1\u9e23\u4eba\u6240\u62e5\u6709\u7684\u4e00\u4e2a\u62db\u6570\u2014\u2014\u591a\u91cd\u5f71\u5206\u8eab\u4e4b\u672f\u2014\u2014\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002</p> <p>\u5f71\u5206\u8eab\u662f\u7531\u9e23\u4eba\u8eab\u4f53\u7684\u67e5\u514b\u62c9\u80fd\u91cf\u5236\u9020\u7684\uff0c\u4f7f\u7528\u7684\u67e5\u514b\u62c9\u8d8a\u591a\uff0c\u5236\u9020\u51fa\u7684\u5f71\u5206\u8eab\u8d8a\u5f3a\u3002</p> <p>\u9488\u5bf9\u4e0d\u540c\u7684\u4f5c\u6218\u60c5\u51b5\uff0c\u9e23\u4eba\u53ef\u4ee5\u9009\u62e9\u5236\u9020\u51fa\u5404\u79cd\u5f3a\u5ea6\u7684\u5f71\u5206\u8eab\uff0c\u6709\u7684\u7528\u6765\u4f6f\u653b\uff0c\u6709\u7684\u7528\u6765\u53d1\u8d77\u81f4\u547d\u4e00\u51fb\u3002</p> <p>\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u5047\u8bbe\u9e23\u4eba\u7684\u67e5\u514b\u62c9\u80fd\u91cf\u4e3a M\uff0c\u4ed6\u5f71\u5206\u8eab\u7684\u4e2a\u6570\u6700\u591a\u4e3a N\uff0c\u90a3\u4e48\u5236\u9020\u5f71\u5206\u8eab\u65f6\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u5206\u914d\u65b9\u6cd5\uff1f</p> <p>\u6ce8\u610f\uff1a</p> <ol> <li> <p>\u5f71\u5206\u8eab\u53ef\u4ee5\u5206\u914d0\u70b9\u80fd\u91cf\u3002</p> </li> <li> <p>\u5206\u914d\u65b9\u6848\u4e0d\u8003\u8651\u987a\u5e8f\uff0c\u4f8b\u5982\uff1aM=7,N=3\uff0c\u90a3\u4e48 (2,2,3) \u548c (2,3,2) \u88ab\u89c6\u4e3a\u540c\u4e00\u79cd\u65b9\u6848\u3002</p> </li> </ol>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E8%AE%A1%E6%95%B0%E8%83%8C%E5%8C%85/#_5","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7b2c\u4e00\u884c\u662f\u6d4b\u8bd5\u6570\u636e\u7684\u6570\u76ee t\u3002</p> <p>\u4ee5\u4e0b\u6bcf\u884c\u5747\u5305\u542b\u4e8c\u4e2a\u6574\u6570 M \u548c N\uff0c\u4ee5\u7a7a\u683c\u5206\u5f00\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E8%AE%A1%E6%95%B0%E8%83%8C%E5%8C%85/#_6","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u5bf9\u8f93\u5165\u7684\u6bcf\u7ec4\u6570\u636e M \u548c N\uff0c\u7528\u4e00\u884c\u8f93\u51fa\u5206\u914d\u7684\u65b9\u6cd5\u6570\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85/%E8%AE%A1%E6%95%B0%E8%83%8C%E5%8C%85/#_7","title":"\u6570\u636e\u8303\u56f4","text":"<p>0\u2264t\u226420, 1\u2264M,N\u226410</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E9%AB%98%E7%BA%A7DP/%E5%8A%A8%E6%80%81%E6%A0%91%E5%88%86%E6%B2%BB/","title":"\u52a8\u6001\u6811\u5206\u6cbb","text":"<p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | \u52a8\u6001dp</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E9%AB%98%E7%BA%A7DP/%E5%8A%A8%E6%80%81%E6%A0%91%E5%88%86%E6%B2%BB/#dp","title":"\u3010\u6a21\u677f\u3011\"\u52a8\u6001 DP\"&amp;\u52a8\u6001\u6811\u5206\u6cbb","text":""},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E9%AB%98%E7%BA%A7DP/%E5%8A%A8%E6%80%81%E6%A0%91%E5%88%86%E6%B2%BB/#1","title":"\u4f8b\u9898 #1","text":"<p>\u7ed9\u5b9a\u4e00\u68f5 \\(n\\) \u4e2a\u70b9\u7684\u6811\uff0c\u70b9\u5e26\u70b9\u6743\u3002</p> <p>\u6709 \\(m\\) \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u7ed9\u5b9a \\(x,y\\)\uff0c\u8868\u793a\u4fee\u6539\u70b9 \\(x\\) \u7684\u6743\u503c\u4e3a \\(y\\)\u3002</p> <p>\u4f60\u9700\u8981\u5728\u6bcf\u6b21\u64cd\u4f5c\u4e4b\u540e\u6c42\u51fa\u8fd9\u68f5\u6811\u7684\u6700\u5927\u6743\u72ec\u7acb\u96c6\uff08\u5373\u201c\u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a\u201d\uff09\u7684\u6743\u503c\u5927\u5c0f\u3002</p>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E9%AB%98%E7%BA%A7DP/%E5%8A%A8%E6%80%81%E6%A0%91%E5%88%86%E6%B2%BB/#_1","title":"\u601d\u8def","text":"<p>\u52a8\u6001dp\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5e26\u4fee\u6539\u7684dp\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u66b4\u529b\u505a\u8fd9\u79cddp\u6ca1\u6709\u51fa\u73b0\u8be5\u540e\u6211\u4eec\u90fd\u9700\u8981O(n)\u91cd\u65b0dp\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u4f1a\u8d85\u65f6\u3002\u6240\u4ee5\u52a8\u6001dp\u51fa\u73b0\u4e86\u3002</p> <p>\u3010\u6d1b\u8c37P4719\u3011\u52a8\u6001DP\u3010LCT\u3011\u3010\u77e9\u9635\u3011_p4719 lct-CSDN\u535a\u5ba2</p> <p>www.bilibili.com</p> <pre><code>// \u52a8\u6001dp\u7684LCT\u5b9e\u73b0\n\n#include &lt;bits/stdc++.h&gt;\n#define rep(l, r, i) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(r, l, i) for (int i = r, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define pb push_back\n// #define mpy make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps b\n#define pf a\n\n#define X(j) i[j]\n#define Y(j) (dp[j] + (i[j] + L) * (i[j] + L))\n\n#define rd read()\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\n#define lc(x) ch[x][0]\n#define rc(x) ch[x][1]\n#define notroot(x) lc(fa[x]) == x || rc(fa[x]) == x\nconst int N = 100010, inf = (1 &lt;&lt; 30);\nint n, m, a[N], f[N][2];\nvector&lt;int&gt; G[N];\nint ch[N][2], fa[N]; // splay:ch\u513f,fa\u7236\nstruct matrix {\n  int g[2][2];\n  matrix() { g[0][0] = g[0][1] = g[1][0] = g[1][1] = -inf; }\n  matrix operator*(matrix b) {\n    matrix t;\n    for (int i = 0; i &lt; 2; ++i)\n      for (int j = 0; j &lt; 2; ++j)\n        for (int k = 0; k &lt; 2; ++k)\n          t.g[i][j] = max(t.g[i][j], g[i][k] + b.g[k][j]);\n    return t;\n  }\n} mt[N], tr[N]; // mt:\u8282\u70b9x\u7684g\u77e9\u9635, tr:\u8282\u70b9x\u7684\u77e9\u9635\u79ef\n\nvoid dfs(int x) { // \u9884\u5904\u7406fa,f,mt,tr\n  f[x][1] = a[x];\n  for (int y : G[x]) {\n    if (y != fa[x]) {\n      fa[y] = x;\n      dfs(y);\n      f[x][0] += max(f[y][0], f[y][1]);\n      f[x][1] += f[y][0];\n    }\n  }\n  mt[x].g[0][0] = mt[x].g[0][1] = f[x][0];\n  mt[x].g[1][0] = f[x][1];\n  tr[x] = mt[x]; // \u521d\u59cb\u65f6\u6bcf\u4e2a\u70b9\u5c31\u662f\u4e00\u4e2asplay\n}\n\nnamespace LCT {\n\n    void pushup(int x) { // \u4e0a\u4f20\n    tr[x] = mt[x];\n    if (lc(x))\n        tr[x] = tr[lc(x)] * tr[x];\n    if (rc(x))\n        tr[x] = tr[x] * tr[rc(x)]; // \u77e9\u9635\u79ef(\u5373\u548c\u53d6\u6700\u5927)\n    }\n    void rotate(int x) {                        // \u65cb\u8f6cx\n    int y = fa[x], z = fa[y], k = rc(y) == x; // y\u7684\u53f3\u513f\u662fx\u5417\n    if (notroot(y))\n        ch[z][rc(z) == y] = x;\n    fa[x] = z; // z\u7684\u513f\u662fx,x\u7684\u7236\u662fz\n    ch[y][k] = ch[x][k ^ 1];\n    fa[ch[x][k ^ 1]] = y; // y\u7684\u513f\u662fx\u7684\u5f02\u513f,x\u7684\u5f02\u513f\u7684\u7236\u662fy\n    ch[x][k ^ 1] = y;\n    fa[y] = x; // x\u7684\u5f02\u513f\u662fy,y\u7684\u7236\u662fx\n    pushup(y);\n    pushup(x); // \u81ea\u5e95\u5411\u4e0apushup\n    }\n    void splay(int x) {    // x\u4f38\u5c55\u5230\u6839\n    while (notroot(x)) { // \u6298\u7ebf\u8f6cxx,\u76f4\u7ebf\u8f6cyx\n        int y = fa[x], z = fa[y];\n        if (notroot(y))\n        (rc(y) == x) ^ (rc(z) == y) ? rotate(x) : rotate(y);\n        rotate(x);\n    }\n    }\n    void access(int x) { // \u6253\u901ax\u5230\u6811\u6839\u7684\u8def\n    for (int y = 0; x;) {\n        splay(x);    // x\u8f6c\u5230\u5f53\u524dsplay\u7684\u6839\n        if (rc(x)) { // x\u53f3\u513f\u5b50\u5373\u5c06\u53d8\u6210\u865a\u513f\u5b50,\u52a0\u4e0a\u5176\u8d21\u732e\n        mt[x].g[0][0] += max(tr[rc(x)].g[0][0], tr[rc(x)].g[1][0]);\n        mt[x].g[1][0] += tr[rc(x)].g[0][0];\n        mt[x].g[0][1] = mt[x].g[0][0];\n        }\n        if (y) { // y\u5373\u5c06\u53d8\u6210x\u7684\u5b9e\u513f\u5b50,\u51cf\u53bb\u5176\u8d21\u732e\n        mt[x].g[0][0] -= max(tr[y].g[0][0], tr[y].g[1][0]);\n        mt[x].g[1][0] -= tr[y].g[0][0];\n        mt[x].g[0][1] = mt[x].g[0][0];\n        }\n        rc(x) = y;     // \u628ay\u53d8\u6210x\u7684\u53f3\u513f\u5b50(\u5373x\u6307\u5411\u4e0b\u9762splay\u7684\u6839)\n        pushup(x);     // \u66f4\u65b0x\n        x = fa[y = x]; // \u628ax\u5b58\u4e8ey,x\u7ee7\u7eed\u722c\u5230\u4e0a\u9762\u7684splay\n    }\n    }\n    void update(int x, int y) {  // \u4fee\u6539\u70b9\u6743\n    access(x);                 // \u901a\u8def\n    splay(x);                  // \u4f38\u5c55\n    mt[x].g[1][0] += y - a[x]; // \u4fee\u6539x\u70b9\n    pushup(x);\n    a[x] = y;\n    }\n\n} // namespace LCT\n\nusing namespace LCT;\n\nsigned main() {\n  n = rd, m = rd;\n  for (int i = 1; i &lt;= n; ++i)\n    a[i] = rd;\n  for (int i = 1; i &lt; n; i++) {\n    int x = rd, y = rd;\n    G[x].push_back(y);\n    G[y].push_back(x);\n  }\n  dfs(1); // \u9884\u5904\u7406fa,f,mt,tr\n  while (m--) {\n    int x = rd, y = rd;\n    update(x, y);\n    printf(\"%lld\\n\", max(tr[x].g[0][0], tr[x].g[1][0]));\n  }\n}\n</code></pre> <ul> <li>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(1\\le n,m\\le 10^5\\)\uff0c\\(1 \\leq u, v , x \\leq n\\)\uff0c\\(-10^2 \\leq a_i, y \\leq 10^2\\)\u3002</li> </ul>"},{"location":"%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E9%AB%98%E7%BA%A7DP/%E5%8A%A8%E6%80%81%E6%A0%91%E5%88%86%E6%B2%BB/#_2","title":"\u77e9\u9635\u4e58\u6cd5\u5e38\u7528\u53d8\u5f0f","text":"<p>\u57fa\u7840\u77e9\u9635\u4e58\u6cd5\uff1a\\(c=a\\times b\u2192c_{i,j}=\\sum\\limits_k a_{i,k}b_{k,j}\\)</p> <p>\u53d8\u5f0f\\(c=a\\times b\u2192c_{i,j}=\\min\\limits_k (a_{i,k}+b_{k,j})\\)</p> <p>\\(c=a\\times b\u2192c_{i,j}=\\min\\limits_k a_{i,k}b_{k,j}\\)</p> <p>\\(c=a\\times b\u2192c_{i,j}=\\sum\\limits_k a_{i,k}+b_{k,j}\\)</p> <p>\u7b49\u7b49\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/2-SAT/","title":"2 SAT","text":"<p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | 2-SAT</p>"},{"location":"%E5%9B%BE%E8%AE%BA/2-SAT/#2-sat","title":"2-SAT","text":""},{"location":"%E5%9B%BE%E8%AE%BA/2-SAT/#1","title":"\u4f8b\u9898 #1","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6709 \\(n\\) \u4e2a\u5e03\u5c14\u53d8\u91cf \\(x_1\\sim x_n\\)\uff0c\u53e6\u6709 \\(m\\) \u4e2a\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\uff0c\u6bcf\u4e2a\u6761\u4ef6\u7684\u5f62\u5f0f\u90fd\u662f \u300c\\(x_i\\) \u4e3a <code>true</code> / <code>false</code> \u6216 \\(x_j\\) \u4e3a <code>true</code> / <code>false</code>\u300d\u3002\u6bd4\u5982 \u300c\\(x_1\\) \u4e3a\u771f\u6216 \\(x_3\\) \u4e3a\u5047\u300d\u3001\u300c\\(x_7\\) \u4e3a\u5047\u6216 \\(x_2\\) \u4e3a\u5047\u300d\u3002</p> <p>2-SAT \u95ee\u9898\u7684\u76ee\u6807\u662f\u7ed9\u6bcf\u4e2a\u53d8\u91cf\u8d4b\u503c\u4f7f\u5f97\u6240\u6709\u6761\u4ef6\u5f97\u5230\u6ee1\u8db3\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570 \\(n\\) \u548c \\(m\\)\uff0c\u610f\u4e49\u5982\u9898\u9762\u6240\u8ff0\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\u6bcf\u884c \\(4\\) \u4e2a\u6574\u6570 \\(i\\), \\(a\\), \\(j\\), \\(b\\)\uff0c\u8868\u793a \u300c\\(x_i\\) \u4e3a \\(a\\) \u6216 \\(x_j\\) \u4e3a \\(b\\)\u300d(\\(a, b\\in \\{0,1\\}\\))</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5982\u65e0\u89e3\uff0c\u8f93\u51fa <code>IMPOSSIBLE</code>\uff1b\u5426\u5219\u8f93\u51fa <code>POSSIBLE</code>\u3002</p> <p>\u4e0b\u4e00\u884c \\(n\\) \u4e2a\u6574\u6570 \\(x_1\\sim x_n\\)\uff08\\(x_i\\in\\{0,1\\}\\)\uff09\uff0c\u8868\u793a\u6784\u9020\u51fa\u7684\u89e3\u3002</p> <p>\\(1\\leq n, m\\leq 10^6\\) , \u524d \\(3\\) \u4e2a\u70b9\u5361\u5c0f\u9519\u8bef\uff0c\u540e\u9762 \\(5\\) \u4e2a\u70b9\u5361\u6548\u7387\u3002</p> <p>\u7531\u4e8e\u6570\u636e\u968f\u673a\u751f\u6210\uff0c\u53ef\u80fd\u4f1a\u542b\u6709\uff08 10 0 10 0\uff09\u4e4b\u7c7b\u7684\u5751\uff0c\u4f46\u6309\u7167\u6700\u5e38\u89c4\u5199\u6cd5\u7684\u5199\u7684\u6807\u7a0b\u6ca1\u6709\u51fa\u9519\uff0c\u5404\u4e2a\u6570\u636e\u70b9\u5361\u4ec0\u4e48\u7684\u63d0\u793a\u5728\u6807\u7a0b\u91cc\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/2-SAT/#2-sat_1","title":"2-SAT","text":"<p>SAT\u95ee\u9898\uff0c\u5373\u7ed9\u51fa\u82e5\u5e72\u4e2a\u4e0ex_n\u6709\u5173\u7684\u547d\u9898\uff0c\u547d\u9898\u5185\u90e8\u53ea\u6709\u6216\uff0c\u603b\u547d\u9898\u4e3a\u8fd9\u4e9b\u547d\u9898\u76f8\u4e0e\u3002\u6c42\u51fa\u4e00\u7ec4x_n\u4f7f\u5f97\u603b\u547d\u9898\u4e3atrue\u3002\u662fNPC\u95ee\u9898\u3002</p> <p>2-SAT\u95ee\u9898\uff0c\u5373\u6bcf\u4e2a\u547d\u9898\u5185\u90e8\u53ea\u6709\u4e24\u4e2a\u53d8\u91cfx_i,x_j\u3002\u6211\u4eec\u8981\u5224\u65ad\u5e76\u7ed9\u51fa\u89e3\u3002\u4e0d\u662fNPC\u95ee\u9898\u3002</p> <p></p> <p>\u6ce8\u610fa=0\u65f6\u7684\u7279\u6b8a\u60c5\u51b5</p> <p></p> <p>\u628a2-SAT\u8f6c\u5316\u4e3a\u56fe\u5982\u56fe\uff08\u4e00\u4e2a\u547d\u9898\u2192\u4e24\u6761\u6709\u5411\u8fb9\uff09</p> <p>-x_1\u2192x_3\u8868\u793a\u5982\u679cx_1=0\uff0c\u90a3\u4e48x_3\u4e00\u5b9a\u4e3a1\uff0c\u5373\u8868\u793a\u4e00\u79cd\u63a8\u5bfc\u5173\u7cfb\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u628a\u95ee\u9898\u4e2d\u6240\u6709\u7684\u547d\u9898\u90fd\u8f6c\u5316\u4e3a\u540c\u4e00\u5e45\u56fe\u4e2d\u7684\u6709\u5411\u8fb9\u540e\uff0c\u5c31\u4f1a\u53d1\u73b0\u51e0\u7ec4\u63a8\u5bfc\u5173\u7cfb\u3002\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2ax_i\u4ecex_i\u53ef\u4ee5\u63a8\u5bfc\u5230-x_i**\u5e76\u4e14**-x_i\u53ef\u4ee5\u63a8\u5bfc\u5230x_i\u3002\u5982\u679c\u5b58\u5728\uff0c\u5219\u4e0d\u6210\u7acb\u3002</p> <p>\u8fd9\u5176\u5b9e\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5173\u7cfb\u3002\u53ef\u4ee5\u7c7b\u6bd4noip2023T2\u4e09\u503c\u903b\u8f91\u3002</p> <p>\u7ed9\u51fa\u89e3\u7684\u65b9\u6cd5\uff1a</p> <p>\u786e\u4fdd\u6709\u89e3\u540e\uff0c\u6211\u4eec\u6267\u884c\u7f29\u70b9\uff0c\u7136\u540e\u8fdb\u884ctopo\u6392\u5e8f\u3002\u5bf9\u4e8ex_i\uff0c\u5982\u679cx_i\u7684topo\u5e8f\u66f4\u9760\u540e\uff0c\u90a3\u4e48x_i=1\uff0c\u53cd\u4e4bx_i=0</p> <p>\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7f29\u70b9\u540e\u6bcf\u4e2a\u70b9\u7684scc\u7f16\u53f7\u6765\u4ee3\u66fftopo\u5e8f\u3002</p> <p>\u4e3a\u4ec0\u4e48\u8fd9\u6837\u4e0d\u4f1a\u6709\u51b2\u7a81\u5462\uff1f</p> <p>\u9996\u5148\u5982\u679c\u5b58\u5728\u5757\u5305\u542ba,-b,c\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u5757\u5305\u542b-a,b,-c\u3002\u5373\u6bcf\u4e2a\u5757\u90fd\u5b58\u5728\u4e0e\u4e4b\u76f8\u53cd\u7684\u5b8c\u5168\u76f8\u540c\u7684\u5757\u3002</p> <p></p> <p>\u9898\u578b\u53ef\u4ee5\u4f1a\u7ed9\u51fa3\u79cd\u5173\u7cfb</p> <ul> <li> <p>x_i^x_j\uff08^\u4e3a\u903b\u8f91\u4e0e\uff09\uff0c\u8fd9\u79cd\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u8ba8\u8bba\u7684\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a-x_i\u2192x_j,-x_j\u2192x_i</p> </li> <li> <p>x_i\u2192x_j\uff0c\u90a3\u4e48\u5c31\u662f-x_i^x_j</p> </li> <li> <p>x_i=1\uff0c\u90a3\u4e48\u5c31\u662fx_i^x_i</p> </li> <li> <p>x_i=0\uff0c\u5c31\u662f-x_i^-x_i</p> </li> </ul> <p>\u6ce8\u610f\uff01\u6587\u7ae0\u4e2d\u7684<code>\u2192</code>\u662f\u4e00\u4e2a\u4e8c\u5143\u5173\u7cfb\u7b26\u53f7\uff0c\u800c\u4e0d\u662f\u65e5\u5e38\u4e2d\u7684\u201c\u63a8\u51fa\u201d\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a\u201c\u80fd\u63a8\u51fa\u201d\uff0c\u5b83\u8868\u793a\u4e24\u4e2a\u503c\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u771f\u503c\u8868\u5982\u4e0b</p> <pre><code>![image.png](2-SAT/image 3.png)\n</code></pre> <p>acwing:TLE</p> <p>luogu:AC</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=4e6+5;\nconst int M=5e4+5;\nconst int INF=2e18+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint dfn[N],low[N],stk[N],tot,top,cnt,scc[N],siz[N],sccw[N],w[N],dis[N],vis[N];\nint n,m,way[N][2],instk[N],s,np,p[N],ans;\nvector &lt;int&gt; e[N];\nvector&lt;int&gt;e2[N];\nint f[N];\n\nbool f2;\n\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n}\nvoid add2(int a,int b){\n    e2[a].push_back(b);\n}\n\nvoid tarjan(int x){//\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u70b9\n    //\u5165x\u65f6,\u65f6\u95f4\u6233\u8ffd\u6eaf\u503c\u66f4\u65b0,\u5165\u6808\n    dfn[x]=low[x]=++tot;\n    stk[++top]=x;instk[x]=1; \n\n    for(int i=0;i&lt;e[x].size();i++){//\u679a\u4e3ex\u7684\u90bb\u70b9y \n        int y=e[x][i];\n        if(!dfn[y]){//\u5982\u679cy\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7 \n            tarjan(y);//\u5411\u4e0b\u8d70 \n            low[x]=min(low[x],low[y]);//\u8fd4\u56de\u65f6\u66f4\u65b0 \n        }else if(dfn[y]&amp;&amp;instk[y]){//\u8bf4\u660e y\u88ab\u8bbf\u95ee\u8fc7 -&gt;\u8981\u4e48y\u662f\u7956\u5148(\u5728x\u51fa\u901a\u8fc7\u8fd4\u7956\u8fb9\u8bbf\u95ee\u5230\u4e86),\u8981\u4e48\u662f\u5de6\u5b50\u6811\u7684\u70b9(\u5728x\u901a\u8fc7\u6a2a\u63d2\u8fb9\u8bbf\u95ee\u5230\u4e86) \n            low[x]=min(low[x],dfn[y]); \n        }\n    }\n    if(dfn[x]==low[x]){//\u8bf4\u660ex\u662f\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839 \n        int flag=0;\n        int y;++cnt;\n        do{\n            flag++;\n            y=stk[top--];instk[y]=0;\n            scc[y]=cnt;\n            ++siz[cnt];\n            sccw[cnt]+=w[y];//\u8bb0\u5f55\u7f29\u70b9\u540e\u5f3a\u8fde\u901a\u5206\u91cf\u70b9\u7684\u70b9\u6743\n        } while(y!=x); \n    }\n}\n\n\nsigned main(){\n\n    // ios::sync_with_stdio(0);\n    // cin.tie(0);cout.tie(0);\n    n=rd,m=rd;\n    for(int ii=1;ii&lt;=m;ii++){\n        int i=rd,a=rd,j=rd,b=rd;\n        i--,j--;\n        add(i*2+!a,j*2+b);\n        add(j*2+!b,i*2+a);\n    }\n\n    for(int i=0;i&lt;n*2;i++)if(!dfn[i])tarjan(i);\n    for(int i=0;i&lt;n;i++){\n        if(scc[i*2]==scc[i*2+1]){\n            printf(\"IMPOSSIBLE\\n\");\n            return 0;\n        }\n    }\n\n    printf(\"POSSIBLE\\n\");\n\n    for(int i=0;i&lt;n;i++){\n        if(scc[i*2]&lt;scc[i*2+1])printf(\"0 \");\n        else printf(\"1 \");\n    }\n\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/2-SAT/#2-noi2017","title":"\u4f8b\u9898 #2 [NOI2017] \u6e38\u620f","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>\u72c2\u91ce\u98d9\u8f66\u662f\u5c0f L \u6700\u559c\u6b22\u7684\u6e38\u620f\u3002\u4e0e\u5176\u4ed6\u4e1a\u4f59\u73a9\u5bb6\u4e0d\u540c\u7684\u662f\uff0c\u5c0f L \u5728\u73a9\u6e38\u620f\u4e4b\u4f59\uff0c\u8fd8\u7cbe\u4e8e\u7814\u7a76\u6e38\u620f\u7684\u8bbe\u8ba1\uff0c\u56e0\u6b64\u4ed6\u6709\u7740\u4e0e\u4f17\u4e0d\u540c\u7684\u6e38\u620f\u7b56\u7565\u3002</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5c0f L \u8ba1\u5212\u8fdb\u884c \\(n\\) \u573a\u6e38\u620f\uff0c\u6bcf\u573a\u6e38\u620f\u4f7f\u7528\u4e00\u5f20\u5730\u56fe\uff0c\u5c0f L \u4f1a\u9009\u62e9\u4e00\u8f86\u8f66\u5728\u8be5\u5730\u56fe\u4e0a\u5b8c\u6210\u6e38\u620f\u3002</p> <p>\u5c0f L \u7684\u8d5b\u8f66\u6709\u4e09\u8f86\uff0c\u5206\u522b\u7528\u5927\u5199\u5b57\u6bcd \\(A\\)\u3001\\(B\\)\u3001\\(C\\) \u8868\u793a\u3002\u5730\u56fe\u4e00\u5171\u6709\u56db\u79cd\uff0c\u5206\u522b\u7528\u5c0f\u5199\u5b57\u6bcd \\(x\\)\u3001\\(a\\)\u3001\\(b\\)\u3001\\(c\\) \u8868\u793a\u3002</p> <p>\u5176\u4e2d\uff0c\u8d5b\u8f66 \\(A\\) \u4e0d\u9002\u5408\u5728\u5730\u56fe \\(a\\) \u4e0a\u4f7f\u7528\uff0c\u8d5b\u8f66 \\(B\\) \u4e0d\u9002\u5408\u5728\u5730\u56fe \\(b\\) \u4e0a\u4f7f\u7528\uff0c\u8d5b\u8f66 \\(C\\) \u4e0d\u9002\u5408\u5728\u5730\u56fe \\(c\\) \u4e0a\u4f7f\u7528\uff0c\u800c\u5730\u56fe \\(x\\) \u5219\u9002\u5408\u6240\u6709\u8d5b\u8f66\u53c2\u52a0\u3002</p> <p>\u9002\u5408\u6240\u6709\u8d5b\u8f66\u53c2\u52a0\u7684\u5730\u56fe\u5e76\u4e0d\u591a\u89c1\uff0c\u6700\u591a\u53ea\u4f1a\u6709 \\(d\\) \u5f20\u3002</p> <p>\\(n\\) \u573a\u6e38\u620f\u7684\u5730\u56fe\u53ef\u4ee5\u7528\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u63cf\u8ff0\u3002\u4f8b\u5982\uff1a\\(S=\\texttt{xaabxcbc}\\) \u8868\u793a\u5c0fL\u8ba1\u5212\u8fdb\u884c \\(8\\) \u573a\u6e38\u620f\uff0c\u5176\u4e2d\u7b2c \\(1\\) \u573a\u548c\u7b2c \\(5\\) \u573a\u7684\u5730\u56fe\u7c7b\u578b\u662f \\(x\\)\uff0c\u9002\u5408\u6240\u6709\u8d5b\u8f66\uff0c\u7b2c \\(2\\) \u573a\u548c\u7b2c \\(3\\) \u573a\u7684\u5730\u56fe\u662f \\(a\\)\uff0c\u4e0d\u9002\u5408\u8d5b\u8f66 \\(A\\)\uff0c\u7b2c \\(4\\) \u573a\u548c\u7b2c \\(7\\) \u573a\u7684\u5730\u56fe\u662f \\(b\\)\uff0c\u4e0d\u9002\u5408\u8d5b\u8f66 \\(B\\)\uff0c\u7b2c \\(6\\) \u573a\u548c\u7b2c \\(8\\) \u573a\u7684\u5730\u56fe\u662f \\(c\\)\uff0c\u4e0d\u9002\u5408\u8d5b\u8f66 \\(C\\)\u3002</p> <p>\u5c0f L \u5bf9\u6e38\u620f\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u8981\u6c42\uff0c\u8fd9\u4e9b\u8981\u6c42\u53ef\u4ee5\u7528\u56db\u5143\u7ec4 \\((i, h_i, j, h_j)\\) \u6765\u63cf\u8ff0\uff0c\u8868\u793a\u82e5\u5728\u7b2c \\(i\\) \u573a\u4f7f\u7528\u578b\u53f7\u4e3a \\(h_i\\) \u7684\u8f66\u5b50\uff0c\u5219\u7b2c \\(j\\) \u573a\u6e38\u620f\u8981\u4f7f\u7528\u578b\u53f7\u4e3a \\(h_j\\) \u7684\u8f66\u5b50\u3002</p> <p>\u4f60\u80fd\u5e2e\u5c0f L \u9009\u62e9\u6bcf\u573a\u6e38\u620f\u4f7f\u7528\u7684\u8d5b\u8f66\u5417\uff1f\u5982\u679c\u6709\u591a\u79cd\u65b9\u6848\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u65b9\u6848\u3002</p> <p>\u5982\u679c\u65e0\u89e3\uff0c\u8f93\u51fa <code>-1</code>\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/2-SAT/#_1","title":"\u601d\u8def","text":"<p>\u5982\u679c\u6ca1\u6709\u5730\u56fex\uff0c\u90a3\u4e48\u5c31\u662f2-SAT\u6a21\u677f\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u628ax\u4e5f\u8f6c\u5316\u4e3a\u7c7b\u4f3ca,b,c\u7684\u5f62\u5f0f\u3002</p> <p>\u90a3\u4e48\u5982\u679c\u5bf9\u4e8e\u67d0\u4e2ax\uff0c\u6211\u4eec\u9009\u62e9A\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\u5b83\u201c\u4e0d\u9009B\u201d\uff08\u6211\u4eec\u4e0d\u9700\u8981\u660e\u786e\u5730\u8bf4\u51fa\u6211\u4eec\u9009\u4e86\u4ec0\u4e48\uff0c\u53ea\u8981\u5728\u53ef\u9009\u8303\u56f4\u5185\u5305\u542b\u4e86\u9009\u7684\u90a3\u4e2a\u503c\u5373\u53ef\uff0c\u56e0\u4e3ax\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u9009\u4efb\u610f\uff0c\u6211\u4eec\u53ea\u4e0d\u8fc7\u628a\u5b83\u62c6\u6210\u51e0\u79cd\u60c5\u51b5\uff09</p> <p>\u5982\u679c\u9009\u62e9B\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\u201c\u4e0d\u9009A\u201d\uff0c\u5982\u679c\u9009\u62e9C\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\u201c\u4e0d\u9009A\u201d\u4e0e\u201c\u4e0d\u9009B\u201d</p> <p>\u5373\u8003\u8651x\u5730\u56fe\uff0c\u8003\u8651\u5230\u53ea\u67098\u5f20x\u5730\u56fe\uff0c\u5982\u679c\u5047\u8bbe\u5b83\u4e5f\u53ea\u9002\u5408\u4e24\u79cd\u8d5b\u8f66\uff0c\u90a3\u4e48\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2ax\u5730\u56fe\u4e0d\u9002\u5408\u8d5b\u8f66A\u6216\u4e0d\u9002\u5408\u8d5b\u8f66B\uff08\u56e0\u4e3a\u4e0d\u9002\u5408\u8d5b\u8f66A\u5c31\u662f\u9002\u5408\u8d5b\u8f66BC\uff0c\u4e0d\u9002\u5408\u8d5b\u8f66B\u5c31\u662f\u9002\u5408\u8d5b\u8f66AC\uff0c\u8fd9\u6837\u5c31\u5305\u542b\u4e86ABC\u4e09\u79cd\u8d5b\u8f66\uff09\uff0c\u8fd9\u6837\u6bcf\u79cd\u5730\u56fe\u5c31\u90fd\u53ea\u9002\u5408\u4e24\u79cd\u8d5b\u8f66\u4e86\u3002\u5224\u65ad\u65f6\uff0c\u5982\u679c\u5df2\u7ecf\u679a\u4e3e\u904d\u4e86\u6240\u6709\u76842d\u79cd\u72b6\u6001\u90fd\u662f\u65e0\u89e3\uff0c\u5219\u539f\u95ee\u9898\u65e0\u89e3\uff0c\u5426\u5219\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u65b9\u6848\u3002</p> <p>\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u66b4\u529b\u679a\u4e3e\u4e00\u4e0b\u67d0\u4e2ax\u662f\u201c\u4e0d\u9009A\u201d\u8fd8\u662f\u201c\u4e0d\u9009B\u201d\u5373\u53ef\u3002</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n#define rep(i, a, b) for(int i = a; i &lt;= b; ++i)\n#define per(i, a, b) for(int i = a; i &gt;= b; --i)\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N = 2e5 + 5;\nconst int INF=2e18+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\n\nint n, d, y[N], x[N], m, cntx, dfn[N], low[N], ins[N], stk[N], top, cnt, idx;\nint to[N &lt;&lt; 1], nxt[N &lt;&lt; 1], head[N], tot, scc[N], pos[N];\nchar c[N], a[N], b[N], res[N];\ninline void add(int x, int y) { \n    to[++tot] = y; nxt[tot] = head[x]; \n    head[x] = tot; \n}\nvoid init() {\n    memset(head, 0,sizeof head); \n    memset(dfn, 0,sizeof dfn); \n    memset(low, 0,sizeof low); \n    memset(ins, 0,sizeof ins); \n    memset(stk, 0,sizeof stk);\n    while(top)stk[top--]=0;\n    memset(scc, 0,sizeof scc); \n    memset(nxt, 0,sizeof nxt);\n    tot = idx = cnt = top = 0;\n}\nvoid tarjan(int x) {\n    dfn[x] = low[x] = ++idx;\n    ins[x] = 1;\n    stk[++top] = x;\n    for(int i = head[x]; i; i = nxt[i]) {\n        int y = to[i];\n        if(!dfn[y]) {\n            tarjan(y);\n            low[x] = min(low[x], low[y]);\n        } else if(ins[y]) \n            low[x] = min(low[x], dfn[y]);\n    }\n    if(low[x] == dfn[x]) {\n        ++cnt;\n        int y;\n        while(top) {\n            y=stk[top];\n            scc[y] = cnt;\n            ins[y] = 0;\n            stk[top--]=0;\n            if(y == x) break;\n        }\n    }\n}\n\n\nbool check() {\n    rep(i, 1, (n &lt;&lt; 1)) \n        if(!dfn[i]) tarjan(i);\n    rep(i, 1, n) {\n        if(scc[i] == scc[i + n]) return false;\n        if(scc[i] &lt; scc[n + i]) res[i] = (c[i] == 'A') ? 'B' : 'A';\n        else res[i] = (c[i] == 'C') ? 'B' : 'C';\n    }\n    rep(i, 1, n) printf(\"%c\", res[i]); \n    return true;\n}\nvoid solve() {\n    rep(i, 0, (1 &lt;&lt; d) - 1) { \n        init();\n        rep(j, 1, d) c[pos[j]] = (i &amp; (1 &lt;&lt; (j - 1))) ? 'A' : 'B';  \n        rep(j, 1, m) {\n            if(a[j] == c[x[j]]) continue;\n            if(b[j] == c[y[j]]) {\n                if(a[j] == 'C' || (a[j] == 'B' &amp;&amp; c[x[j]] == 'C')) \n                    add(x[j] + n, x[j]);\n                else add(x[j], x[j] + n);\n                continue;\n            }\n            int add1 , add2;\n            if(a[j] == 'C' || (a[j] == 'B' &amp;&amp; c[x[j]] == 'C')) add1 = n;\n            else add1 = 0;\n            if(b[j] == 'C' || (b[j] == 'B' &amp;&amp; c[y[j]] == 'C')) add2 = n;\n            else add2 = 0;\n            add(x[j] + add1, y[j] + add2);  \n            add(y[j] - add2 + n, x[j] - add1 + n); \n        }\n        if(check()) exit(0);\n    }\n    printf(\"-1\");\n    return;\n}\nsigned main() {\n    n = rd, d = rd;\n    scanf(\"%s\", (c + 1)); m = rd;\n    rep(i, 1, m) {\n        scanf(\"%d %c %d %c\", &amp;x[i], &amp;a[i], &amp;y[i], &amp;b[i]);\n    }\n    rep(i, 1, n) {\n        if((c[i] -= 32) &amp;&amp; c[i] == 'X'){\n            pos[++cntx] = i;\n        }\n    } \n\n    solve();\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/2-SAT/#_2","title":"\u6570\u636e\u8303\u56f4","text":"\u6d4b\u8bd5\u70b9\u7f16\u53f7 \\(n\\) \\(d\\) \\(m\\) \u5176\u4ed6\u6027\u8d28 \\(1\\) \\(\\le 2\\) \\(0\\) \\(\\le 4\\) \u65e0 \\(2\\) \\(\\le 2\\) \\(\\le n\\) \\(\\le 4\\) \u65e0 \\(3\\) \\(\\le 5\\) \\(0\\) \\(\\le 10\\) \u65e0 \\(4\\) \\(\\le 5\\) \\(\\le n\\) \\(\\le 10\\) \u65e0 \\(5\\) \\(\\le 10\\) \\(0\\) \\(\\le 20\\) \u65e0 \\(6\\) \\(\\le 10\\) \\(\\le 8\\) \\(\\le 20\\) \u65e0 \\(7\\) \\(\\le 20\\) \\(0\\) \\(\\le 40\\) \\(S\\) \u4e2d\u53ea\u5305\u542b \\(c\\) \\(8\\) \\(\\le 20\\) \\(0\\) \\(\\le 40\\) \u65e0 \\(9\\) \\(\\le 20\\) \\(\\le 8\\) \\(\\le 40\\) \\(S\\) \u4e2d\u53ea\u5305\u542b \\(x\\) \u6216 \\(c\\) \\(10\\) \\(\\le 20\\) \\(\\le 8\\) \\(\\le 40\\) \u65e0 \\(11\\) \\(\\le 100\\) \\(0\\) \\(\\le 200\\) \\(S\\) \u4e2d\u53ea\u5305\u542b \\(c\\) \\(12\\) \\(\\le 100\\) \\(0\\) \\(\\le 200\\) \u65e0 \\(13\\) \\(\\le 100\\) \\(\\le 8\\) \\(\\le 200\\) \\(S\\) \u4e2d\u53ea\u5305\u542b \\(x\\) \u6216 \\(c\\) \\(14\\) \\(\\le 100\\) \\(\\le 8\\) \\(\\le 200\\) \u65e0 \\(15\\) \\(\\le 5\\times 10^3\\) \\(0\\) \\(\\le 10^4\\) \u65e0 \\(16\\) \\(\\le 5\\times 10^3\\) \\(\\le 8\\) \\(\\le 10^4\\) \\(S\\) \u4e2d\u53ea\u5305\u542b \\(x\\) \u6216 \\(c\\) \\(17\\) \\(\\le 5\\times 10^3\\) \\(\\le 8\\) \\(\\le 10^4\\) \u65e0 \\(18\\) \\(\\le 5\\times 10^4\\) \\(0\\) \\(\\le 10^5\\) \u65e0 \\(19\\) \\(\\le 5\\times 10^4\\) \\(\\le 8\\) \\(\\le 10^5\\) \\(S\\) \u4e2d\u53ea\u5305\u542b \\(x\\) \u6216 \\(c\\) \\(20\\) \\(\\le 5\\times 10^4\\) \\(\\le 8\\) \\(\\le 10^5\\) \u65e0"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/","title":"Tarjan","text":"<p>\u5f3a\u8fde\u901a\u5206\u91cf</p> <p>\u70b9\u53cc\u8fde\u901a\u5206\u91cf</p> <p>\u8fb9\u53cc\u8fde\u901a\u5206\u91cf</p> <p>\u5272\u70b9\uff08\u5272\u9876\uff09</p> <p>\u7f29\u70b9\uff08\u5f3a\u8fde\u901a\u5206\u91cf\uff09</p> <p>\u5706\u65b9\u6811\u4e0e\u4ed9\u4eba\u638c</p> <p>Kosaraju \u7b97\u6cd5</p> <p>\u7ec3\u4e60</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%88%86%E5%9B%BE/","title":"\u4e8c\u5206\u56fe","text":"<p>b23.tv \u8d39\u7528\u6d41</p> <p>\u4e13\u9898 | \u4e8c\u5206\u56fe/\u4e8c\u90e8\u56fe\u95ee\u9898</p> <p>b23.tv \u5308\u7259\u5229\u7b97\u6cd5</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%88%86%E5%9B%BE/#_1","title":"\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d","text":"<p>\u4e8c\u5206\u56fe\uff08\u4e8c\u90e8\u56fe\uff09\u7684\u6700\u5927\u5339\u914d\uff1a</p> <p>\u8bbe \\(G\\) \u4e3a\u4e8c\u5206\u56fe \uff0c \u82e5\u5728 $G $ \u7684\u5b50\u56fe $M $ \u4e2d \uff0c \u4efb\u610f\u4e24\u6761\u8fb9\u90fd\u6ca1\u6709\u516c\u5171\u8282\u70b9 \uff0c \u90a3\u4e48\u79f0 $M $ \u4e3a\u4e8c\u5206\u56fe $G $ \u7684\u4e00\u7ec4\u5339\u914d \u3002 \u5728\u4e8c\u5206\u56fe\u4e2d \uff0c\u5305\u542b\u8fb9\u6570\u6700\u591a\u7684\u4e00\u7ec4\u5339\u914d\u79f0\u4e3a\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u3002</p> <p>\u5982\u5728\u4e0b\u56fe\u4e2d\uff0c1-4\uff0c5-3\u5c31\u662f\u4e00\u7ec4\u5339\u914d\u30021-4\uff0c5-3\uff0c2-7\u5c31\u662f\u4e0b\u56fe\u7684\u6700\u5927\u5339\u914d</p> <p></p> <p></p> <p></p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%88%86%E5%9B%BE/#_2","title":"\u4e8c\u5206\u56fe\u67d3\u8272","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%88%86%E5%9B%BE/#1-noip2008","title":"\u4f8b\u9898 #1 [NOIP2008 \u63d0\u9ad8\u7ec4] \u53cc\u6808\u6392\u5e8f","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>Tom \u6700\u8fd1\u5728\u7814\u7a76\u4e00\u4e2a\u6709\u8da3\u7684\u6392\u5e8f\u95ee\u9898\u3002\u5982\u56fe\u6240\u793a\uff0c\u901a\u8fc7 \\(2\\) \u4e2a\u6808 \\(S_1\\) \u548c \\(S_2\\)\uff0cTom \u5e0c\u671b\u501f\u52a9\u4ee5\u4e0b \\(4\\) \u79cd\u64cd\u4f5c\u5b9e\u73b0\u5c06\u8f93\u5165\u5e8f\u5217\u5347\u5e8f\u6392\u5e8f\u3002</p> <p></p> <ul> <li> <p>\u64cd\u4f5c \\(\\verb!a!\\)\uff1a\u5c06\u7b2c\u4e00\u4e2a\u5143\u7d20\u538b\u5165\u6808 \\(S_1\\)\u3002</p> </li> <li> <p>\u64cd\u4f5c \\(\\verb!b!\\)\uff1a\u5c06 \\(S_1\\) \u6808\u9876\u5143\u7d20\u5f39\u51fa\u81f3\u8f93\u51fa\u5e8f\u5217\u3002</p> </li> <li> <p>\u64cd\u4f5c \\(\\verb!c!\\)\uff1a\u5c06\u7b2c\u4e00\u4e2a\u5143\u7d20\u538b\u5165\u6808 \\(S_2\\)\u3002</p> </li> <li> <p>\u64cd\u4f5c \\(\\verb!d!\\)\uff1a\u5c06 \\(S_2\\) \u6808\u9876\u5143\u7d20\u5f39\u51fa\u81f3\u8f93\u51fa\u5e8f\u5217\u3002</p> </li> </ul> <p>\u5982\u679c\u4e00\u4e2a \\(1\\sim n\\) \u7684\u6392\u5217 \\(P\\) \u53ef\u4ee5\u901a\u8fc7\u4e00\u7cfb\u5217\u5408\u6cd5\u64cd\u4f5c\u4f7f\u5f97\u8f93\u51fa\u5e8f\u5217\u4e3a \\((1,2,\\cdots,n-1,n)\\)\uff0cTom \u5c31\u79f0 \\(P\\) \u662f\u4e00\u4e2a\u201c\u53ef\u53cc\u6808\u6392\u5e8f\u6392\u5217\u201d\u3002\u4f8b\u5982 \\((1,3,2,4)\\) \u5c31\u662f\u4e00\u4e2a\u201c\u53ef\u53cc\u6808\u6392\u5e8f\u5e8f\u5217\u201d\uff0c\u800c \\((2,3,4,1)\\) \u4e0d\u662f\u3002\u4e0b\u56fe\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5c06 \\((1,3,2,4)\\) \u6392\u5e8f\u7684\u64cd\u4f5c\u5e8f\u5217\uff1a\\(\\texttt {a,c,c,b,a,d,d,b}\\)\u3002</p> <p></p> <p>\u5f53\u7136\uff0c\u8fd9\u6837\u7684\u64cd\u4f5c\u5e8f\u5217\u6709\u53ef\u80fd\u6709\u51e0\u4e2a\uff0c\u5bf9\u4e8e\u4e0a\u4f8b \\((1,3,2,4)\\)\uff0c\\(\\texttt{a,b,a,a,b,b,a,b}\\) \u662f\u53e6\u5916\u4e00\u4e2a\u53ef\u884c\u7684\u64cd\u4f5c\u5e8f\u5217\u3002Tom \u5e0c\u671b\u77e5\u9053\u5176\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u64cd\u4f5c\u5e8f\u5217\u662f\u4ec0\u4e48\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570 \\(n\\)\u3002</p> <p>\u7b2c\u4e8c\u884c\u6709 \\(n\\) \u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6b63\u6574\u6570\uff0c\u6784\u6210\u4e00\u4e2a \\(1\\sim n\\) \u7684\u6392\u5217\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5171\u4e00\u884c\uff0c\u5982\u679c\u8f93\u5165\u7684\u6392\u5217\u4e0d\u662f\u201c\u53ef\u53cc\u6808\u6392\u5e8f\u6392\u5217\u201d\uff0c\u8f93\u51fa <code>0</code>\u3002</p> <p>\u5426\u5219\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u6bcf\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u884c\u5c3e\u6ca1\u6709\u7a7a\u683c\u3002</p> <p>\\(100\\%\\) \u7684\u6570\u636e\u6ee1\u8db3\uff1a\\(n\\le1000\\)\u3002</p> <p>\u9996\u5148\u8003\u8651\u53ea\u6709\u4e00\u4e2a\u6808\u7684\u60c5\u51b5\uff1a</p> <p>\u6211\u4eec\u8003\u8651\u4e24\u4e2a\u6570\u5b57a_i,a_j\u4e0d\u5141\u8bb8\u5b58\u5728\u7684\u60c5\u51b5\u662f\u4ec0\u4e48\u3002</p> <p>\u5b58\u5728k\uff0c\u4f7f\u5f97i&lt;j&lt;k\u4e14a_k&lt;a_i&lt;a_j\u3002</p> <p>\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u5e8f\u5217\u53ef\u4ee5\u88ab\u53cc\u6808\u6392\u5e8f\uff0c\u90a3\u4e48\u5b83\u5c31\u5e94\u8be5\u53ef\u4ee5\u5212\u5206\u4e3a\u4e24\u4e2a\u5b50\u5e8f\u5217\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5b50\u5e8f\u5217\u4e2d\u90fd\u4e0d\u5b58\u5728\u4e0a\u8ff0\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u628a\u6784\u6210\u4e0a\u8ff0\u60c5\u51b5\u7684 (i,j)\u8fde\u8fb9\uff0c\u7136\u540e\u8dd1\u4e8c\u5206\u56fe\u67d3\u8272\u3002\u5982\u679c\u67d3\u8272\u6210\u529f\uff0c\u5219\u8bf4\u660e\u53ef\u4ee5\u5212\u5206\u3002</p> <p>\u5224\u65ad\u5b8c\u4e86\u662f\u5426\u80fd\u6b63\u786e\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u601d\u8003\u5982\u4f55\u53d6\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u64cd\u4f5c\u5e8f\u5217\u4e86\u3002</p> <p>\u9996\u5148\u8003\u8651\u600e\u4e48\u4f7f\u64cd\u4f5c\u662f\u6b63\u786e\u7684\uff0c\u5373\u64cd\u4f5c\u540e\u80fd\u4ea7\u751f\u5347\u5e8f\u5e8f\u5217\u3002 \u5927\u4f53\u601d\u8def\u5c31\u662f\u5c06\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\u4f9d\u6b21\u538b\u5165\u5b83\u5c5e\u4e8e\u7684\u6808\u4e2d\uff08\u5c5e\u4e8e\u54ea\u4e2a\u6808\u5728\u4e8c\u5206\u56fe\u67d3\u8272\u65f6\u5c31\u53ef\u4ee5\u6807\u8bb0\u597d\uff09\uff0c\u5728\u5c06\u8fd9\u4e2a\u6570\u538b\u5165\u6808\u524d\uff0c\u6211\u4eec\u8981\u5148\u5224\u65ad\u538b\u5165\u4e4b\u540e\u6808\u662f\u5426\u4ecd\u7136\u5355\u8c03\uff0c\u82e5\u4e0d\u5355\u8c03\uff0c\u5219\u4e00\u76f4\u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u76f4\u5230\u5355\u8c03\u4e3a\u6b62\u3002 \u6ce8\u610f\uff1a\u5728\u5f39\u51fa\u6808\u9876\u5143\u7d20\u65f6\uff0c\u6808\u9876\u7684\u5143\u7d20\u53ef\u80fd\u4e0d\u662f\u5f53\u524d\u5e94\u5f53\u5f39\u51fa\u7684\u6570\uff08\u56e0\u4e3a\u6211\u4eec\u8981\u4f7f\u5f97\u8f93\u51fa\u5e8f\u5217\u7684\u5143\u7d20\u662f\u9012\u589e\u7684\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53d8\u91cf now\uff0c\u8868\u793a\u5f53\u524d\u5e94\u5f53\u5f39\u51fa\u7684\u6570\uff0c\u82e5\u8be5\u6808\u9876\u7684\u6570\u4e0d\u7b49\u4e8e now\uff0c\u5c31\u5f39\u51fa\u53e6\u5916\u4e00\u4e2a\u6808\u9876\u7684\u6570\u3002</p> <p>\u5728\u8003\u8651\u4ee5\u4e0a\u6761\u4ef6\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8f93\u51fa\u6b63\u786e\u7684\u64cd\u4f5c\u5e8f\u5217\u4e86\uff0c\u90a3\u8981\u600e\u4e48\u624d\u80fd\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5462\uff1f \u540c\u4e00\u4e2a\u6808\u7684\u538b\u5165\u548c\u5f39\u51fa\u7684\u76f8\u5bf9\u987a\u5e8f\u4f3c\u4e4e\u6539\u53d8\u4e0d\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8003\u8651\u4e24\u4e2a\u6808\u7684\u64cd\u4f5c\u4e4b\u95f4\u7684\u987a\u5e8f\u5427\u3002 \u65e2\u7136 S1\u200b \u7684\u64cd\u4f5c\u7684\u5b57\u5178\u5e8f\u66f4\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u60f3\u4e00\u4e0b\u4ec0\u4e48\u65f6\u5019\u80fd\u5148\u8fdb\u884c S1\u200b \u7684\u64cd\u4f5c\u3002\u7531\u4e8e\u538b\u6808\u7684\u987a\u5e8f\u662f\u4e00\u5b9a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8003\u8651\u5f39\u51fa\u64cd\u4f5c\uff0c\u5728\u538b\u5165\u5c5e\u4e8e S2\u200b \u7684\u6570\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u628a S1\u200b \u4e2d\u80fd\u5f39\u51fa\u7684\u6570\u90fd\u5f39\u51fa\u6765\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u5f97\u5b57\u5178\u5e8f\u6700\u5c0f\u4e86\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e3 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nint n,val[N],minx[N],col[N];\nvector&lt;int&gt; p[N];\nstack&lt;int&gt; s[3];\n\n\nint now;\nbool judge(int id){\n    if(s[id].empty()||s[id].top()!=now+1) return 0;\n    return 1;\n}\n\n\nvoid del(int id){\n    now++;\n    s[id].pop();\n    putchar(id==1 ?'b' :'d');\n    putchar(' ');\n}\n\n\n\nvoid add(int v,int id){\n    if(id==2) while(judge(1)) del(1);\n    while(!s[id].empty()&amp;&amp;s[id].top()&lt;v){\n        if(!judge(id)) del(3-id);\n        else del(id);\n    }\n    if(id==2) while(judge(1)) del(1);\n    s[id].push(v);\n    putchar(id==1 ?'a' :'c');\n    putchar(' ');\n}\n\n\n\nvoid print(){\n    for(int i=1;i&lt;=n;i++){\n        add(val[i],col[i]);\n    }\n    while(!s[1].empty()){\n        if(!judge(1)) del(2);\n        else del(1);\n    }\n    while(!s[2].empty()) del(2);\n}\n\n\nvoid solve(){\n    n=rd;\n    for(int i=1;i&lt;=n;i++)\n        val[i]=rd;  minx[n+1]=n+1;\n    for(int i=n;i&gt;=1;i--)\n        minx[i]=min(minx[i+1],val[i]);\n    for(int i=1;i&lt;=n;i++)\n        for(int j=i+1;j&lt;=n;j++)\n            if(val[i]&lt;val[j]&amp;&amp;minx[j+1]&lt;val[i]) {\n                p[i].push_back(j);\n                p[j].push_back(i);\n            }\n\n    for(int i=1;i&lt;=n;i++)\n        if(!col[i]){\n            queue&lt;int&gt; q;\n            col[i]=1;\n            q.push(i);\n            while(!q.empty()){\n                int u=q.front();\n                q.pop();\n                for(int j=0;j&lt;p[u].size();j++){\n                    int v=p[u][j];\n                    if(col[v]){\n                        if(col[v]==col[u]){\n                            printf(\"0\");\n                            return;\n                        }\n                        continue;\n                    }\n                    col[v]=3-col[u];\n                    q.push(v);\n                }\n            }\n        }\n\n\n    print();\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%88%86%E5%9B%BE/#_3","title":"\u5308\u7259\u5229\u7b97\u6cd5","text":"<p>\u5308\u7259\u5229\u7b97\u6cd5\u901a\u8fc7\u4e0d\u505c\u5730\u627e\u589e\u5e7f\u8def\u6765\u589e\u52a0\u914d\u8fb9\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u65f6 \uff0c \u8fbe\u5230\u6700\u5927\u5339\u914d \u3002 \u53ef\u4ee5\u7528 DFS \u6216 BFS \u6765\u5b9e\u73b0 \u3002</p> <p>\u7b97\u6cd5\u7b80\u5355\uff0c\u4e0b\u9762\u7ed3\u5408\u4ee3\u7801\u548c\u4f8b\u9898.</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%88%86%E5%9B%BE/#1","title":"\u4f8b\u9898 #1","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5176\u5de6\u90e8\u70b9\u7684\u4e2a\u6570\u4e3a \\(n\\)\uff0c\u53f3\u90e8\u70b9\u7684\u4e2a\u6570\u4e3a \\(m\\)\uff0c\u8fb9\u6570\u4e3a \\(e\\)\uff0c\u6c42\u5176\u6700\u5927\u5339\u914d\u7684\u8fb9\u6570\u3002</p> <p>\u5de6\u90e8\u70b9\u4ece \\(1\\) \u81f3 \\(n\\) \u7f16\u53f7\uff0c\u53f3\u90e8\u70b9\u4ece \\(1\\) \u81f3 \\(m\\) \u7f16\u53f7\u3002</p> <p>\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u4ee3\u8868\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u8fb9\u6570\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1\uff1a</p> <ul> <li> <p>\\(1 \\leq n, m \\leq 500\\)\u3002</p> </li> <li> <p>\\(1 \\leq e \\leq 5 \\times 10^4\\)\u3002</p> </li> <li> <p>\\(1 \\leq u \\leq n\\)\uff0c\\(1 \\leq v \\leq m\\)\u3002</p> </li> </ul> <p>\u4e0d\u4fdd\u8bc1\u7ed9\u51fa\u7684\u56fe\u6ca1\u6709\u91cd\u8fb9\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N=5e4+5;\nint n,m,E,ans;\n//int h[N],e[N];\nvector &lt;int&gt; e[N];\nint vis[N],match[N];\nvoid add(int a,int b){\n    e[a].push_back(b);\n}\nbool dfs(int u){\n    for(int i=0;i&lt;e[u].size();i++){//\u626b\u63cf\u6240\u6709\u53ef\u80fd\u6210\u4e3a\u914d\u5bf9\u7684\u53f3\u70b9\uff08\u5373\u6709\u8fde\u8fb9\u7684\u70b9\uff09\n        int v=e[u][i];\n        if(vis[v])continue;//\u5373\uff08\u5728\u4e0a\u4e00\u5c42\u51fd\u6570\u4e2d\uff09\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\n        vis[v]=1;//\u4e0d\u662f\u4e0a\u4e00\u5c42\u51fd\u6570\u4e2d\u60f3\u8981\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e00\u5c42\u5c31\u53ef\u80fd\u53ef\u4ee5\u5339\u914d\u6210\u529f\n        if(!match[v]||dfs(match[v])){//\u5982\u679c \u70b9v\u6ca1\u6709\u4efb\u4f55\u5df2\u6709\u5339\u914d\uff0c\u90a3\u4e48\u5339\u914d\u5b83\u548cu\uff01 \u6216\u8005\u5b83\u6709\u5339\u914d\u4e86(\u4e0ematch[v]),\u4f46match[v]\u53ef\u4ee5\u627e\u5230\u53e6\u5916\u4e00\u4e2a\u53f3\u70b9\u548c\u5b83\u5339\u914d,\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u70b9v\u8ba9\u7ed9u (\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5df2\u7ecf\u6709\u7684\u5339\u914d\u6570\u4e0d\u51cf\u5c11,\u53ef\u80fd\u4f1a\u53d8\u66f4,\u4f46\u4e0d\u51cf\u5c11)(\u8d2a\u5fc3)\n            match[v]=u;\n            return 1;\n        }\n    }\n    return 0;//\u626b\u63cf\u5168\u90e8\u7ed3\u675f,\u6ca1\u6709\u4e00\u4e2a\u5339\u914d\u6210\u529f\n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;E;\n    for(int i=1;i&lt;=E;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        add(a,b);//\u6211\u4eec\u53ea\u901a\u8fc7\u5de6\u8fb9\u627e\u53f3\u8fb9\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u5355\u5411\u8fb9\n    }\n    for(int i=1;i&lt;=n;i++){//\u904d\u5386\u6bcf\u4e2a\u5de6\u8fb9\u7684\u70b9\u7ed9\u5b83\u627e\u914d\u5bf9\n        memset(vis,0,sizeof vis);\n        if(dfs(i))ans++;//\u5982\u679c\u627e\u5230\u4e86\u914d\u5bf9\n    }\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> <p>\u8be6\u7ec6\u89e3\u91ca\u4ee5\u4e0b\u7247\u6bb5</p> <pre><code>if(vis[v])continue;//\u5373\uff08\u5728\u4e0a\u4e00\u5c42\u51fd\u6570\u4e2d\uff09\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\n        vis[v]=1;//\u4e0d\u662f\u4e0a\u4e00\u5c42\u51fd\u6570\u4e2d\u60f3\u8981\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e00\u5c42\u5c31\u53ef\u80fd\u53ef\u4ee5\u5339\u914d\u6210\u529f\n        if(!match[v]||dfs(match[v])){//\u5982\u679c \u70b9v\u6ca1\u6709\u4efb\u4f55\u5df2\u6709\u5339\u914d\uff0c\u90a3\u4e48\u5339\u914d\u5b83\u548cu\uff01 \u6216\u8005\u5b83\u6709\u5339\u914d\u4e86(\u4e0ematch[v]),\u4f46match[v]\u53ef\u4ee5\u627e\u5230\u53e6\u5916\u4e00\u4e2a\u53f3\u70b9\u548c\u5b83\u5339\u914d,\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u70b9v\u8ba9\u7ed9u (\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5df2\u7ecf\u6709\u7684\u5339\u914d\u6570\u4e0d\u51cf\u5c11,\u53ef\u80fd\u4f1a\u53d8\u66f4,\u4f46\u4e0d\u51cf\u5c11)(\u8d2a\u5fc3)\n</code></pre> <p>\u5148\u5ffd\u7565vis[]\uff0c\u5f53\u8d70\u5230\u5224\u5b9a\u5904\uff0c\u53d1\u73b0match[v]\u22600\uff0c\u90a3\u4e48\u5c31\u8981\u53bbdfs(match[v])\uff0c\u6b64\u65f6\u4ecedfs(u)\u7684\u51fd\u6570\u7a7a\u95f4\u8d70\u5230\u4e86dfs(match[v])\u7684\u51fd\u6570\u7a7a\u95f4\uff0c\u8fd9\u65f6\u624d\u4f1a\u51fa\u73b0vis[v]\u22600\u7684\u60c5\u51b5</p> <p>\u5982\u679cvis[v]\u22601\u4e86\uff0c\u5c31\u8bf4\u660e\u5728dfs(u)\u51fd\u6570\u7a7a\u95f4\u5185\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u88ab\u9884\u5b9a\u4e86\uff0cmatch[v]\u8fd9\u4e2a\u70b9\u53ea\u80fd\u53e6\u5bfb\u4ed6\u4eba</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \u7406\u8bba\u4e0a\u9650O(nm)</p> <p></p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E4%BA%8C%E5%88%86%E5%9B%BE/#2","title":"\u4f8b\u9898 #2","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5176\u70b9\u7684\u4e2a\u6570\u4e3a \\(n\\)\uff0c\u8fb9\u6570\u4e3a \\(e\\)\uff0c\u6c42\u5176\u6700\u5927\u5339\u914d\u7684\u8fb9\u6570\u3002</p> <p>\u8f93\u5165 \\(e\\) \u6761\u8fb9\uff0c\u4fdd\u8bc1\u8fde\u6210\u7684\u56fe\u4e3a\u4e8c\u5206\u56fe</p> <p>\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u4ee3\u8868\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u8fb9\u6570\u3002</p> <p>(\u672a\u9a8c\u8bc1\u7684)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N=5e4+5;\nint pleft[N];//0\u672a\u53d1\u73b0,1\u4e3a\u5de6\u70b9\uff0c2\u4e3a\u53f3\u70b9 \nint n,ln,E,ans;\n//int h[N],e[N];\nvector &lt;int&gt; e[N];\nint vis[N],match[N];\nvoid add(int a,int b){\n    e[a].push_back(b);\n}\nbool dfs(int u){\n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[u][i];\n        if(vis[v])continue;\n        vis[v]=1;\n        if(!match[v]||dfs(match[v])){\n            match[v]=u;\n            return 1;\n        }\n    }\n    return 0;\n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;E;\n    for(int i=1;i&lt;=E;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n\n        if(&amp;&amp;!pletf[b])add(a,b),pletf[b]=2,pletf[a]=1,ln++;\n\n        if(pletf[a]==1||pletf[b]==2)\n        if(!pletf[a])ln++;\n        add(a,b),pletf[a]=1,pletf[b]=2;\n\n        if(pletf[a]==2||pletf[b]==1)\n        if(!pletf[b])ln++;\n        add(b,a),pletf[a]=2,pletf[b]=1;\n\n    }\n//  cout&lt;&lt;\"OK\"&lt;&lt;endl;\n    for(int i=1;i&lt;=ln;i++){\n        memset(vis,0,sizeof vis);\n        if(dfs(i))ans++;\n    }\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E5%9F%BA%E7%8E%AF%E6%A0%91/","title":"\u57fa\u73af\u6811","text":"<p>D28 \u57fa\u73af\u6811 P2607 [ZJOI2008] \u9a91\u58eb_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E5%9F%BA%E7%8E%AF%E6%A0%91/#_1","title":"\u57fa\u73af\u6811","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E5%9F%BA%E7%8E%AF%E6%A0%91/#_2","title":"\u5206\u7c7b","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E5%9F%BA%E7%8E%AF%E6%A0%91/#_3","title":"\u601d\u8def","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E5%9F%BA%E7%8E%AF%E6%A0%91/#1-zjoi2008","title":"\u4f8b\u9898 #1 [ZJOI2008] \u9a91\u58eb","text":"<p>Z \u56fd\u7684\u9a91\u58eb\u56e2\u662f\u4e00\u4e2a\u5f88\u6709\u52bf\u529b\u7684\u7ec4\u7ec7\uff0c\u5e2e\u4f1a\u4e2d\u6c47\u805a\u4e86\u6765\u81ea\u5404\u5730\u7684\u7cbe\u82f1\u3002\u4ed6\u4eec\u52ab\u5bcc\u6d4e\u8d2b\uff0c\u60e9\u6076\u626c\u5584\uff0c\u53d7\u5230\u793e\u4f1a\u5404\u754c\u7684\u8d5e\u626c\u3002</p> <p>\u6700\u8fd1\u53d1\u751f\u4e86\u4e00\u4ef6\u53ef\u6015\u7684\u4e8b\u60c5\uff0c\u90aa\u6076\u7684 Y \u56fd\u53d1\u52a8\u4e86\u4e00\u573a\u9488\u5bf9 Z \u56fd\u7684\u4fb5\u7565\u6218\u4e89\u3002\u6218\u706b\u7ef5\u5ef6\u4e94\u767e\u91cc\uff0c\u5728\u548c\u5e73\u73af\u5883\u4e2d\u5b89\u9038\u4e86\u6570\u767e\u5e74\u7684 Z \u56fd\u53c8\u600e\u80fd\u62b5\u6321\u7684\u4f4f Y \u56fd\u7684\u519b\u961f\u3002\u4e8e\u662f\u4eba\u4eec\u628a\u6240\u6709\u7684\u5e0c\u671b\u90fd\u5bc4\u6258\u5728\u4e86\u9a91\u58eb\u56e2\u7684\u8eab\u4e0a\uff0c\u5c31\u50cf\u671f\u5f85\u6709\u4e00\u4e2a\u771f\u9f99\u5929\u5b50\u7684\u964d\u751f\uff0c\u5e26\u9886\u6b63\u4e49\u6253\u8d25\u90aa\u6076\u3002</p> <p>\u9a91\u58eb\u56e2\u662f\u80af\u5b9a\u5177\u6709\u6253\u8d25\u90aa\u6076\u52bf\u529b\u7684\u80fd\u529b\u7684\uff0c\u4f46\u662f\u9a91\u58eb\u4eec\u4e92\u76f8\u4e4b\u95f4\u5f80\u5f80\u6709\u4e00\u4e9b\u77db\u76fe\u3002\u6bcf\u4e2a\u9a91\u58eb\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u81ea\u5df1\u6700\u538c\u6076\u7684\u9a91\u58eb\uff08\u5f53\u7136\u4e0d\u662f\u4ed6\u81ea\u5df1\uff09\uff0c\u4ed6\u662f\u7edd\u5bf9\u4e0d\u4f1a\u4e0e\u81ea\u5df1\u6700\u538c\u6076\u7684\u4eba\u4e00\u540c\u51fa\u5f81\u7684\u3002</p> <p>\u6218\u706b\u7ef5\u5ef6\uff0c\u4eba\u6c11\u751f\u7075\u6d82\u70ad\uff0c\u7ec4\u7ec7\u8d77\u4e00\u4e2a\u9a91\u58eb\u519b\u56e2\u52a0\u5165\u6218\u6597\u523b\u4e0d\u5bb9\u7f13\uff01\u56fd\u738b\u4ea4\u7ed9\u4e86\u4f60\u4e00\u4e2a\u8270\u5de8\u7684\u4efb\u52a1\uff0c\u4ece\u6240\u6709\u7684\u9a91\u58eb\u4e2d\u9009\u51fa\u4e00\u4e2a\u9a91\u58eb\u519b\u56e2\uff0c\u4f7f\u5f97\u519b\u56e2\u5185\u6ca1\u6709\u77db\u76fe\u7684\u4e24\u4eba\uff08\u4e0d\u5b58\u5728\u4e00\u4e2a\u9a91\u58eb\u4e0e\u4ed6\u6700\u75db\u6068\u7684\u4eba\u4e00\u540c\u88ab\u9009\u5165\u9a91\u58eb\u519b\u56e2\u7684\u60c5\u51b5\uff09\uff0c\u5e76\u4e14\uff0c\u4f7f\u5f97\u8fd9\u652f\u9a91\u58eb\u519b\u56e2\u6700\u5177\u6709\u6218\u6597\u529b\u3002</p> <p>\u4e3a\u4e86\u63cf\u8ff0\u6218\u6597\u529b\uff0c\u6211\u4eec\u5c06\u9a91\u58eb\u6309\u7167 \\(1\\) \u81f3 \\(n\\) \u7f16\u53f7\uff0c\u7ed9\u6bcf\u540d\u9a91\u58eb\u4e00\u4e2a\u6218\u6597\u529b\u7684\u4f30\u8ba1\uff0c\u4e00\u4e2a\u519b\u56e2\u7684\u6218\u6597\u529b\u4e3a\u6240\u6709\u9a91\u58eb\u7684\u6218\u6597\u529b\u603b\u548c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 \\(n\\)\uff0c\u63cf\u8ff0\u9a91\u58eb\u56e2\u7684\u4eba\u6570\u3002</p> <p>\u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570\uff0c\u6309\u987a\u5e8f\u63cf\u8ff0\u6bcf\u4e00\u540d\u9a91\u58eb\u7684\u6218\u6597\u529b\u548c\u4ed6\u6700\u75db\u6068\u7684\u9a91\u58eb\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5e94\u8f93\u51fa\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4f60\u6240\u9009\u51fa\u7684\u9a91\u58eb\u519b\u56e2\u7684\u6218\u6597\u529b\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E5%9F%BA%E7%8E%AF%E6%A0%91/#_4","title":"\u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a","text":"<p>\u5bf9\u4e8e \\(30\\%\\) \u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u6ee1\u8db3 \\(n \\le 10\\)\uff1b</p> <p>\u5bf9\u4e8e \\(60\\%\\) \u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u6ee1\u8db3 \\(n \\le 100\\)\uff1b</p> <p>\u5bf9\u4e8e \\(80\\%\\) \u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u6ee1\u8db3 \\(n \\le 10 ^4\\)\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u6ee1\u8db3 \\(1\\le n \\le 10^6\\)\uff0c\u6bcf\u540d\u9a91\u58eb\u7684\u6218\u6597\u529b\u90fd\u662f\u4e0d\u5927\u4e8e \\(10^6\\) \u7684\u6b63\u6574\u6570\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E5%9F%BA%E7%8E%AF%E6%A0%91/#solu","title":"solu","text":"<p>\u57fa\u672c\u73af\u6811\u601d\u60f3+\u6811\u5f62DP</p> <p>\u6811\u5f62DP</p> <p>\u56de\u987e</p> <p></p> <p>\u8bf7\u601d\u8003</p> <p>\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u5f62\u6210\u67d0\u4e2a\u8fde\u901a\u5757\u5305\u542b\u591a\u4e2a\u73af\u7684\u56fe\u5462\uff0c\u800c\u4ec5\u4ec5\u53ea\u6709\u53ef\u80fd\u6709\u8fde\u901a\u5757\u662f\u57fa\u73af\u6811</p> <p>code</p> <p>\u6709\u5411\u56fe\u5199\u6cd5\uff08\u4eceu\u6700\u75db\u6068\u7684\u4eba\u6307\u5411u\uff09</p> <pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=1e6+5;\n\n\nint n,m,ver[N],ans,idx,vis[N],r1,r2,zd[N],f[N][2];\nstruct node{\n    int v,nxt;\n}e[N];\nint h[N];\nvoid add(int a,int b){\n    e[++idx]={b,h[a]};\n    h[a]=idx;\n}\nvoid find(int u,int rt){//\u627e\u73af,\u539f\u7406\u5f88\u7b80\u5355:\u4ecert\u4e0d\u65ad\u8d70,\u5982\u679c\u8d70\u56de\u4e86rt\u5c31\u8bf4\u660e\u6709\u73af \n    vis[u]=1;\n\n    for(int i=h[u];i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==rt){\n            r1=u,r2=v;return ;//\u4efb\u610f\u627e\u73af\u4e0a2\u4e2a\u70b9\u5373\u53ef \n        }\n        if(vis[v])continue;//\u526a\u679d \n        find(v,rt);\n    }\n} \nint dfs(int u,int rt){\n    f[u][0]=0;f[u][1]=zd[u];\n    for(int i=h[u];i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==rt)continue;//\u4fdd\u8bc1\u662f\u6811\u4e0d\u8d70\u73af(\u56e0\u4e3a\u539f\u56fe\u662f\u57fa\u73af\u6811,\u6709\u4e00\u4e2a\u73af) .\u56e0\u4e3a\u6784\u5efa\u7684\u662f\u5355\u5411\u8fb9\u6811,\u56e0\u6b64\u4e0d\u7528\u62c5\u5fc3\u5f80fa\u8d70,\u65e0\u9700\u5224\u5b9a\u548c\u8bb0\u5f55 \n        dfs(v,rt);//\n        f[u][0]+=max(f[v][0],f[v][1]);\n        f[u][1]+=f[v][0];\n\n    }\n    return f[u][0];//\u56e0\u4e3a\u8981\u5728\u65ad\u5f00\u7684\u8fb9\u76842\u7aef\u70b9u1,u2 \u5404\u8fdb\u884c\u4e00\u6b21dfs,\u56e0\u6b64\u53ea\u8fd4\u56de\u4e0d\u9009u\u7684\u6700\u5927\u503c,\u907f\u514d u1,u2\u540c\u65f6\u9009 \n}\nsigned main(){\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        int u;\n        cin&gt;&gt;zd[i]&gt;&gt;u;\n        add(u,i);\n    }\n    for(int i=1;i&lt;=n;i++){\n        if(!vis[i]){//\u6ca1\u6709\u88ab\u8bbf\u95ee\uff0c\u5c31\u8fdb\u53bb\u627e\u73af \n            r1=r2=0;//\u8bb0\u5f55\u73af\u76842\u4e2a\u7aef\u70b9(\u5373\u5c06\u8981\u65ad\u5f00\u7684\u8fb9\u76842\u7aef\u70b9) \n            find(i,i);//\u627e\u73af  \n            if(r1){\n                int res1=dfs(r1,r1);//\u4ece\u8981\u65ad\u5f00\u7684\u8fb9\u76842\u7aef\u70b9d\u5176\u4e2d\u4e00\u4e2a\u51fa\u53d1 \n                int res2=dfs(r2,r2);\n                ans+=max(res1,res2);\n            }\n        }\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n\n    return 0;\n}\n</code></pre> <p>\u65e0\u5411\u56fe\u5199\u6cd5</p> <pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=1e7+5;\n\nint bk_e[N]; \nint n,m,ver[N],ans,idx=1,vis[N],r1,r2,zd[N],f[N][2];//idx=1\u4fbf\u4e8e\u5bfb\u627e\u53cc\u5411\u8fb9 \nstruct node{\n    int v,nxt;\n}e[N];\nint h[N];\nvoid add(int a,int b){\n    e[++idx]={b,h[a]};\n    h[a]=idx;\n}\nbool find(int u,int in_e){//\u627e\u73af,\u539f\u7406\u5f88\u7b80\u5355:\u5982\u679c\u70b9v\u5728\u4e4b\u524d\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7,\u73b0\u5728\u53c8\u56de\u5230\u4e86v,\u8bf4\u660e\u6709\u73af \n    vis[u]=1;\n\n    for(int i=h[u];i;i=e[i].nxt){\n        int v=e[i].v;\n        if(i==(in_e^1))continue;//\u5982\u679c\u5f53\u524du-&gt;v\u7684\u8fb9\u6070\u597d\u662ffa-&gt;u\u7684\u53cd\u5411\u8fb9,\u5219\u8bf4\u660e\u8d70\u56de\u5934\u8def\u4e86 \n        if(!vis[v]){\n            if(find(v,i))return 1;//\u6ca1\u8bbf\u95ee\u8fc7,\u8fdb\u884c\u5f80\u4e0b\u8d70 \n        }else{//\u5982\u679c\u70b9v\u5728\u4e4b\u524d\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7,\u73b0\u5728\u53c8\u56de\u5230\u4e86v,\u8bf4\u660e\u6709\u73af \n            r1=u,r2=v;bk_e[i]=bk_e[i^1]=1;return 1; \n            //bk_e\u6807\u8bb0\u8fd9\u4e00\u6761\u8fb9(\u5305\u62ec\u5176\u53cd\u5411\u8fb9)\u662f\u8981\u88ab\u65ad\u5f00\u7684\u8fb9 ,\u540e\u9762\u5728dfs\u65f6\u5c31\u4e0d\u80fd\u8d70 \n        }\n    }\n    return 0;\n}\nint dfs(int u,int in_e){\n    vis[u]=1;//\n    f[u][0]=0;f[u][1]=zd[u];\n    for(int i=h[u];i;i=e[i].nxt){\n        int v=e[i].v;\n        if(i==(in_e^1)||bk_e[i])continue;//\u4fdd\u8bc1\u662f\u6811\u4e0d\u8d70\u73af(\u56e0\u4e3a\u539f\u56fe\u662f\u57fa\u73af\u6811,\u6709\u4e00\u4e2a\u73af) .\u56e0\u4e3a\u6784\u5efa\u7684\u662f\u65e0\u5411\u8fb9\u6811,\u56e0\u6b64\u9700\u5224\u5b9a\u548c\u8bb0\u5f55\u5165\u8fb9in_e \n        dfs(v,i);//\n        f[u][0]+=max(f[v][0],f[v][1]);\n        f[u][1]+=f[v][0];\n\n    }\n    return f[u][0];//\u56e0\u4e3a\u8981\u5728\u65ad\u5f00\u7684\u8fb9\u76842\u7aef\u70b9u1,u2 \u5404\u8fdb\u884c\u4e00\u6b21dfs,\u56e0\u6b64\u53ea\u8fd4\u56de\u4e0d\u9009u\u7684\u6700\u5927\u503c,\u907f\u514d u1,u2\u540c\u65f6\u9009 \n}\nsigned main(){\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        int u;\n        cin&gt;&gt;zd[i]&gt;&gt;u;\n        add(u,i);\n        add(i,u); \n    }\n    for(int i=1;i&lt;=n;i++){\n        if(!vis[i]){//\u6ca1\u6709\u88ab\u8bbf\u95ee\uff0c\u5c31\u8fdb\u53bb\u627e\u73af \n            r1=r2=0;//\u8bb0\u5f55\u73af\u76842\u4e2a\u7aef\u70b9(\u5373\u5c06\u8981\u65ad\u5f00\u7684\u8fb9\u76842\u7aef\u70b9) \n            find(i,0);//\u627e\u73af  \n            if(r1){\n                int res1=dfs(r1,0);//\u4ece\u8981\u65ad\u5f00\u7684\u8fb9\u76842\u7aef\u70b9d\u5176\u4e2d\u4e00\u4e2a\u51fa\u53d1 \n                int res2=dfs(r2,0);\n                ans+=max(res1,res2);\n            }\n        }\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n\n    return 0;\n}\n</code></pre> <p>\u5f88\u5947\u602a\u662f\u662f\u5982\u679c\u8fd9\u79cd\u5199\u6cd5\u7a7a\u95f4\u5f00\\(N=1e6+5\\)\uff0c\u6700\u540e\u4e00\u4e2a\u70b9\u4f1aRE</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E5%AD%98%E5%9B%BE%E6%96%B9%E5%BC%8F/","title":"\u56fe\u7684\u5b58\u50a8\u65b9\u5f0f","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E5%AD%98%E5%9B%BE%E6%96%B9%E5%BC%8F/#_2","title":"\u7ed3\u6784\u4f53\u90bb\u63a5\u8868\uff08\u94fe\u5f0f\u524d\u5411\u661f\uff09","text":"<p>\u8bf7\u5f3a\u8bb0\uff01</p> <pre><code>struct edge{\n    int v,c,nxt;\n}e[N];\nint h[N],idx;\nvoid add(int a,int b,int w){\n    e[++idx]={b,w,h[a]};\n    h[a]=idx;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E5%AD%98%E5%9B%BE%E6%96%B9%E5%BC%8F/#_3","title":"\u90bb\u63a5\u8868\uff08\u94fe\u5f0f\u524d\u5411\u661f\uff09","text":"<p>\u7531\u4ee5\u4e0b3\u4e2a\u6570\u7ec4\u7ec4\u6210</p> <pre><code>int h[],nxt[],to[]; //\u5934,\u8282\u70b9i(i\u4e3a\u5b9e\u9645\u7f16\u53f7)\u7684\u76f8\u90bb\u8282\u70b9\u5728\u6570\u7ec4\u91cc\u7684\u7f16\u53f7,\u8282\u70b9i\u7684\u76f8\u90bb\u8282\u70b9\u7684\u5b9e\u9645\u7f16\u53f7\nint cnt;    //\u8bb0\u5f55\u8282\u70b9\u4e2a\u6570\n</code></pre> <p>\u5b58\u50a8</p> <p>\u6a21\u62df\u4e00\u4e0b\uff08\u4e0d\u4e00\u5b9a\u51c6\u786e\uff09</p> \u63d2\u5165\u524d \u63d2\u51659\u540e(\u8fde\u63a51,9) h[1]=3 h[1]=4 nxt={0,0,2} nxt={0,0,2,3} cnt=3 cnt=4 <p>\u5f53\u8bbf\u95ee<code>1</code>\u7684\u4e34\u8fb9\u65f6,\u8ba9<code>i=h[1]</code>,\u7136\u540e\u4e0d\u65ad<code>v=to[i]</code> ( <code>v</code> \u662f\u76f8\u90bb\u7684\u70b9\u7684\u771f\u5b9e\u7f16\u53f7), <code>i=nxt[i]</code> ,\u76f4\u5230<code>nxt[i]</code>\u4e3a\u7a7a\u505c\u6b62.</p> <pre><code>void add(int a, int b) {\n    to[+/\u65b0\u5efa\u8282\u70b9\u7684\u76ee\u6807\n    nxt[cnt] = h[a];    //\u5934\u63d2\u6cd5\n    h[a] = cnt;        //\u63a5\u4e0a\n}\n</code></pre> <p>\u904d\u5386</p> <p>\u5f53\u6211\u4eec\u8981\u8bbf\u95ee\u4e00\u4e2a\u70b9\u7684\u51fa\u8fb9\u65f6,\u4ece<code>i=h[i]</code>\u5f00\u59cb\u5411\u4e0b<code>i=nxt[i]</code>,\u76f4\u5230<code>nxt[i]==0</code></p> <pre><code>int u=1;    //u\u662f\u76ee\u524d\u8282\u70b9\u7684\u7f16\u53f7\nfor(int i=h[u],i;i=nxt[i]){}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E5%AD%98%E5%9B%BE%E6%96%B9%E5%BC%8F/#_4","title":"\u90bb\u63a5\u77e9\u9635","text":"<p>\u5efa\u7acb\u77e9\u9635<code>web[a][b]</code>,\u5982\u679c<code>web[a][b]==1</code>,\u5219\u8868\u793a\u5b58\u5728 $ a\\to b$ \u7684\u8def\u5f84</p> <p>\u53ef\u6309\u5177\u4f53\u73af\u5883\u6539\u53d8<code>web[a][b]</code>\u5b58\u7684\u5185\u5bb9</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E5%AD%98%E5%9B%BE%E6%96%B9%E5%BC%8F/#vector","title":"Vector\u5b58\u56fe","text":"<p>\u8fde\u8fb9\uff08\u65e0\u5411\u56fe\uff09</p> <pre><code>void add(int a,int b){\n    e[a].push_back(b);\n    e[b].push_back(a);\n}\n</code></pre> <p>\u8bbf\u95eeu\u7684\u90bb\u70b9</p> <pre><code>for(int i=0;i&lt;e[u].size();i++){\n    int v=e[u][i];\n}\n//\u6216\u8005\nfor(int v:e[u]){\n\n}\n</code></pre> <p>\u53ef\u4ee5\u53bb\u5b66\u4e60\u4e00\u4e0b<code>:</code>\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u540c\u65f6\u4e86\u89e3\u4e00\u4e0b<code>auto</code>\u7c7b\u578b\u7684\u4f7f\u7528\u65b9\u6cd5\u3002</p> <p>\u5bf9\u4e8e\u6709\u8fb9\u6743\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8981\u4e48\u628avector\u5b9a\u4e49\u4e3astruct\u6216\u8005pair\uff0c\u8981\u4e48\u5f00\u7b2c\u4e8c\u4e2avector\u6765\u540c\u6b65\u5b58\u5176\u8fb9\u6743\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/","title":"\u6700\u5c0f\u6811\u5f62\u56fe","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#_2","title":"\u5b9a\u4e49","text":"<p>\u5bf9\u4e8e\u6709\u5411\u56feG = ( V , E )\uff0c\u5176\u4e2d\u5177\u6709\u5982\u4e0b\u6027\u8d28</p> <p>G\u4e2d\u4e0d\u5305\u542b\u6709\u5411\u73af\u3002</p> <p>\u5b58\u5728\u4e00\u4e2a\u6839\u7ed3\u70b9u\uff0c\u5b83\u4e0d\u662f\u4efb\u4f55\u5f27\u7684\u7ec8\u70b9\uff0c\u800c\u4e14u\u7684\u5176\u4ed6\u9876\u70b9\u90fd\u6070\u597d\u662f\u552f\u4e00\u7684\u4e00\u6761\u5f27\u7684\u7ec8\u70b9\u3002</p> <p>\u90a3\u4e48\u5219\u79f0G\u662f\u4ee5u\u4e3a\u6839\u7684\u6811\u5f62\u56fe\u3002</p> <p>\u66f4\u7b3c\u7edf\u7684\u8bb2\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6709\u4e00\u9897\u4e0d\u5b58\u5728\u6709\u5411\u73af\u7684\u6709\u5411\u6811\uff0c\u4e14\u9664\u6839\u7ed3\u70b9u uu\u5916\u7684\u6bcf\u4e2a\u9876\u70b9\u90fd\u53ea\u6709\u4e00\u6761\u5165\u8fb9\u3002</p> <p>\u800c\u6700\u5c0f\u6811\u5f62\u56fe\u5219\u662f\u6743\u503c\u6700\u5c0f\u7684\u90a3\u4e2a\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u6700\u5c0f\u6811\u5f62\u56fe\u7684\u4f8b\u5b50\u3002</p> <p></p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#_3","title":"\u548c\u6700\u5c0f\u751f\u6210\u6811\u7684\u533a\u522b","text":"<p>\u6700\u5c0f\u751f\u6210\u6811\u9ed8\u8ba4\u662f\u9488\u5bf9\u65e0\u5411\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6211\u4eec\u901a\u5e38\u4e5f\u53eb\u6700\u5c0f\u6811\u5f62\u56fe\u4e3a\u6709\u5411\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u6700\u5c0f\u751f\u6210\u6811\u6211\u4eec\u901a\u5e38\u662f\u4f7f\u7528Prim\u7b97\u6cd5\u548cKruskal\u7b97\u6cd5\u5b9e\u73b0\u6c42\u89e3\u7684\uff0c\u800c\u5bf9\u4e8e\u6700\u5c0f\u6811\u5f62\u56fe\uff0c\u8fd9\u4e24\u79cd\u7b97\u6cd5\u8fd8\u9002\u7528\u561b\uff1f</p> <p>\u5f53\u7136\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u8fb9\u53d8\u6210\u6709\u5411\u7684\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8003\u8651\u8fb9\u7684\u65b9\u5411\uff0c\u800c\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6211\u4eec\u662f\u53ea\u5728\u4e4e\u8fb9\u7684\u6743\u503c\u7684\uff0c\u8fd9\u662f\u4e24\u8005\u6700\u4e3b\u8981\u7684\u533a\u522b\u3002\u6240\u4ee5\u8fd9\u91cc\u89e3\u51b3\u6700\u5c0f\u6811\u5f62\u56fe\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6731\u5218\u7b97\u6cd5\uff08\u4e5f\u79f0Edmonds\u7b97\u6cd5\uff09\u548cTarjan\u7684DMST\u7b97\u6cd5\uff0c\u524d\u8005\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO ( V E )\uff0c\u540e\u8005\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u4e3a\\(O ( E + V \\log \u2061 V )\\) \u3002\u4f46\u7531\u4e8e\u540e\u8005\u7b97\u6cd5\u8f83\u4e3a\u590d\u6742\uff0c\u4e14\u7b14\u8005\u53ea\u5b66\u4e86\u6731\u5218\u7b97\u6cd5\uff0c\u6545\u8fd9\u91cc\u4e0d\u63d0\u4f9b\u540e\u8005\u7684\u7b97\u6cd5\u8bb2\u89e3\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#_4","title":"\u6731\u5218\u7b97\u6cd5\uff08\u6709\u5411\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff09","text":"<p>\u56fe\u7684\u57fa\u7840I\u6700\u5c0f\u6811\u5f62\u56fe\u6731\u5218\u7b97\u6cd5(\u4e0a)_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | \u6700\u5c0f\u6811\u5f62\u56fe-\u6731\u5218\u7b97\u6cd5\uff08\u6709\u5411\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff09</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#1","title":"\u4f8b\u9898 #1","text":"<p>\u5728\u6f2b\u957f\u7684\u9a82\u6218\u8fc7\u540e\uff0c\u5229\u7279\u80af\u738b\u56fd\u548c\u514b\u52aa\u65af\u6d77\u6d0b\u738b\u56fd\u4e4b\u95f4\u7206\u53d1\u4e86\u4e00\u573a\u6b66\u88c5\u6218\u4e89\u3002</p> <p>\u514b\u52aa\u65af\u6d77\u6d0b\u738b\u56fd\u90e8\u961f\u7684\u731b\u70c8\u8fdb\u653b\u4f7f\u5f97\u5229\u7279\u80af\u738b\u56fd\u7684\u6307\u6325\u7f51\u7edc**\u5f7b\u5e95\u762b\u75ea**\u3002</p> <p>\u4e34\u65f6\u6307\u6325\u7f51\u7edc\u7684\u5efa\u7acb\u523b\u4e0d\u5bb9\u7f13\u3002</p> <p>\u5229\u7279\u80af\u547d\u4ee4\u53f2\u52aa\u6bd4\u8d1f\u8d23\u8be5\u9879\u76ee\u3002</p> <p>\u5229\u7279\u80af\u738b\u56fd\u5171\u6709 N \u4e2a\u6307\u6325\u90e8\uff0c\u4f4d\u4e8e\u5e73\u9762\u4e2d\u7684 N \u4e2a\u8282\u70b9\u4e0a\uff08\u7f16\u53f7 1\u223cN\uff09\u3002</p> <p>\u5176\u4e2d\u5229\u7279\u80af\u6240\u5728\u7684\u6307\u6325\u603b\u90e8\u4f4d\u4e8e\u8282\u70b9 1\u3002</p> <p>\u901a\u8fc7\u5bf9\u6218\u65f6\u60c5\u51b5\u7684\u8be6\u5c3d\u7814\u7a76\uff0c\u53f2\u52aa\u6bd4\u8ba4\u4e3a\uff0c\u5f53\u524d\u6700\u5173\u952e\u7684\u4e00\u70b9\u5728\u4e8e\u5efa\u7acb\u4e00\u4e2a**\u5355\u5411**\u901a\u4fe1\u7f51\u7edc\uff0c\u4f7f\u5f97\u5229\u7279\u80af\u7684\u547d\u4ee4\u80fd\u591f\u6210\u529f\u4f20\u8fbe\u81f3\u5e73\u9762\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u5904\u3002</p> <p>\u5982\u679c\u5e0c\u671b\u5229\u7279\u80af\u7684\u547d\u4ee4\u80fd\u591f\u76f4\u63a5\u4ece\u8282\u70b9 A \u4f20\u9012\u5230\u53e6\u4e00\u4e2a\u8282\u70b9 B\uff0c\u5219\u5fc5\u987b\u6cbf\u7740\u8fde\u63a5\u4e24\u4e2a\u8282\u70b9\u7684\u76f4\u7ebf\u6bb5\u6784\u5efa\u4e00\u6761**\u5355\u5411\u4f20\u8f93**\u7535\u7ebf\u3002</p> <p>\u56e0\u4e3a\u6218\u4e89\u8fd8\u672a\u505c\u6b62\uff0c\u6240\u4ee5\u5e76\u4e0d\u662f\u6240\u6709\u8282\u70b9\u5bf9\u4e4b\u95f4\u90fd\u80fd\u5efa\u7acb\u7535\u7ebf\u3002\uff08\u751a\u81f3\u80fd\u591f\u5efa\u7acb\u4ece\u8282\u70b9 A \u4f20\u9012\u6d88\u606f\u81f3\u8282\u70b9 B \u7684\u7535\u7ebf\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u80fd\u591f\u5efa\u7acb\u4ece\u8282\u70b9 B \u4f20\u9012\u6d88\u606f\u81f3\u8282\u70b9 A \u7684\u7535\u7ebf\uff09</p> <p>\u53f2\u52aa\u6bd4\u5e0c\u671b\u8fd9\u9879\u5de5\u7a0b\u6240\u9700\u8017\u8d39\u7684\u7535\u7ebf\u957f\u5ea6\u5c3d\u53ef\u80fd\u77ed\uff0c\u4ee5\u4fbf\u65bd\u5de5\u53ef\u4ee5\u5c3d\u5feb\u5b8c\u6210\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#_5","title":"\u601d\u8def","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9v\uff08\u9664\u6839\u4ee5\u5916\uff09\uff0c\u627e\u51fa\u6240\u6709\u5165\u8fb9\u4e2d\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u3002\u5c06\u5176\u8fb9\u6743\u4f5c\u4e3aw_v</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u9009\u51fa\u8fd9\u8fb9\u5224\u65ad\u9009\u51fa\u8fd9\u8fb9\u4e2d\u662f\u5426\u5b58\u5728\u8fd8\uff0c\u5982\u679c\u65e0\u73af\u5219\u7b97\u6cd5\u7ed3\u675f\uff0c\u5f53\u524d\u56fe\u5373\u6700\u5c0f\u6811\u5f62\u56fe\u3002\u5982\u679c\u6709\u73af\u5219\u7ee7\u7eed\u7b2c\u4e09\u6b65\u3002</p> <p>\u7b2c3\u6b65\uff0c\u5c06\u5f53\u524d\u56feG\u8fdb\u884c\u7f29\u70b9\uff0c\u5f97\u5230\u65b0\u56feG'\u3002</p> <p>\u7f29\u70b9\u65f6\u5bf9\u8fb9\u6743\u8fdb\u884c\u64cd\u4f5c\uff1a</p> <ul> <li> <p>\u8fb9\u5728\u73af\u5185\u90e8\uff0c\u76f4\u63a5\u548c\u7f29\u70b9\u4e00\u6837\u5220\u6389\u3002</p> </li> <li> <p>\u8fb9\u6307\u5411\u73af\u5185\u7684\u67d0\u4e2a\u70b9u\u3002\u5219\u8fb9\u6743\u4fee\u6539\u4e3aw-w_u</p> </li> <li> <p>\u5176\u4ed6\u8fb9\u6b63\u5e38\u4fdd\u7559</p> </li> </ul> <p>\u6b63\u786e\u6027\u8bc1\u660e</p> <p>\u6027\u8d281\uff1a\u7f29\u70b9\u7684\u6b63\u786e\u6027</p> <p></p> <p>\u6211\u4eec\u8003\u8651\u4e0a\u9762\u7684\u73af\u3002\u9996\u5148\u80af\u5b9a\u662f\u7684\uff0c\u73af\u4e2d\u81f3\u5c11\u8981\u9700\u8981\u5220\u4e00\u6761\u8fb9\u3002\u73b0\u5728\u6211\u4eec\u6765\u8bc1\u660e\u3002\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u6700\u4f18\u89e3\uff0c\u662f\u53ea\u53bb\u6389\u4e00\u6761\u8fb9\u7684\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u53bb\u6389\u7684\u7b2c\u4e00\u6761\u8fb9\u662f\u4e0a\u9762\u7684\u90a3\u6761\u8fb9\u3002\u90a3\u6211\u73b0\u5728\u6211\u4eec\u8bbe\u6700\u4f18\u89e3\u5220\u53bb\u4e86\u4e24\u6761\u8fb9\uff0c\u7b2c\u4e8c\u6761\u8fb9\u662f\u4e0b\u9762\u7684\u90a3\u6761\u8fb9\uff0c\u90a3\u4e48\u7531\u4e8e\u6211\u4eec\u5f53\u524d\u7684\u56fe\u90fd\u662f\u9009\u62e9\u4e86\u6bcf\u4e2a\u70b9\u7684\u5165\u8fb9\u4e2d\u8fb9\u6743\u6700\u5c0f\u7684\u8fb9\u6784\u5efa\u8d77\u6765\u7684\uff0c\u5982\u679c\u6211\u4eec\u53bb\u6389\u4e86\u4e0b\u9762\u7684\u90a3\u6761\u8fb9\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5230\u8fbe\u7684\u70b9v\uff0c\u5fc5\u7136\u9700\u8981\u4ece\u53e6\u5916\u4e00\u6761\u8fb9\u5230\u8fbe\u3002</p> <p>\u90a3\u4e48\u6839\u636e\u5efa\u56fe\u89c4\u5219\uff0c\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u662f\u5927\u4e8e\u6211\u4eec\u5220\u53bb\u7684\u90a3\u6761\u8fb9\u7684\u3002\u7531\u4e8e\u4e00\u4e2a\u56fe\u7684\u6700\u5c0f\u6811\u5f62\u56fe\u7684\u8fb9\u6570\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u865a\u7ebf\u8fb9\u66ff\u6362\u4e3a\u4e0b\u9762\u90a3\u6761\u88ab\u5220\u6389\u7684\u8fb9\uff0c\u8fd9\u6837\u7684\u7b54\u6848\u4e00\u5b9a\u66f4\u4f18\u3002</p> <p>\u6027\u8d282\uff1a\u7f29\u70b9\u524d\u540e\u7684\u56fe\u662f\u7b49\u4ef7\u7684\uff08\u5373\u5bf9\u7f29\u70b9\u540e\u7684\u56feG'\u6c42\u6700\u5c0f\u6811\u5f62\u56fe\uff0c\u5c31\u662f\u7f29\u70b9\u524d\u7684\u56feG\u7684\u6700\u5c0f\u6811\u5f62\u56fe\uff09</p> <p>\u7f29\u70b9\u524d\u540e\u7684\u56fe\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002</p> <p></p> <p>\u8003\u8651\u4e00\u4e2a\u73af\u3002\u5047\u5982\u6211\u4eec\u7f29\u70b9\u540e\u5916\u9762\u7684\u4e00\u6761\u5165\u8fb9\u8fde\u63a5\u5230\u539f\u73af\u4e2d\u70b9v\uff0c\u90a3\u4e48v\u7684\u73af\u4e0a\u7684\u8fb9\u5c31\u4f1a\u65ad\u5f00\u3002\u5373\u73af\u4e0a\u65ad\u5f00\u7684\u8fb9\u548c\u8fde\u5165\u73af\u7684\u8fb9\u4e00\u4e00\u5bf9\u5e94\u3002\u800c\u8fde\u5165\u73af\u7684\u8fb9\u53ef\u4ee5\u5728G'\u4e2d\u4f53\u73b0\uff0c\u5373G'\u4e2d\u53ef\u4ee5\u4f53\u73b0G\u4e2d\u73af\u5185\u65ad\u5f00\u7684\u60c5\u51b5\u3002</p> <p>\u6bd4\u8f83\u8003\u5bdf\u7801\u529b</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n#define rep(i, a, b) for(int i = a; i &lt;= b; ++i)\n#define per(i, a, b) for(int i = a; i &gt;= b; --i)\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nusing namespace std;\n\ntypedef pair&lt;double, double&gt; PDD;\n\nconst int N = 110;\nconst double INF = 1e8;\n\nint n, m;\nPDD a[N]; //\u8bb0\u5f55\u6240\u6709\u70b9\u7684\u5750\u6807\nbool g[N][N]; //\u90bb\u63a5\u77e9\u9635\ndouble d[N][N], bd[N][N]; //\u8bb0\u5f55\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3001\u5907\u4efd\nint pre[N]; //\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u9009\u62e9\u7684\u524d\u9a71\u70b9\nint dfn[N], low[N], dfnt; //tarjan \u7b97\u6cd5\u7684\u6570\u7ec4\nint stk[N], top; //\u6808\nbool instk[N]; //\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u662f\u5426\u5728\u6808\u4e2d\nint id[N], cnt; //\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7\nbool st[N]; //\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u80fd\u5426\u4ece 1 \u53f7\u70b9\u641c\u7d22\u5230\n\nvoid dfs(int u){ //\u4ece u \u8282\u70b9\u5f80\u4e0b\u641c\u7d22\u6240\u6709\u70b9\n    st[u] = true;\n\n    for(int i = 1; i &lt;= n; i++)\n        if(g[u][i] &amp;&amp; !st[i])\n            dfs(i);\n}\n\nbool check(){ //\u5224\u65ad\u6574\u4e2a\u56fe\u662f\u5426\u5177\u6709\u8fde\u901a\u6027\n    memset(st, 0, sizeof st); //\u521d\u59cb\u5316\n    dfs(1); //\u4ece 1 \u53f7\u70b9\u5f00\u59cb\u641c\u7d22\u6240\u6709\u70b9\n\n    for(int i = 1; i &lt;= n; i++)\n        if(!st[i])\n            return false; //\u5982\u679c\u67d0\u4e2a\u70b9\u641c\u4e0d\u5230\uff0c\u8bf4\u660e\u56fe\u4e0d\u8fde\u901a\n    return true; //\u5426\u5219\u8bf4\u660e\u8fde\u901a\n}\n\ndouble getdis(int i, int j){ //\u8ba1\u7b97\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n    double x = a[i].first - a[j].first;\n    double y = a[i].second - a[j].second;\n    return sqrt(x * x + y * y);\n}\n\nvoid tarjan(int u){ //tarjan \u7b97\u6cd5\u7f29\u70b9\n    dfn[u] = low[u] = ++dfnt;\n    stk[++top] = u, instk[u] = true;\n\n    //\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e00\u6761\u5165\u8fb9\uff0c\u4e0d\u9700\u8981\u5faa\u73af\n    int j = pre[u];\n    if(!dfn[j]){\n        tarjan(j);\n        low[u] = min(low[u], low[j]);\n    }\n    else if(instk[j]) low[u] = min(low[u], dfn[j]);\n\n    //\u627e\u5230\u4e00\u4e2a\u73af\n    if(dfn[u] == low[u]){\n        int y;\n        cnt++;\n        do{\n            y = stk[top--];\n            instk[y] = false;\n            id[y] = cnt;\n        } while(y != u);\n    }\n}\n\ndouble work(){ //\u8ba1\u7b97\u7b54\u6848\n    double res = 0; //\u8bb0\u5f55\u7b54\u6848\n\n    //\u8ba1\u7b97\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n    for(int i = 1; i &lt;= n; i++)\n        for(int j = 1; j &lt;= n; j++)\n            if(g[i][j]) d[i][j] = getdis(i, j); //\u5b58\u5728\u8fb9\uff0c\u8ba1\u7b97\u8ddd\u79bb\n            else d[i][j] = INF; //\u4e0d\u5b58\u5728\u8fb9\uff0c\u8ddd\u79bb\u4e3a INF\n\n    //\u6731\u5218\u7b97\u6cd5\n    while(true){\n        //\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u9009\u62e9\u5b83\u6240\u6709\u5165\u8fb9\u4e2d\u6700\u5c0f\u7684\u4e00\u6761\u8fb9\n        for(int i = 1; i &lt;= n; i++){\n            pre[i] = i;\n            for(int j = 1; j &lt;= n; j++)\n                if(d[pre[i]][i] &gt; d[j][i]) //\u5982\u679c\u8fb9\u66f4\u5c0f\uff0c\u66f4\u6362\n                    pre[i] = j;\n        }\n\n        //\u521d\u59cb\u5316\n        memset(dfn, 0, sizeof dfn);\n        dfnt = top = cnt = 0;\n\n        //tarjan \u7b97\u6cd5\u6c42\u73af\n        for(int i = 1; i &lt;= n; i++)\n            if(!dfn[i])tarjan(i);\n\n        if(cnt == n){ //\u5982\u679c\u7f29\u70b9\u540e\u8fd8\u662f n \u4e2a\u70b9\uff0c\u8bf4\u660e\u4e0d\u5b58\u5728\u73af\n            for(int i = 2; i &lt;= n; i++) res += d[pre[i]][i]; //\u7d2f\u52a0\u6240\u6709\u9009\u4e2d\u7684\u8fb9\u7684\u6743\u503c\n            break;\n        }\n\n        //\u5426\u5219\u8bf4\u660e\u6709\u73af\uff0c\u5c06\u73af\u5185\u6240\u6709\u8fb9\u7684\u6743\u503c\u7d2f\u52a0\u5230\u7b54\u6848\u4e2d\n        for(int i = 2; i &lt;= n; i++)\n            if(id[pre[i]] == id[i]) //\u5982\u679c\u5f53\u524d\u8fb9\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u8bf4\u660e\u8be5\u8fb9\u5728\u73af\u91cc\n                res += d[pre[i]][i];\n\n        //\u7f29\u70b9\n        //\u5c06\u5907\u4efd\u6570\u7ec4\u6e05\u7a7a\n        for(int i = 1; i &lt;= cnt; i++)\n            for(int j = 1; j &lt;= cnt; j++)\n                bd[i][j] = INF;\n\n        //\u7528\u5907\u4efd\u6570\u7ec4\u8bb0\u5f55\u7f29\u70b9\u540e\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u76f4\u63a5\u7684\u8fb9\u6743\n        for(int i = 1; i &lt;= n; i++)\n            for(int j = 1; j &lt;= n; j++)\n                //\u5982\u679c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u8fb9\uff0c\u4e14\u4e0d\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u6761\u7f29\u70b9\u540e\u4ecd\u5b58\u5728\u7684\u8fb9\n                if(d[i][j] &lt; INF &amp;&amp; id[i] != id[j]){\n                    int a = id[i], b = id[j];\n                    //\u5982\u679c j \u548c j \u7684\u524d\u9a71\u70b9\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u8bf4\u660e\u8be5\u8fb9\u7684\u7ec8\u70b9 j \u5728\u73af\u91cc\n                    if(id[pre[j]] == id[j]) bd[a][b] = min(bd[a][b], d[i][j] - d[pre[j]][j]); //\u66f4\u65b0\u8fb9\u6743\n                    else bd[a][b] = min(bd[a][b], d[i][j]); //\u5426\u5219\u4e0d\u9700\u8981\u66f4\u65b0\u76f4\u63a5\u7167\u6284\n                }\n\n        //\u5c06\u65b0\u56fe\u4ee3\u66ff\u539f\u56fe\n        n = cnt;\n        memcpy(d, bd, sizeof d);\n    }\n\n    return res;\n}\n\nint main(){\n    while(scanf(\"%d%d\", &amp;n, &amp;m) != EOF) {\n        for(int i = 1; i &lt;= n; i++) scanf(\"%lf%lf\", &amp;a[i].first, &amp;a[i].second);\n\n        memset(g, 0, sizeof g); //\u521d\u59cb\u5316\n        while(m--) {\n            int a, b;\n            scanf(\"%d%d\", &amp;a, &amp;b);\n            if(a != b &amp;&amp; b != 1) g[a][b] = true; //\u8fb9\u4e0d\u80fd\u5b58\u5728\u81ea\u73af\uff0c\u4e14\u56de\u5230 1 \u7684\u8fb9\u4e0d\u7528\u5b58\n        }\n\n        if(!check()) puts(\"poor snoopy\"); //\u5982\u679c\u56fe\u4e0d\u8fde\u901a\uff0c\u8bf4\u660e\u65e0\u89e3\n        else printf(\"%.2lf\\n\", work()); //\u5426\u5219\u8bf4\u660e\u6709\u89e3\uff0c\u8f93\u51fa\u7b54\u6848\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#_6","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u8f93\u5165\u5305\u542b\u82e5\u5e72\u6d4b\u8bd5\u6570\u636e\u3002</p> <p>\u6bcf\u7ec4\u6570\u636e\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 N,M\uff0c\u8868\u793a\u8282\u70b9\u603b\u6570\u4ee5\u53ca\u53ef\u5728\u5176\u95f4\u5efa\u7acb\u7535\u7ebf\u7684\u8282\u70b9\u5bf9\u6570\u3002</p> <p>\u63a5\u4e0b\u6765 N \u884c\uff0c\u5176\u4e2d\u7b2c i \u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 xi,yi\uff0c\u8868\u793a\u8282\u70b9 i \u7684\u4f4d\u7f6e\u5750\u6807\u4e3a (xi,yi)\u3002</p> <p>\u63a5\u4e0b\u6765 M \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 a,b\uff0c\u8868\u793a\u53ef\u4ee5\u5efa\u7acb\u4e00\u6761**\u5355\u5411**\u7535\u7ebf\u4f7f\u5f97\u547d\u4ee4\u53ef\u4ee5\u4ece\u8282\u70b9 a \u4f20\u9012\u81f3\u8282\u70b9 b\u3002</p> <p>\u5904\u7406\u81f3\u6587\u4ef6\u672b\u5c3e\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#_7","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u6570\u636e\uff0c\u8f93\u51fa\u7ed3\u679c\u5360\u4e00\u884c\u3002</p> <p>\u5982\u679c\u4e34\u65f6\u7f51\u7edc\u53ef\u4ee5\u6210\u529f\u6784\u5efa\uff0c\u5219\u8f93\u51fa\u6240\u9700\u8017\u8d39\u7535\u7ebf\u7684\u6700\u5c0f\u53ef\u80fd\u957f\u5ea6\uff0c\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\u3002</p> <p>\u5982\u679c\u4e0d\u80fd\u6210\u529f\u6784\u5efa\uff0c\u5219\u8f93\u51fa <code>poor snoopy</code>\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#_8","title":"\u6570\u636e\u8303\u56f4","text":"<p>1\u2264N\u2264100, 1\u2264M\u2264104, 0\u2264xi,yi\u2264105, 1\u2264a,b\u2264N,a\u2260b, \u6bcf\u4e2a\u8f93\u5165\u6700\u591a\u5305\u542b 10 \u7ec4\u6d4b\u8bd5\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#_9","title":"\u8f93\u5165\u6837\u4f8b\uff1a","text":"<pre><code>4 6\n0 6\n4 6\n0 0\n7 20\n1 2\n1 3\n2 3\n3 4\n3 1\n3 2\n4 3\n0 0\n1 0\n0 1\n1 2\n1 3\n4 1\n2 3\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#_10","title":"\u8f93\u51fa\u6837\u4f8b\uff1a","text":"<pre><code>31.19\npoor snoopy\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#2-road-repairs","title":"\u4f8b\u9898 #2 Road Repairs","text":"<p>\u9898\u9762\u7ffb\u8bd1</p> <p>\u4e00\u4e2a\u540d\u53eb Berland \u7684\u56fd\u5bb6\u6709 \\(n\\) \u4e2a\u57ce\u5e02\uff0c\u5b83\u4eec\u88ab\u4ece \\(1\\) \u5230 \\(n\\) \u7684\u6574\u6570\u7f16\u53f7\u3002\u7f16\u53f7\u4e3a \\(1\\) \u7684\u57ce\u5e02\u662f\u8fd9\u4e2a\u56fd\u5bb6\u7684\u9996\u90fd\u3002\u4e00\u4e9b\u57ce\u5e02\u4e24\u4e24\u4e4b\u95f4\u6709\u4e00\u6761\u5355\u5411\u9053\u8def\u3002\u7136\u800c\uff0c\u4e0d\u662f\u6240\u6709\u7684\u8def\u90fd\u662f\u5b8c\u597d\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8def\u6211\u4eec\u90fd\u77e5\u9053\u662f\u5426\u9700\u8981\u4fee\u590d\u3002\u5982\u679c\u4e00\u6761\u8def\u9700\u8981\u4fee\u590d\uff0c\u90a3\u4e48\u5b83\u5c31\u7981\u6b62\u88ab\u4f7f\u7528\u3002\u4f46\u662f\uff0cBerland \u7684\u653f\u5e9c\u53ef\u4ee5\u4fee\u590d\u9053\u8def\u7136\u540e\u8fd9\u6761\u8def\u5c31\u53ef\u4ee5\u7528\u4e86\u3002</p> <p>\u73b0\u5728 Berland \u6b63\u5728\u53d7\u5230\u90bb\u56fd\u6218\u4e89\u7684\u5a01\u80c1\u3002\u6240\u4ee5\u9996\u90fd\u7684\u5b98\u5458\u51b3\u5b9a\u5f80\u6bcf\u4e2a\u57ce\u5e02\u9001\u4e00\u652f\u519b\u961f\u3002\u5982\u679c\u4ed6\u4eec\u6ca1\u6709\u94b1\u6216\u8005\u65f6\u95f4\u53bb\u5efa\u4e00\u6761\u65b0\u8def\u90a3\u4e48\u8fd9\u4e9b\u519b\u961f\u53ea\u80fd\u591f\u901a\u8fc7\u5b8c\u597d\u7684\u9053\u8def\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u5230\u8fbe\u4e00\u4e9b\u57ce\u5e02\u4e00\u4e9b\u9053\u8def\u53ef\u80fd\u53ef\u4ee5\u4fee\u590d\u597d\u3002</p> <p>\u5f53\u7136\u56fd\u5bb6\u9700\u8981\u5f88\u591a\u7684\u8d44\u6e90\u53bb\u6218\u80dc\u654c\u4eba\uff0c\u6240\u4ee5\u4f60\u60f3\u8981\u5c0f\u5fc3\u5730\u8ba1\u5212\u6295\u5165\u519b\u961f\u7684\u8d44\u6e90\u3002\u8fd9\u5c31\u662f Berland \u7684\u653f\u5e9c\u60f3\u8981\u5c3d\u53ef\u80fd\u5730\u4fee\u590d\u597d\u6700\u5c11\u7684\u9053\u8def\u8ba9\u519b\u961f\u80fd\u4ece\u9996\u90fd\u5230\u6bcf\u4e00\u4e2a\u57ce\u5e02\u7684\u539f\u56e0\uff0c\u7ed9\u4f60\u4e00\u4e9b\u8def\u5e76\u544a\u8bc9\u4f60\u8fd9\u6761\u8def\u662f\u597d\u7684\u8fd8\u662f\u8981\u4fee\u590d\u7684\u3002\u4f60\u7684\u4efb\u52a1\u5c31\u662f\u5e2e\u52a9 Berland \u653f\u5e9c\u5e76\u627e\u51fa\u54ea\u4e9b\u8def\u9700\u8981\u88ab\u4fee\u590d\u3002</p> <p>\u8f93\u5165\u683c\u5f0f\uff1a</p> <p>\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6574\u6570 \\(n,m\\)\uff08\\(1 \\leq n,m \\leq 10^5\\)\uff09\u2014\u2014\u57ce\u5e02\u7684\u6570\u91cf\u548c Berland \u7684\u9053\u8def\u7684\u6570\u91cf\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\u5305\u62ec \\(3\\) \u4e2a\u6574\u6570 \\(a_i\\)\uff0c\\(b_i\\)\uff0c\\(c_i\\)\uff08\\(1 \\leq a_i,b_i \\leq n\\) \uff0c\\(a_i \\neq b_i\\)\uff0c\\(0 \\leq c_i \\leq 1\\)\uff09\uff0c\u63cf\u8ff0\u7684\u662f\u4e00\u6761\u4ece \\(a_i\\) \u5230 \\(b_i\\) \u7684\u9053\u8def\uff0c\u5982\u679c \\(c_i\\) \u7b49\u4e8e 0\uff0c\u90a3\u4e48\u7ed9\u7684\u8fd9\u6761\u8def\u5c31\u662f\u597d\u7684\uff1b\u5982\u679c \\(c_i\\) \u7b49\u4e8e 1\uff0c\u90a3\u4e48 \u7ed9\u7684\u8fd9\u6761\u8def\u5c31\u662f\u9700\u8981\u4fee\u7406\u7684\u3002</p> <p>\u4fdd\u8bc1\u6ca1\u6709\u91cd\u8fb9\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f\uff1a</p> <p>\u5982\u679c\u4fee\u590d\u4e86\u6240\u6709\u7684\u9053\u8def\u4ee5\u540e\u8fd8\u662f\u4e0d\u80fd\u5230\u8fbe\u6bcf\u4e2a\u57ce\u5e02\uff0c\u8f93\u51fa-1\u3002\u5426\u5219\uff0c\u7b2c\u4e00\u884c\u8f93\u51fa\u6709\u51e0\u6761\u8def\u9700\u8981\u4fee\u590d\uff0c\u7b2c\u4e8c\u884c\u8f93\u51fa\u9700\u8981\u4fee\u590d\u7684\u8def\u7684\u7f16\u53f7\uff0c\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002</p> <p>\u9053\u8def\u4ece 1 \u5f00\u59cb\u7f16\u53f7\uff0c\u5728\u8f93\u5165\u4e2d\u7ed9\u51fa\u3002</p> <p>\u5982\u679c\u6709\u591a\u79cd\u65b9\u6848\uff0c\u8bf7\u8f93\u51fa\u4efb\u610f\u4e00\u79cd\u3002\u5982\u679c\u6240\u6709\u8def\u90fd\u662f\u597d\u7684\uff0c\u8bf7\u53ea\u5728\u7b2c\u4e00\u884c\u8f93\u51fa 0\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E5%B0%8F%E6%A0%91%E5%BD%A2%E5%9B%BE/#_11","title":"\u601d\u8def","text":"<p>\u672c\u9898\u9700\u8981\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\uff01\uff01</p> <p>\u4f60\u8bf4\u5f97\u5bf9\uff0c\u4f46\u662f\u8fd9\u9053\u770b\u8d77\u6765\u662f**\u6700\u5c0f\u6811\u5f62\u56fe\u6a21\u677f\u8fd8\u5e26\u65b9\u6848\u8f93\u51fa**\u7684\u96be\u9898\uff08Div1 E \u9898\uff09\u53ef\u7528\u7528\u4e00\u4e2a\u7b80\u5355\u7684 bfs \u5b8c\u6210\u3002</p> <p>\u8003\u8651\u4ee5\u4e0b bfs\uff1a\u6211\u4eec\u5728 bfs \u4e2d\uff0c\u5982\u679c\u5f53\u524d\u70b9 \\(u\\) \u901a\u8fc7\u5168 \\(0\\) \u8fb9\u66f4\u65b0\u4e86\uff0c\u90a3\u4e48\u4ee5\u540e\u5c31\u4e0d\u9700\u8981\u518d\u8bbf\u95ee\u8fd9\u4e2a\u70b9\u4e86\u3002\u5426\u5219\u4ee5\u540e\u6211\u4eec\u8fd8\u662f\u8981\u8bbf\u95ee\u8fd9\u4e2a\u70b9\u3002</p> <p>\u6211\u4eec\u628a\u56fe\u62c6\u6210\u4e24\u4e2a\u56fe\uff0c\u56fe \\(e\\) \u4e3a\u5168 \\(0\\) \u8fb9\u7ec4\u6210\u7684\u56fe\uff0c\\(e2\\) \u4e3a\u5168 \\(1\\) \u8fb9\u7ec4\u6210\u7684\u56fe\u3002\u4e3a\u4e86\u5c3d\u53ef\u80fd\u8ba9\u4e00\u4e2a\u53ef\u4ee5\u88ab\u5168 \\(0\\) \u8def\u5f84\u8bbf\u95ee\u5230\u7684\u70b9\u5148\u88ab\u6807\u8bb0\u4e3a\u201c\u5df2\u7ecf\u901a\u8fc7\u5168 \\(0\\) \u8fb9\u66f4\u65b0\u4e86\u201d\uff0c\u5728 bfs \u8fc7\u7a0b\u4e2d\u6211\u4eec\u4f18\u5148\u8bbf\u95ee \\(e\\) \u4e2d\u51fa\u8fb9\u3002</p> <p>\u6211\u4eec\u7ef4\u62a4 \\(vis_u\\) \u6807\u8bb0\u70b9 \\(u\\) \u7684\u8bbf\u95ee\u60c5\u51b5\u3002\\(vis_u=0\\) \u8868\u793a \\(u\\) \u6ca1\u6709\u88ab\u8bbf\u95ee\uff0c\\(vis_u=1\\) \u8868\u793a \\(u\\) \u53ef\u4ee5\u901a\u8fc7\u5168 \\(0\\) \u8def\u5f84\u8bbf\u95ee\uff0c\\(vis_u=k,k&gt;1\\) \u8868\u793a \\(u\\) \u88ab \\(v\\) \u901a\u8fc7\u7f16\u53f7\u4e3a \\(vis_u-1\\) \u7684\u8fb9\u8bbf\u95ee\u4e86\u3002</p> <p>\u4e00\u4e2a\u70b9\u662f\u5426\u9700\u8981\u88ab\u8bbf\u95ee\u7684\u6761\u4ef6\u662f\uff1a</p> <ul> <li> <p>\u679a\u4e3e \\(0\\) \u8fb9\u65f6\uff0c\u5982\u679c \\(v\\) \u6ca1\u6709\u88ab\u8bbf\u95ee\uff0c\u5219\u8bbf\u95ee\u5e76\u6807\u8bb0\u3002\u5982\u679c \\(v\\) \u88ab\u8bbf\u95ee\u4f46 \\(vis_v&gt;1\\)\uff0c\u5219\u8bbf\u95ee\u5e76\u6807\u8bb0\u3002</p> </li> <li> <p>\u679a\u4e3e \\(1\\) \u8fb9\u65f6\uff0c\u5f53\u4e14\u4ec5\u5f53\u5982\u679c \\(v\\) \u6ca1\u6709\u88ab\u8bbf\u95ee\uff0c\u5219\u8bbf\u95ee\u5e76\u6807\u8bb0\u3002</p> </li> </ul> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n#define ps second\n#define pf first\n\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int N=2e5+5;\nconst int M=5e5+5;\nconst int INF=1e9+5;\nconst int MOD=1e9+7;\nbool f1;\nint m,k,n,vis[N];\n\nint T,mn=INF,ans[N];\nint acnt,r;\nvector&lt;int&gt; e[N],e2[N],p[N];\nvoid add(int a,int b,int c,int pth){\n    if(c){\n        e2[a].push_back(b);\n        p[a].push_back(pth);\n    }//\u9700\u8981\u4fee\u590d\u7684\u8def\u53e6\u5916\u5b58\n    else e[a].push_back(b);\n}\nqueue&lt;int&gt; q;\nvoid bfs(int x){\n    q.push(x);\n    vis[x]=1;\n    while(q.size()){\n        int u=q.front();\n        q.pop();\n        for(auto v:e[u]){\n            if(vis[v]!=1){\n                vis[v]=1;\n                q.push(v);\n            }\n        }\n        for(int i=0;i&lt;e2[u].size();i++){\n            int v=e2[u][i];\n            if(!vis[v]){\n                vis[v]=1+p[u][i];\n                q.push(v);\n            }\n        }\n\n    }\n}\n\nsigned main() {\n\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    n=rd,m=rd;\n    for(int i=1;i&lt;=m;i++){\n        int a=rd,b=rd,c=rd;\n        add(a,b,c,i);\n    }\n    bfs(1);\n\n    for(int i=1;i&lt;=n;i++){\n        if(!vis[i]){\n            cout&lt;&lt;-1;\n            return 0;\n        }\n        if(vis[i]&gt;1)ans[++acnt]=vis[i]-1;\n    }\n    cout&lt;&lt;acnt&lt;&lt;endl;\n    for(int i=1;i&lt;=acnt;i++){\n        cout&lt;&lt;ans[i]&lt;&lt;' ';\n    }\n\n}\n/*\n2\n3 2 3 6\n*/\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/","title":"\u6700\u77ed\u8def","text":"<p>\u4e13\u9898 | \u5b58\u56fe&amp;\u6700\u77ed\u8def&amp;\u8d1f\u73af</p> <p>D03 \u6700\u77ed\u8def Bellman-Ford \u7b97\u6cd5  SPFA \u7b97\u6cd5_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>D04 \u6700\u77ed\u8def Floyd \u7b97\u6cd5_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>Dijkstra</p> <p>SPFA</p> <p>\u6b21\u77ed\u8def\u7b97\u6cd5</p> <p>Johnson \u5168\u6e90\u6700\u77ed\u8def</p> <p>\u5404\u79cd\u6700\u77ed\u8def\u7b97\u6cd5\u7684Hack\u4e0e\u533a\u522b</p> <p>Floyd</p> <p>Bellman-Ford</p> <p>\u5206\u5c42\u56fe\u601d\u60f3</p> <p>\u540c\u4f59\u6700\u77ed\u8def</p> <p>\u5dee\u5206\u7ea6\u675f</p> <p>K\u77ed\u8def\u7b97\u6cd5</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%AC%A7%E6%8B%89%E8%B7%AF%E5%BE%84/","title":"\u6b27\u62c9\u8def\u5f84","text":"<p>\u6c42\u6709\u5411\u56fe\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6b27\u62c9\u8def\u5f84\u3002</p> <p>\u6b27\u62c9\u8def\u5f84\uff08\u6b27\u62c9\u901a\u8def\uff09\uff1a\u901a\u8fc7\u56fe\u4e2d\u6240\u6709\u8fb9\u7684\u7b80\u5355\u8def\u3002\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u6761\u8fb9\u90fd\u901a\u8fc7\u4e14\u4ec5\u901a\u8fc7\u4e00\u6b21\uff09\u4e5f\u53eb\u201d\u4e00\u7b14\u753b\u201d\u95ee\u9898\u3002</p> <p>\u6709\u5411\u56fe\u6b27\u62c9\u8def\u5f84\uff1a</p> <p>\u56fe\u4e2d**\u6070\u597d**\u5b58\u5728 1 \u4e2a\u70b9\u51fa\u5ea6\u6bd4\u5165\u5ea6\u591a 1\uff08\u8fd9\u4e2a\u70b9\u5373\u4e3a \u8d77\u70b9 S\uff09\uff0c1 \u4e2a\u70b9\u5165\u5ea6\u6bd4\u51fa\u5ea6\u591a 1\uff08\u8fd9\u4e2a\u70b9\u5373\u4e3a \u7ec8\u70b9 T\uff09\uff0c\u5176\u4f59\u8282\u70b9\u51fa\u5ea6=\u5165\u5ea6\u3002\u6216\u8005**\u56fe\u4e3a\u4e00\u4e2a\u73af**\uff0c\u5373\u6240\u6709\u70b9\u7684\u5165\u5ea6=\u51fa\u5ea6\u3002</p> <p>\u5bfb\u627e\u6b27\u62c9\u8def\u5f84\uff08\u9ed8\u8ba4\u5b58\u5728\uff09\uff1a</p> <ul> <li> <p>\u9996\u5148\u6839\u636e\u9898\u610f\u4ee5\u53ca\u5224\u5b9a\u5148\u786e\u5b9a\u8d77\u70b9 S\u3002</p> </li> <li> <p>\u4ece\u8d77\u70b9 S \u5f00\u59cb dfs \u3002</p> </li> </ul> <p><code>dfs(x)</code> \u4e2d\u6211\u4eec\u4ece\u5c0f\u5230\u5927\uff08\u6309\u51fa\u8fb9\u6307\u5411\u7684\u70b9\u7684\u7f16\u53f7\u5927\u5c0f\u6392\u5e8f\uff09\u679a\u4e3e\u3002\u679a\u4e3e\u5230\u4e00\u4e2a\u8fd8\u6ca1\u6709\u8bbf\u95ee\u7684\u8fb9\u5c31\u6807\u8bb0\u4e3a\u5df2\u7ecf\u8bbf\u95ee\uff0c\u7136\u540e dfs \u4e0b\u53bb\u3002 \u540c\u65f6\u8bb0\u5f55\u7ecf\u8fc7\u7684\u70b9\u7684\u7f16\u53f7\u3002</p> <p>\u6ce8\u610f\u6211\u4eec\u8981\u7528**\u6808**\u6765\u8bb0\u5f55\u7b54\u6848\u800c\u4e0d\u662f\u6570\u7ec4\uff01</p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fdb\u884c\u4f18\u5316\uff0c\u8bb0\u5f55\\(del_x\\)\u4e3a\u70b9\\(x\\)\u7684\u51fa\u8fb9\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86\\(del_x-1\\)\u6761\uff0c\u4e0b\u6b21\u5e94\u8be5\u4ece\u7b2c\\(del_x\\)\u6761\u5f00\u59cb\u8bbf\u95ee\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=2e5+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,p,q,T,ans[N];\nvector&lt;int&gt; e[N],vis[N];\nint ind[N],oud[N],del[N];\nint s,t,cnt;\n\n\nstack&lt;int&gt; st;\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n    ind[b]++;oud[a]++;\n}\n\nbool check(){\n    s=1;\n    int flg=1,cnta=0,cntb=0;\n    for(int i=1;i&lt;=n;i++){\n        if(ind[i]==oud[i])continue;\n        flg=0;\n        if(ind[i]==oud[i]-1){\n            s=i;cnta++;\n        }else if(ind[i]==oud[i]+1){\n            t=i;cntb++;\n        }else return 0;\n    }\n\n    return (cnta==cntb&amp;&amp;cnta==1)||flg;\n}\n\nvoid dfs(int x){\n//  ans[++cnt]=x;\n    for(int i=del[x];i&lt;e[x].size();i=del[x]){\n        del[x]=i+1;\n        dfs(e[x][i]);\n    }\n    st.push(x);\n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        add(a,b);\n    }\n\n    for(int i=1;i&lt;=n;i++){\n        sort(e[i].begin(),e[i].end());\n    }\n    if(!check()){\n        cout&lt;&lt;\"No\"&lt;&lt;endl;\n        return 0;\n    }\n\n    dfs(s);\n    while(st.size())cout&lt;&lt;st.top()&lt;&lt;' ',st.pop();\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/","title":"\u7f51\u7edc\u6d41","text":"<p>\u7f51\u7edc\u6d41\u5b9a\u4e49</p> <p>EK\u7b97\u6cd5</p> <p>Dinic\u7b97\u6cd5</p> <p>\u6700\u5c0f\u5272</p> <p>\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41</p> <p>\u8d39\u7528\u6d41</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/Kosaraju%2B%E7%AE%97%E6%B3%95/","title":"Kosaraju \u7b97\u6cd5","text":"<p>Kosaraju\u7b97\u6cd5\u662f\u4e00\u79cd\u7528\u4e8e\u627e\u5230\u6709\u5411\u56fe\u4e2d\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u7b97\u6cd5\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(V+E)\uff0c\u5176\u4e2dV\u662f\u9876\u70b9\u7684\u6570\u91cf\uff0cE\u662f\u8fb9\u7684\u6570\u91cf\u3002</p> <p>\u4ee5\u4e0b\u662fKosaraju\u7b97\u6cd5\u7684\u57fa\u672c\u6b65\u9aa4\uff1a</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/Kosaraju%2B%E7%AE%97%E6%B3%95/#1","title":"\u6b65\u9aa4 1\uff1a\u7b2c\u4e00\u6b21\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"<ol> <li> <p>\u9009\u62e9\u4e00\u4e2a\u672a\u8bbf\u95ee\u7684\u9876\u70b9\uff0c\u5bf9\u5176\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002</p> </li> <li> <p>\u5728DFS\u8fc7\u7a0b\u4e2d\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u9876\u70b9\u5b8c\u6210\u8bbf\u95ee\u7684\u65f6\u95f4\u6233\uff0c\u5e76\u5c06\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\u6dfb\u52a0\u5230\u6808\u4e2d\u3002</p> </li> <li> <p>\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u9876\u70b9\u90fd\u88ab\u8bbf\u95ee\u8fc7\u3002</p> </li> </ol>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/Kosaraju%2B%E7%AE%97%E6%B3%95/#2","title":"\u6b65\u9aa4 2\uff1a\u53cd\u8f6c\u56fe\u4e2d\u7684\u6240\u6709\u8fb9","text":"<p>\u5c06\u539f\u56fe\u4e2d\u6240\u6709\u7684\u6709\u5411\u8fb9\u53cd\u8f6c\uff0c\u5f97\u5230\u4e00\u4e2a\u53cd\u5411\u56fe\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/Kosaraju%2B%E7%AE%97%E6%B3%95/#3","title":"\u6b65\u9aa4 3\uff1a\u7b2c\u4e8c\u6b21\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"<ol> <li> <p>\u4ece\u6808\u9876\u5f00\u59cb\uff08\u6808\u9876\u662f\u7b2c\u4e00\u6b21DFS\u6700\u540e\u5b8c\u6210\u7684\u9876\u70b9\uff09\uff0c\u5bf9\u6bcf\u4e2a\u9876\u70b9\u5728\u53cd\u5411\u56fe\u4e0a\u8fdb\u884cDFS\u3002</p> </li> <li> <p>\u5728\u53cd\u5411\u56fe\u7684DFS\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u8bbf\u95ee\u5230\u7684\u9876\u70b9\u90fd\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002</p> </li> <li> <p>\u5c06\u8bbf\u95ee\u8fc7\u7684\u9876\u70b9\u6807\u8bb0\u4e3a\u5df2\u8bbf\u95ee\uff0c\u5e76\u5c06\u5b83\u4eec\u4ece\u6808\u4e2d\u79fb\u9664\u3002</p> </li> <li> <p>\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u6808\u4e3a\u7a7a\u3002</p> </li> </ol>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/Kosaraju%2B%E7%AE%97%E6%B3%95/#_1","title":"\u7b97\u6cd5\u89e3\u91ca","text":"<ul> <li> <p>\u7b2c\u4e00\u6b21DFS\uff1a\u901a\u8fc7\u7b2c\u4e00\u6b21DFS\uff0c\u6211\u4eec\u80fd\u591f\u786e\u5b9a\u9876\u70b9\u5b8c\u6210\u7684\u987a\u5e8f\uff0c\u8fd9\u4e2a\u987a\u5e8f\u5c06\u5e2e\u52a9\u6211\u4eec\u786e\u5b9a\u5728\u53cd\u5411\u56fe\u4e2d\u8fdb\u884cDFS\u7684\u987a\u5e8f\u3002</p> </li> <li> <p>\u53cd\u8f6c\u56fe\uff1a\u53cd\u8f6c\u56fe\u4e2d\u7684\u8fb9\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u627e\u5230\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u56e0\u4e3a\u5728\u539f\u56fe\u4e2d\u4ece\u4e00\u4e2a\u9876\u70b9\u53ef\u4ee5\u5230\u8fbe\u53e6\u4e00\u4e2a\u9876\u70b9\uff0c\u5728\u53cd\u8f6c\u56fe\u4e2d\u5219\u610f\u5473\u7740\u53e6\u4e00\u4e2a\u9876\u70b9\u53ef\u4ee5\u5230\u8fbe\u8fd9\u4e2a\u9876\u70b9\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u6b21DFS\uff1a\u5728\u53cd\u5411\u56fe\u4e2d\uff0c\u4ece\u6808\u9876\u5f00\u59cb\u8fdb\u884cDFS\uff0c\u53ef\u4ee5\u786e\u4fdd\u6211\u4eec\u9996\u5148\u8bbf\u95ee\u7684\u662f\u90a3\u4e9b\u5728\u539f\u56fe\u4e2d\u6700\u540e\u88ab\u5b8c\u6210\u7684\u9876\u70b9\uff0c\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6211\u4eec\u627e\u5230\u7684\u662f\u5b8c\u6574\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002</p> </li> </ul> <p>Kosaraju\u7b97\u6cd5\u662f\u4e00\u79cd\u9ad8\u6548\u7684\u65b9\u6cd5\u6765\u627e\u5230\u6709\u5411\u56fe\u4e2d\u7684\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5b83\u6bd4Tarjan\u7b97\u6cd5\u7a0d\u7b80\u5355\u4e00\u4e9b\uff0c\u5e76\u4e14\u540c\u6837\u5177\u6709\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4f46\u53ef\u6269\u5c55\u6027\u4e0d\u5982Tarjan\uff0c\u901a\u5e38\u6211\u4eec\u4e0d\u4f7f\u7528\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%89%B2%E7%82%B9%EF%BC%88%E5%89%B2%E9%A1%B6%EF%BC%89/","title":"\u5272\u70b9\uff08\u5272\u9876\uff09","text":""},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%89%B2%E7%82%B9%EF%BC%88%E5%89%B2%E9%A1%B6%EF%BC%89/#_2","title":"\u8bb2\u89e3","text":"<p>\u5272\u70b9</p> <p>\u5728\u65e0\u5411\u8054\u901a\u56fe$ G=(V,E)\\(\u4e2d: \u82e5\u5bf9\u4e8e\\)x\u2208V\\(\uff0c \u4ece\u56fe\u4e2d\u5220\u53bb\u8282\u70b9\\)x\\(\u4ee5\u53ca\u6240\u6709\u4e0e\\)x\\(\u5173\u8054\u7684\u8fb9\u4e4b\u540e\uff0c \\(G\\)\u5206\u88c2\u6210\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u4e0d\u76f8\u8fde\u7684\u5b50\u56fe\uff0c \u5219\u79f0\\)x\\(\u4e3a\\)G$\u7684\u5272\u70b9\u3002</p> <p>\u6269\u5c55:\u5272\u8fb9</p> <p>\u5047\u8bbe\u6709\u8fde\u901a\u56fe\\(G\\)\uff0c\\(e\\)\u662f\u5176\u4e2d\u4e00\u6761\u8fb9\uff0c\u5982\u679c\\(G-e\\) (\u5728\u56fe\\(G\\)\u4e2d\u53bb\u6389\u8fb9\\(e\\)) \u662f\u4e0d\u8fde\u901a\u7684\uff0c\u5219\u8fb9\\(e\\)\u662f\u56fe\\(G\\)\u7684\u4e00\u6761\u5272\u8fb9\u3002\u6b64\u60c5\u5f62\u4e0b\uff0c\\(G-e\\)\u5fc5\u5305\u542b\u4e24\u4e2a\u8fde\u901a\u5206\u652f\u3002</p> <p>\u63a8\u8350\u8d44\u6599</p> <p>\u56fe\u7684\u5272\u70b9\u4e0e\u5272\u8fb9\uff08\u8d85\u8be6\u7ec6\uff01\uff01\uff01\uff09 - endl\\n - \u535a\u5ba2\u56ed</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%89%B2%E7%82%B9%EF%BC%88%E5%89%B2%E9%A1%B6%EF%BC%89/#1","title":"\u4f8b\u9898 #1","text":"<p>\u7ed9\u51fa\u4e00\u4e2a \\(n\\) \u4e2a\u70b9\uff0c\\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6c42\u56fe\u7684\u5272\u70b9\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u6570\u636e\uff0c\\(1\\leq n \\le 2\\times 10^4\\)\uff0c\\(1\\leq m \\le 1 \\times 10^5\\)\u3002</p> <p>\u70b9\u7684\u7f16\u53f7\u5747\u5927\u4e8e \\(0\\) \u5c0f\u4e8e\u7b49\u4e8e \\(n\\)\u3002</p> <p>tarjan\u56fe\u4e0d\u4e00\u5b9a\u8054\u901a\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt; \nusing namespace std;\n#define ll long long\nconst int N=2e5+5;\n\n\nint cnt,num,br[N],nxt[N],h[N], n,m,to[N],ans,low[N],dfn[N];\nvoid add(int x,int y){\n    to[++cnt]=y,nxt[cnt]=h[x],h[x]=cnt;\n}\n\nvoid tarjan(int x,int e){\n    dfn[x]=low[x]=++num;\n    int child=0;    //\u5c40\u90e8\u53d8\u91cf \n    for(int i=h[x];i;i=nxt[i]){\n        int y=to[i];\n        if(!dfn[y]){\n            tarjan(y,e);\n            low[x]=min(low[x],low[y]);\n            if(low[y]&gt;=dfn[x]&amp;&amp;x!=e){//&gt;=\u800c\u4e0d\u662f&gt;  !!! \n                br[x]=1;\n            }\n            if(x==e)child++;\n        }\n        low[x]=min(low[x],dfn[y]);\n\n    }\n    if(child&gt;1&amp;&amp;x==e)br[x]=1;\n} \nsigned main(){\n    memset (dfn,0,sizeof (dfn));\n    memset (h,0,sizeof (h));\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        int x,y;\n        cin&gt;&gt;x&gt;&gt;y;\n        add(x,y);\n        add(y,x);\n    }\n     for (int i=1;i&lt;=n;i++)\n        if (dfn[i]==0)\n            tarjan (i,i);\n\n\n    for (int i=1;i&lt;=n;i++)\n        if (br[i])\n            ans++;\n    printf (\"%d\\n\",ans);\n    for (int i=1;i&lt;=n;i++)\n        if (br[i])\n            printf (\"%d \",i);\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%9C%86%E6%96%B9%E6%A0%91%E4%B8%8E%E4%BB%99%E4%BA%BA%E6%8E%8C/","title":"\u5706\u65b9\u6811&amp;\u4ed9\u4eba\u638c","text":"<p>www.luogu.com.cn</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%9C%86%E6%96%B9%E6%A0%91%E4%B8%8E%E4%BB%99%E4%BA%BA%E6%8E%8C/#1","title":"\u4f8b\u9898 #1","text":"<p>\u5c0fL\u5c06\u53d6\u4e0b\u4e00\u6bb5\u6c38\u6052\u4e4b\u6811\u7684\u6811\u679d\u3002</p> <p>\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u4e00\u6bb5\u6811\u679d\u62bd\u8c61\u6210\u4e00\u5f20N\u4e2a\u70b9\uff0cM\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6ee1\u8db3\u6bcf\u6761\u8fb9\u90fd\u53ea\u5728**\u81f3\u591a\u4e00\u4e2a\u7b80\u5355\u73af**\u4e2d\u51fa\u73b0\u3002</p> <p>\u5c0fL \u5c06\u5bf9\u53d6\u4e0b\u7684\u6811\u679d\u4f7f\u7528\u5206\u89e3\u9b54\u6cd5\uff0c\u6b64\u540e\uff0c\u6811\u679d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u4f1a\u5728\u4e00\u4e2a\u65f6\u8fb0\u5185\u968f\u673a\u7684\u4e00\u4e2a\u65f6\u523b\uff0c\u8fde\u540c\u5176\u8fde\u51fa\u53bb\u7684\u8fb9\u4e00\u8d77\u88ab\u5206\u89e3\u3002</p> <p>\u5728\u88ab\u5206\u89e3\u7684\u77ac\u95f4\uff0c\u6bcf\u4e2a\u8282\u70b9\u4f1a\u91ca\u653e\u51fa\u7b49\u540c\u4e8e\u5f53\u65f6\u8fd8\u4e0e\u5176\u8fde\u901a\u7684\u8282\u70b9\u6570\u91cf\u7684\u80fd\u91cf\uff0c\u5c06\u8fd9\u4e9b\u80fd\u91cf\u6c42\u548c\u5c31\u662fX\u56fd\u7684\u6c14\u8fd0\u3002</p> <p>\u73b0\u5728\uff0c\u5c0fL\u60f3\u8981\u77e5\u9053\uff0cX\u56fd\u7684\u6c14\u8fd0\u671f\u671b\u4f1a\u662f\u591a\u5c11\u3002\u8bf7\u6c42\u51faX\u56fd\u6c14\u8fd0\u7684\u671f\u671b\u5bf9998244353\u53d6\u6a21\u7684\u7ed3\u679c\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%9C%86%E6%96%B9%E6%A0%91%E4%B8%8E%E4%BB%99%E4%BA%BA%E6%8E%8C/#_2","title":"\u4ed9\u4eba\u638c","text":"<p>\u5b9a\u4e49</p> <p>\u4e00\u5f20N\u4e2a\u70b9\uff0cM\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6ee1\u8db3\u6bcf\u6761\u8fb9\u90fd\u53ea\u5728**\u81f3\u591a\u4e00\u4e2a\u7b80\u5355\u73af**\u4e2d\u51fa\u73b0\u3002</p> <p></p> <p>\u4e00\u5b9a\u8981\u4fdd\u8bc1\u73af\u4e4b\u95f4\u6ca1\u6709\u516c\u5171\u8fb9</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%9C%86%E6%96%B9%E6%A0%91%E4%B8%8E%E4%BB%99%E4%BA%BA%E6%8E%8C/#2","title":"\u4f8b\u9898 #2","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6709 \\(n\\) \u4e2a\u70b9\u548c \\(m\\) \u6761\u8fb9\u7684\u4ed9\u4eba\u638c\u56fe\uff0c\u548c \\(q\\) \u7ec4\u8be2\u95ee \u6bcf\u6b21\u8be2\u95ee\u4e24\u4e2a\u70b9 \\(u,v\\)\uff0c\u6c42\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u3002</p> <p>\u6570\u636e\u8303\u56f4\uff1a $1\\le n,q \\le 10000 $$1\\le m \\le 20000 $\\(1\\le w \\le 10^5\\)</p> <p>\u8bf7\u6ce8\u610f\u65f6\u9650\u4e3a \\(300\\text{ms}\\)</p> <p>\u6ce8\u610f\uff1a</p> <p>\u672c\u9898n\u5f88\u5927\uff0c\u4e0d\u80fd\u7528\u666e\u901a\u6700\u77ed\u8def\u505a\u6cd5\uff01</p> <p>\u7531\u4e8e\u4ed9\u4eba\u638c\u65e2\u6709\u6811\u7684\u6027\u8d28\uff0c\u4f46\u7531\u4e8e\u57fa\u73af\u6811\u6709\u533a\u522b\u3002\u5982\u679c\u662f\u57fa\u73af\u6811\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u65ad\u8fb9\uff0c\u7136\u540e\u901a\u8fc7\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u548clca(u,v)\u6765\u5feb\u901f\u6c42\u51fau,v\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</p> <p>\u4f46\u662f\u4ed9\u4eba\u638c\u4e0a\u6709\u4e0d\u6b62\u4e00\u4e2a\u73af\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e0d\u4e86\u8fd9\u79cd\u65b9\u6cd5\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5c06\u56fe\u7528\u67d0\u79cd\u65b9\u6cd5\u53d8\u6210\u4e00\u68f5\u6811\uff08\u6211\u4eec\u53ef\u4ee5\u597d\u597d\u5229\u7528\u73af\u4e0e\u73af\u4e4b\u95f4\u4e92\u76f8\u72ec\u7acb\u8fd9\u4e2a\u6027\u8d28\uff01\uff09</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%9C%86%E6%96%B9%E6%A0%91%E4%B8%8E%E4%BB%99%E4%BA%BA%E6%8E%8C/#_3","title":"\u5706\u65b9\u6811","text":"<p>\u5b9a\u4e49</p> <p></p> <p>\u5272\u70b9\uff1a\u56fe\u4e2d\u7684\u70b95,3,8\u662f\u5272\u70b9\u3002</p> <p></p> <p>\u6211\u4eec\u6765\u4ed4\u7ec6\u8003\u8651\u600e\u4e48\u5c06\u73af\u53d8\u6210\u83ca\u82b1\u56fe</p> <p></p> <p></p> <p>\u7ea2\u8272\u70b9\u4f5c\u4e3a\u5272\u70b9\uff0c\u5176\u5b83\u8fb9\u6211\u4eec\u7701\u7565\uff0c\u53ea\u7559\u4e0b\u4e00\u4e2a\u73af\u3002\u90a3\u4e48\u5176\u4f5c\u4e3a\u5706\u65b9\u6811\u5c31\u5e94\u8be5\u662f\u53f3\u8fb9\u8fd9\u6837\u3002\u65b9\u70b9\u5230\u5176\u4ed6\u70b9\u7684\u8ddd\u79bb\u4ee3\u8868\u7740\u7ea2\u8272\u5272\u70b9\u5728\u73af\u4e0a\u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\u5982\u679c\u4e00\u4e2a\u73af\u6709\u4e0d\u6b62\u4e00\u4e2a\u5272\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9009\u62e9\u7b2c\u4e00\u4e2a\uff0c\u5373\u4ece1\u53f7\u70b9\u5f00\u59cb\u8bbf\u95ee\u65f6\u8bbf\u95ee\u5230\u8fd9\u4e2a\u73af\u7684\u7b2c\u4e00\u4e2a\u5272\u70b9\u3002</p> <p>\u6ce8\u610f\uff0c\u4ed9\u4eba\u638c\u662f\u65e0\u5411\u5e26\u73af\u56fe\uff0c\u8f6c\u5316\u4e3a\u5706\u65b9\u6811\u540e\u53d8\u6210\u4e86\u4e00\u5e45 DAG\u3002</p> <p>\u6784\u5efa</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Tarjan \u7b97\u6cd5\u3002</p> <p>\u95ee\u9898\u89e3\u51b3</p> <p></p> <p>\u6211\u4eec\u91cd\u70b9\u8003\u8651\u60c5\u51b5(2)\uff0c\u5728\u4e0a\u4e0a\u56fe\u4e2d\uff0c\u6211\u4eec\u5047\u5982\u8981\u6c42dis(6,9)\uff0c\u90a3\u4e48\u5728\u539f\u56fe\u4e0a\u5f88\u5bb9\u6613\u53d1\u73b0\u662f9\u21928\u21925\u21927\u21926\uff0cdis=2+2+2+1=7\u3002\u4f46\u662f\u5728\u5706\u65b9\u56fe\u4e0a\uff0c5\u21926,9\u21928\u8def\u5f84\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662flca(6,9)\u5728\u5706\u65b9\u56fe\u4e0a\u53d8\u6210\u4e86\u4e00\u4e2a\u65b9\u70b9\uff0c\u5373\u5176lca\u5728\u4e00\u4e2a\u73af\u6811\u3002\u611f\u6027\u6765\u60f3\uff0c\u4e00\u4e2a\u73af\u4e0a\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee56,9\u67092\u4e2alca\uff0c\u5206\u522b\u4e3a5,8\u3002\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u6c42\u51fa5\u21928\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u4f46\u662f\u5728\u540c\u4e00\u4e2a\u73af\u5185\u6c42\u8ddd\u79bb\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u5728\u5706\u65b9\u56fe\u4e0a\u505a\u4e86\uff0c\u53ea\u80fd\u5728\u539f\u56fe\u4e0a\u505a\uff0c\u5426\u5219\u4f1a\u51fa\u9519\u3002</p> <p></p> <p>\u5177\u4f53\u505a\u6cd5\u662f\uff0c\u6211\u4eec\u53d1\u73b0\u65b9\u70b9\u52305,8\u7684\u8ddd\u79bb\u5b9e\u9645\u4e0a\u4ee3\u8868\u4e86\u5272\u70b9\uff08\u6837\u4f8b\u4e2d\u4e3a3\uff09\u5230\u4e24\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u501f\u52a9\u73af\u957f\u4fe1\u606f\u6765\u6c42\u51fa\u8ddd\u79bb\u4e86\u3002\u5177\u4f53\u5b9e\u73b0\u8bf7\u601d\u8003\u3002</p> <p></p> <p>\u5b9e\u9645\u4e0a\u5c31\u662f\u6211\u4eec\u4ece\u5272\u70b9\u5f00\u59cb**\u6709\u5411\u5730**\u8bbf\u95ee\u6bcf\u4e00\u4e2a\u73af\u4e0a\u7684\u70b9\uff0c\u5982\u540c\u4e2d\\(s_a=a,s_b=a+b\\)\uff0c\u90a3\u4e48\u70b9a,b\u4e4b\u95f4\u7684\u8ddd\u79bb\u53ef\u80fd\u662fb\u6216\u8005a+c\uff0c\u6211\u4eec\u6c42\u51fa\\(len1=abs(s_a-s_b)\\)\uff0c\\(len2=\\)\u73af\u957f\\(-len1\\)\uff0c\u7136\u540e\u53d6\\(\\min(len1,len2)\\) \u5373\u53ef</p> <p>\u4ee3\u7801\u5b9e\u73b0</p> <p>\u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5efa2\u5e45\u56fe\uff0c\u4e00\u5e45\u4e3a\u539f\u56fe\uff0c\u7528\u6765\u8dd1tarjan\u6c42\u51fa\u7b2c2\u5e45\u56fe\uff0c\u5373\u5706\u65b9\u56fe\u3002\u6ce8\u610ftarjan\u8981\u5efa\u53cd\u5411\u8fb9\uff0c\u8981\u7528\u90bb\u63a5\u8868\u3002\u5e76\u4e14lca\u5e94\u8be5\u5728\u5706\u65b9\u56fe\u4e0a\u8dd1\u800c\u4e0d\u662f\u5728\u539f\u56fe\u4e0a\u8dd1\u3002</p> <p>\u5efa\u7acb\u83ca\u82b1\u56fe</p> <p></p> <pre><code>void build(int u,int v,int w){\n    int sum=w;\n    for(int k=v;k!=u;k=fa[k]){//\u904d\u5386\u73af\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u66f4\u65b0\u73af\u7684\u5927\u5c0f\n        sum+=fw[k];\n    }\n    s[u]=sz[u]=sum;\n    add2(u,+/\u5efa\u65b9\u70b9\n    for(int k=v;k!=u;k=fa[k]){//\u904d\u5386\u73af\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u66f4\u65b0 \u70b9\u4e0a\u8bb0\u5f55\u7684 \u73af\u7684\u5927\u5c0f\n        sc[k]=sum;\n        add2(cnt2,k,min(s[k],sum-s[k]));//\u5efa\u83ca\u82b1\u70b9\n    }\n}\n</code></pre> <p>Tarjan\u90e8\u5206\u3010\u96be\u70b9\u3011</p> <pre><code>void tarjan(int u,int ine){//ine\u4e3a\u5165\u8fb9\u7f16\u53f7\n    dfn[u]=low[u]=++tim;\n    for(int i=h1[u];i;i=e[i].nxt){\n        int v=e[i].to,w=e[i].w;\n        if(dfs[v]){//\u8bbf\u95ee\u8fc7\n            if(i!=(ine^1))low[u]=min(low[u],dfn[v]);//\u6210\u73af\n            continue;\n        }\n        fa[v]=u;\n        fw[v]=w;\n        fe[v]=i;\n        tarjan(v,i);\n        low[u]=min(low[u],low[v]);\n        if(dfn[u]&lt;low[v])add2(u,v,w);//\u975e\u73af\u8fb9\n    }\n    for(int i=h1[u];i;i=e[i].nxt){\n        int v=e[i].to,w=e[i].w;\n        if(dfn[u]&lt;dfn[v]&amp;&amp;fe[v]!=i)build(u,v,w);//\u5efa\u83ca\u82b1\u56fe\n    }\n}\n</code></pre> <p>Complete Code is here <code>AC</code></p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . FancyKnowledge .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\u5934\u6587\u4ef6\n#include&lt;bits/stdc++.h&gt;\n\n//\u6570\u636e\u7c7b\u578b\n#define int long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n#define pr pair&lt;int,int&gt;\n#define pf first\n#define ps second\n#define pb push_back\n//\u547d\u540d\u7a7a\u95f4\nusing namespace std;\n//\u5e38\u91cf\nconst int N=2e5+5;\nconst int M=1e3;\nconst int MOD=1e9+1;\nconst int INF=1e9;\nconst int IINF=1e18;\nconst db eps=1e-9;\n//\u53d8\u91cf\nint n,m,deg[N],b,c,p[N][22];\nint fa[N],fw[N],s[N],fe[N];\nint dep[N],d[N];\nint tot,nt[N];\nint dfn[N],low[N],tim;\nint cn;\n\n\nint A,B;//\u8bb0\u5f55\u73af\u4e0a\u7684\u4e24\u4e2alca\n\nint sz[N];//\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u73af\u7684\u5927\u5c0f\n\nint cnt=1,cnt2,h1[N],h2[N];\n\nstruct node{\n    int nxt,to,w;\n}e[N],e2[N];\n\nvoid add2(int u,int v,int w){\n    e2[++cnt2].to=v;\n    e2[cnt2].nxt=h2[u];\n    e2[cnt2].w=w;\n    h2[u]=cnt2;\n}       \n\nvoid add(int u, int v,int w) { \n    e[++cnt].to=v;\n    e[cnt].w=w;\n    e[cnt].nxt=h1[u];\n    h1[u]=cnt;\n\n}\n\nvoid dfs(int u,int fa){\n    dep[u]=dep[fa]+1;\n    p[u][0]=fa;\n    for(int i=1;(1&lt;&lt;i)&lt;=dep[u];i++)//\u4e8c\u53c9\u6811\uff0c\u70b9i\u7684\u6df1\u5ea6\u5373i/2\n        p[u][i]=p[p[u][i-1]][i-1];//\u7b2cu\u4e2a\u70b9\u5411\u4e0a2^i\u5c42\u7684\u7956\u5148\u5c31\u662f\u7b2cu\u4e2a\u70b9\u7684fa\u7684\u4e0a2^(i-1)\u5c42\u7956\u5148\n    for(int i=h2[u];i;i=e2[i].nxt){//\u626b\u63cf\u51fa\u8fb9\n        int v=e2[i].to;\n        if(v==fa)continue;//\u6392\u9664fa\n        d[v]=d[u]+e2[i].w;\n        dfs(v,u);\n    }\n}                              \nint lca(int a,int b){\n    if(dep[a]&gt;dep[b])//\u7edf\u4e00\u5207\u6362\u4e3ab\u6bd4a\u6df1\n        swap(a,b);          \n    for(int i=20;i&gt;=0;i--)//b\u5411\u4e0a\u8d70\u5230\u4e0ea\u540c\u5c42\n        if(dep[a]&lt;=dep[b]-(1&lt;&lt;i))\n            b=p[b][i];             \n    if(a==b)\n        return a;                 \n    for(int i=20;i&gt;=0;i--){\n        if(p[a][i]==p[b][i])continue;//\u8fc7\u5934\u4e86\n        else a=p[a][i],b=p[b][i];          \n    }\n    A=a,B=b;//\u5047\u5982\u662f\u73af\uff0c\u8bb0\u5f55\u73af\u4e0a\u4e24\u4e2alca\n    return p[a][0];//\u6700\u540ea\u505c\u5728\u4e86lca\u7684\u66f4\u6df1\u4e00\u5c42       \n}\n\nvoid build(int u,int v,int w){\n    int sum=w;\n    for(int k=v;k!=u;k=fa[k]){//\u904d\u5386\u73af\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u66f4\u65b0\u73af\u7684\u5927\u5c0f\n        s[k]=sum;\n        sum+=fw[k];\n    }\n//  s[u]=sz[u]=sum;\n    add2(u,+/\u5efa\u65b9\u70b9,cn\u521d\u59cb\u503c\u4e3an,\u6545\u65b9\u70b9\u7684\u7f16\u53f7&gt;n,\u540e\u9762\u6839\u636e\u8fd9\u4e2a\u6765\u5224\u65adlca\u662f\u5426\u4e3a\u65b9\u70b9.\u4e0d\u8981\u5199\u6210cnt2\n    for(int k=v;k!=u;k=fa[k]){//\u904d\u5386\u73af\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u66f4\u65b0 \u70b9\u4e0a\u8bb0\u5f55\u7684 \u73af\u7684\u5927\u5c0f\n        sz[k]=sum;\n        add2(cn,k,min(s[k],sum-s[k]));//\u5efa\u83ca\u82b1\u70b9\n    }\n}\n\nvoid tarjan(int u,int ine){//ine\u4e3a\u5165\u8fb9\u7f16\u53f7\n    dfn[u]=low[u]=++tim;\n    for(int i=h1[u];i;i=e[i].nxt){\n        int v=e[i].to,w=e[i].w;\n        if(dfn[v]){//\u8bbf\u95ee\u8fc7\n            if(i!=(ine^1))low[u]=min(low[u],dfn[v]);//\u6210\u73af\n            continue;\n        }\n        fa[v]=u;\n        fw[v]=w;\n        fe[v]=i;\n        tarjan(v,i);\n        low[u]=min(low[u],low[v]);\n        if(dfn[u]&lt;low[v])add2(u,v,w);//\u975e\u73af\u8fb9\n    }\n    for(int i=h1[u];i;i=e[i].nxt){\n        int v=e[i].to,w=e[i].w;\n        if(dfn[u]&lt;dfn[v]&amp;&amp;fe[v]!=i){\n//      cerr&lt;&lt;\"build at u=\"&lt;&lt;u&lt;&lt;endl;\n        build(u,v,w);//\u5efa\u83ca\u82b1\u56fe\n        }\n\n    }\n}\n\nint ask(int u,int v){\n    int p=lca(u,v);\n//  cerr&lt;&lt;\"lca(\"&lt;&lt;u&lt;&lt;','&lt;&lt;v&lt;&lt;\") is p=\"&lt;&lt;p&lt;&lt;endl;\n    if(p&lt;=n)return d[u]/\u662f\u5706\u70b9,\u6ce8\u610f\u8fd9\u91ccd\u4e0d\u662f\u6df1\u5ea6!\n    int l=abs(s[A]-s[B]);//A,B\u4e3a\u4e24\u4e2alca\n    int dAB=min(l,sz[A]-l);\n    return dAB+d[u]+d[v]-d[A]-d[B];\n}\n\nsigned main(){\n    int q;\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;q;\n    cn=n;\n    for(int i=1;i&lt;=m;i++){\n        int u,v,w;\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        add(u,v,w);\n        add(v,u,w);\n    }\n\n\n    tarjan(1,-1);\n    dfs(1,0);\n\n\n    while(q--){\n        int u,v;\n        cin&gt;&gt;u&gt;&gt;v;\n        cout&lt;&lt;ask(u,v)&lt;&lt;endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/","title":"\u5f3a\u8fde\u901a\u5206\u91cf","text":"<p>\u82e5\u4e00\u5f20\u6709\u5411\u56fe\u7684\u8282\u70b9\u4e24\u4e24\u4e92\u76f8\u53ef\u8fbe\uff0c\u5219\u79f0\u8fd9\u5f20\u56fe\u662f\u5f3a\u8fde\u901a\u7684\u3002</p> <p>\u90a3\u4e48\u5b9e\u9645\u4e0a\u6211\u4eec\u53d1\u73b0\u627e\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u662f\u5728\u6709\u5411\u56fe\u4e0a\u627e\u73af\u3002\u6211\u4eec\u53ef\u4ee5\u5927\u81f4\u8003\u8651\u5982\u4e0b\u6b65\u9aa4\uff1a</p> <ul> <li> <p>\u5728\u6709\u5411\u56fe\u4e0adfs\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u5b58\u6709\u5df2\u8bbf\u95ee\u70b9\u7684\u6808\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u5df2\u8bbf\u95ee\u7684\u70b9\u6253\u4e0a\u7279\u6b8a\u7684\u6807\u8bb0\uff0c\u8868\u793a\u8be5\u70b9\u662f\u4e4b\u524d\u8bbf\u95ee\u8fc7\u7684\uff08\u79f0\u4e3a0\u6807\u8bb0\uff09\uff0c\u8fd8\u662f\u5f53\u524d\u8def\u5f84\u4e2d\u8d70\u8fc7\u7684\uff08\u79f0\u4e3a1\u6807\u8bb0\uff09\u3002</p> </li> <li> <p>\u5f53\u91cd\u65b0\u8d70\u5230\u4e00\u4e2a\u542b\u67091\u6807\u8bb0\u7684\u8282\u70b9\u4e0a\u65f6\uff0c\u8bf4\u660e\u53d1\u73b0\u4e00\u4e2a\u73af\uff0c\u4ece\u6808\u4e2d\u53d6\u51fa\u73af\u4e0a\u7684\u8282\u70b9\u3002</p> </li> </ul>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#tarjan","title":"tarjan \u7b97\u6cd5\u4ecb\u7ecd","text":"<p>\u7b97\u6cd5\u76ee\u7684:</p> <p>Tarjan \u7b97\u6cd5\u662f\u57fa\u4e8e***\u6df1\u5ea6\u4f18\u5148\u641c\u7d22***\u7684\u7b97\u6cd5\uff0c\u7528\u4e8e\u6c42\u89e3\u56fe\u7684\u8fde\u901a\u6027\u95ee\u9898\u3002Tarjan \u7b97\u6cd5\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u6c42\u51fa\u65e0\u5411\u56fe\u7684\u5272\u70b9\u4e0e\u6865\uff0c\u8fdb\u4e00\u6b65\u5730\u53ef\u4ee5\u6c42\u89e3\u65e0\u5411\u56fe\u7684\u53cc\u8fde\u901a\u5206\u91cf\uff1b\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u6c42\u89e3\u6709\u5411\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3001\u5fc5\u7ecf\u70b9\u4e0e\u5fc5\u7ecf\u8fb9\u3002</p> <p>\u5982\u679c\u4f60\u5bf9\u4e0a\u9762\u7684\u4e00\u4e9b\u672f\u8bed\u4e0d\u662f\u5f88\u4e86\u89e3\uff0c\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u53ea\u8981\u77e5\u9053 Tarjan \u7b97\u6cd5\u662f\u57fa\u4e8e\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\uff0c\u7528\u4e8e\u6c42\u89e3\u56fe\u7684\u8fde\u901a\u6027\u95ee\u9898\u7684\u7b97\u6cd5 \u5c31\u597d\u4e86\u3002</p> <p>zhuanlan.zhihu.com</p> <p></p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#_2","title":"\u5f3a\u8fde\u901a\u5206\u91cf","text":"<p>\u4e00\u4e2a\u73af\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u4e00\u4e2a\u6ca1\u6709\u51fa\u8fb9\u7684\u70b9\u4e5f\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u3002</p> <p></p> <p>\u5982\u679c\u4e00\u4e2a\u5b50\u56fe\u53ef\u4ee5\u6784\u6210\u591a\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u5219\u53ea\u6709\u5305\u542b\u8282\u70b9\u6700\u591a\u7684\u624d\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u3002\uff08\u5982\u4e0b\u56fe4\uff0c\u5305\u542b3\u4e2a\u8282\u70b9\u7684\u73af\u4e0d\u662f\u5f3a\u8fde\u901a\u5206\u91cf\uff0c4\u4e2a\u7684\u624d\u662f \uff09\u4e00\u4e2a\u56fe\u4e2d\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u5e76\u4e14\u4ed6\u4eec\u6240\u5305\u542b\u7684\u8282\u70b9\u6570\u53ef\u80fd\u4e0d\u540c\uff08\u5982\u4e0a\u56fe1,2,3,4,9\u548c5,6,8\u548c7\uff09</p> <p></p> <p>\u5206\u7c7b\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684\u8fb9\u5bfb\u627e\u73af\uff0c\u4ece\u800c\u627e\u5230\u5f3a\u8fde\u901a\u5206\u91cf</p> <p></p> <p></p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#tarjan_1","title":"Tarjan\u7b97\u6cd5","text":""},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#1x","title":"1.\u5165x","text":"<pre><code>//\u5165x\u65f6,\u65f6\u95f4\u6233\u8ffd\u6eaf\u503c\u66f4\u65b0,\u5165\u6808\n    dfn[x]=low[x]=++tot;\n    stk[++top]=x;instk[x]=1; \n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#2x","title":"2.\u627ex","text":"<p>\u679a\u4e3ex\u7684\u90bb\u70b9y\uff0c\u53ef\u80fd\u4f1a\u67093\u79cd\u60c5\u51b5</p> <pre><code>for(int i=0;i&lt;e[x].size();i++){//\u679a\u4e3ex\u7684\u90bb\u70b9y \n        int y=e[x][i];\n        if(!dfn[y]){//\u5982\u679cy\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7 \n            tarjan(y);//\u5411\u4e0b\u8d70 \n            low[x]=min(low[x],low[y]);//\u8fd4\u56de\u65f6\u66f4\u65b0 \n\n        }\n    }\n</code></pre> <p>1.\u6ca1\u6709\u8bbf\u95ee\u8fc7y</p> <p></p> <p>\u8003\u5bdf\u4ee5\u4e0b\u8d70\u6cd5</p> <p>1\u21922\u21923\u21921</p> <p>\u8282\u70b93\u53ef\u4ee5\u8bbf\u95ee\u5230dfn\u6700\u5c0f\u7684\u8282\u70b9\u4e3a1\uff0cdfn\u4e3a1.\u5e76\u4e14\u8282\u70b93\u662f\u4ece1\uff0c2\u8d70\u8fc7\u6765\u7684\uff0c\u8bf4\u660e1\uff0c2\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8282\u70b93\u8bbf\u95ee\u5230dfn\u6700\u5c0f\u7684\u8282\u70b9\u4e3a1\uff0c\u56e0\u6b64\u5728\u8fd4\u56de\u65f6\u8981\u66f4\u65b0low\u4e3a\u81ea\u5df1\u7684\u548c\u90bb\u70b9\u7684low\u7684\u6700\u5c0f\u503c</p> <p>\u5411\u4e0b\u7ee7\u7eed\u8d70</p> <pre><code>if(!dfn[y]){//\u5982\u679cy\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7 \n            tarjan(y);//\u5411\u4e0b\u8d70 \n            low[x]=mid(low[x],low[y]);//\u8fd4\u56de\u65f6\u66f4\u65b0 \n        }\n</code></pre> <p>2.y\u88ab\u8bbf\u95ee\u8fc7</p> <p>\u8003\u5bdf\u70b93.\u5b83\u53ef\u4ee5\u8d70\u5230\u70b91\uff08\u4e00\u4e2a**\u88ab\u8bbf\u95ee\u8fc7\u7684\u70b9**\uff09</p> <p>\u8003\u5bdf\u70b99.\u5b83\u53ef\u4ee5\u8d70\u5230\u70b93\uff08\u4e00\u4e2a\u88ab\u8bbf\u95ee\u8fc7\u7684\u70b9\uff09\u4e5f\u662f\u540c\u7406</p> <p>\u4e0d\u7528\u5f80\u56de\u8d70\uff08\u5373\u4e0d\u9700\u8981<code>tarjan(y);</code>\uff09</p> <pre><code>else if(dfn[y]&amp;&amp;instk[y]){//\u8bf4\u660e y\u88ab\u8bbf\u95ee\u8fc7 -&gt;\u8981\u4e48y\u662f\u7956\u5148(\u5728x\u51fa\u901a\u8fc7\u8fd4\u7956\u8fb9\u8bbf\u95ee\u5230\u4e86),\u8981\u4e48\u662f\u5de6\u5b50\u6811\u7684\u70b9(\u5728x\u901a\u8fc7\u6a2a\u63d2\u8fb9\u8bbf\u95ee\u5230\u4e86) \n            low[x]=min(low[x],dfn[y]); \n        }\n</code></pre> <p>3.y\u88ab\u8bbf\u95ee\u8fc7\u5e76\u4e14\u5df2\u7ecf\u5f39\u51fa\u6808</p> <p>\u53ea\u6709\u5f53\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5168\u90e8\u626b\u63cf\u5b8c\uff0c\u624d\u4f1a\u5c06\u8282\u70b9\u5f39\u51fa\u3002\u5982\u679cy\u5df2\u7ecf\u88ab\u5f39\u51fa\u4e86\uff0c\u8bf4\u660ey\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5df2\u7ecf\u88ab\u626b\u63cf\u5b8c\u4e86\u3002\u53c8\u56e0\u4e3a\u4e00\u4e2a\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf**\u6709\u4e14\u53ea\u6709\u4e00\u4e2a**\uff0c\u6240\u4ee5y\u4e00\u5b9a\u4e0d\u662f\u76ee\u524d\u6b63\u5728\u626b\u63cf\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u4e00\u4e2a\u70b9\uff0c\u76f4\u63a5\u5ffd\u7565\u5b83</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#x","title":"\u79bbx","text":"<pre><code>if(dfn[x]==low[x]){//\u8bf4\u660ex\u662f\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839 \n        int y;++cnt;\n        do{\n            y=stk[top--];instk[y]=0;\n            scc[y]=cnt;\n            ++siz[cnt];\n        } while(y!=x);\n    }\n</code></pre> <p>\u8003\u5bdf\u4ee5\u4e0b\u56fe</p> <p></p> <p>\u5f53\u8bbf\u95ee\u4e865\u21926\u21928\uff0c\u8bbf\u95ee\u52305\uff08\u901a\u8fc7\u8fd4\u7956\u8fb9\uff09\uff0c\u6b64\u65f6\u5c5e\u4e8e**2.y\u88ab\u8bbf\u95ee\u8fc7\u60c5\u51b5\uff0c\u6267\u884c**<code>low[x]=min(low[x],dfn[y]);</code></p> <p>\u5e76\u4e14\u4ece8\u4e0d\u80fd\u7ee7\u7eed\u8d70\u52305\uff0c\u4e5f\u6ca1\u6709\u5176\u4ed6\u51fa\u8fb9\uff087\u5c5e\u4e8e**3.y\u88ab\u8bbf\u95ee\u8fc7\u5e76\u4e14\u5df2\u7ecf\u5f39\u51fa\u6808\u60c5\u51b5\uff0c\u5ffd\u7565**\uff09</p> <p>\u5f00\u59cb\u56de\u6eaf</p> <p>\u5c06\u70b98\uff0c6\uff0c5\u7684low\u66f4\u65b0\u4e3a<code>min(low[8],dfn[5])</code>\u5373<code>dfn[5]</code>\u3002\u5f53\u56de\u6eaf\u52305\u65f6\uff0c\u628a<code>low[5]</code>\u4e5f\u66f4\u65b0\u4e3a\u4e86<code>dfn[5]</code>\uff0c\u5e76\u4e145\u7684\u6240\u6709\u90bb\u70b9\u90fd\u8bbf\u95ee\u5b8c\u4e86\uff087\u5ffd\u7565\uff0c\u7406\u7531\u540c\u4e0a\uff09\u3002\u6b64\u65f6\u8282\u70b95\u7684**for\u5faa\u73af**\u7ed3\u675f\uff0c\u8fd0\u884c\u5230\u5224\u5b9a\u73af\u8282\uff08\u79bbx\uff09\u3002\u4e5f\u6070\u597d\u6ee1\u8db3<code>(dfn[x]==low[x])</code>\u8bf4\u660ex\u662f\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839</p> <p>\u6b64\u65f6\u6808\u91cc\u6709...,5,6,8</p> <p>\u6267\u884c\u5faa\u73af\uff0c\u4e0d\u65ad\u51fa\u6808\uff0c\u76f4\u5230\u628a5\u7684scc\u66f4\u65b0\u540e\uff0c\u53d1\u73b0x=y\uff08y\u5c31\u662f\u76ee\u524d\u7684\u6808\u9876\uff0c5\uff09\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u8d70\u5b8c\u4e86</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#_3","title":"\u4ee3\u7801","text":"<pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int N=1e5;\n\nvector&lt;int&gt; e[N];//\u90bb\u63a5\u77e9\u9635 \nint dfn[N],low[N],tot;//\u65f6\u95f4\u6233\uff0c\u8ffd\u6eaf\u503c\uff0c\u7ed9\u65f6\u95f4\u6233\u7f16\u53f7\u7684\u8ba1\u6570\u5668 \nint stk[N],top;//\u6808\uff0c\u6307\u9488 \nbool instk[N]; //\u662f\u5426\u5728\u6808\u4e2d\nint scc[N],siz[N],cnt; //\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5728\u90a3\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc, \u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f,\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf \nint ans;\n\nvoid tarjan(int x){//\u4ece\u8282\u70b9x\u8fdb\u5165 \n    if(scc[x])return;//\u5982\u679c\u5df2\u7ecf\u662f\u67d0\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u70b9,\u505c\u6b62\u51fd\u6570\n    //\u5165x\u65f6,\u65f6\u95f4\u6233\u8ffd\u6eaf\u503c\u66f4\u65b0,\u5165\u6808\n    dfn[x]=low[x]=++tot;\n    stk[++top]=x;instk[x]=1; \n\n    for(int i=0;i&lt;e[x].size();i++){//\u679a\u4e3ex\u7684\u90bb\u70b9y \n        int y=e[x][i];\n        if(!dfn[y]){//\u5982\u679cy\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7 \n            tarjan(y);//\u5411\u4e0b\u8d70 \n            low[x]=min(low[x],low[y]);//\u8fd4\u56de\u65f6\u66f4\u65b0 \n        }else if(dfn[y]&amp;&amp;instk[y]){//\u8bf4\u660e y\u88ab\u8bbf\u95ee\u8fc7 -&gt;\u8981\u4e48y\u662f\u7956\u5148(\u5728x\u51fa\u901a\u8fc7\u8fd4\u7956\u8fb9\u8bbf\u95ee\u5230\u4e86),\u8981\u4e48\u662f\u5de6\u5b50\u6811\u7684\u70b9(\u5728x\u901a\u8fc7\u6a2a\u63d2\u8fb9\u8bbf\u95ee\u5230\u4e86) \n            low[x]=min(low[x],dfn[y]); \n        }\n    }\n    if(dfn[x]==low[x]){//\u8bf4\u660ex\u662f\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839 \n        int y;++cnt;\n        int flag=0;//\u8bb0\u5f55\u5f53\u524d\u5f3a\u8fde\u901a\u5206\u91cf\u70b9\u7684\u4e2a\u6570\n        do{\n            flag++;\n            y=stk[top--];instk[y]=0;\n//          ans-=e[y].size();\n            scc[y]=cnt;\n            ++siz[cnt];\n        } while(y!=x); \n        if(flag&gt;1)ans++;\n    }\n}\nsigned main(){\n    int m,n;\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        e[a].push_back(b);\n    }\n//  ans=m;\n    for(int i=1;i&lt;=n;i++)tarjan(i);//\u56fe\u53ef\u80fd\u4e0d\u8fde\u901a\uff01\n//  for(int i=1;i&lt;=n;i++)cout&lt;&lt;scc[i]&lt;&lt;' ';\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> <p>\u6ce8\u610f\u672c\u4ee3\u7801\u4e0e\u4e0b\u9762\u4f8b\u9898\u4ee3\u7801\u6709\u4e00\u70b9\u4e0d\u540c\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e0d\u80fd\u8ba1\u7b97\u70b9\u6570\u4e3a1\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u4f46\u672c\u4ee3\u7801\u53ef\u4ee5\uff0c\u53ea\u9700\u8981\u4fee\u6539<code>if(flag&gt;1)ans++;</code>\u5373\u53ef\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#1-usaco06janthe-cow-prom-s","title":"\u4f8b\u9898 #1 [USACO06JAN]The Cow Prom S","text":"<p>\u6709\u4e00\u4e2a \\(n\\) \u4e2a\u70b9\uff0c\\(m\\) \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u8bf7\u6c42\u51fa\u8fd9\u4e2a\u56fe\u70b9\u6570\u5927\u4e8e \\(1\\) \u7684\u5f3a\u8054\u901a\u5206\u91cf\u4e2a\u6570\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(2\\le n \\le 10^4\\)\uff0c\\(2\\le m\\le 5\\times 10^4\\)\uff0c\\(1 \\leq a, b \\leq n\\)\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#_4","title":"\u5b8c\u6574\u4ee3\u7801","text":"<pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int N=1e5;\n\nvector&lt;int&gt; e[N];//\u90bb\u63a5\u77e9\u9635 \nint dfn[N],low[N],tot;//\u65f6\u95f4\u6233\uff0c\u8ffd\u6eaf\u503c\uff0c\u7ed9\u65f6\u95f4\u6233\u7f16\u53f7\u7684\u8ba1\u6570\u5668 \nint stk[N],top;//\u6808\uff0c\u6307\u9488 \nbool instk[N]; //\u662f\u5426\u5728\u6808\u4e2d\nint scc[N],siz[N],cnt; //\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5728\u90a3\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc, \u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f,\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf \nint ans;\n\nvoid tarjan(int x){//\u4ece\u8282\u70b9x\u8fdb\u5165 \n    //\u5165x\u65f6,\u65f6\u95f4\u6233\u8ffd\u6eaf\u503c\u66f4\u65b0,\u5165\u6808\n    dfn[x]=low[x]=++tot;\n    stk[++top]=x;instk[x]=1; \n\n    for(int i=0;i&lt;e[x].size();i++){//\u679a\u4e3ex\u7684\u90bb\u70b9y \n        int y=e[x][i];\n        if(!dfn[y]){//\u5982\u679cy\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7 \n            tarjan(y);//\u5411\u4e0b\u8d70 \n            low[x]=min(low[x],low[y]);//\u8fd4\u56de\u65f6\u66f4\u65b0 \n        }else if(dfn[y]&amp;&amp;instk[y]){//\u8bf4\u660e y\u88ab\u8bbf\u95ee\u8fc7 -&gt;\u8981\u4e48y\u662f\u7956\u5148(\u5728x\u51fa\u901a\u8fc7\u8fd4\u7956\u8fb9\u8bbf\u95ee\u5230\u4e86),\u8981\u4e48\u662f\u5de6\u5b50\u6811\u7684\u70b9(\u5728x\u901a\u8fc7\u6a2a\u63d2\u8fb9\u8bbf\u95ee\u5230\u4e86) \n            low[x]=min(low[x],dfn[y]); \n        }\n    }\n    if(dfn[x]==low[x]){//\u8bf4\u660ex\u662f\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839 \n        int y;++cnt;\n        int flag=0;\n        do{\n            flag++;\n            y=stk[top--];instk[y]=0;\n            scc[y]=cnt;\n            ++siz[cnt];\n        } while(y!=x); \n        if(flag&gt;1)ans++;\n    }\n}\nsigned main(){\n    int m,n;\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        e[a].push_back(b);\n    }\n    for(int i=1;i&lt;=n;i++)tarjan(i);//\u56fe\u53ef\u80fd\u4e0d\u8fde\u901a\uff01\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5tarjan\u5b8c\u4e86\u4e4b\u540e\u7edf\u4e00\u7edf\u8ba1\uff0c\u53bb\u6389flag</p> <p>\u5728\u8f93\u51fa\u7b54\u6848\u524d\u7edf\u8ba1\u7b54\u6848\uff0c\u5728\u8f93\u51fa\u7b54\u6848\u524d\u63d2\u5165\u4ee5\u4e0b\u4ee3\u7801</p> <pre><code>for(int i=1;i&lt;=cnt;i++)\n     if(siz[i]&gt;1) ans++;\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#dfnlow","title":"\u878d\u4f1a\u8d2f\u901a\uff1adfn\u4e0elow\u66ff\u6362","text":"<p>\u5728\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u548c\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u4e0b\u9762\u4e24\u79cd\u5199\u6cd5\u662f\u7b49\u6548\u7684\u3002</p> <pre><code>if(i!=(eid^1)) low[u]=min(low[u],dfn[v]);\n//\u7b49\u4e8e\nif(i!=(eid^1)) low[u]=min(low[u],low[v]);\n</code></pre> <p>\u4f46\u662f\u5728\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u8fd9\u6837\u5199\u662f\u9519\u8bef\u7684\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f</p> <p>\u56e0\u4e3a\u5728\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u4e00\u4e2a\u70b9\u53ef\u80fd\u5728\u4e24\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6211\u4eec\u5728\u66f4\u65b0\u70b9\\(u\\)\u7684\\(low_v\\)\u65f6\uff0c\u7528\u5230\u7684\\(v\\)\u662f\u4e0e\\(u\\)\u5c5e\u4e8e\u540c\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u7684\uff0c\u4f46\u53ef\u80fd\u5728\u524d\u9762\u7684\u67d0\u4e2a\u4e5f\u5305\u542b\u70b9v\u7684\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u5df2\u7ecf\u66f4\u65b0\u8fc7\u5176\\(low_v\\)\u4e86\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u80fd\u8de8\u4e0d\u540c\u7684\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u8bbf\u95ee\\(low_v\\)\u4e86\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u9519\u4e86\u3002</p> <p>\u800c\u5728\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u8be5\u8fb9\u8981\u4e48\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u8981\u4e48\u4e00\u5b9a\u53ea\u5c5e\u4e8e\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff08\u56e0\u4e3a\u5982\u679c\u8be5\u8fb9\u5c5e\u4e8e\u82e5\u5e72\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u9996\u5148\u4fdd\u8bc1\u5176\u4e3a\u5e7f\u4e49\u53cc\u5411\u8fb9\uff0c\u4f46\u5982\u679c\u4e24\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u6709\u4e00\u4e2a\u516c\u5171\u7684\u5e7f\u4e49\u53cc\u5411\u8fb9\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u5176\u5b9e\u662f\u4e00\u4e2a\u6574\u4f53\uff08\u5373\u5b83\u4eec\u5c31\u662f\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff09\uff09</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E7%82%B9%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/","title":"\u70b9\u53cc\u8fde\u901a\u5206\u91cf","text":"<p>\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u6307\u7684\u662f\u5728\u4e00\u4e2a\u65e0\u5411\u56fe\u4e2d\uff0c\u6781\u5927\u7684\u4e00\u7ec4\u9876\u70b9\u548c\u8fb9\uff0c\u4f7f\u5f97\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u95f4\u90fd\u6709\u81f3\u5c11\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\uff08\u5373\u5373\u4f7f\u5220\u9664\u56fe\u4e2d\u7684\u4e00\u4e2a\u9876\u70b9\uff0c\u8fd9\u4e9b\u9876\u70b9\u4ecd\u7136\u662f\u8fde\u901a\u7684\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u95f4\u90fd\u662f\u70b9\u53cc\u8fde\u901a\u7684\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E7%82%B9%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#1","title":"\u4f8b\u9898 #1","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a \\(n\\) \u4e2a\u8282\u70b9 \\(m\\) \u6761\u65e0\u5411\u8fb9\u7684\u56fe\uff0c\u8bf7\u8f93\u51fa\u5176\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\uff0c\u5e76\u4e14\u8f93\u51fa\u6bcf\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E7%82%B9%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#_2","title":"\u63d0\u793a&amp;\u4ee3\u7801","text":"<pre><code>\u6ce8\u610f\u4e00\u4e2a\u70b9\u53ef\u80fd\u5c5e\u4e8e\u591a\u4e2avdcc\uff0c\u6240\u4ee5\u4e0d\u53ef\u7528`belong[]`\u5b58\u50a8\uff0c\u800c\u5e94\u8be5\u76f4\u63a5\u63a8\u5165`(vector) vdcc[cnt]`\u4e2d\n</code></pre> <p>\u5b8c\u6574\u4ee3\u7801</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=5e5+5;\nconst int M=5e6;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,p,T;\n\n\n\nint dfn[N],low[N],indx;//\u65f6\u95f4\u6233\uff0c\u8ffd\u6eaf\u503c\uff0c\u7ed9\u65f6\u95f4\u6233\u7f16\u53f7\u7684\u8ba1\u6570\u5668 \nint stk[N],tp;//\u6808\uff0c\u6307\u9488 \nbool instk[N]; //\u662f\u5426\u5728\u6808\u4e2d\nint belong[N],siz[N],vdcc; //\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5728\u90a3\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u91cc, \u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f,\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf \nvector&lt;int&gt; ans[N];\n\nint vis[N];\n\nstruct edge{\n    int to,nxt;\n}e[M];\nint h[N],idx=-1;\nvoid add(int a,int b){\n    e[++idx]={b,h[a]};\n    h[a]=idx;\n    e[++idx]={a,h[b]};\n    h[b]=idx;\n}\n\nvoid tarjan(int u,int fa) {//\u5f53\u524d\u8282\u70b9,\u5165\u8fb9\u7684\u8282\u70b9\u7f16\u53f7\n    int son=0;//\u5224\u5b64\u7acb\u70b9\u7528 \n    vis[u]=1;\n    dfn[u]=low[u]=++indx;\n    stk[++tp]=u;\n    for(int i=h[u]; ~i; i=e[i].nxt) {\n\n        int v=e[i].to;\n        if(dfn[v]==0) {\n            son++;\n            tarjan(v,u);//not tarjan(v,i);\n            low[u]=min(low[u],low[v]);\n            ///new\n            if(low[v]&gt;=dfn[u]){\n                vdcc++;\n                int x;\n                do {\n                    x=stk[tp--];\n                    ans[vdcc].push_back(x);//\u6ce8\u610f\uff01\u4e00\u4e2a\u70b9\u53ef\u80fd\u5c5e\u4e8e\u591a\u4e2avdcc! \n                } while(x!=v);\n                ans[vdcc].push_back(u);\n            }\n        }\n        else if(v!=fa) low[u]=min(low[u],dfn[v]);//\u5224\u65ad\u70b9\u662f\u5426\u76f8\u540c\uff0c\u800c\u8fb9\u53cc\u4e2d\u662f\u5224\u65ad\u8fb9\u662f\u5426\u548c\u6765\u65f6\u7684\u8fb9\u7684\u53cd\u5411\u8fb9\u76f8\u540c\uff0c\u90fd\u662f\u4e3a\u4e86\u9632\u6b62\u56de\u5934 \n    }\n    if(!(fa||son))ans[+/\u7279\u5224\u5b64\u7acb\u70b9 \n}\nsigned main(){\n    int m,n;\n    cin&gt;&gt;n&gt;&gt;m;\n\n    for(int i=1;i&lt;=N;i++)e[i].nxt=-1,h[i]=-1;\n    for(int i=1;i&lt;=m;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        add(a,b);\n    }\n    for(int i=1;i&lt;=n;i++)if(!vis[i])tp=0,tarjan(i,0);//\u56fe\u53ef\u80fd\u4e0d\u8fde\u901a\uff01\u5207\u52ff\u91cd\u590d\u8bbf\u95ee\uff01\n\n    cout&lt;&lt;vdcc&lt;&lt;endl; \n    for(int i=1;i&lt;=vdcc;i++){\n        cout&lt;&lt;ans[i].size()&lt;&lt;' ';\n        for(auto v:ans[i])cout&lt;&lt;v&lt;&lt;' ';\n        cout&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E7%BB%83%E4%B9%A0/","title":"\u7ec3\u4e60","text":""},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E7%BB%83%E4%B9%A0/#usaco03fall-haoi2006-g","title":"[USACO03FALL / HAOI2006] \u53d7\u6b22\u8fce\u7684\u725b G","text":"<p>\u6bcf\u5934\u5976\u725b\u90fd\u68a6\u60f3\u6210\u4e3a\u725b\u68da\u91cc\u7684\u660e\u661f\u3002\u88ab\u6240\u6709\u5976\u725b\u559c\u6b22\u7684\u5976\u725b\u5c31\u662f\u4e00\u5934\u660e\u661f\u5976\u725b\u3002\u6240\u6709\u5976\u725b\u90fd\u662f\u81ea\u604b\u72c2\uff0c\u6bcf\u5934\u5976\u725b\u603b\u662f\u559c\u6b22\u81ea\u5df1\u7684\u3002\u5976\u725b\u4e4b\u95f4\u7684\u201c\u559c\u6b22\u201d\u662f\u53ef\u4ee5\u4f20\u9012\u7684\u2014\u2014\u5982\u679c \\(A\\) \u559c\u6b22 \\(B\\)\uff0c\\(B\\) \u559c\u6b22 \\(C\\)\uff0c\u90a3\u4e48 \\(A\\) \u4e5f\u559c\u6b22 \\(C\\)\u3002\u725b\u680f\u91cc\u5171\u6709 \\(N\\) \u5934\u5976\u725b\uff0c\u7ed9\u5b9a\u4e00\u4e9b\u5976\u725b\u4e4b\u95f4\u7684\u7231\u6155\u5173\u7cfb\uff0c\u8bf7\u4f60\u7b97\u51fa\u6709\u591a\u5c11\u5934\u5976\u725b\u53ef\u4ee5\u5f53\u660e\u661f\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\uff1a\u4e24\u4e2a\u7528\u7a7a\u683c\u5206\u5f00\u7684\u6574\u6570\uff1a\\(N\\) \u548c \\(M\\)\u3002</p> <p>\u63a5\u4e0b\u6765 \\(M\\) \u884c\uff1a\u6bcf\u884c\u4e24\u4e2a\u7528\u7a7a\u683c\u5206\u5f00\u7684\u6574\u6570\uff1a\\(A\\) \u548c \\(B\\)\uff0c\u8868\u793a \\(A\\) \u559c\u6b22 \\(B\\)\u3002</p> <p>\u7f29\u70b9\u540e\u4f1a\u53d8\u6210\u4e00\u68f5\u6811\u3002\u627e\u5230\u6ca1\u6709\u51fa\u5ea6\u7684\u90a3\u4e2a\u70b9u\uff0cu\u4e2d\u5305\u542b\u662f\u6240\u6709\u5976\u725b\u90fd\u662f\u660e\u661f\u3002\u5982\u679c\u6709\u591a\u4e2a\u70b9\u6ca1\u6709\u51fa\u5ea6\uff0c\u5219\u7b54\u6848\u4e3a0\uff0c\u5373\u5976\u725b\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u9635\u8425\uff0c\u76f8\u4e92\u4e0d\u8fde\u901a\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\n#define i1n int i=1;i&lt;=n;i++\n#define in1 int i=n;i&gt;=1;i--\nusing namespace std;\n\nconst int N=5e5+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint dfn[N],low[N],stk[N],tot,top,cnt,scc[N],siz[N],sccw[N],w[N],dis[N],vis[N],n,m,way[N][2],instk[N],s,np,p[N],ans;\nvector &lt;int&gt; e[N];\nint du[N];\nint f[N];\n\n\nvector&lt;int&gt;e2[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n}\nvoid add2(int a,int b){\n    e2[a].push_back(b);\n    du[a]++;\n}\n\nvoid tarjan(int x){//\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u70b9\n    //\u5165x\u65f6,\u65f6\u95f4\u6233\u8ffd\u6eaf\u503c\u66f4\u65b0,\u5165\u6808\n    dfn[x]=low[x]=++tot;\n    stk[++top]=x;instk[x]=1; \n\n    for(int i=0;i&lt;e[x].size();i++){//\u679a\u4e3ex\u7684\u90bb\u70b9y \n        int y=e[x][i];\n        if(!dfn[y]){//\u5982\u679cy\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7 \n            tarjan(y);//\u5411\u4e0b\u8d70 \n            low[x]=min(low[x],low[y]);//\u8fd4\u56de\u65f6\u66f4\u65b0 \n        }else if(dfn[y]&amp;&amp;instk[y]){//\u8bf4\u660e y\u88ab\u8bbf\u95ee\u8fc7 -&gt;\u8981\u4e48y\u662f\u7956\u5148(\u5728x\u51fa\u901a\u8fc7\u8fd4\u7956\u8fb9\u8bbf\u95ee\u5230\u4e86),\u8981\u4e48\u662f\u5de6\u5b50\u6811\u7684\u70b9(\u5728x\u901a\u8fc7\u6a2a\u63d2\u8fb9\u8bbf\u95ee\u5230\u4e86) \n            low[x]=min(low[x],dfn[y]); \n        }\n    }\n    if(dfn[x]==low[x]){//\u8bf4\u660ex\u662f\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839 \n        int y;++cnt;\n        int flag=0;\n        do{\n            flag++;\n            y=stk[top--];instk[y]=0;\n            scc[y]=cnt;\n            ++siz[cnt];\n            sccw[cnt]+=w[y];//\u8bb0\u5f55\u7f29\u70b9\u540e\u5f3a\u8fde\u901a\u5206\u91cf\u70b9\u7684\u70b9\u6743\n        } while(y!=x); \n    }\n}\n\nvoid dfs(int x){\n    if(f[x])return ;\n    f[x]=sccw[x];\n    int mx=0;\n    for(auto v:e2[x]){\n        if(!f[v])dfs(v);//\u641c\u8fc7\u5c31\u4e0d\u7528\u518d\u641c\uff0c\u76f4\u63a5\u8c03\u7528 \n        mx=max(mx,f[v]);\n    }\n    f[x]+=mx;\n}\n\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        cin&gt;&gt;way[i][0]&gt;&gt;way[i][1];\n    }\n\n    for(int i=1;i&lt;=m;i++){\n        add(way[i][0],way[i][1]);\n    }\n\n\n    for(int i=1;i&lt;=n;i++)//\u9898\u76ee\u4e0d\u4fdd\u8bc1\u56fe\u8fde\u7eed!\n        if(!dfn[i]) tarjan(i);\n\n    //\u5efa\u65b0\u56fe \n    for(int i=1;i&lt;=n;i++){\n        for(int j=0;j&lt;e[i].size();j++){\n            int v=e[i][j];\n            if(scc[i]==scc[v])continue;//\u6ce8\u610fcontinue\n            add2(scc[i],scc[v]);//\u6ce8\u610f\u4e0d\u662fscc[j]\n        }\n    }\n    int res=0;\n    for(int i=1;i&lt;=cnt;i++){\n        if(!du[i])res++,ans=siz[i];\n        if(res&gt;1){\n            ans=0;break;\n        }\n    } \n\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E7%BC%A9%E7%82%B9%EF%BC%88%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F%EF%BC%89/","title":"\u7f29\u70b9\uff08\u5f3a\u8fde\u901a\u5206\u91cf\uff09","text":"<p>\u7f29\u70b9\u6307\u7684\u662f\u5c06\u56fe\u4e2d\u7684\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\uff08\u901a\u5e38\u662f\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u6216\u5f3a\u8fde\u901a\u5206\u91cf\uff09\u7f29\u51cf\u4e3a\u4e00\u4e2a\u5355\u4e00\u7684\u9876\u70b9\u3002\u5bf9\u4e8e\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5b83\u6709\u8fd9\u6837\u7684\u5e94\u7528\uff1a</p> <p>\u5047\u8bbe\u4f60\u53ef\u4ee5\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u6cbf\u7740\u6709\u5411\u56fe\u91c7\u96c6\u6cbf\u9014\u70b9\u4e0a\u7684\u91d1\u5e01\u3002\u90a3\u4e48\u5f53\u4f60\u8fdb\u5165\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u65f6\uff0c\u8fd9\u4e2a\u5206\u91cf\u4e2d\u7684\u6240\u6709\u70b9\u4f60\u90fd\u53ef\u8fbe\u3002\u4e3a\u4e86\u51cf\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5206\u91cf\u7528\u4e00\u4e2a\u70b9\u6765\u4ee3\u66ff\u3002\u5206\u91cf\u4e0e\u5916\u754c\u7684\u8fde\u8fb9\u53d8\u6210\u4e86\u8fd9\u4e2a\u70b9\u4e0e\u5176\u5b83\u70b9\u7684\u8fde\u8fb9\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E7%BC%A9%E7%82%B9%EF%BC%88%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F%EF%BC%89/#1","title":"\u4f8b\u9898 #1","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u6709\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u6c42\u4e00\u6761\u8def\u5f84\uff0c\u4f7f\u8def\u5f84\u7ecf\u8fc7\u7684\u70b9\u6743\u503c\u4e4b\u548c\u6700\u5927\u3002\u4f60\u53ea\u9700\u8981\u6c42\u51fa\u8fd9\u4e2a\u6743\u503c\u548c\u3002</p> <p>\u5141\u8bb8\u591a\u6b21\u7ecf\u8fc7\u4e00\u6761\u8fb9\u6216\u8005\u4e00\u4e2a\u70b9\uff0c\u4f46\u662f\uff0c\u91cd\u590d\u7ecf\u8fc7\u7684\u70b9\uff0c\u6743\u503c\u53ea\u8ba1\u7b97\u4e00\u6b21\u3002</p> <p>\u5927\u610f</p> <p>\u5b50\u95ee\u98981\uff1a\u628a\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u6240\u6709\u70b9\u538b\u7f29\u6210\u4e00\u4e2a\u70b9\u5373\u53ef\u3002\u5904\u7406\u5b8c\u540e\u56fe\u4e2d\u65e0\u73af\u3002</p> <p>\u5b50\u95ee\u98982\uff1a\u5728\u65b0\u7684\u6709\u5411\u65e0\u73af\u56fe\u4e2d\u627e\u6700\u5927\u8def\u5f84\u3002\u8bb0\u5fc6\u5316dfs\u641c\u7d22\u5373\u53ef\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\n#define i1n int i=1;i&lt;=n;i++\n#define in1 int i=n;i&gt;=1;i--\nusing namespace std;\n\nconst int N=5e5+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint dfn[N],low[N],stk[N],tot,top,cnt,scc[N],siz[N],sccw[N],w[N],dis[N],vis[N],n,m,way[N][2],instk[N],s,np,p[N],ans;\nvector &lt;int&gt; e[N];\nint f[N];\n\n\nvector&lt;int&gt;e2[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n}\nvoid add2(int a,int b){\n    e2[a].push_back(b);\n}\n\nvoid tarjan(int x){//\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u70b9\n    //\u5165x\u65f6,\u65f6\u95f4\u6233\u8ffd\u6eaf\u503c\u66f4\u65b0,\u5165\u6808\n    dfn[x]=low[x]=++tot;\n    stk[++top]=x;instk[x]=1; \n\n    for(int i=0;i&lt;e[x].size();i++){//\u679a\u4e3ex\u7684\u90bb\u70b9y \n        int y=e[x][i];\n        if(!dfn[y]){//\u5982\u679cy\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7 \n            tarjan(y);//\u5411\u4e0b\u8d70 \n            low[x]=min(low[x],low[y]);//\u8fd4\u56de\u65f6\u66f4\u65b0 \n        }else if(dfn[y]&amp;&amp;instk[y]){//\u8bf4\u660e y\u88ab\u8bbf\u95ee\u8fc7 -&gt;\u8981\u4e48y\u662f\u7956\u5148(\u5728x\u51fa\u901a\u8fc7\u8fd4\u7956\u8fb9\u8bbf\u95ee\u5230\u4e86),\u8981\u4e48\u662f\u5de6\u5b50\u6811\u7684\u70b9(\u5728x\u901a\u8fc7\u6a2a\u63d2\u8fb9\u8bbf\u95ee\u5230\u4e86) \n            low[x]=min(low[x],dfn[y]); \n        }\n    }\n    if(dfn[x]==low[x]){//\u8bf4\u660ex\u662f\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839 \n        int y;++cnt;\n        int flag=0;\n        do{\n            flag++;\n            y=stk[top--];instk[y]=0;\n            scc[y]=cnt;\n            ++siz[cnt];\n            sccw[cnt]+=w[y];//\u8bb0\u5f55\u7f29\u70b9\u540e\u5f3a\u8fde\u901a\u5206\u91cf\u70b9\u7684\u70b9\u6743\n        } while(y!=x); \n    }\n}\n\nvoid dfs(int x){\n    if(f[x])return ;\n    f[x]=sccw[x];\n    int mx=0;\n    for(auto v:e2[x]){\n        if(!f[v])dfs(v);//\u641c\u8fc7\u5c31\u4e0d\u7528\u518d\u641c\uff0c\u76f4\u63a5\u8c03\u7528 \n        mx=max(mx,f[v]);\n    }\n    f[x]+=mx;\n}\n\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=n;i++)cin&gt;&gt;w[i];\n    for(int i=1;i&lt;=m;i++){\n        cin&gt;&gt;way[i][0]&gt;&gt;way[i][1];\n    }\n\n    for(int i=1;i&lt;=m;i++){\n        add(way[i][0],way[i][1]);\n    }\n\n\n    for(int i=1;i&lt;=n;i++)//\u9898\u76ee\u4e0d\u4fdd\u8bc1\u56fe\u8fde\u7eed!\n        if(!dfn[i]) tarjan(i);\n\n    //\u5efa\u65b0\u56fe \n    for(int i=1;i&lt;=n;i++){\n        for(int j=0;j&lt;e[i].size();j++){\n            int v=e[i][j];\n            if(scc[i]==scc[v])continue;//\u6ce8\u610fcontinue\n            add2(scc[i],scc[v]);//\u6ce8\u610f\u4e0d\u662fscc[j]\n        }\n    }\n\n    //\u6c42DAG\u4e2d\u6700\u5927\u8def\u5f84\n    for(int i=1;i&lt;=cnt;i++){\n        if(f[i])continue;\n        dfs(i);\n        ans=max(ans,f[i]);\n    } \n\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E8%BE%B9%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/","title":"\u8fb9\u53cc\u8fde\u901a\u5206\u91cf","text":"<p>\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff08Edge-Biconnected Component\uff09\u662f\u56fe\u8bba\u4e2d\u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u6307\u7684\u662f\u5728\u4e00\u4e2a\u65e0\u5411\u56fe\u4e2d\uff0c\u6781\u5927\u7684\u4e00\u7ec4\u9876\u70b9\u548c\u8fb9\uff0c\u4f7f\u5f97\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u95f4\u90fd\u6709\u81f3\u5c11\u4e24\u6761\u4e0d\u76f8\u4ea4\u7684\u8fb9\u8fde\u63a5\uff08\u5373\u5373\u4f7f\u5220\u9664\u56fe\u4e2d\u7684\u4e00\u6761\u8fb9\uff0c\u8fd9\u4e9b\u9876\u70b9\u4ecd\u7136\u662f\u8fde\u901a\u7684\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u95f4\u90fd\u662f\u8fb9\u53cc\u8fde\u901a\u7684\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E8%BE%B9%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#1","title":"\u4f8b\u9898 #1","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a \\(n\\) \u4e2a\u8282\u70b9 \\(m\\) \u6761\u65e0\u5411\u8fb9\u7684\u56fe\uff0c\u8bf7\u8f93\u51fa\u5176\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\uff0c\u5e76\u4e14\u8f93\u51fa\u6bcf\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E8%BE%B9%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#_2","title":"\u63d0\u793a&amp;\u4ee3\u7801","text":"<pre><code>void tarjan(int u,int eid) {//\u5f53\u524d\u8282\u70b9,\u5165\u8fb9\u7f16\u53f7\n    dfn[u]=low[u]=++indx;\n    stk[++tp]=u;\n    for(int i=head[u]; ~i; i=edge[i].nxt) {\n        int v=edge[i].to;\n        if(dfn[v]==0) {\n            tarjan(v,i);\n            low[u]=min(low[u],low[v]);\n        }\n        if(i!=(eid^1)) low[u]=min(low[u],dfn[v]);\n    }\n    if(dfn[u]==low[u]) {\n        edcc++;\n        int x;\n        do {\n            x=stk[tp--];\n            belong[x]=edcc;\n        } while(x!=u);\n    }\n}\n</code></pre> <p>\u5b8c\u6574\u4ee3\u7801</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=5e5+5;\nconst int M=5e6;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,p,T;\n\n\n\nint dfn[N],low[N],indx;//\u65f6\u95f4\u6233\uff0c\u8ffd\u6eaf\u503c\uff0c\u7ed9\u65f6\u95f4\u6233\u7f16\u53f7\u7684\u8ba1\u6570\u5668 \nint stk[N],tp;//\u6808\uff0c\u6307\u9488 \nbool instk[N]; //\u662f\u5426\u5728\u6808\u4e2d\nint belong[N],siz[N],edcc; //\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5728\u90a3\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u91cc, \u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f,\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf \nvector&lt;int&gt; ans[N];\n\nint vis[N];\n\nstruct edge{\n    int to,nxt;\n}e[M];\nint h[N],idx=-1;\nvoid add(int a,int b){\n    e[++idx]={b,h[a]};\n    h[a]=idx;\n    e[++idx]={a,h[b]};\n    h[b]=idx;\n}\n\nvoid tarjan(int u,int eid) {//\u5f53\u524d\u8282\u70b9,\u5165\u8fb9\u7f16\u53f7\n    vis[u]=1;\n    dfn[u]=low[u]=++indx;\n    stk[++tp]=u;\n    for(int i=h[u]; ~i; i=e[i].nxt) {\n        int v=e[i].to;\n        if(dfn[v]==0) {\n            tarjan(v,i);\n            low[u]=min(low[u],low[v]);\n        }\n        if(i!=(eid^1)) low[u]=min(low[u],dfn[v]);\n    }\n    if(dfn[u]==low[u]) {\n        edcc++;\n        int x;\n        do {\n            x=stk[tp--];\n            belong[x]=edcc;\n        } while(x!=u);\n    }\n}\nsigned main(){\n    int m,n;\n    cin&gt;&gt;n&gt;&gt;m;\n\n    for(int i=1;i&lt;=N;i++)e[i].nxt=-1,h[i]=-1;\n    for(int i=1;i&lt;=m;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        add(a,b);\n    }\n    for(int i=1;i&lt;=n;i++)if(!vis[i])tarjan(i,0);//\u56fe\u53ef\u80fd\u4e0d\u8fde\u901a\uff01\u5207\u52ff\u91cd\u590d\u8bbf\u95ee\uff01\n    for(int i=1;i&lt;=n;i++)ans[belong[i]].push_back(i);\n\n    cout&lt;&lt;edcc&lt;&lt;endl; \n    for(int i=1;i&lt;=edcc;i++){\n        cout&lt;&lt;ans[i].size()&lt;&lt;' ';\n        for(auto v:ans[i])cout&lt;&lt;v&lt;&lt;' ';\n        cout&lt;&lt;endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/Tarjan/%E8%BE%B9%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/#_3","title":"\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u548c\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u533a\u522b","text":"<p>\u5728\u591a\u6570\u56fe\u4e2d\uff0c\u4e24\u8005\u770b\u8d77\u6765\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002\u4e24\u8005\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff1a</p> <p>\u82e5\u4e24\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u67091\u4e2a\u516c\u5171\u70b9\uff0c\u5219\u5b83\u4eec\u7ec4\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u3002</p> <p>\u82e5\u4e24\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u67092\u4e2a\u516c\u5171\u70b9\uff0c\u5219\u5b83\u4eec\u7ec4\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Bellman-Ford/","title":"Bellman-Ford","text":"<p>\u6c42\u603b\u8def\u5f84\u6761\u6570\u4e0d\u591a\u4e8eK\u6761\u7684\u6700\u77ed\u8def\u5f84</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint n,m,ans;\nint dis[5005],road[5005][5005];\n\nvoid bellman(){\n\n    for(int i=2;i&lt;=n;i++)dis[i]=0x3f3f3f3f;\n    dis[1]=0;\n    for(int i=1;i&lt;=n;i++){\n        int flag=0;\n        for(int j=1;j&lt;=m;j++){\n            if(dis[j]&gt;dis[i]/\u5982\u679c1-&gt;j\u6bd41-&gt;i-&gt;j\u8fdc\uff0c\u5219\u66f4\u65b0\u5b83 \n        }\n        if(!flag)break; //\u5982\u679c\u6ca1\u6709\u66f4\u65b0\u5219break \n    }\n}\nint main(){\n    memset(road,0x3f3f3f3f,sizeof road);\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        int u,v,w;\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        road[u][v]=w;\n\n    }\n    bellman();\n\n    for(int i=1;i&lt;=n;i++)cout&lt;&lt;dis[i]&lt;&lt;' ';\n\n    return 0;\n}\n</code></pre> <p>\u53e6\u5916\u4e00\u79cd\u5199\u6cd5</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint n,m,ans;\nint d[5005];\nstruct node{\n    int u,v,w;\n}e[5050];\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        int c,c2,y;\n        cin&gt;&gt;c&gt;&gt;c2&gt;&gt;y;\n        e[i].u=c2;e[i].v=c;e[i].w=y;\n\n    }\n    for(int i=2;i&lt;=n;i++)d[i]=0x3f3f3f3f;\n    for(int i=1;i&lt;=n-1;i++){\n        for(int j=1;j&lt;=m;j++){\n            d[e[j].v]=min(d[e[j].u]+e[j].w,d[e[j].v]);\n        }\n    }\n    for(int i=1;i&lt;=m;i++){\n        if(d[e[i].v]&gt;d[e[i].u]+e[i].w){\n            printf(\"NO\");return 0;  //\u6709\u8d1f\u73af\n        }\n    }\n    for(int i=1;i&lt;=n;i++)cout&lt;&lt;d[i]&lt;&lt;' ';\n\n    return 0;\n}\n</code></pre> <p>\u56e0\u4e3a\u56fe\u7684\u6700\u77ed\u8def\u5f84\u4e0d\u5305\u542b\u8d1f\u73af\u6216\u6b63\u73af\uff0c\u6545\u663e\u7136\u6700\u591a\u53ea\u80fd\u5305\u542b n\u22121 \u6761\u8fb9\uff0c\u4e8e\u662f\u8fdb\u884c n\u22121 \u6b21\u677e\u5f1b\u64cd\u4f5c\u3002</p> <p>\u82e5\u7ecf\u8fc7 n\u22121 \u8f6e\u677e\u5f1b\u64cd\u4f5c\u540e\u4ecd\u80fd\u677e\u5f1b\uff0c\u8bf4\u660e\u56fe\u5b58\u5728\u8d1f\u6743\u56de\u8def\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Dijkstra/","title":"Dijkstra","text":"<p>\u901a\u8fc7\u5df2\u5f97\u5230\u6700\u77ed\u8def\u5f84\u7684\u7684\u70b9\u53bb\u6269\u5c55\u5176\u4ed6\u7684\u70b9\uff0c\u8bbe\u8d77\u70b9\u4e3a s</p> <p>\u8bbe\u5b9a <code>dist[s]=0;dist[v]=inf(v!=s)</code></p> <ul> <li> <p>\u627e\u5230\u6700\u5c0f\u7684 <code>dist [ u ]</code>\uff08\u4e14 u \u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\uff09\u6b64\u65f6\u7684 <code>dist [ u ]</code>\u5c31\u662f\u8d77\u70b9\u5230\u8be5\u70b9\u7684\u6700\u77ed\u8def\uff08\u4e3a\u4ec0\u4e48\uff1f\u2192\u4e4b\u540e\u7684dis\u503c\u4e00\u5b9a\u5927\u4e8edis_u\uff0c\u4e0d\u4f1a\u66f4\u65b0dis_u\uff09</p> </li> <li> <p>\u66f4\u65b0\u4e0e u \u76f8\u8fde\u7684\u70b9</p> </li> </ul> <p>vector \u5199\u6cd5</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\nusing namespace std;\nconst int N=1e6+5;\nint vis[N],h[N];\nint dis[N],cnt,u,w,n,m,v,s;\nstruct node {\n    int nxt,dis;\n};\n\nvector&lt;node&gt; e[N];\npriority_queue&lt;pair&lt;int,int&gt;&gt; pq;\nvoid add(int a,int b,int dis) {\n    e[a].push_back((node){b,dis});\n}\n\nvoid djstr(int rt) {\n    pq.push(make_pair(0,rt));\n    int u=rt;   //\u5148\u4ece\u8d77\u70b9\u5f00\u59cb\u67e5\n    for(int i=1; i&lt;=n; i++)dis[i]=2147483647;   //\u521d\u59cb\u5316\u8fb9\u6743\n\n    dis[rt]=0;\n//  vis[rt]=1;//\u522b\u5199\u9519\uff01\uff01\n\n    while(pq.size()) {  //\u641c\u5b8c\u5168\u56fe\n\n        u=pq.top().second;\n\n        pq.pop();\n        if(vis[u])continue;//\u8bb0\u5f97continue\n        vis[u]=1;\n        for(int i=0;i&lt;e[u].size();i++){\n            int v=e[u][i].nxt,w=e[u][i].dis;\n            if(!vis[v]&amp;&amp;dis[u]+w&lt;dis[v]){\n                dis[v]=dis[u]/\u66f4\u65b0\n                pq.push(make_pair(-dis[v],v));\n            }\n        }\n    }\n}\nsigned main() {\n\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;\n\n    for(int i=1; i&lt;=m; i++) {\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        if(u!=v)add(u,v,w);\n    }\n    djstr(s);\n    for(int i=1; i&lt;=n; i++) {\n        cout&lt;&lt;dis[i]&lt;&lt;' ';\n    }\n    return 0;\n}\n</code></pre> <p>\u90bb\u63a5\u8868\u7248\u672c</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\nusing namespace std;\nconst int MAXN=1e6+5;\nint vis[MAXN],h[MAXN];\nint dis[MAXN],cnt,u,w,n,m,v,s;\nstruct Edge {\n    int next,to,dis;\n} edge[MAXN];\npriority_queue&lt;pair&lt;int,int&gt;&gt; pq;\nvoid add(int from,int to,int dis) {\n    edge[++cnt].next=h[from];\n    edge[cnt].to=to;\n    edge[cnt].dis=dis;\n    h[from]=cnt;\n}\n\nvoid djstr(int rt) {\n    pq.push(make_pair(0,rt));\n    int u=rt;   //\u5148\u4ece\u8d77\u70b9\u5f00\u59cb\u67e5\n    for(int i=1; i&lt;=n; i++)dis[i]=2147483647;   //\u521d\u59cb\u5316\u8fb9\u6743\n\n    dis[rt]=0;\n    //for(int i=1; i&lt;=n; i++)\n    while(pq.size()) {  //\u641c\u5b8c\u5168\u56fe\n\n        u=pq.top().second;\n\n        pq.pop();\n        if(vis[u])continue;\n        vis[u]=1;\n        for(int j=h[u]; j; j=edge[j].next) {\n            if(!vis[edge[j].to]&amp;&amp;dis[u]+edge[j].dis&lt;dis[edge[j].to]){\n                dis[edge[j].to]=dis[u]/\u66f4\u65b0\n                pq.push(make_pair(-dis[edge[j].to],edge[j].to));\n            }\n\n        }\n\n        /*int min=2147483647;\n        for(int j=1; j&lt;=n; j++) {   //\u91cd\u65b0\u67e5\u627e\u5230i\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\n            if(!vis[j]&amp;&amp;dis[j]&lt;min) {\n                min=dis[j];\n                u=j;\n            }\n        }*/\n    }\n}\nsigned main() {\n\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;\n\n    for(int i=1; i&lt;=m; i++) {\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        if(u!=v)add(u,v,w);\n    }\n    djstr(s);\n    for(int i=1; i&lt;=n; i++) {\n        cout&lt;&lt;dis[i]&lt;&lt;' ';\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Dijkstra/#_1","title":"\u5176\u4ed6\u95ee\u9898","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Floyd/","title":"Floyd","text":"<p>\u5e73\u9762\u4e0a\u6709n\u4e2a\u70b9\uff08n&lt;=100\uff09\uff0c\u6bcf\u4e2a\u70b9\u7684\u5750\u6807\u5747\u5728-10000~10000\u4e4b\u95f4\u3002\u5176\u4e2d\u7684\u4e00\u4e9b\u70b9\u4e4b\u95f4\u6709\u8fde\u7ebf\u3002</p> <p>\u82e5\u6709\u8fde\u7ebf\uff0c\u5219\u8868\u793a\u53ef\u4ece\u4e00\u4e2a\u70b9\u5230\u8fbe\u53e6\u4e00\u4e2a\u70b9\uff0c\u5373\u4e24\u70b9\u95f4\u6709\u901a\u8def\uff0c\u901a\u8def\u7684\u8ddd\u79bb\u4e3a\u4e24\u70b9\u95f4\u7684\u76f4\u7ebf\u8ddd\u79bb\u3002\u73b0\u5728\u7684\u4efb\u52a1\u662f\u627e\u51fa\u4ece\u4e00\u70b9\u5230\u53e6\u4e00\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nconst int inf=1e9;\nusing namespace std;\nint x[105],y[105],n,m,s,t,a,b;\ndouble diss[105][105];\ndouble dis(int i,int j){\n    return sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));\n}\nvoid flyd(){\n    for(int k=1;k&lt;=n;k++)\n        for(int i=1;i&lt;=n;i++)\n            for(int j=1;j&lt;=n;j++)\n                diss[i][j]=min(diss[i][j],diss[i][k]+diss[k][j]);\n}\nint main() {\n    cin&gt;&gt;n;\n    for(int k=1;k&lt;=n;k++)\n        for(int i=1;i&lt;=n;i++)\n            diss[k][i]=inf;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;x[i]&gt;&gt;y[i];\n    }\n\n    cin&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        cin&gt;&gt;a&gt;&gt;b;\n        diss[a][b]=diss[b][a]=dis(a,b);\n    }\n    cin&gt;&gt;s&gt;&gt;t;\n\n\n    flyd();\n    printf(\"%.2lf\",diss[s][t]);\n    return 0;\n}\n</code></pre> <p>luogu \u6a21\u677f</p> <pre><code>signed main(){\n\n    memset(f,0x3f3f,sizeof f);\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        int u,v,w;\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        f[u][v]=f[v][u]=w;\n    }\n\n    for(int k=1;k&lt;=n;k++){\n        for(int i=1;i&lt;=n;i++){\n            for(int j=1;j&lt;=n;j++){\n                if(i==j)f[i][j]=0;\n                f[j][i]=f[i][j]=min(f[i][j],f[i][k]+f[k][j]);\n            }\n        }\n    }\n\n    for(int i=1;i&lt;=n;i++){\n\n        for(int j=1;j&lt;=n;j++)cout&lt;&lt;f[i][j]&lt;&lt;' ';\n        cout&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Floyd/#_1","title":"\u5224\u6700\u5c0f\u73af","text":"<p>\u65e0\u5411\u56fe\u7684\u6700\u5c0f\u73af\u95ee\u9898 - \u6d1b\u8c37</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Floyd/#_2","title":"\u4f20\u9012\u95ed\u5305","text":"<p>\u7ed9\u5b9a\u4e00\u5f20\u70b9\u6570\u4e3a \\(n\\) \u7684\u6709\u5411\u56fe\u7684\u90bb\u63a5\u77e9\u9635\uff0c\u56fe\u4e2d\u4e0d\u5305\u542b\u81ea\u73af\uff0c\u6c42\u8be5\u6709\u5411\u56fe\u7684\u4f20\u9012\u95ed\u5305\u3002</p> <p>\u4e00\u5f20\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u5b9a\u4e49\u4e3a\u4e00\u4e2a \\(n\\times n\\) \u7684\u77e9\u9635 \\(A=(a_{ij})_{n\\times n}\\)\uff0c\u5176\u4e2d</p> <p>\\(a_{ij}=\\left\\{ \\begin{aligned} 1,i\\ \u5230\\ j\\ \u5b58\u5728\u76f4\u63a5\u8fde\u8fb9\\\\ 0,i\\ \u5230\\ j\\ \u6ca1\u6709\u76f4\u63a5\u8fde\u8fb9 \\\\ \\end{aligned} \\right.\\)</p> <p>\u4e00\u5f20\u56fe\u7684\u4f20\u9012\u95ed\u5305\u5b9a\u4e49\u4e3a\u4e00\u4e2a \\(n\\times n\\) \u7684\u77e9\u9635 \\(B=(b_{ij})_{n\\times n}\\)\uff0c\u5176\u4e2d</p> <p>$ b_{ij}=\\left{\\begin{aligned}1,i \u53ef\u4ee5\u76f4\u63a5\u6216\u95f4\u63a5\u5230\u8fbe j\\0,i \u65e0\u6cd5\u76f4\u63a5\u6216\u95f4\u63a5\u5230\u8fbe j\\\\end{aligned}\\right.$</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Floyd/#_3","title":"\u5927\u610f","text":"<p>\u5224\u65ad\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u8fde\u901a\u6027</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Floyd/#_4","title":"\u4ee3\u7801","text":"<pre><code>signed main(){\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n\n        for(int j=1;j&lt;=n;j++)cin&gt;&gt;f[i][j];\n    }\n    for(int k=1;k&lt;=n;k++){\n        for(int i=1;i&lt;=n;i++){\n            for(int j=1;j&lt;=n;j++){\n                f[i][j]|=f[i][k]&amp;f[k][j];\n              //\u4e5f\u53ef\u4ee5\u5199f[j][i]=f[i][j]|=f[i][k]&amp;f[k][j];\n              //\u4f46\u662f\u4e0d\u80fd\u5199f[j][i]|=f[i][k]&amp;f[k][j];\n            }\n        }\n    }\n\n    for(int i=1;i&lt;=n;i++){\n\n        for(int j=1;j&lt;=n;j++)cout&lt;&lt;f[i][j]&lt;&lt;' ';\n        cout&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Floyd/#kfloyd","title":"k\u8deffloyd\u77e9\u9635\u4e58\u6cd5\u4f18\u5316","text":"<p>\u7ed9\u5b9a\u4e00\u5f20 \\(T\\) \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u6c42\u4ece \\(S\\) \u5230 \\(E\\) \u7ecf\u8fc7 \\(N\\) \u6761\u8fb9\u7684\u6700\u77ed\u8def\u957f\u5ea6\u3002</p> <p>\u601d\u8def</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u77e9\u9635\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u77e9\u9635\u4ee3\u8868\u6070\u597d\u7ecf\u8fc7x\u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u53e6\u5916\u4e00\u4e2a\u77e9\u9635\u4ee3\u8868\u6070\u597d\u7ecf\u8fc7y\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\u90a3\u4e48\u5c06\u8fd9\u4e24\u4e2a\u77e9\u9635\u5408\u5e76\u5c31\u4ee3\u8868\u6070\u597d\u7ecf\u8fc7x+y\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\u600e\u4e48\u5408\u5e76\u5462\uff1f\u7ed3\u5408\u4e0b\u9762\u8fd9\u4e2a\u5f0f\u5b50\u7406\u89e3\u4e00\u4e0b\uff1a</p> <p>c[i][j]=min(c[i][j],a[i][k]+b[k][j]);</p> <p>Std</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include &lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N = 5e2 + 5;\nconst int M = 1e5;\nconst int MOD = 1e9+7;\nconst int INF = 1e9+5;\n\nint n, t,s,e,m,vis[M],tot;\n\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\n\nstruct node {\n    int a[N][N];\n    node() {\n        memset(a,0x3f3f,sizeof a); //\u4e00\u5b9a\u8981\u5199\uff01\n    }\n\n    node operator *(const node &amp;x)const{     //\u91cd\u8f7d\u8fd0\u7b97\u7b26\n        node z;\n        for(int k=1;k&lt;=tot;++k)\n            for(int i=1;i&lt;=tot;++i)\n                for(int j=1;j&lt;=tot;++j)\n                    z.a[i][j]=min(z.a[i][j],a[i][k]+x.a[k][j]);\n        return z;\n    }\n}dis,ans;\n\nsigned main() {\n//    freopen(\"tree.in\", \"r\", stdin);\n//    freopen(\"tree.out\", \"w\", stdout);\n    cerr&lt;&lt;\"OO\";\n    n=rd;t=rd;s=rd;e=rd;\n\n    for(int i=1;i&lt;=t;i++){\n        int w=rd,u=rd,v=rd;\n        if(!vis[u])vis[u]=++tot;\n        if(!vis[v])vis[v]=++tot;\n        dis.a[vis[u]][vis[v]]=dis.a[vis[v]][vis[u]]=w;\n    }\n\n    cerr&lt;&lt;\"OK\";\n\n    n--;\n    ans=dis;\n    while(n){\n        if(n&amp;1)ans=ans*dis;\n        dis=dis*dis;\n        n&gt;&gt;=1;\n    }\n\n    cout&lt;&lt;ans.a[vis[s]][vis[e]];\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Floyd/#dijkstra","title":"\u6ce8\u610f\u4f2a\u5168\u6e90\u6700\u77ed\u8def\uff08\u53ef\u7528dijkstra\u8dd1\u82e5\u5e72\u6b21\uff09","text":"<p>www.luogu.com.cn</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Johnson%2B%E5%85%A8%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF/","title":"Johnson \u5168\u6e90\u6700\u77ed\u8def","text":"<p>\u5927\u7ea6\\(O(V^2\\log V)\\)\uff0c\u53ef\u4ee5\u8dd11e3\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Johnson%2B%E5%85%A8%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF/#_1","title":"\u7b97\u6cd5\u63cf\u8ff0","text":"<p>Johnson\u7b97\u6cd5\u7ed3\u5408\u4e86Bellman-Ford\u7b97\u6cd5\u548cDijkstra\u7b97\u6cd5\u7684\u4f18\u70b9\uff0c\u7528\u4e8e\u8ba1\u7b97\u542b\u6709\u8d1f\u6743\u8fb9\u7684\u56fe\u4e2d\u6240\u6709\u9876\u70b9\u5bf9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3002\u7b97\u6cd5\u5206\u4e3a\u4e09\u4e2a\u4e3b\u8981\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u4f7f\u7528Bellman-Ford\u7b97\u6cd5\u627e\u5230\u4e00\u4e2a\u9876\u70b9\uff0c\u91cd\u65b0\u8c03\u6574\u56fe\u4e2d\u6240\u6709\u8fb9\u7684\u6743\u91cd\uff0c\u4f7f\u5f97\u6240\u6709\u8fb9\u7684\u6743\u91cd\u90fd\u53d8\u4e3a\u975e\u8d1f\u3002</p> </li> <li> <p>\u5bf9\u6bcf\u4e2a\u9876\u70b9\u4f7f\u7528Dijkstra\u7b97\u6cd5\u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u3002</p> </li> <li> <p>\u4f7f\u7528\u4e4b\u524d\u8ba1\u7b97\u7684\u6743\u91cd\u8c03\u6574\u7ed3\u679c\uff0c\u6062\u590d\u539f\u59cb\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002</p> </li> </ol>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Johnson%2B%E5%85%A8%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF/#_2","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li> <p>Johnson\u7b97\u6cd5\uff1a\\(O(V^2 log V + VE)\\)\uff0c\u5bf9\u4e8e\u7a00\u758f\u56fe\uff0c\u901a\u5e38\u6bd4Floyd-Warshall\u7b97\u6cd5\u66f4\u9ad8\u6548\uff0c\u5c24\u5176\u662f\u5f53E\u7684\u6570\u91cf\u8fdc\u5c0f\u4e8e\\(V^2\\)\u65f6\u3002</p> </li> <li> <p>Floyd-Warshall\u7b97\u6cd5\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u56fa\u5b9a\u4e3a\\(O(V^3)\\)\uff0c\u4e0e\u56fe\u7684\u7a00\u758f\u6027\u65e0\u5173\u3002</p> </li> </ul>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/Johnson%2B%E5%85%A8%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF/#1","title":"\u4f8b\u9898 #1","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b \\(n\\) \u4e2a\u7ed3\u70b9\u548c \\(m\\) \u6761\u5e26\u6743\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u6c42\u6240\u6709\u70b9\u5bf9\u95f4\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u4e00\u6761\u8def\u5f84\u7684\u957f\u5ea6\u5b9a\u4e49\u4e3a\u8fd9\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8fb9\u7684\u6743\u503c\u548c\u3002</p> <p>\u6ce8\u610f\uff1a</p> <ol> <li> <p>\u8fb9\u6743**\u53ef\u80fd**\u4e3a\u8d1f\uff0c\u4e14\u56fe\u4e2d**\u53ef\u80fd**\u5b58\u5728\u91cd\u8fb9\u548c\u81ea\u73af\uff1b</p> </li> <li> <p>\u90e8\u5206\u6570\u636e\u5361 \\(n\\) \u8f6e SPFA \u7b97\u6cd5\u3002</p> </li> </ol> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\leq n\\leq 3\\times 10^3,\\ \\ 1\\leq m\\leq 6\\times 10^3,\\ \\ 1\\leq u,v\\leq n,\\ \\ -3\\times 10^5\\leq w\\leq 3\\times 10^5\\)\u3002</p> <p>\u5bf9\u4e8e \\(20\\%\\) \u7684\u6570\u636e\uff0c\\(1\\leq n\\leq 100\\)\uff0c\u4e0d\u5b58\u5728\u8d1f\u73af\uff08\u53ef\u7528\u4e8e\u9a8c\u8bc1 Floyd \u6b63\u786e\u6027\uff09</p> <p>\u5bf9\u4e8e\u53e6\u5916 \\(20\\%\\) \u7684\u6570\u636e\uff0c\\(w\\ge 0\\)\uff08\u53ef\u7528\u4e8e\u9a8c\u8bc1 Dijkstra \u6b63\u786e\u6027\uff09</p> <p>upd. \u6dfb\u52a0\u4e00\u7ec4 Hack \u6570\u636e\uff1a\u9488\u5bf9 SPFA \u7684 SLF \u4f18\u5316</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int MAXN=3e3+5,INF=1000000000;\n//spfa\u5b9a\u4e49\u90e8\u5206\nint dis[MAXN],cntt[MAXN];\n//djstr\u5b9a\u4e49\u90e8\u5206\nint ddis[MAXN];\n\nint n,vis[MAXN],cnt,u,w,m,v;    //\u6ce8\u610f\uff1acnt-\u8fb9\u7684\u6570\u91cf\uff1bcntt[]-\u8bb0\u5f55\u73b0\u5728\u8fd9\u6761\u8def\u8d70\u8fc7\u4e86\u591a\u5c11\u8282\u70b9\n//\u90bb\u63a5\u8868\u5b9a\u4e49\u90e8\u5206\nint h[MAXN];    //head\nstruct edge {\n    int from,next,to,dis;\n} edge[MAXN&lt;&lt;2];\n\nvoid add(int from,int to,int dis) { //\u90bb\u63a5\u8868\n\n    edge[++cnt].next=h[from];\n    edge[cnt].from=from;\n    edge[cnt].to=to;\n    edge[cnt].dis=dis;\n    h[from]=cnt;\n}\n\n\n//\u6c42\u8ddd\u79bb\nvoid djstr(int rt) {\n    priority_queue&lt;pair&lt;int,int&gt;&gt; pq;\n    for(int i=1; i&lt;=n; i++)ddis[i]=INF; //\u521d\u59cb\u5316\u8fb9\u6743\n    memset(vis,0,sizeof(vis));  //\u8bb0\u5f97\u521d\u59cb\u5316\uff0c\u56e0\u4e3adjstl\u8981\u5faa\u73afn\u6b21\n    pq.push(make_pair(0,rt));   //\u5148\u4ece\u8d77\u70b9\u5f00\u59cb\n    ddis[rt]=0;\n\n    while(pq.size()) {  //\u641c\u5b8c\u5168\u56fe\n        u=pq.top().second;  //\u53d6\u70b9,\u5e76\u4e14\u662f\u5f53\u524d\u961f\u5217\u91cc\u6700\u5c0f\u7684\n        pq.pop();   //\u8bb0\u5f97\u5f39\u51fa\u54e6!\n        if(vis[u])\n            continue;\n        vis[u]=1;\n\n        for(int j=h[u]; j; j=edge[j].next) {\n            if(ddis[u]+edge[j].dis&lt;ddis[edge[j].to]) {\n                ddis[edge[j].to]=ddis[u]/\u66f4\u65b0\n                if(!vis[edge[j].to])\n                    pq.push(make_pair(-ddis[edge[j].to],edge[j].to));   //\u9ed8\u8ba4\u662f\u5927\u6839\u5806,\u4e8e\u662f\u8ddd\u79bb\u8981\u5b58\u8d1f\u6570,\u8d77\u5230\u5c0f\u6839\u5806\u7684\u4f5c\u7528.\u8ddd\u79bb\u8981\u5b58\u5728pair\u7684first\n            }\n        }\n    }\n}\n\n\n//SPFA\u7528\u6765\u5224\u65ad\u8d1f\u73af\uff01\uff01\uff01\n\nbool spfa() {\n\n    queue &lt;int&gt; q;  //\u961f\u5217\u5b58\u70b9\n    for(int i=1; i&lt;=n; i++)dis[i]=INF;  //\u8bb0\u5f97\u521d\u59cb\u5316\n    q.push(0);  //\u9996\u5148\u628a\u8d77\u70b9\u653e\u8fdb\u53bb\n    dis[0]=0;\n    vis[0]=1;\n\n    while(q.size()) {   //\u5faa\u73af,\u4e00\u76f4\u5230\u6ca1\u6709\u70b9\u53ef\u4ee5\u8bbf\u95ee\n        int u=q.front();\n        q.pop();\n        vis[u]=0;\n        for(int i=h[u]; i; i=edge[i].next) {    //\u904d\u5386\u51fa\u8fb9\n            int nxt=edge[i].to;\n            if(dis[nxt]&lt;=dis[u]/\u5982\u679c\u539f\u6765\u7684\u66f4\u4f18,\u8df3\u8fc7\n            dis[nxt]=dis[u]/\u66f4\u65b0\u8ddd\u79bb\n            if(!vis[nxt]) {     //\u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u8fc7\n                q.push(nxt);\n                vis[nxt]=1;\n\n                if(+/ n+1\u7ed3\u70b9\uff0c\u968f\u4fbf\u66f4\u65b0\u73b0\u5728\u8fd9\u6761\u8def\u8d70\u8fc7\u4e86\u591a\u5c11\u8282\u70b9\uff0c\u5982\u679c\u5927\u4e8e\u603b\u8282\u70b9\u6570\uff0c\u5219\u6709\u8d1f\u73af\n                    return 0;\n            }\n        }\n    }\n    return 1;\n}\nsigned main() {\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++)dis[i]=INF;\n    for(int i=1; i&lt;=m; i++) {   //\u90bb\u63a5\u8868\u5efa\u8fb9\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        add(u,v,w);\n    }\n    for(int i=1; i&lt;=n; i++) //\u4e0d\u7406\u89e3\uff1f\uff1f\uff1f\n        add(0,i,0);\n    if(!spfa()) {   //\u5b58\u5728\u8d1f\u73af\n        cout&lt;&lt;-1;\n        return 0;\n    }\n    //\u4e0d\u5b58\u5728\u8d1f\u73af\n    for(int i=1; i&lt;cnt; i++)\n        edge[i].dis+=dis[edge[i].from]-dis[edge[i].to];\n    for(int i=1; i&lt;=n; i++) {   //\u6bcf\u4e2a\u70b9\u5f00\u59cb\u4e00\u904ddjstr\n        djstr(i);\n        int ans=0;\n        for(int j=1; j&lt;=n; j++) {\n            if(ddis[j]==INF)\n                ans+=j*INF;     //i\u5230\u4e0d\u4e86j\n            else\n                ans+=j*(ddis[j]-(dis[i]-dis[j]));   //\u6309\u9898\u76ee\u8981\u6c42\u6c42\u548c\n        }\n        cout&lt;&lt;ans&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/K%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95/","title":"K\u77ed\u8def\u7b97\u6cd5","text":"<p>\u4f5c\u4e3a\u4e2d\u7b49\u9636\u6bb5\u7684OIer\uff0c\u6211\u4eec\u5148\u8981\u5b66\u4e60\u5982\u4f55\u4f7f\u7528A*\u6765\u89e3\u51b3\u6807\u51c6\u7684K\u77ed\u8def\u95ee\u9898\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/K%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95/#_1","title":"\u57fa\u672c\u601d\u8def","text":"<ol> <li> <p>\u4fee\u6539\u542f\u53d1\u5f0f\u51fd\u6570\uff1a\u4f20\u7edf\u7684A*\u7b97\u6cd5\u4f7f\u7528\u542f\u53d1\u5f0f\u51fd\u6570\u6765\u4f30\u7b97\u4ece\u5f53\u524d\u70b9\u5230\u76ee\u6807\u70b9\u7684\u6210\u672c\u3002\u4e3a\u4e86\u627e\u5230K\u77ed\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u542f\u53d1\u5f0f\u51fd\u6570\uff0c\u4f7f\u5176\u4e0d\u4ec5\u8003\u8651\u5230\u8fbe\u76ee\u6807\u70b9\u7684\u6210\u672c\uff0c\u8fd8\u8003\u8651\u8def\u5f84\u7684\u591a\u6837\u6027\u3002</p> </li> <li> <p>\u91cd\u590d\u641c\u7d22\uff1a\u5728\u627e\u5230\u4e00\u6761\u6700\u77ed\u8def\u5f84\u540e\uff0c\u4fee\u6539\u56fe\u4e2d\u7684\u6743\u91cd\u6216\u542f\u53d1\u5f0f\u51fd\u6570\uff0c\u7136\u540e\u518d\u6b21\u8fd0\u884cA*\u7b97\u6cd5\uff0c\u5bfb\u627e\u4e0b\u4e00\u6761\u6700\u77ed\u8def\u5f84\u3002</p> </li> <li> <p>\u8def\u5f84\u53bb\u91cd\uff1a\u786e\u4fdd\u627e\u5230\u7684\u6bcf\u6761\u8def\u5f84\u90fd\u662f\u72ec\u7279\u7684\uff0c\u907f\u514d\u91cd\u590d\u76f8\u540c\u7684\u8def\u5f84\u3002</p> </li> </ol>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/K%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95/#1","title":"\u4f8b\u9898 #1","text":"<p>\u505a\u6cd5</p> <p></p> <p>\u6ce8\uff1a\u4e09\u5143\u7ec4\u4e3a\uff08\u5f53\u524d\u4ee3\u4ef7+\u4f30\u4ef7\uff0c\u5f53\u524d\u70b9\u7f16\u53f7\uff0c\u5f53\u524d\u70b9\u5230\u8d77\u70b9\u7684\u8ddd\u79bb\uff09</p> <p>\u90a3\u4e48\u5728\u8fd9\u9053\u9898\u76ee\u4e2d\uff0c\u4f30\u4ef7\u6709\u4ec0\u4e48\u4f5c\u7528\u5462\uff1f</p> <p>\u4f20\u7edf\u7684\u6700\u77ed\u8def\uff0c\u6211\u4eec\u53ea\u662f\u4e0d\u65ad\u7528\u6700\u5c0f\u503c\u53bb\u66f4\u65b0\u5230\u8fbe\u7ec8\u70b9T\u7684\u6700\u77ed\u8def\uff0c\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u5f53\u524d\u8fd9\u6761\u8def\u662f\u70b9\u51fb\u77ed\u7684\u3002\u5982\u679c\u6211\u4eec\u7528A*\u7b97\u6cd5\uff0c\u6211\u4eec\u5c31\u80fd\u63a7\u5236bfs\u5148\u8d70\u7b2c\u4e00\u77ed\u7684\uff0c\u518d\u8d70\u7b2c\u4e8c\u77ed\u7684...\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u7b2cK\u77ed\u7684\u4e86\u3002</p> <p>\u6ce8\u610f\u8fd9\u4e9b</p> <p></p> <p>\u6572\u4e00\u904d\u4ee3\u7801</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code by Ntsc .\n       . Love by Liye .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint h[N],rh[N],to[M],w[M],ne[M],tot;\nvoid add(int h[],int a,int b,int c){\n    to[++tot]=b,w[tot]=c,ne[tot]=h[a],h[a]=tot;\n}\n\nint n,m,s,t,k;\nint f[N],vis[N],cnt[N];\nstruct node{\n    int s,v,d;\n    bool operator &lt;(const node &amp;x)const{\n        return s&gt;x.s;\n    }\n};\n\nvoid djstr(){\n    memset(f,0x3f,sizeof f);\n    priority_queue&lt;pair&lt;int,int&gt;&gt; q;\n    q.push(make_pair(0,t));\n    while(q.size()){\n        pair&lt;int,int&gt; tmp=q.top();\n        q.pop();\n        int u=tmp.second;\n        if(vis[u])continue;\n        vis[u]=1;\n        for(int i=rh[u];i;i=ne[i]){\n            int v=to[i];\n            if(f[v]&gt;f[u]+w[i]){\n                f[v]=f[u]/f[v]\u662f\u70b9v\u5230t\u7684\u5f53\u524d\u8ddd\u79bb(\u5f53\u524d\u7684djstr\u662f\u9884\u5904\u7406\u4f30\u4ef7\u51fd\u6570\u7684,\u628at\u5f53\u4f5c\u8d77\u70b9)\uff0c\u4e5f\u662f\u5176\u4f30\u4ef7\u51fd\u6570 \n                q.push(make_pair(-f[v],v));\n            }\n        }\n    }\n}\n\nint ax(){\n    priority_queue&lt;node&gt; pq;\n    node a={f[s],s,0};\n    pq.push(a);\n    while(pq.size()){\n        node tmp=pq.top();pq.pop();\n        int u=tmp.v,d=tmp.d;\n        cnt[u]++;\n        if(cnt[t]==k)return d;\n        for(int i=h[u];i;i=ne[i]){\n            int v=to[i];\n            if(cnt[v]&lt;k){\n                node a={d+w[i]+f[v],v,d+w[i]};\n                pq.push(a);\n            }\n        }\n    }\n    return -1;\n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        int a,b,c;\n        cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;\n        add(h,a,b,c);add(rh,b,a,c);\n    }\n    cin&gt;&gt;s&gt;&gt;t&gt;&gt;k;\n    if(s==t)k++;//\u5982\u679cs,t\u91cd\u5408,\u90a3\u4e480\u662f\u6700\u77ed\u7684,A*\u4f1a\u7edf\u8ba1\u8fd9\u4e00\u6761,\u4f46\u9898\u76ee\u8981\u6c42\u4e0d\u80fd\u7b97\u8fd9\u6761\u8def,\u56e0\u6b64\u5b9e\u9645\u4e0a\u5e94\u8be5\u8981\u6c42\u7b2cK+1\u6761\u8def \n    djstr();\n    cout&lt;&lt;ax()&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/","title":"SPFA","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/#_1","title":"\u7b97\u6cd5\u539f\u7406","text":"<p>SPFA\u7b97\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5982\u679c\u4e00\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u90a3\u4e48\u4e0e\u5b83\u76f8\u90bb\u7684\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u53ef\u80fd\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u5f53\u4e00\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u6539\u53d8\u540e\uff0c\u624d\u9700\u8981\u8c03\u6574\u5b83\u7684\u76f8\u90bb\u9876\u70b9\u3002</p> <p>\u7b97\u6cd5\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u521d\u59cb\u5316\uff1a\u9009\u62e9\u4e00\u4e2a\u6e90\u70b9\uff0c\u5c06\u5176\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u8bbe\u7f6e\u4e3a0\uff0c\u5176\u4f59\u6240\u6709\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u8bbe\u7f6e\u4e3a\u65e0\u7a77\u5927\u3002\u5c06\u6e90\u70b9\u52a0\u5165\u4e00\u4e2a\u961f\u5217\u4e2d\u3002</p> </li> <li> <p>\u5faa\u73af\uff1a\u53ea\u8981\u961f\u5217\u975e\u7a7a\uff0c\u5c31\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a a. \u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u4e00\u4e2a\u9876\u70b9u\u3002 b. \u8003\u8651\u6240\u6709\u4eceu\u51fa\u53d1\u7684\u8fb9(u, v)\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u5982\u679cv\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u53ef\u4ee5\u901a\u8fc7u\u5f97\u5230\u6539\u8fdb\uff08\u5373v\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u5927\u4e8eu\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u52a0\u4e0a\u8fb9(u, v)\u7684\u6743\u91cd\uff09\uff0c\u5219\u66f4\u65b0v\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\uff0c\u5e76\u5c06v\u52a0\u5165\u961f\u5217\u3002</p> </li> <li> <p>\u7ed3\u675f\uff1a\u5f53\u961f\u5217\u4e3a\u7a7a\u65f6\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002\u6b64\u65f6\uff0c\u5982\u679c\u56fe\u4e2d\u4e0d\u5b58\u5728\u8d1f\u6743\u91cd\u73af\uff0c\u6240\u6709\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4f30\u8ba1\u503c\u5c31\u662f\u5b83\u4eec\u5230\u6e90\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002</p> </li> </ol>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/#_2","title":"\u7b97\u6cd5\u7279\u70b9","text":"<ul> <li> <p>\u6548\u7387\uff1aSPFA\u7b97\u6cd5\u901a\u5e38\u6bd4Bellman-Ford\u7b97\u6cd5\u5feb\uff0c\u56e0\u4e3a\u5b83\u907f\u514d\u4e86\u5bf9\u6240\u6709\u8fb9\u8fdb\u884c\u4e0d\u5fc5\u8981\u7684\u677e\u5f1b\u64cd\u4f5c\u3002</p> </li> <li> <p>\u9002\u5e94\u6027\uff1aSPFA\u7b97\u6cd5\u80fd\u591f\u5904\u7406\u5e26\u6709\u8d1f\u6743\u8fb9\u7684\u56fe\uff0c\u8fd9\u662fDijkstra\u7b97\u6cd5\u6240\u4e0d\u80fd\u76f4\u63a5\u505a\u5230\u7684\u3002</p> </li> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aSPFA\u7b97\u6cd5\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u88ab\u8ba4\u4e3a\u662fO(kE)\uff0c\u5176\u4e2dk\u662f\u4e00\u4e2a\u5c0f\u4e8e2\u7684\u5e38\u6570\uff0cE\u662f\u56fe\u4e2d\u8fb9\u7684\u6570\u91cf\u3002\u4f46\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u80fd\u8fbe\u5230O(VE)\uff0c\u5176\u4e2dV\u662f\u9876\u70b9\u7684\u6570\u91cf\u3002</p> </li> </ul> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\nusing namespace std;\nconst int MAXN=1e4+5;\nint vis[MAXN],h[50*MAXN];\nint dis[MAXN],cnt,u,w,n,m,v,s;\nstruct Edge {\n    int next,to,dis;\n} edge[MAXN*50];\nvoid add(int from,int to,int dis) {\n    edge[++cnt].next=h[from];\n    edge[cnt].to=to;\n    edge[cnt].dis=dis;\n    h[from]=cnt;\n}\n\nqueue &lt;int&gt; q;\n\nvoid spfa(int rt) {\n    dis[rt]=0;\n    vis[rt]=1;\n    q.push(rt);\n    while(q.size()) {   //\u7c7b\u4f3c\u5e7f\u641c\n        int u=q.front();\n        q.pop();\n        vis[u]=0;\n        for(int i=h[u]; i; i=edge[i].next) {\n            int nxt=edge[i].to;\n            if(dis[nxt]&lt;=dis[u]+edge[i].dis)continue;\n            dis[nxt]=dis[u]+edge[i].dis;\n            if(!vis[nxt]) {\n                vis[nxt]=1;\n                q.push(nxt);\n            }\n        }\n    }\n\n}\nsigned main() {\n//  freopen(\"P3371_2.in\",\"r\",stdin);\n//  freopen(\"test.txt\",\"w\",stdout);\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;\n\n    for(int i=1; i&lt;=n; i++)dis[i]=2147483647;\n//  memset(dis,0x3f,sizeof(dis));\n    //cout&lt;&lt;dis[1]&lt;&lt;endl;\n    for(int i=1; i&lt;=m; i++) {\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        add(u,v,w);\n    }\n    spfa(s);\n    for(int i=1; i&lt;=n; i++) {\n        cout&lt;&lt;dis[i]&lt;&lt;' ';\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/#dijkstraspfa","title":"\u5806\u4f18\u5316Dijkstra\u548cSPFA\u7684\u533a\u522b\u548c\u4f18\u7f3a\u70b9","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/#dijkstra","title":"\u5806\u4f18\u5316Dijkstra\u7b97\u6cd5","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/#_3","title":"\u7b97\u6cd5\u63cf\u8ff0","text":"<p>\u5806\u4f18\u5316Dijkstra\u7b97\u6cd5\u662f\u5728Dijkstra\u7b97\u6cd5\u7684\u57fa\u7840\u4e0a\uff0c\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff08\u901a\u5e38\u662f\u6700\u5c0f\u5806\uff09\u6765\u4f18\u5316\u9009\u70b9\u7684\u8fc7\u7a0b\uff0c\u4ece\u800c\u5c06Dijkstra\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4eceO(V^2)\u964d\u4f4e\u5230O((V+E)logV)\uff0c\u5176\u4e2dV\u662f\u9876\u70b9\u6570\uff0cE\u662f\u8fb9\u6570\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/#_4","title":"\u4f18\u7f3a\u70b9","text":"<ul> <li> <p>\u4f18\u70b9\uff1a</p> <ul> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\uff0c\u5c24\u5176\u662f\u5f53\u56fe\u7684\u8fb9\u6bd4\u8f83\u7a20\u5bc6\u65f6\u3002</p> </li> <li> <p>\u7b97\u6cd5\u7a33\u5b9a\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u5728\u9884\u671f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u8ba1\u7b97\u3002</p> </li> </ul> </li> <li> <p>\u7f3a\u70b9\uff1a</p> <ul> <li> <p>\u9700\u8981\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff0c\u56e0\u6b64\u5728\u7a7a\u95f4\u4e0a\u6bd4\u539f\u59cb\u7684Dijkstra\u7b97\u6cd5\u66f4\u590d\u6742\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u7a00\u758f\u56fe\uff0c\u5806\u4f18\u5316Dijkstra\u7b97\u6cd5\u7684\u4f18\u52bf\u4e0d\u5982SPFA\u660e\u663e\u3002</p> </li> </ul> </li> </ul>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/#spfa_1","title":"SPFA\u7b97\u6cd5","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/#_5","title":"\u7b97\u6cd5\u63cf\u8ff0","text":"<p>SPFA\u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u4e8eBellman-Ford\u7b97\u6cd5\u7684\u4f18\u5316\uff0c\u5b83\u4f7f\u7528\u4e00\u4e2a\u961f\u5217\u6765\u7ef4\u62a4\u5f85\u4f18\u5316\u7684\u8282\u70b9\uff0c\u51cf\u5c11\u4e86\u4e0d\u5fc5\u8981\u7684\u8282\u70b9\u91cd\u590d\u5165\u961f\uff0c\u901a\u5e38\u5728\u7a00\u758f\u56fe\u4e2d\u6bd4Dijkstra\u7b97\u6cd5\u66f4\u5feb\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/#_6","title":"\u4f18\u7f3a\u70b9","text":"<ul> <li> <p>\u4f18\u70b9\uff1a</p> <ul> <li> <p>\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u4f18\u4e8eDijkstra\u7b97\u6cd5\uff0c\u5c24\u5176\u662f\u5728\u7a00\u758f\u56fe\u4e2d\u3002</p> </li> <li> <p>\u5b9e\u73b0\u76f8\u5bf9\u7b80\u5355\uff0c\u4e0d\u9700\u8981\u590d\u6742\u7684\u4f18\u5148\u961f\u5217\u3002</p> </li> <li> <p>\u53ef\u4ee5\u5904\u7406\u5e26\u6709\u8d1f\u6743\u8fb9\u7684\u56fe\uff08\u867d\u7136Dijkstra\u7b97\u6cd5\u4e0d\u80fd\u76f4\u63a5\u5904\u7406\u8d1f\u6743\u8fb9\uff0c\u4f46\u901a\u8fc7\u9002\u5f53\u4fee\u6539\u4e5f\u53ef\u4ee5\u5904\u7406\uff09\u3002</p> </li> </ul> </li> <li> <p>\u7f3a\u70b9\uff1a</p> <ul> <li> <p>\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u56fa\u5b9a\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u4f1a\u9000\u5316\u5230O(VE)\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5f88\u5c11\u9047\u5230\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u67d0\u4e9b\u7279\u5b9a\u56fe\uff0cSPFA\u7b97\u6cd5\u53ef\u80fd\u4f1a\u975e\u5e38\u6162\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u4f1a\u591a\u6b21\u91cd\u590d\u677e\u5f1b\u540c\u4e00\u4e2a\u8282\u70b9\u3002</p> </li> </ul> </li> </ul>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/#_7","title":"\u533a\u522b","text":"<ul> <li> <p>\u6570\u636e\u7ed3\u6784\uff1a\u5806\u4f18\u5316Dijkstra\u7b97\u6cd5\u901a\u5e38\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff0c\u800cSPFA\u7b97\u6cd5\u4f7f\u7528\u666e\u901a\u961f\u5217\u3002</p> </li> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5806\u4f18\u5316Dijkstra\u7b97\u6cd5\u6709\u8f83\u4e3a\u7a33\u5b9a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u800cSPFA\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u56fe\u7684\u7279\u6027\u548c\u5b9e\u73b0\u7ec6\u8282\u3002</p> </li> <li> <p>\u9002\u5e94\u6027\uff1aSPFA\u7b97\u6cd5\u5bf9\u4e8e\u8d1f\u6743\u8fb9\u7684\u56fe\u6709\u66f4\u597d\u7684\u9002\u5e94\u6027\uff0c\u800c\u5806\u4f18\u5316Dijkstra\u7b97\u6cd5\u901a\u5e38\u4e0d\u76f4\u63a5\u652f\u6301\u8d1f\u6743\u8fb9\u3002</p> </li> <li> <p>\u6700\u574f\u60c5\u51b5\u6027\u80fd\uff1aSPFA\u7b97\u6cd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6027\u80fd\u4e0d\u5982\u5806\u4f18\u5316Dijkstra\u7b97\u6cd5\u7a33\u5b9a\u3002</p> </li> </ul> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u9009\u62e9\u54ea\u79cd\u7b97\u6cd5\u8981\u6839\u636e\u5177\u4f53\u95ee\u9898\u3001\u56fe\u7684\u7c7b\u578b\u4ee5\u53ca\u6240\u9700\u7684\u8fd0\u884c\u6548\u7387\u6765\u51b3\u5b9a\u3002\u901a\u5e38\uff0c\u5bf9\u4e8e\u7a20\u5bc6\u56fe\uff0c\u5806\u4f18\u5316Dijkstra\u7b97\u6cd5\u662f\u4e00\u4e2a\u8f83\u597d\u7684\u9009\u62e9\uff0c\u800c\u5bf9\u4e8e\u7a00\u758f\u56fe\uff0cSPFA\u7b97\u6cd5\u53ef\u80fd\u66f4\u6709\u4f18\u52bf\u3002\u7136\u800c\uff0c\u7531\u4e8eSPFA\u7b97\u6cd5\u6027\u80fd\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u6709\u65f6\u4e5f\u4f1a\u4f18\u5148\u8003\u8651\u5806\u4f18\u5316Dijkstra\u7b97\u6cd5\u4ee5\u786e\u4fdd\u7a33\u5b9a\u7684\u8868\u73b0\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/SPFA/#spfa_2","title":"SPFA\u5224\u8d1f\u73af","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u5b9a\u4e00\u4e2a \\(n\\) \u4e2a\u70b9\u7684\u6709\u5411\u56fe\uff0c\u8bf7\u6c42\u51fa\u56fe\u4e2d\u662f\u5426\u5b58\u5728**\u4ece\u9876\u70b9 \\(1\\) \u51fa\u53d1\u80fd\u5230\u8fbe**\u7684\u8d1f\u73af\u3002</p> <p>\u8d1f\u73af\u7684\u5b9a\u4e49\u662f\uff1a\u4e00\u6761\u8fb9\u6743\u4e4b\u548c\u4e3a\u8d1f\u6570\u7684\u56de\u8def\u3002</p> <p>\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5b58\u5728\u8d1f\u73af\u7684\u56fe\uff0c\u4ece\u8d77\u70b9\u5230\u4efb\u610f\u4e00\u4e2a\u70b9\u6700\u77ed\u8ddd\u79bb\u7ecf\u8fc7\u7684\u70b9\u6700\u591a\u53ea\u6709 n \u4e2a</p> <p>\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u7528 cnt[ i ] \u8868\u793a\u4ece\u8d77\u70b9\uff08\u5047\u8bbe\u5c31\u662f 1\uff09\u5230 i \u7684\u6700\u77ed\u8ddd\u79bb\u5305\u542b\u70b9\u7684\u4e2a\u6570\uff0c\u521d\u59cb\u5316 cnt[ 1 ] = 1\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u80fd\u591f\u7528\u70b9 u \u677e\u5f1b\u70b9 v \u65f6\uff0c\u677e\u5f1b\u65f6\u540c\u65f6\u66f4\u65b0 cnt[ v ] = cnt[ u ] + 1\uff0c\u82e5\u53d1\u73b0\u6b64\u65f6 cnt[ v ] &gt; n\uff0c\u90a3\u4e48\u5c31\u5b58\u5728\u8d1f\u73af</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN=2e3+10;\n\nint n,m;\nstruct Edge{\n    int to,w,next;\n}edge[MAXN*3];        \nint head[MAXN],tot;\ninline void Init(){    \n    for(int i=0;i&lt;MAXN*3;i++) edge[i].next=0;\n    for(int i=0;i&lt;MAXN;i++) head[i]=0;\n    tot=0;\n}\ninline void addedge(int u,int v,int w){\n    edge[++tot].to=v;\n    edge[tot].w=w;\n    edge[tot].next=head[u];\n    head[u]=tot;\n}\n\nqueue&lt;int&gt; Q;\nint dis[MAXN],vis[MAXN],cnt[MAXN];\nbool spfa(){\n    memset(dis,0x3f,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    memset(cnt,0,sizeof(cnt));\n    dis[1]=0; vis[1]=true;\n    Q.push(1);\n    while(!Q.empty()){\n        int x=Q.front();\n        Q.pop();\n        vis[x]=false;\n        for(int i=head[x];i;i=edge[i].next){\n            int y=edge[i].to,z=edge[i].w;\n            if(dis[y]&gt;dis[x]+z){\n                dis[y]=dis[x]+z; \n                cnt[y]=cnt[x]+1;  \n                if(cnt[y]&gt;=n) return true;  \n                if(!vis[y]){\n                    Q.push(y);\n                    vis[y]=true;\n                }\n            }\n        }\n    }\n    return false;\n}\nint main(){\n    int T;\n    scanf(\"%d\",&amp;T);\n    while(T--){\n        Init();\n        scanf(\"%d%d\",&amp;n,&amp;m);\n        for(int i=1;i&lt;=m;i++){\n            int u,v,w;\n            scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w);\n            addedge(u,v,w);\n            if(w&gt;=0) addedge(v,u,w);\n        }\n        puts(spfa()?\"YES\":\"NO\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%88%86%E5%B1%82%E5%9B%BE%E6%80%9D%E6%83%B3/","title":"\u5206\u5c42\u56fe\u601d\u60f3","text":"<p>www.luogu.com.cn</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%88%86%E5%B1%82%E5%9B%BE%E6%80%9D%E6%83%B3/#1-csp-j2019","title":"\u4f8b\u9898 #1 [CSP-J2019] \u52a0\u5de5\u96f6\u4ef6","text":"<p>\u601d\u8def</p> <p>\u6211\u4eec\u8be5\u5982\u4f55\u89e3\u51b3\u95ee\u9898\uff1f</p> <p>\u95ee\u9898\uff1aa\u505ak\u9636\u6bb5\u7684\u96f6\u4ef6b\u8981\u4e0d\u8981\u505a\u5462\uff1f</p> <p>\u5176\u5b9e\uff0c\u5b9e\u8d28\u5c31\u662f\u770ba\u5230b\u6709\u6ca1\u6709\u957f\u5ea6\u4e3ak\u7684\u8def\u5f84\u3002</p> <p>\u540c\u65f6\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5982\u679ca\u5230b\u6709\u957f\u5ea6\u4e3ak\u7684\u8def\u5f84\uff0c\u90a3\u4e48a\u5230b\u4e00\u5b9a\u6709\u957f\u5ea6\u4e3ak+2\u7684\u8def\u5f84\uff0c\u4f46\u5e76\u4e0d\u4e00\u5b9a\u6709\u957f\u5ea6\u4e3ak+1\u7684\u8def\u5f84\u3002\uff08\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u6765\u56de\u8d70\u4e00\u6761\u8fb9\uff09</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u5bf9\u6bcf\u4e2a\u70b9\u6c42\u4e00\u904d\u5947\u6570\u8def\u5f84\uff0c\u548c\u5076\u6570\u8def\u5f84\uff08\u8fd9\u91cc\u6c42\u6700\u77ed\u8def\u5c31\u884c\uff09\u3002</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n\nconst int N=2e5+5;\nconst int INF=1e9+5;\nconst int MOD=1e9+7;\nbool f1;\nint dis1[N],dis2[N];\nint l[N],r[N];\nint q,n,m,ans,T,k;\nvector&lt;int&gt;e[N];\nbool f2;\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n    e[b].push_back(a);\n}\npriority_queue&lt;pair&lt;int,int&gt; &gt;pq;\nvoid djstr() {\n    for(int i=1; i&lt;=n; i++)dis1[i]=INF; //\u521d\u59cb\u5316\u8fb9\u6743\n    for(int i=1; i&lt;=n; i++)dis2[i]=INF; //\u521d\u59cb\u5316\u8fb9\u6743\n\n    for(auto v:e[1]){\n        dis1[v]=1;\n        pq.push(make_pair(-1,v));\n    }\n    while(pq.size()) {  //\u641c\u5b8c\u5168\u56fe\n\n        int u=pq.top().second;\n        int w=-pq.top().first;\n\n        pq.pop();\n        // if(vis[u])continue;//\u8bb0\u5f97continue\n        // vis[u]=1;\n        for(int i=0;i&lt;e[u].size();i++){\n            int v=e[u][i];\n            if(w%2){\n                if(dis2[v]&gt;1+w){\n                    dis2[v]=w/\u66f4\u65b0\n                    pq.push(make_pair(-dis2[v],v));\n                }\n            }else{\n                if(dis1[v]&gt;1+w){\n                    dis1[v]=w/\u66f4\u65b0\n                    pq.push(make_pair(-dis1[v],v));\n                }\n            }\n\n        }\n    }\n}\n\nsigned main(){\n\n    n=rd;m=rd;q=rd;\n    for(int i=1;i&lt;=m;i++){\n        int u=rd,v=rd;\n        add(u,v);\n    }\n\n    djstr();\n    for(int i=1;i&lt;=q;i++){\n        int a=rd;l[a]=rd;\n        if(l[a]%2){\n            if(dis1[a]&gt;l[a])cout&lt;&lt;\"No\\n\";\n            else cout&lt;&lt;\"Yes\\n\";\n        }else{\n            if(dis2[a]&gt;l[a])cout&lt;&lt;\"No\\n\";\n            else cout&lt;&lt;\"Yes\\n\";\n        }\n    }\n\n    return 0;\n}\n</code></pre> <p>www.luogu.com.cn</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%88%86%E5%B1%82%E5%9B%BE%E6%80%9D%E6%83%B3/#2-jloi2011","title":"\u4f8b\u9898 #2 [JLOI2011] \u98de\u884c\u8def\u7ebf","text":"<p>\u601d\u8def</p> <p>\u5957\u8def\u9898\uff0c\u5206\u5c42\u56fe\u3002</p> <p>\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff08\u4f7f\u7528 @EternalAlexander \u8fd9\u4f4ddalao\u7684OI Painter\u7ed8\u5236\uff09\uff1a</p> <p></p> <p>\u5404\u5c42\u5185\u90e8\u6b63\u5e38\u8fde\u8fb9\uff0c\u5404\u5c42\u4e4b\u95f4\u4ece\u4e0a\u5230\u4e0b\u8fde\u6743\u503c\u4e3a0\u7684\u8fb9\u3002\u6bcf\u5411\u4e0b\u8dd1\u4e00\u5c42\uff0c\u5c31\u76f8\u5f53\u4e8e\u514d\u8d39\u642d\u4e00\u6b21\u98de\u673a\u3002\u8dd1\u4e00\u904d\u4ece\\(s\\)\u5230\\(t+n\\times k\\)\u7684\u6700\u77ed\u8def\u5373\u53ef\u3002</p> <p>\u5f15\u7528\u81eaSuperJvRuo</p> <p>\u6211\u4eec\u8981\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u5c42\u7684t\uff0c\u56e0\u4e3a\u53ef\u80fd\u6211\u4eec\u7528\u4e0d\u5230k\u6b21\u514d\u8d39\u673a\u4f1a\u3002</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define pii pair&lt;int,int&gt; \n\nconst int N=5e3+5;\nconst int INF=1e9+5;\nconst int MOD=998244353;\nbool f1;\nstruct node{\n    int nxt,dis;\n};\nvector&lt;node&gt;e[N];\npriority_queue&lt;pair&lt;int,int&gt; &gt;pq;\nint n,vis[N],dis[N],m,k,s,t;\nbool f2;\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nvoid add(int a,int b,int c){\n    e[a].push_back({b,c});\n}\n\n\nvoid djstr(int rt) {\n    pq.push(make_pair(0,rt));\n    int u=rt;   //\u5148\u4ece\u8d77\u70b9\u5f00\u59cb\u67e5\n    memset(dis,0x3f3f,sizeof dis);  //\u521d\u59cb\u5316\u8fb9\u6743\n\n    dis[rt]=0;\n\n    while(pq.size()) {  //\u641c\u5b8c\u5168\u56fe\n\n        u=pq.top().second;\n\n        pq.pop();\n        if(vis[u])continue;//\u8bb0\u5f97continue\n        vis[u]=1;\n        for(int i=0;i&lt;e[u].size();i++){\n            int v=e[u][i].nxt,w=e[u][i].dis;\n            if(!vis[v]&amp;&amp;dis[u]+w&lt;dis[v]){\n                dis[v]=dis[u]/\u66f4\u65b0\n                pq.push(make_pair(-dis[v],v));\n            }\n        }\n    }\n}\n\nsigned main(){\n\n    // freopen(\"school.in\", \"r\", stdin);\n    // freopen(\"school.out\", \"w\", stdout);\n\n    n=rd;m=rd;k=rd;\n    s=rd;t=rd;\n    for(int i=1;i&lt;=m;i++){\n        int a=rd,b=rd,c=rd;\n        add(a,b,c);\n        add(b,a,c);\n\n        for(int j=1;j&lt;=k;j++){//\u5efak\u5c42\u56fe\n            add(a+(j-1)*n,b+(j*n),0);\n            add(b+(j-1)*n,a+(j)*n,0);\n            add(a+j*n,b+j*n,c);\n            add(b+j*n,a+j*n,c);\n        }\n    }\n\n    djstr(s);\n    int ans=INF;\n    for(int i=0;i&lt;=k;i++)ans=min(ans,dis[t+i*n]);\n\n    cout&lt;&lt;ans;//dis[t+k*n];\n\n\n    return 0;\n}\n\n/*\n5 3 3\n2 3 4 7 6\n*/\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%88%86%E5%B1%82%E5%9B%BE%E6%80%9D%E6%83%B3/#_2","title":"\u7ec3\u4e60","text":"<p>www.luogu.com.cn</p> <p>www.luogu.com.cn</p> <p></p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%84%E7%A7%8D%E6%9C%80%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95%E7%9A%84Hack%E4%B8%8E%E5%8C%BA%E5%88%AB/","title":"\u5404\u79cd\u6700\u77ed\u8def\u7b97\u6cd5\u7684Hack\u4e0e\u533a\u522b","text":"<p>\u6211\u4eec\u7ed9\u51fa\u4ee5\u4e0b\u9898\u76ee\u6765\u63a2\u8ba8\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%84%E7%A7%8D%E6%9C%80%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95%E7%9A%84Hack%E4%B8%8E%E5%8C%BA%E5%88%AB/#apio2013","title":"[APIO2013] \u51fa\u9898\u4eba","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5f53\u4eca\u4e16\u754c\u4e0a\u5404\u7c7b\u7a0b\u5e8f\u8bbe\u8ba1\u7ade\u8d5b\u5c42\u51fa\u4e0d\u7a77\u3002\u800c\u8bbe\u8ba1\u4e00\u573a\u597d\u6bd4\u8d5b\u7edd\u975e\u6613\u4e8b\uff0c\u6bd4\u5982\u7ed9\u9898\u76ee\u8bbe\u8ba1\u6d4b\u8bd5\u6570\u636e\u5c31\u662f\u4e00\u9879\u6311\u6218\u3002\u4e00\u7ec4\u597d\u7684\u6d4b\u8bd5\u6570\u636e\u9700\u8981\u5bf9\u4e0d\u540c\u7684\u7a0b\u5e8f\u6709\u533a\u5206\u5ea6\uff1a\u6ee1\u8db3\u6240\u6709\u8981\u6c42\u7684\u7a0b\u5e8f\u81ea\u7136\u5e94\u8be5\u5f97\u5230\u6ee1\u5206\uff0c\u800c\u90a3\u4e9b\u8c8c\u4f3c\u6b63\u786e\u7684\u7a0b\u5e8f\u5219\u4f1a\u5728\u67d0\u4e9b\u7279\u6b8a\u6570\u636e\u4e0a\u51fa\u9519\u3002</p> <p>\u5728\u672c\u9898\u4e2d\uff0c\u4f60\u5728\u6bd4\u8d5b\u4e2d\u7684\u89d2\u8272\u53cd\u8f6c\u5566\uff01\u4f5c\u4e3a\u4e00\u540d\u4e45\u7ecf\u767e\u6218\u7684\u7a0b\u5e8f\u5458\uff0c\u4f60\u5c06\u5e2e\u52a9 Happy Programmer Contest \u7684\u547d\u9898\u59d4\u5458\u4f1a\u8bbe\u8ba1\u8fd9\u6b21\u6bd4\u8d5b\u7684\u6d4b\u8bd5\u6570\u636e\u3002\u672c\u6b21\u6bd4\u8d5b\u547d\u9898\u59d4\u5458\u4f1a\u9009\u62e9\u4e86\u4e24\u4e2a\u56fe\u8bba\u95ee\u9898\uff0c\u5206\u4e3a \\(8\\) \u4e2a\u5b50\u4efb\u52a1\u3002\u59d4\u5458\u4f1a\u5199\u4e86\u4e00\u4e9b\u8c8c\u4f3c\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u5b50\u4efb\u52a1\u7684\u4ee3\u7801\u3002\u5728\u7ed9\u4efb\u52a1\u8bbe\u8ba1\u6570\u636e\u7684\u65f6\u5019\uff0c\u547d\u9898\u59d4\u5458\u4f1a\u671f\u671b\u5176\u4e2d\u7684\u4e00\u4e9b\u6e90\u7a0b\u5e8f\u80fd\u591f\u5f97\u5230\u6ee1\u5206\uff0c\u800c\u53e6\u5916\u7684\u4e00\u4e9b\u5219\u53ea\u80fd\u5f97\u5230 \\(0\\) \u5206\u6216\u8005\u5c11\u8bb8\u7684\u90e8\u5206\u5206\u3002\u73b0\u5728\u4f60\u5c06\u4f1a\u83b7\u5f97\u8fd9\u4e9b\u6e90\u7a0b\u5e8f\uff08C, C++, Pascal \u7248\u672c\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u4efb\u52a1\uff0c\u4f60\u9700\u8981\u53bb\u4ea7\u751f\u4e00\u7ec4\u6570\u636e \\(X\\) \u4f7f\u5f97\u5b83\u80fd\u5c06\u8be5\u4efb\u52a1\u7ed9\u5b9a\u7684 \\(2\\) \u79cd\u6e90\u7a0b\u5e8f \\(A\\) \u548c \\(B\\) \u533a\u5206\u5f00\u6765\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u751f\u6210\u7684\u6570\u636e\u5fc5\u987b\u6ee1\u8db3\u5982\u4e0b\u4e24\u4e2a\u6761\u4ef6:</p> <p>\u8f93\u5165 \\(X\\) \u5bf9\u4e8e\u6e90\u7a0b\u5e8f \\(A\\) \u4e00\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u8d85\u51fa\u65f6\u95f4\u9650\u5236\uff08TLE\uff09\u7684\u95ee\u9898\u3002</p> <p>\u8f93\u5165 \\(X\\) \u4e00\u5b9a\u4f1a\u5bfc\u81f4\u6e90\u7a0b\u5e8f \\(B\\) \u4ea7\u751f\u8d85\u51fa\u65f6\u95f4\u9650\u5236\u7684\u95ee\u9898\u3002</p> <p>\u6b64\u5916,\u547d\u9898\u59d4\u5458\u559c\u6b22\u8f83\u5c0f\u89c4\u6a21\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u5e0c\u671b\u6d4b\u8bd5\u6570\u636e\u6700\u597d\u80fd\u591f\u5305\u542b\u4e0d\u8d85\u8fc7 \\(T\\) \u4e2a\u6574\u6570\u3002</p> <p>\u672c\u9898\u4e2d\u53ea\u5173\u5fc3\u6e90\u7a0b\u5e8f \\(A\\) \u548c \\(B\\) \u662f\u5426\u8d85\u65f6\uff0c\u4e0d\u5173\u5fc3\u662f\u5426\u7ed3\u679c\u6b63\u786e\u3002</p> <p>\u547d\u9898\u59d4\u5458\u4f1a\u9009\u62e9\u4e86\u5355\u6e90\u6700\u77ed\u8def\uff08SSSP\uff09\u4ee5\u53ca\u4e00\u4e2a\u88ab\u79f0\u4e4b\u4e3a\u795e\u79d8\u95ee\u9898\uff08Mystery\uff09\u7684\u4e24\u4e2a\u56fe\u8bba\u95ee\u9898\u6765\u4f5c\u4e3a\u6bd4\u8d5b\u7684\u9898\u76ee\u3002\u6211\u4eec\u5c06\u547d\u9898\u59d4\u5458\u4f1a\u5b8c\u6210\u7684\u4f2a\u4ee3\u7801\u5217\u5728\u4e86\u9644\u5f55\u4e2d\uff0c\u800c\u5177\u4f53\u7684 C\u3001C++ \u548c Pascal \u6e90\u7a0b\u5e8f\u88ab\u6211\u4eec\u653e\u5728\u4e86\u4e0b\u53d1\u7684\u6587\u4ef6\u5f53\u4e2d\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%84%E7%A7%8D%E6%9C%80%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95%E7%9A%84Hack%E4%B8%8E%E5%8C%BA%E5%88%AB/#_1","title":"\u5b50\u4efb\u52a1","text":"<p>\u53c2\u89c1\u4e0b\u8868\u3002\u8868\u4e2d\u6bcf\u4e00\u884c\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5b50\u4efb\u52a1\u3002\u5176\u4e2d\u524d\u516d\u4e2a\u5b50\u4efb\u52a1\u4e0e\u5355\u6e90\u6700\u77ed\u8def\u76f8\u5173\uff0c\u5b50\u4efb\u52a1 7,8 \u4e0e\u795e\u79d8\u95ee\u9898\u76f8\u5173\u3002\u6bcf\u4e2a\u4efb\u52a1\u6240\u5360\u5206\u6570\u89c1\u4e0b\u8868\u3002</p> <p></p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%84%E7%A7%8D%E6%9C%80%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95%E7%9A%84Hack%E4%B8%8E%E5%8C%BA%E5%88%AB/#_2","title":"\u601d\u8def","text":"<p>\u6211\u4eec\u8981\u8ba9A\u901a\u8fc7\u4e14B\u51fa\u73b0TLE\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%84%E7%A7%8D%E6%9C%80%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95%E7%9A%84Hack%E4%B8%8E%E5%8C%BA%E5%88%AB/#dijkstrafloyd","title":"Dijkstra\u548cFloyd","text":"<p>\u5361Floyd\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u4ece\u590d\u6742\u5ea6\u5165\u624b\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u542b\u6709101\u4e2a\u70b9\u7684\u8f93\u5165\uff0c\u5c31\u53ef\u4ee5\u5361\u6389\u4e86</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%84%E7%A7%8D%E6%9C%80%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95%E7%9A%84Hack%E4%B8%8E%E5%8C%BA%E5%88%AB/#bellman-ford","title":"\u5e72Bellman-ford\uff1a","text":"<p>\u590d\u6742\u5ea6\u0398(QVE)\uff0c\u6765\u4e2a\u8d1f\u6743\uff0c\u518d\u6765\u4e00\u5806\u81ea\u73af/\u91cd\u8fb9\uff0c\u4eba\u8089\u4e8c\u5206\u4fdd\u8bc1\u6570\u636e\u4e0d\u8d85\u8fc7T\uff0c\u4e14\u8ba9Bellman-ford\u521a\u521a\u8d85\u8fc7\u4e00\u4e01\u70b9\uff0c\u5c31\u53ef\u4ee5\u4e86\uff0c</p> <p>\u7b2c2\u4e2a\u70b9\u8981Floyd\u8fc7\uff0cV=100\u5373\u53ef\u3002</p> <p>\u7b2c5\u4e2a\u70b9\u8981Dijkstra\u8fc7\uff0c\u90a3\u4e48\u5c31\u8ba90\u53f7\u70b9\u5230299\u53f7\u70b9\u8fde\u6b63\u6743\u8fb9\uff0c\u5176\u5b83\u70b9\u641e\u4e00\u5806\u8d1f\u73af+\u81ea\u73af+\u91cd\u8fb9\uff0cBellman-ford\u8f7b\u677e\u5e72\u6389\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%84%E7%A7%8D%E6%9C%80%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95%E7%9A%84Hack%E4%B8%8E%E5%8C%BA%E5%88%AB/#dijkstra","title":"\u5e72Dijkstra\uff1a","text":"<p>\u8bf4\u4e86Dijkstra\u770b\u5230\u8d1f\u6743\u5c31GG\uff0c\u6240\u4ee5\u6784\u9020\u4e00\u58060\u8fb9\u8bf1\u60d1\u4ed6\uff0c\u7136\u540e\u518d\u8ba9\u4ed6\u4ece\u53f3\u8fb9\u7684\u70b9\u8fdb\u53bb\uff0c\u4e3e\u4e2a\u6817\u5b50\uff1a</p> <p>V=0,1,2,3,4  D,E=(0,1,2),(1,2,-4),(2,3,1),(3,4,-2),(0,2,0),(2,4,0)</p> <p>\u90a3\u4e48\u5c31\u5148\u628a\u5b83\u62d0\u52304\uff0c\u53d1\u73b0\u8def\u957f\u4e3a0\uff0c\u7136\u540e\u8d702<sub>3\u662f\u6700\u77ed\u7684\uff0c\u62d0\u52303\uff0c\u5f00\u59cb\u89c9\u9192\u540e\uff0c\u53d1\u73b00</sub>1\u518d\u52302\uff0c\u8def\u957f\u4e3a-2\uff0c\u518d\u8d702~3\uff0c\u50bb\u50bb\u5730Dijkstra\u5c31\u88ab\u5751\u4e86\uff0c</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%84%E7%A7%8D%E6%9C%80%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95%E7%9A%84Hack%E4%B8%8E%E5%8C%BA%E5%88%AB/#_3","title":"\u5e72\u67d3\u8272\u56fe\u7b97\u6cd5","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%8C%E4%BD%99%E6%9C%80%E7%9F%AD%E8%B7%AF/","title":"\u540c\u4f59\u6700\u77ed\u8def","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%8C%E4%BD%99%E6%9C%80%E7%9F%AD%E8%B7%AF/#_2","title":"\u57fa\u672c\u601d\u60f3","text":"<p>\u901a\u8fc7\u540c\u4f59\u6784\u9020\u67d0\u4e9b\u72b6\u6001\uff0c\u72b6\u6001\u4e4b\u95f4\u7684\u5173\u7cfb\u7c7b\u4f3c\u4e8e\u4e24\u70b9\u4e4b\u95f4\u7684\u5e26\u6743\u6709\u5411\u8fb9\u3002 \u90a3\u4e48\u53ef\u4ee5\u4ee5\u6b64\u5efa\u56fe\uff0c\u5c06\u67d0\u4e9b\u95ee\u9898\u8f6c\u5316\u4e3a\u6700\u77ed\u8def\u95ee\u9898\uff0c\u518d\u4f7f\u7528\u5177\u6709\u4f18\u79c0\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u6c42\u89e3\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%8C%E4%BD%99%E6%9C%80%E7%9F%AD%E8%B7%AF/#1","title":"\u4f8b\u9898 #1 \u8df3\u697c\u673a","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>Srwudi \u7684\u5bb6\u662f\u4e00\u5e62 \\(h\\) \u5c42\u7684\u6469\u5929\u5927\u697c\u3002\u7531\u4e8e\u524d\u6765\u5b66\u4e60\u7684\u849f\u84bb\u8d8a\u6765\u8d8a\u591a\uff0csrwudi \u6539\u9020\u4e86\u4e00\u4e2a\u8df3\u697c\u673a\uff0c\u4f7f\u5f97\u8bbf\u5ba2\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7684\u4e0a\u697c\u3002</p> <p>\u7ecf\u8fc7\u6539\u9020\uff0csrwudi \u7684\u8df3\u697c\u673a\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u56db\u79cd\u65b9\u5f0f\u79fb\u52a8\uff1a</p> <ol> <li> <p>\u5411\u4e0a\u79fb\u52a8 \\(x\\) \u5c42\uff1b</p> </li> <li> <p>\u5411\u4e0a\u79fb\u52a8 \\(y\\) \u5c42\uff1b</p> </li> <li> <p>\u5411\u4e0a\u79fb\u52a8 \\(z\\) \u5c42\uff1b</p> </li> <li> <p>\u56de\u5230\u7b2c\u4e00\u5c42\u3002</p> </li> </ol> <p>\u4e00\u4e2a\u6708\u9ed1\u98ce\u9ad8\u7684\u5927\u4e2d\u5348\uff0cDJL \u6765\u5230\u4e86 srwudi \u7684\u5bb6\uff0c\u73b0\u5728\u4ed6\u5728 srwudi \u5bb6\u7684\u7b2c\u4e00\u5c42\uff0c\u78b0\u5de7\u8df3\u697c\u673a\u4e5f\u5728\u7b2c\u4e00\u5c42\u3002DJL \u60f3\u77e5\u9053\uff0c\u4ed6\u53ef\u4ee5\u4e58\u5750\u8df3\u697c\u673a\u524d\u5f80\u7684\u697c\u5c42\u6570\u3002</p> <p>\\(1 \\le h \\le 2^{63}-1\\)\uff0c\\(1 \\le x,y,z \\le 10^5\\)\u3002</p> <p>\u9996\u5148\u53ef\u4ee5\u5c06 \\(h\\) \u51cf\u53bb \\(1\\)\uff0c\u540c\u65f6\u8d77\u59cb\u697c\u5c42\u8bbe\u4e3a \\(0\\)\u3002 </p> <p>\u8bbe \\(d_i\\) \u4e3a\u80fd\u591f\u5230\u8fbe\u7684\u6700\u4f4e\u7684 \\(\\bmod x = i\\) \u7684\u697c\u5c42\u3002\u6211\u4eec\u6c42\u51fa \\(d_i\\) \u540e\uff0c\u5bf9\u4e8e\u6240\u6709\\(d_i+kx\\)\u7ec4\u6210\u7684\u96c6\u5408D\uff0c\u53ef\u4ee5\u8bc1\u660eD\u5305\u542b\u4e86\u6240\u6709\u53ef\u4ee5\u5230\u8fbe\u7684\u697c\u5c42\u3002</p> <p>\u5373\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8003\u8651\uff1a\u6240\u6709\u53ef\u884c\u7684\u8def\u5f84\u90fd\u662fax+by+cz\uff0c\u5176\u4e2d\u9898\u76ee\u76844\u64cd\u4f5c\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06ax\u63d0\u51fa\uff0c\u5148\u6c42\u51fa\u6240\u6709\u53ef\u8fbe\u7684by+cz\uff0c\u7136\u540e\u8003\u8651ax\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u4e5f\u4e0d\u80fd\u6c42\u51fa\u6240\u6709\u7684by+cz\uff0c\u56e0\u6b64\u4e3a\u4e86\u5305\u542b\u6240\u6709\u7684\u7b54\u6848\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u4efb\u610f\\(i\\in[0,x)\\)\uff0c\u6c42\u51fa\u5bf9x\u53d6\u6a21=i\u7684\u6700\u5c0f\u7684by+cz\u5373\u53ef\u3002 </p> <p>\u5efa\u56fe\uff1a</p> <p>\u6709 \\(i \\stackrel{y}{\\longrightarrow} (i+y)\\bmod x\\) \u548c \\(i \\stackrel{z}{\\longrightarrow} (i+z)\\bmod x\\)\u3002 \u50cf\u8fd9\u6837\u5efa\u56fe\u540e\uff0c\\(d_i\\) \u5c31\u76f8\u5f53\u4e8e \\(0 \\to i\\) \u7684\u6700\u77ed\u8def\uff0cDijkstra \u5373\u53ef\u3002 </p> <p>\u6700\u540e\u7edf\u8ba1\u65f6\uff0c\u5bf9\u4e8e \\(d_i \\le h\\)\uff0c\u6709\u8d21\u732e \\(\\lfloor\\frac{h-d_i}x\\rfloor + 1\\)\u3002 \u603b\u65f6\u95f4\u590d\u6742\u5ea6 \\(\\mathcal O(n \\log n)\\)\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\nstruct node{\n    int v,w;\n};\n\nvector&lt;node&gt; e[N];\n\n\n\nint dis[N],vis[N];\nint a,b,c;\npriority_queue&lt;pii&gt;pq;\n\nvoid djstr(int s){\n    for(int i=0;i&lt;=a;i++)dis[i]=INF;\n    dis[s]=0;\n    pq.push(mp(0,s));\n    while(pq.size()){\n        int x=pq.top().ps;\n        pq.pop();\n        if(vis[x])continue;\n        vis[x]=1;\n        for(auto v:e[x]){\n            if(dis[v.v]&gt;dis[x]+v.w){\n                dis[v.v]=dis[x]+v.w;\n                pq.push(mp(-dis[v.v],v.v));\n            }\n        }\n    }\n}   \n\nvoid add(int a,int b,int c){\n    e[a].push_back({b,c});\n}\n\nvoid solve(){\n    int h=rd;\n    h--;\n    a=rd,b=rd,c=rd;\n    for(int i=0;i&lt;a;i++){\n        add(i,(i+b)%a,b);\n        add(i,(i+c)%a,c);\n    }\n\n    djstr(0);\n\n    int ans=0;\n    for(int i=0;i&lt;a;i++){\n        if(dis[i]&lt;=h)ans+=(h-dis[i])/a+1;\n    }\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%90%8C%E4%BD%99%E6%9C%80%E7%9F%AD%E8%B7%AF/#2","title":"\u4f8b\u9898 #2 [\u56fd\u5bb6\u96c6\u8bad\u961f] \u58a8\u58a8\u7684\u7b49\u5f0f","text":"<p>www.luogu.com.cn</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u58a8\u58a8\u7a81\u7136\u5bf9\u7b49\u5f0f\u5f88\u611f\u5174\u8da3\uff0c\u4ed6\u6b63\u5728\u7814\u7a76 \\(\\sum_{i=1}^n a_ix_i=b\\) \u5b58\u5728\u975e\u8d1f\u6574\u6570\u89e3\u7684\u6761\u4ef6\uff0c\u4ed6\u8981\u6c42\u4f60\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u7ed9\u5b9a \\(n, a_{1\\dots n}, l, r\\)\uff0c\u6c42\u51fa\u6709\u591a\u5c11 \\(b\\in[l,r]\\) \u53ef\u4ee5\u4f7f\u7b49\u5f0f\u5b58\u5728\u975e\u8d1f\u6574\u6570\u89e3\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(n \\le 12\\)\uff0c\\(0 \\le a_i \\le 5\\times 10^5\\)\uff0c\\(1 \\le l \\le r \\le 10^{12}\\)\u3002</p> <p>\u8f6c\u5316\u9898\u610f</p> <p>\u4f60\u6709n\u79cd\u79fb\u52a8\u65b9\u5f0f\uff0c\u7b2ci\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8ba9\u4f60\u5411\u4e0a\u8d70\\(a_i\\)\u5c42\uff0c\u4e00\u5f00\u59cb\u4f60\u57280\u5c42\uff0c\u6c42\u6700\u7ec8\u53ef\u4ee5\u5230\u8fbe\u7684\u5728[l,r]\u4e4b\u95f4\u7684\u5c42\u6570\u3002</p> <p>\u601d\u8def</p> <p>\u9996\u5148\u6211\u4eec\u5e94\u8be5\u60f3\u5230\u7684\u662f\u5b8c\u5168\u80cc\u5305\u5427</p> <p>\u5f88\u5bb9\u6613\u60f3\u5230 \u5b8c\u5168\u80cc\u5305\uff0c\u7528 \\(f_i\\) \u8868\u793a \\(B\\) \u7684\u503c\u80fd\u5426\u4e3a \\(i\\)\uff0c\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u4e3a \\(\\large {f_j = f_j \\mid f_{j - a_i}}\\)</p> <p>\u2026\u2026\u4f46l,r\u8fc7\u5927\uff0c\u6211\u4eec\u4e0d\u80fd\u8fd9\u6837\u505a\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u6c42\u51fa \\(0 \\sim r\\) \u4e2d\u7b26\u5408\u6761\u4ef6\u7684 \\(B\\) \u7684\u6570\u91cf \u548c \\(0 \\sim l - 1\\) \u4e2d\u7b26\u5408\u6761\u4ef6\u7684 \\(B\\) \u7684\u6570\u91cf\uff0c\u524d\u8005\u51cf\u53bb\u540e\u8005\u5373\u662f\u7b54\u6848\u3002\u73b0\u5728\u5047\u8bbe \\(mn\\) \u662f \\(a_i\\) \u4e2d\u7684\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u5bf9\u4e8e \\(a_1x_1 + a_2x_2 + \\cdots + a_nx_n = i\\) \u82e5\u8be5\u5f0f\u5b58\u5728\u6574\u6570\u89e3\uff0c\u90a3\u4e48 \\(a_1x_1 + a_2x_2 + \\cdots + a_nx_n = i + k \\times mn\\ (k \\in \\rm N)\\) \u4e5f\u90fd\u5b58\u5728\u6574\u6570\u89e3\u3002\u5728\u8fd9\u4e2a\u5f0f\u5b50\u4e2d\uff0c\u663e\u7136 \\(i\\) \u8d8a\u5c0f\uff0c\u7b26\u5408\u6761\u4ef6\u7684\u89e3\u7684\u6570\u91cf\u5c31\u4f1a\u8d8a\u591a\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u7528 \\(dis_i\\) \u8868\u793a \\(B\\) \u6a21 \\(mn\\) \u7b49\u4e8e \\(i\\) \u65f6\u7684\u6700\u5c0f\u503c\u3002\u56e0\u4e3a\u6211\u4eec\u7684a_1x_1 + a_2x_2 + \\cdots + a_nx_n = B\uff0c\u4e0d\u59a8\u8ba9mn\u4e3a a_1\uff0c\u53c2\u8003\u4e0a\u9762\u4e00\u9898\u7684\u8bb2\u89e3\uff0c\u6211\u4eec\u4e5f\u662f\u53ea\u9700\u8981\u5bf9\u4e8e\u6240\u6709i\u6c42\u51fa\u6700\u5c0f\u7684\u6a21mn=i\u7684B\uff0c\u7136\u540e\u5c31\u53ef\u4ee5O(1)\u8ba1\u7b97\u4e86\u3002</p> <p>\u63a5\u4e0b\u6765\u8fde\u6709\u5411\u8fb9 \\(i \\to (i + a_j) \\bmod mn\\)\uff0c\u5176\u4e2d \\(0 \\leq i &lt; mn\\)\uff0c\u8fb9\u6743\u4e3a \\(a_j\\)\uff0c\u8868\u793a\u4ece \\(i\\) \u53d8\u4e3a \\(i + a_j\\) \u6240\u82b1\u8d39\u7684\u4ee3\u4ef7\u662f \\(a_j\\) \u3002\\(0\\) \u5230 \\(i\\) \u7684\u6700\u77ed\u8def\u5373\u662f \\(B\\) \u6a21 \\(mn\\) \u7b49\u4e8e \\(i\\) \u65f6\u7684\u6700\u5c0f\u503c\u3002\u5047\u5b9a\u73b0\u5728\u8981\u6c42 \\(0 \\sim x\\) \u4e2d\u7b26\u5408\u6761\u4ef6\u7684 \\(B\\) \u7684\u6570\u91cf\uff0c\u82e5\u8fd9\u4e2a\u6700\u5c0f\u503c\u4e0d\u5927\u4e8e \\(x\\)\uff0c\u5219\u6240\u6709\u7684 \\(i + k \\times mn\\ (i + k \\times mn \\leq x,k \\in \\rm N)\\) \u90fd\u7b26\u5408\u6761\u4ef6\uff0c\u4e00\u5171\u6709 \\(\\left \\lfloor \\frac{x - dis_i}{mn} \\right \\rfloor + 1\\) \u4e2a\u3002</p> <p>\u6240\u4ee5\u679a\u4e3e \\(i\\)\uff0c\u7d2f\u52a0\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u3002\u540c\u65f6 \\(mn\\) \u53d6\u6240\u6709 \\(a_i\\) \u7684\u6700\u5c0f\u503c\u6700\u4f18\uff0c\u56e0\u4e3a\u8fd9\u6837\u8fb9\u6570\u6700\u5c11\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(kn\\max\\limits_{i = 1}^n\\{ a_i \\})\\) \u3002\u7531\u4e8e\u7279\u6b8a\u7684\u8fde\u8fb9\uff0c\\(\\rm SPFA\\) \u4e0d\u4f1a\u88ab\u5361\uff0c\u53ef\u4ee5\u653e\u5fc3\u4f7f\u7528\u3002</p> <p>Std</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define pii pair&lt;int,int&gt; \n\nconst int N=5e5+5;\nconst int INF=1e9+5;\nconst int MOD=998244353;\nbool f1;\nstruct node{\n    int nxt,dis;\n};\nvector&lt;node&gt;e[N];\npriority_queue&lt;pair&lt;int,int&gt; &gt;pq;\nint n,vis[N],dis[N],m,k,s,t;\nint mn=INF,l,r,a[N];\nbool f2;\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nvoid add(int a,int b,int c){\n    e[a].push_back({b,c});\n}\n\n\nvoid djstr(int rt) {\n    pq.push(make_pair(0,rt));\n    int u=rt;   //\u5148\u4ece\u8d77\u70b9\u5f00\u59cb\u67e5\n    memset(dis,0x3f3f,sizeof dis);  //\u521d\u59cb\u5316\u8fb9\u6743\n\n    dis[rt]=0;\n\n    while(pq.size()) {  //\u641c\u5b8c\u5168\u56fe\n\n        u=pq.top().second;\n\n        pq.pop();\n        if(vis[u])continue;//\u8bb0\u5f97continue\n        vis[u]=1;\n        for(int i=0;i&lt;e[u].size();i++){\n            int v=e[u][i].nxt,w=e[u][i].dis;\n            if(!vis[v]&amp;&amp;dis[u]+w&lt;dis[v]){\n                dis[v]=dis[u]/\u66f4\u65b0\n                pq.push(make_pair(-dis[v],v));\n            }\n        }\n    }\n}\n\nint query(int x){\n    int res=0;\n    for(int i=0;i&lt;mn;i++){\n        if(dis[i]&lt;=x)res+=(x-dis[i])/mn+1;\n    }\n    return res;\n}\nsigned main(){\n\n    // freopen(\"school.in\", \"r\", stdin);\n    // freopen(\"school.out\", \"w\", stdout);\n\n    n=rd;l=rd;r=rd;\n    for(int i=1;i&lt;=n;i++){\n        int x=rd;\n        if(x){//\u8df3\u8fc7a[i]=0\n            a[++m]=x;\n            mn=min(mn,x);\n        }\n    }\n\n\n\n    for(int i=0;i&lt;mn;i++){\n        for(int j=1;j&lt;=m;j++){\n            if(a[j]!=mn)add(i,(i+a[j])%mn,a[j]);\n        }\n    }\n//  cerr&lt;&lt;mn&lt;&lt;endl;\n    djstr(0);\n//  cerr&lt;&lt;\"ok\\n\";\n    cout&lt;&lt;query(r)-query(l-1);\n\n\n    return 0;\n}\n\n/*\n5 3 3\n2 3 4 7 6\n*/\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%B7%AE%E5%88%86%E7%BA%A6%E6%9D%9F/","title":"\u5dee\u5206\u7ea6\u675f\u7b97\u6cd5","text":"<p>\u5bf9\u4e8e$ xj\u200b\u2212xi\u200b\u2264k\\(\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5b83\u7c7b\u4f3c\u6700\u77ed\u8def\u7f51\u7edc\u4e2d\u7684\u4e09\u89d2\u4e0d\u7b49\u5f0f \\(d_v\u200b\u2212d_u\u200b\u2264w_{&lt;u,v&gt;}\\)\uff0c\u5176\u4e2d\\)d_u\\(\u662f\u4ece\u6e90\u70b9\u5230u\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u9ed8\u8ba4\\)d_v&gt;d_u$\u200b\uff0c\u90a3\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u6700\u77ed\u8def\u7684\u5f62\u5f0f\u89e3\u51b3\u5462\uff1f</p> <p>\u663e\u7136\u662f\u53ef\u4ee5\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e0d\u7b49\u5f0f\\(x_i-x_j\u2264w_k\\)\uff0c\u8fde\u8fb9\\(i-j\\)\uff0c\u6743\u503c\u4e3a\\(w_k\\)\u3002</p> <p>\u7136\u540e\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u6b64\u65f6\u6700\u77ed\u8def\u7684\u7b54\u6848 \\(d_i\u200b\\) \u4e5f\u6b63\u662f\u539f\u4e0d\u7b49\u5f0f\u7ec4\u7684\u4e00\u4e2a\u89e3 \\(x_i\u200b\\)\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%B7%AE%E5%88%86%E7%BA%A6%E6%9D%9F/#1","title":"\u4f8b\u9898 #1","text":"<p>\u7ed9\u51fa\u4e00\u7ec4\u5305\u542b \\(m\\) \u4e2a\u4e0d\u7b49\u5f0f\uff0c\u6709 \\(n\\) \u4e2a\u672a\u77e5\u6570\u7684\u5f62\u5982\uff1a</p> <p>$ \\begin{cases} x_{c_1}-x_{c'1}\\leq y_1 \\x-x_{c'2} \\leq y_2 \\ \\cdots\\ x$} - x_{c'_m}\\leq y_m\\end{cases</p> <p>\u7684\u4e0d\u7b49\u5f0f\u7ec4\uff0c\u6c42\u4efb\u610f\u4e00\u7ec4\u6ee1\u8db3\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u7ec4\u7684\u89e3\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e3a\u4e24\u4e2a\u6b63\u6574\u6570 \\(n,m\\)\uff0c\u4ee3\u8868\u672a\u77e5\u6570\u7684\u6570\u91cf\u548c\u4e0d\u7b49\u5f0f\u7684\u6570\u91cf\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 \\(c,c',y\\)\uff0c\u4ee3\u8868\u4e00\u4e2a\u4e0d\u7b49\u5f0f \\(x_c-x_{c'}\\leq y\\)\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e00\u884c\uff0c\\(n\\) \u4e2a\u6570\uff0c\u8868\u793a \\(x_1 , x_2 \\cdots x_n\\) \u7684\u4e00\u7ec4\u53ef\u884c\u89e3\uff0c\u5982\u679c\u6709\u591a\u7ec4\u89e3\uff0c\u8bf7\u8f93\u51fa\u4efb\u610f\u4e00\u7ec4\uff0c\u65e0\u89e3\u8bf7\u8f93\u51fa <code>NO</code>\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint n,m,ans;\nint d[5005];\nstruct node{\n    int u,v,w;\n}e[5050];\nint main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        int c,c2,y;\n        cin&gt;&gt;c&gt;&gt;c2&gt;&gt;y;\n        e[i].u=c2;e[i].v=c;e[i].w=y;\n\n    }\n    for(int i=2;i&lt;=n;i++)d[i]=0x3f3f3f3f;\n    for(int i=1;i&lt;=n-1;i++){\n        for(int j=1;j&lt;=m;j++){\n            d[e[j].v]=min(d[e[j].u]+e[j].w,d[e[j].v]);\n        }\n    }\n    for(int i=1;i&lt;=m;i++){\n        if(d[e[i].v]&gt;d[e[i].u]+e[i].w){\n            printf(\"NO\");return 0;\n        }\n    }\n    for(int i=1;i&lt;=n;i++)cout&lt;&lt;d[i]&lt;&lt;' ';\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E5%B7%AE%E5%88%86%E7%BA%A6%E6%9D%9F/#_2","title":"\u7ec3\u4e60","text":"<p>www.luogu.com.cn</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E6%AC%A1%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95/","title":"\u6b21\u77ed\u8def\u7b97\u6cd5","text":"<p>\u6bcf\u6b21\u66f4\u65b0\u65f6\uff0c\u4f18\u5148\u66f4\u65b0\u6700\u77ed\u8def\uff0c\u82e5\u80fd\u66f4\u65b0\u6700\u77ed\u8def\uff0c\u5c31\u4ee4\u6b21\u77ed\u8def\u7b49\u4e8e\u4e4b\u524d\u7684\u6700\u77ed\u8def\uff0c\u518d\u66f4\u65b0\u6700\u77ed\u8def</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E6%AC%A1%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95/#_2","title":"\u6b21\u77ed\u8def | \u96c6\u5408\u4f4d\u7f6e","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6bcf\u6b21\u6709\u5927\u7684\u6d3b\u52a8\uff0c\u5927\u5bb6\u90fd\u8981\u5728\u4e00\u8d77\u201c\u805a\u4e00\u805a\u201d\uff0c\u4e0d\u7ba1\u662f\u53bb\u597d\u4e50\u8fea\uff0c\u8fd8\u662f\u907f\u98ce\u5858\uff0c\u6216\u8005\u6c64\u59c6\u718a\uff0c\u5927\u5bb6\u90fd\u8981\u73a9\u7684\u75db\u5feb\u3002\u8fd8\u8bb0\u5f97\u5fc3\u8bed\u548c\u82b1\u513f\u5728\u8df3\u821e\u673a\u4e0a\u7684\u6fc0\u60c5\u4e0e\u91ca\u653e\uff0c\u8fd8\u8bb0\u5f97\u8349\u8349\u7684\u6295\u7bee\u6280\u827a\u662f\u5982\u6b64\u7684\u9ad8\u8d85\uff0c\u8fd8\u8bb0\u5f97\u72d7\u72d7\u7684\u67aa\u6cd5\u6c38\u8fdc\u662f'S'\u2026\u2026\u8fd8\u6709\u4e0d\u80fd\u5fd8\u4e86\uff0c\u80d6\u5b50\u7684\u6b4c\u58f0\u6c38\u8fdc\u662f\u8ba9\u6211\u4eec\u60ca\u53eb\u7684\uff01\uff01</p> <p>\u4eca\u5929\u662f\u91ce\u732b\u7684\u751f\u65e5\uff0c\u6240\u4ee5\u60f3\u5230\u8fd9\u4e9b\u4e5f\u6b63\u5e38\uff0c\u53ea\u662f\u56e0\u4e3a\u662f\u4e0a\u5b66\u65e5\uff0c\u6ca1\u6cd5\u4e00\u8d77\u53bb\u73a9\u4e86\u3002\u4f46\u56de\u5fc6\u4e00\u4e0b\u90a3\u65f6\u7684\u751c\u871c\u603b\u662f\u4e00\u79cd\u5e78\u798f\u561b\u3002\u3002\u3002</p> <p>\u4f46\u662f\u6bcf\u6b21\u96c6\u5408\u7684\u65f6\u5019\u90fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff01\u91ce\u732b\u662f\u516c\u8ba4\u7684\u201c\u8def\u76f2\u201d\uff0c\u91ce\u732b\u81ea\u5df1\u5fc3\u91cc\u4e5f\u5f88\u6e05\u695a\uff0c\u6bcf\u6b21\u90fd\u63d0\u524d\u51fa\u95e8\uff0c\u4f46\u8fd8\u662f\u7ecf\u5e38\u8fdf\u5230\uff0c\u8fd9\u70b9\u8ba9\u5927\u5bb6\u5f88\u662f\u65e0\u5948\u3002\u540e\u6765\uff0c\u91ce\u732b\u5728\u6bcf\u6b21\u51fa\u95e8\u524d\uff0c\u90fd\u4f1a\u5411\u82b1\u513f\u54a8\u8be2\u4e00\u4e0b\u8def\u5f84\uff0c\u6839\u636e\u5df2\u77e5\u7684\u8def\u5f84\u4e2d\uff0c\u603b\u7b97\u80fd\u6309\u65f6\u5230\u4e86\u3002</p> <p>\u73b0\u5728\u63d0\u51fa\u8fd9\u6837\u7684\u4e00\u4e2a\u95ee\u9898\uff1a\u7ed9\u51fa \\(n\\) \u4e2a\u70b9\u7684\u5750\u6807\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u4e3a\u91ce\u732b\u7684\u51fa\u53d1\u4f4d\u7f6e\uff0c\u6700\u540e\u4e00\u4e2a\u4e3a\u5927\u5bb6\u7684\u96c6\u5408\u4f4d\u7f6e\uff0c\u5e76\u7ed9\u51fa\u54ea\u4e9b\u4f4d\u7f6e\u70b9\u662f\u76f8\u8fde\u7684\u3002\u91ce\u732b\u4ece\u51fa\u53d1\u70b9\u5230\u8fbe\u96c6\u5408\u70b9\uff0c\u603b\u4f1a\u6311\u4e00\u6761\u6700\u8fd1\u7684\u8def\u8d70\uff0c\u5982\u679c\u91ce\u732b\u6ca1\u627e\u5230\u6700\u8fd1\u7684\u8def\uff0c\u4ed6\u5c31\u4f1a\u8d70\u7b2c\u4e8c\u8fd1\u7684\u8def\u3002\u8bf7\u5e2e\u91ce\u732b\u6c42\u4e00\u4e0b\u8fd9\u6761\u7b2c\u4e8c\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u662f\u4e24\u4e2a\u6574\u6570 \\(n(1 \\le n \\le 200)\\) \u548c \\(m\\)\uff0c\u8868\u793a\u4e00\u5171\u6709 \\(n\\) \u4e2a\u70b9\u548c \\(m\\) \u6761\u8def\uff0c\u4ee5\u4e0b \\(n\\) \u884c\u6bcf\u884c\u4e24\u4e2a\u6570 \\(x_i\\)\uff0c\\(y_i\\)\uff0c\\((-500 \\le x_i,y_i \\le 500),\\) \u4ee3\u8868\u7b2c \\(i\\) \u4e2a\u70b9\u7684\u5750\u6807\uff0c\u518d\u5f80\u4e0b\u7684 \\(m\\) \u884c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 \\(p_j\\)\uff0c\\(q_j,(1 \\le p_j,q_j \\le n)\\)\uff0c\u8868\u793a\u4e24\u4e2a\u70b9\u76f8\u901a\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E6%AC%A1%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95/#_3","title":"\u6b63\u786e\u7b97\u6cd5","text":"<p>\u6211\u4eec\u91c7\u7528\u5220\u8fb9\u7684\u601d\u60f3\uff0c\u5148\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u8bb0\u5f55\u8def\u5f84\u3002</p> <p>\u7136\u540e\u4f9d\u6b21\u5220\u53bb\u6700\u77ed\u8def\u5f84\u4e0a\u6bcf\u4e00\u6761\u8fb9\uff0c\u5206\u522b\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u53d6\u6240\u6709\u7b54\u6848\u4e2d\u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\nusing namespace std;\nconst int N=1e6+5;\nconst int INF=1e9+5;\nint vis[N],h[N],used[N],lst[N];\nint cnt,u,w,n,m,v,s;\n#define pdi pair&lt;double,int&gt;\nusing namespace std;\nstruct node{\n    double x,y;\n    int head;\n    double dis;\n    int pre;\n}node[205];\nstruct edge{\n    int nxt,to; \n    double dis;\n}edge[50005];\ndouble ans=INF&lt;&lt;1;\ndouble calc(double a,double b,double c,double d){\n    return (double)sqrt(double(a-c)*double(a-c)+double(b-d)*double(b-d));\n}\n//\u8ddd\u79bb\u516c\u5f0f\uff0c\u6ce8\u610f\u6570\u636e\u7c7b\u578b\nvoid addEdge(int u,int v,double w){\n    edge[++cnt].dis=w;\n    edge[cnt].to=v;\n    edge[cnt].nxt=node[u].head;\n    node[u].head=cnt;\n}\npriority_queue&lt;pdi,vector&lt;pdi&gt;,greater&lt;pdi&gt; &gt;pq;\nvoid djkstr(int x,int y){\n    for(int i=1;i&lt;=n;i++){\n        node[i].dis=INF;\n    }\n    node[1].dis=0;\n    pq.push({0,1});\n    while(pq.size()){\n        pdi tmp=pq.top();\n        pq.pop();\n        double d=tmp.first;\n        int u=tmp.second;\n        if(node[u].dis!=d)continue;\n        for(int e=node[u].head;e;e=edge[e].nxt) {\n            int v=edge[e].to;\n            if((u==x&amp;&amp;v==y)||(u==y&amp;&amp;v==x))continue;\n            if(node[v].dis&lt;=d+edge[e].dis) continue;\n            if(x==-1&amp;&amp;y==-1)node[v].pre=u;\n            node[v].dis=d+edge[e].dis;\n            pq.push({node[v].dis,v});\n        }\n    }\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;i++){\n        scanf(\"%lf%lf\",&amp;node[i].x,&amp;node[i].y);\n    }\n\n    for(int i=1,u,v;i&lt;=m;i++){\n        scanf(\"%lld%lld\",&amp;u,&amp;v);\n        double w=calc(node[u].x,node[u].y,node[v].x,node[v].y);\n        addEdge(u,v,w);\n        addEdge(v,u,w);\n    }\n\n    djkstr(-1,-1);\n\n    for(int i=n;i!=1;i=node[i].pre) {\n        djkstr(i,node[i].pre);\n        ans=min(ans,node[n].dis);\n    }\n    if(ans&gt;=INF)puts(\"-1\");\n    else printf(\"%.2lf\\n\",ans);\n    return 0;\n}\n</code></pre> <p>\u4ee5\u4e0b\u662f\u672a\u9a8c\u8bc1\u7684\u5176\u4ed6\u7b97\u6cd5</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E6%AC%A1%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95/#1","title":"\u5199\u6cd51","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\nusing namespace std;\nconst int N=1e6+5;\nconst int INF=1e9+5;\nint vis[N],h[N],used[N],lst[N];\nint cnt,u,w,n,m,v,s;\n\ndouble ans=INF,dis[3][N];\nstruct node {\n    int nxt;\n    double dis;\n};\n\nstruct point {\n    double x,y;\n}p[N];\n\ndouble getdis(int a,int b){\n    return sqrt((p[a].x-p[b].x)*(p[a].x-p[b].x)+(p[a].y-p[b].y)*(p[a].y-p[b].y));\n}\n\nvector&lt;node&gt; e[N];\npriority_queue&lt;pair&lt;double,int&gt;&gt; pq;\nvoid add(int a,int b,double dis) {\n\n//  cerr&lt;&lt;dis&lt;&lt;endl;\n    e[a].push_back((node){b,dis});\n    e[b].push_back((node){a,dis});\n}\n\nvoid djstr(int rt,int k) {\n    pq.push(make_pair(0.00,rt));\n    int u=rt;   //\u5148\u4ece\u8d77\u70b9\u5f00\u59cb\u67e5\n    for(int i=1; i&lt;=n; i++)dis[k][i]=INF;   //\u521d\u59cb\u5316\u8fb9\u6743\n\n    dis[k][rt]=0.0;\n//  vis[rt]=1;//\u522b\u5199\u9519\uff01\uff01\n\n    while(pq.size()) {  //\u641c\u5b8c\u5168\u56fe\n\n        u=pq.top().second;\n\n        pq.pop();\n        if(vis[u])continue;//\u8bb0\u5f97continue\n        vis[u]=1;\n        for(int i=0;i&lt;e[u].size();i++){\n            int v=e[u][i].nxt;\n            double w=e[u][i].dis;\n            if(!vis[v]&amp;&amp;dis[k][u]+w&lt;dis[k][v]){\n                dis[k][v]=dis[k][u]/\u66f4\u65b0\n//              cerr&lt;&lt;dis[k][v]&lt;&lt;endl;\n                pq.push(make_pair(-dis[k][v],v));\n                if(k==0)lst[v]=u;\n            }\n        }\n    }\n}\nsigned main() {\n\n    cin&gt;&gt;n&gt;&gt;m;\n\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;p[i].x&gt;&gt;p[i].y;\n    }\n    for(int i=1;i&lt;=m;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        add(a,b,getdis(a,b));\n    }\n    djstr(1,0);\n//  cerr&lt;&lt;\"OK\";\n    memset(vis,0,sizeof vis);\n\n    djstr(n,1);\n\n//  for(int i=1;i&lt;=n;i++){\n//      cerr&lt;&lt;lst[i]&lt;&lt;' ';\n//  }\n//  \n    for(int i=n;i;i=lst[i]){\n        used[i]=1;\n    }\n//  cerr&lt;&lt;\"YES\";\n    for(int i=1;i&lt;=n;i++){\n        if(used[i])continue;\n//      cerr&lt;&lt;i&lt;&lt;\"has ans=\"&lt;&lt;dis[0][i]+dis[1][i]&lt;&lt;endl;\n        ans=min(ans,dis[0][i]+dis[1][i]);\n    }\n    double mx=INF;\n    if(mx==ans)cout&lt;&lt;-1;\n    else printf(\"%.2lf\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E6%AC%A1%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95/#2","title":"\u5199\u6cd52","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\nusing namespace std;\nconst int N=1e6+5;\nconst int INF=1e9+5;\nint vis[N],h[N],used[N],lst[N];\nint cnt,u,w,n,m,v,s;\n\ndouble ans=INF,dis[N],sdis[N];\nstruct node {\n    int nxt;\n    double dis;\n};\n\nstruct point {\n    double x,y;\n}p[N];\n\ndouble getdis(int a,int b){\n    return sqrt((p[a].x-p[b].x)*(p[a].x-p[b].x)+(p[a].y-p[b].y)*(p[a].y-p[b].y));\n}\n\nvector&lt;node&gt; e[N];\npriority_queue&lt;pair&lt;double,int&gt;&gt; pq;\nvoid add(int a,int b,double dis) {\n\n//  cerr&lt;&lt;dis&lt;&lt;endl;\n    e[a].push_back((node){b,dis});\n    e[b].push_back((node){a,dis});\n}\n\nvoid merge(int x,double d){\n    // cerr&lt;&lt;\"mer p:\"&lt;&lt;x&lt;&lt;\" d=\"&lt;&lt;d&lt;&lt;endl;\n    if(dis[x]&gt;d){\n        sdis[x]=min(sdis[x],dis[x]);\n        dis[x]=d;\n    }else if(sdis[x]&gt;d)sdis[x]=d;\n}\n\nvoid djstr(int rt) {\n    pq.push(make_pair(0.00,rt));\n    int u=rt;   //\u5148\u4ece\u8d77\u70b9\u5f00\u59cb\u67e5\n    for(int i=1; i&lt;=n; i++)dis[i]=INF;  //\u521d\u59cb\u5316\u8fb9\u6743\n    for(int i=1; i&lt;=n; i++)sdis[i]=INF; //\u521d\u59cb\u5316\u8fb9\u6743\n\n    dis[rt]=0.0;\n//  vis[rt]=1;//\u522b\u5199\u9519\uff01\uff01\n\n    while(pq.size()) {  //\u641c\u5b8c\u5168\u56fe\n\n        u=pq.top().second;\n\n        pq.pop();\n        if(vis[u])continue;//\u8bb0\u5f97continue\n        vis[u]=1;\n        for(int i=0;i&lt;e[u].size();i++){\n            int v=e[u][i].nxt;\n            double w=e[u][i].dis;\n            if(!vis[v]&amp;&amp;dis[u]+w&lt;sdis[v]){\n                // dis[v]=dis[u]/\u66f4\u65b0\n                merge(v,dis[u]+w);\n//              cerr&lt;&lt;dis[v]&lt;&lt;endl;\n                pq.push(make_pair(-dis[v],v));\n            }\n        }\n    }\n}\nsigned main() {\n\n    cin&gt;&gt;n&gt;&gt;m;\n\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;p[i].x&gt;&gt;p[i].y;\n    }\n    for(int i=1;i&lt;=m;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        add(a,b,getdis(a,b));\n    }\n    djstr(1);\n    double mx=INF;\n    ans=sdis[n];\n    // cerr&lt;&lt;dis[n]&lt;&lt;' '&lt;&lt;sdis[n]&lt;&lt;endl;\n    if(mx==ans)cout&lt;&lt;-1;\n    else printf(\"%.2lf\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E6%9C%80%E7%9F%AD%E8%B7%AF/%E6%AC%A1%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95/#k-scoi2007-k","title":"K\u77ed\u8def | [SCOI2007] k\u77ed\u8def","text":"<p>\u6709 \\(n\\) \u4e2a\u57ce\u5e02\u548c \\(m\\) \u6761\u5355\u5411\u9053\u8def\uff0c\u57ce\u5e02\u7f16\u53f7\u4e3a \\(1\\) \u5230 \\(n\\)\u3002\u6bcf\u6761\u9053\u8def\u8fde\u63a5\u4e24\u4e2a\u4e0d\u540c\u7684\u57ce\u5e02\uff0c\u4e14\u4efb\u610f\u4e24\u6761\u9053\u8def\u8981\u4e48\u8d77\u70b9\u4e0d\u540c\u8981\u4e48\u7ec8\u70b9\u4e0d\u540c\uff0c\u56e0\u6b64 \\(n\\) \u548c \\(m\\) \u6ee1\u8db3\\(m \\le n(n-1)\\)\u3002</p> <p>\u7ed9\u5b9a\u4e24\u4e2a\u57ce\u5e02 \\(a\\) \u548c \\(b\\)\uff0c\u53ef\u4ee5\u7ed9 \\(a\\) \u5230 \\(b\\) \u7684\u6240\u6709\u7b80\u5355\u8def\uff08\u6240\u6709\u57ce\u5e02\u6700\u591a\u7ecf\u8fc7\u4e00\u6b21\uff0c\u5305\u62ec\u8d77\u70b9\u548c\u7ec8\u70b9\uff09\u6392\u5e8f\uff1a\u5148\u6309\u957f\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u957f\u5ea6\u76f8\u540c\u65f6\u6309\u7167\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u4f60\u7684\u4efb\u52a1\u662f\u6c42\u51fa \\(a\\) \u5230 \\(b\\) \u7684\u7b2c \\(k\\) \u77ed\u8def\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u7b2c\u4e00\u884c\u5305\u542b\u4e94\u4e2a\u6b63\u6574\u6570 \\(n,m,k,a,b\\)\u3002</p> <p>\u4ee5\u4e0b \\(m\\) \u884c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 \\(u,v,l\\)\uff0c\u8868\u793a\u4ece\u57ce\u5e02 \\(u\\) \u5230\u57ce\u5e02 \\(v\\) \u6709\u4e00\u6761\u957f\u5ea6\u4e3a \\(l\\) \u7684\u5355\u5411\u9053\u8def\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5982\u679c \\(a\\) \u5230 \\(b\\) \u7684\u7b80\u5355\u8def\u4e0d\u8db3 \\(k\\) \u6761\uff0c\u8f93\u51fa <code>No</code>\uff0c\u5426\u5219\u8f93\u51fa\u7b2c \\(k\\) \u77ed\u8def\uff1a\u4ece\u57ce\u5e02 \\(a\\) \u5f00\u59cb\u4f9d\u6b21\u8f93\u51fa\u6bcf\u4e2a\u5230\u8fbe\u7684\u57ce\u5e02\uff0c\u76f4\u5230\u57ce\u5e02 \\(b\\)\uff0c\u4e2d\u95f4\u7528\u51cf\u53f7 <code>-</code> \u5206\u5272\u3002</p> <ul> <li>\\(100\\%\\) \u7684\u6570\u636e\u6ee1\u8db3\uff1a\\(2\\leq n\\leq 50\\)\uff0c\\(1\\leq k\\leq 200\\)\uff0c\\(1\\le l\\le 10^4\\)\u3002</li> </ul>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/Dinic%E7%AE%97%E6%B3%95/","title":"Dinic\u7b97\u6cd5\u6c42\u6700\u5927\u6d41","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/Dinic%E7%AE%97%E6%B3%95/#memcpy","title":"\u51fd\u6570<code>memcpy</code>","text":"<p>\u7528\u6cd51</p> <pre><code>memcpy(cur,h,sizeof h);\n</code></pre> <p>\u5c06\u6570\u7ec4<code>h</code>\u7684\u5185\u5bb9\u590d\u5236\u5230<code>cur</code>\u4e2d(\u5b8c\u5168\u8986\u76d6)</p> <p>\u7528\u6cd52</p> <p>\u4ee5\u4e0b\u4ee3\u7801\u53ef\u4ee5\u4e00\u6b65\u5c06b\u63d2\u5165\u5230a\u7684\u540e\u9762\uff0c\u5f53\u7136\u4f60\u624b\u5199\u4e5f\u884c\uff0c\u53ea\u4e0d\u8fc7\u6548\u7387\u4f4e\u4e0b</p> <pre><code>memcpy(a/a,b\u4e3a\u6570\u7ec4,len_a,len_b\u4e3a\u53d8\u91cf\uff0c\u5b58\u7684\u662fa,b\u6570\u7ec4\u7684\u5927\u5c0f\n</code></pre> <p>\u6ce8\u610f</p> <p>\u5bf9\u4e8ememcpy\u4e0efor\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u7f51\u7edc\u4e0a\u6709\u4e0d\u540c\u7684\u89e3\u8bf4\u3002\u6211\u4eec\u628a\u4ed6\u4eec\u770b\u6210\u590d\u6742\u5ea6\u76f8\u540c\u5373\u53ef\u3002</p> <p>\u4f46\u6ce8\u610f\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <p>string\u5728\u4f7f\u7528memcpy\u8fdb\u884c\u62f7\u8d1d\u65f6\uff0c\u4f1a\u5d29\u6e83\uff0c\u8fd9\u4e0e\u6570\u636e\u7c7b\u578b\u6709\u5173\u3002\u6240\u4ee5\u5bf9\u4e8e\u957f\u5ea6\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528memcpy</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/Dinic%E7%AE%97%E6%B3%95/#dinic_1","title":"Dinic\u7b97\u6cd5","text":"<p>Dinic\u7b97\u6cd5\u4e00\u6b21\u53ef\u4ee5\u7d2f\u52a0\u591a\u6761\u589e\u5e7f\u8def\u7684\u6d41\u91cf\u3002</p> <p>\u8fb9e[i]:\u5b58\u7b2ci\u6761\u51fa\u8fb9{v,c,ne}</p> <p>\u8868\u5934h[u]:\u5b58u\u70b9\u7684\u7b2c\u4e00\u6761\u51fa\u8fb9</p> <p>\u6df1\u5ea6d[u]:\u5b58u\u70b9\u6240\u5728\u7684\u56fe\u5c42</p> <p>\u5f53\u524d\u5f27cur[u]:\u5b58u\u70b9\u7684\u5f53\u524d\u51fa\u8fb9</p> <p>\u6d41\u7a0b\uff1a</p> <ul> <li> <p>bfs()\u5bf9\u70b9\u5206\u5c42\uff0c\u627e\u589e\u5e7f\u8def</p> </li> <li> <p>dfs()\u591a\u8def\u589e\u5e7f</p> <p>(1)\u641c\u7d22\u987a\u5e8f\u4f18\u5316(\u5206\u5c42\u9650\u5236\u641c\u7d22\u6df1\u5ea6)</p> <p>(2)\u5f53\u524d\u5f27\u4f18\u5316(\u526a\u679d)</p> <p>(3)\u5269\u4f59\u6d41\u91cf\u4f18\u5316(\u526a\u679d)</p> <p>(4)\u6b8b\u679d\u4f18\u5316(\u526a\u679d)</p> </li> <li> <p>dinic()\u7d2f\u52a0\u53ef\u884c\u6d41</p> </li> </ul> <p>\u5982\u4e0b\u56fe\uff0c1\u4e3a\u7b2c1\u5c42\uff0c2\uff0c3\u4e3a\u7b2c2\u5c42\u2026\u20268\u4e3a\u7b2c4\u5c42</p> <p>\u5373d[1]=1,d[2]=d[3]=2,...,d[8]=4</p> <p>\u4ee5\u4e0a\u4f1a\u5728bfs\u65f6\u5904\u7406\u51fa\u6765</p> <p></p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/Dinic%E7%AE%97%E6%B3%95/#_1","title":"\u4ee3\u7801","text":"<pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=1e5;\n\nstruct edge{\n    int v,c,nxt;\n}e[N];\nint n,m,h[N],ans,idx=1,d[N],s,t,cur[N];\nvoid add(int x,int y,int b){\n    e[++idx]={y,b,h[x]};\n    h[x]=idx;\n}\nbool bfs(){//\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884c\u5206\u5c42 ,\u4e3adfs\u627e\u589e\u5e7f\u8def\u505a\u51c6\u5907 \n    memset(d,0,sizeof d);\n    queue&lt;int&gt;q;\n    q.push(s);d[s]=1;//\u6e90\u70b9\u662f\u7b2c\u4e00\u5c42 \n    while(q.size()){\n        int u=q.front();q.pop();\n        for(int i=h[u];i;i=e[i].nxt){\n            int v=e[i].v;\n            if(!d[v]&amp;&amp;e[i].c){//\u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u8fc7v\u5e76\u4e14\u8fd9\u6761\u8fb9\u6709\u5269\u4f59\u5bb9\u91cf \n                d[v]=d[u]/v\u70b9\u4f4d\u4e8eu\u7684\u4e0b\u4e00\u5c42 \n                q.push(v) ;\n                if(v==t)return 1;\n            }\n        }\n    }\n    return 0;\n} \nint dfs(int u,int mf){//\u5f53\u524d\u70b9u,(\u8fd9\u6761\u8def\u5f84\u4e0a)\u8d70\u5230u\u65f6\u7684\u5269\u4f59\u6d41\u91cf \n    //\u516533 \u4e0b37 \u56de42 \u79bb50 \n     if(u==t)return mf;//\u5982\u679c\u5df2\u7ecf\u5230\u8fbe\u6c47\u70b9,\u76f4\u63a5\u8fd4\u56de\n     int sum=0;//\u8ba1\u7b97u\u70b9\u53ef\u4ee5\u6d41\u51fa\u7684\u6d41\u91cf\u4e4b\u548c (e.g.\u5f53u=2\u65f6,\u6700\u540esum=3+3+4+2+3)\n\n     for(int i=cur[u];i;i=e[i].nxt){\n        cur[u]=i;//\u8bb0\u5f55\u4ece\u54ea\u4e00\u6761\u8fb9\u8d70\u51fa\u53bb\u4e86\uff0c\u5f53\u524d\u5f27\u4f18\u5316\n        int v=e[i].v;\n\n        if(d[v]==d[u]/\u5982\u679cv\u5728u\u7684\u4e0b\u4e00\u5c42 \u5e76\u4e14\u6709\u5269\u4f59\u5bb9\u91cf \n            int f=dfs(v,min(mf,e[i].c));//\u6b63\u5982EK\u4e2d\u7684'mf[v]=min(mf[u],e[i].c);' \n            //\u56de\n            e[i].c-=f;\n            e[i^1].c+=f;//\u66f4\u65b0\u6b8b\u7559\u7f51,\u5bf9\u7167EK \n            sum+=f;\n            mf-=f;//\u7c7b\u4f3c\u516b\u7687\u540e,\u8bf7\u601d\u8003! \n            if(!mf)break;//\u4f18\u5316.\u5f53\u5728u\u7684\u524d\u51e0\u6761\u5206\u652f\u5df2\u7ecf\u6d41\u5149\u4e86u\u7684\u53ef\u7528\u6d41\u91cf\u65f6,\u5c31\u4e0d\u7528\u8003\u8651\u5269\u4e0b\u7684\u5206\u652f\u4e86 \n         }\n     } \n     if(!sum)d[u]=0;//\u6b8b\u679d\u4f18\u5316.\u76ee\u524d\u8fd9\u6761\u8def\u6ca1\u6709\u53ef\u884c\u6d41\u4e86 \n     return sum;\n}\nint dinic(){//\u7d2f\u52a0\u7b54\u6848 \n    int ans=0;\n    while(bfs()){//\u53ef\u4ee5\u627e\u5230\u589e\u5149\u8def \n        memcpy(cur,h,sizeof h);//\u8bf7\u601d\u8003! \n        ans+=dfs(s,1e9);//\u8fd8\u662f\u90a3\u53e5\u8bdd'//\u6e90\u70b9\u7684\u6d41\u91cf\u4e0a\u9650\u4e3a\u65e0\u7a77\u5927,\u5373\u6e90\u70b9\u80fd\u4e3a\u540e\u9762\u63d0\u4f9b\u65e0\u9650\u5927\u7684\u6d41\u91cf' \n    }\n    return ans;\n} \nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s&gt;&gt;t;\n    for(int i=1;i&lt;=m;i++){\n        int u,v,w;\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        add(u,v,w);add(v,u,0);\n\n    } \n    cout&lt;&lt;dinic()&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/Dinic%E7%AE%97%E6%B3%95/#_2","title":"\u8f93\u51fa\u65b9\u6848","text":"<p>\u5b66\u4e60\u7b14\u8bb0 | \u7f51\u7edc\u6d41T2</p> <p>\u5b9e\u9645\u4e0a\u53ea\u8981\u626b\u63cf\u4e00\u904d\u6240\u6709\u8fb9\u5c31\u884c\u4e86\uff0c\u5bf9\u4e8e\u53ef\u80fd\u6ee1\u8db3\u6761\u4ef6\u7684\u8fb9\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c\\(e_i.c=0\\)\u5c31\u8bf4\u660e\u6ca1\u6709\u7a7a\u4f59\u6d41\u91cf\uff0c\u5373\u8fb9\\(i\\)\u6709\u6d41\u91cf\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/EK%E7%AE%97%E6%B3%95/","title":"EK\u7b97\u6cd5\u6c42\u6700\u5927\u6d41","text":"<p>\u8fc7\u7a0b</p> <p>e[i]\u5b58\u7b2ci\u6761\u51fa\u8fb9{v,c,ne}</p> <p>h[u]\u5b58u\u7684\u7b2c\u4e00\u6761\u51fa\u8fb9</p> <p>mf[v]\u5b58S-v\u7684\u8def\u5f84\u4e0a\u7684\u6d41\u91cf\u4e0a\u9650</p> <p>pre[v]\u5b58v\u7684\u524d\u9a71\u8fb9</p> <p>bfs()\u627e\u589e\u5e7f\u8def(\u6700\u77ed\u8def\u601d\u60f3)</p> <ul> <li> <p>1.\u521d\u59cb\u5316\uff0cmf[]=0,mf[S]=\u221e,S\u5165\u961f\u3002</p> </li> <li> <p>2.\u53ea\u8981\u961f\u4e0d\u7a7a\uff0cu\u70b9\u51fa\u961f\uff0c</p> <ul> <li> <p>(1)\u679a\u4e3eu\u7684\u6240\u6709\u51fa\u8fb9\uff0c\u66f4\u65b0u\u7684\u6d41\u91cf\u4e0a\u9650\uff0c\u8bb0\u5f55\u524d\u9a71\u8fb9\uff0c\u6269\u5c55\u513f\u5b50\u5165\u961f\u3002</p> </li> <li> <p>(2)\u82e5\u80fd\u8d70\u5230T\u70b9\uff0c\u8fd4\u56detrue\u3002</p> </li> <li> <p>(3)\u82e5\u4e0d\u80fd\u8d70\u5230T\u70b9\uff0c\u8fd4\u56defalse\u3002</p> </li> </ul> </li> </ul> <p>EK()\u6c42\u6700\u5927\u6d41(\u7c7b\u4f3c\u6324\u7259\u818f)</p> <p>\u5faa\u73af\u627e\u589e\u5e7f\u8def\uff0c\u6bcf\u627e\u5230\u4e00\u6761\u540e\uff1a</p> <ul> <li> <p>(1)\u9006\u5e8f\u66f4\u65b0\u6b8b\u7559\u7f51\uff0c\u5bb9\u91cf\u201c\u6b64\u6d88\u5f7c\u957f\u201d\u3002</p> </li> <li> <p>(2)\u7d2f\u52a0\u53ef\u884c\u6d41\uff0c\u6700\u540e\u8fd4\u56de\u6700\u5927\u6d41\u3002</p> </li> </ul>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/EK%E7%AE%97%E6%B3%95/#1","title":"\u4f8b\u9898 #1","text":"<p>\u5982\u9898\uff0c\u7ed9\u51fa\u4e00\u4e2a\u7f51\u7edc\u56fe\uff0c\u4ee5\u53ca\u5176\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u6c42\u51fa\u5176\u7f51\u7edc\u6700\u5927\u6d41\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u56db\u4e2a\u6b63\u6574\u6570 \\(n,m,s,t\\)\uff0c\u5206\u522b\u8868\u793a\u70b9\u7684\u4e2a\u6570\u3001\u6709\u5411\u8fb9\u7684\u4e2a\u6570\u3001\u6e90\u70b9\u5e8f\u53f7\u3001\u6c47\u70b9\u5e8f\u53f7\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6b63\u6574\u6570 \\(u_i,v_i,w_i\\)\uff0c\u8868\u793a\u7b2c \\(i\\) \u6761\u6709\u5411\u8fb9\u4ece \\(u_i\\) \u51fa\u53d1\uff0c\u5230\u8fbe \\(v_i\\)\uff0c\u8fb9\u6743\u4e3a \\(w_i\\)\uff08\u5373\u8be5\u8fb9\u6700\u5927\u6d41\u91cf\u4e3a \\(w_i\\)\uff09\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5373\u4e3a\u8be5\u7f51\u7edc\u7684\u6700\u5927\u6d41\u3002</p> <ul> <li>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(1 \\leq n\\leq200\\)\uff0c\\(1 \\leq m\\leq 5000\\)\uff0c\\(0 \\leq w\\lt 2^{31}\\)\u3002</li> </ul>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/EK%E7%AE%97%E6%B3%95/#_1","title":"\u4ee3\u7801","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=1e4+5;\nint mf[N];//\u6700\u5927\u6d41\u91cfmaxflow \nint s,t,pre[N],n,m,u,v,w;\nstruct edge{\n    int v,c,nxt;\n}e[20*N];\nint h[N],idx=1;//\u8fb9\u7684id\u4ece2\u5f00\u59cb\u5b58,\u56e0\u4e3a\u8fb9\u4e0e\u6b8b\u7559\u8fb9\u5bf9\u5e94,\u4f7f\u7528i^1\u53ef\u4ee5\u8fc5\u901f\u5728n\u4e0en+1\u4e4b\u95f4\u76f8\u4e92\u8f6c\u6362(n\u4e3a\u5076\u6570),\u4e0d\u7528\u7279\u5224 \nvoid add(int a,int b,int c){\n    e[++idx]={b,c,h[a]};\n    h[a]=idx;\n}\nbool bfs(){//\u627e\u4e00\u6761\u53ef\u4ee5\u4eces\u5230t\u7684\u6709\u6548\u8def\u5f84 \n    memset(mf,0,sizeof mf);//\u5c06\u6bcf\u4e2a\u70b9\u7684\u6d41\u91cf\u4e0a\u9650\u53d8\u62100\n    queue&lt;int&gt; q;\n    q.push(s);mf[s]=1e9;//\u6e90\u70b9\u7684\u6d41\u91cf\u4e0a\u9650\u4e3a\u65e0\u7a77\u5927,\u5373\u6e90\u70b9\u80fd\u4e3a\u540e\u9762\u63d0\u4f9b\u65e0\u9650\u5927\u7684\u6d41\u91cf \n    while(q.size()){\n        int u=q.front();q.pop();\n        for(int i=h[u];i;i=e[i].nxt){//\u626b\u63cf\u51fa\u8fb9 \n            int v=e[i].v;\n            if(!mf[v]&amp;&amp;e[i].c){//\u5982\u679c \u6ca1\u6709\u8bbf\u95ee\u8fc7v(\u5728\u672c\u8f6ebfs\u4e2d,\u5373\u78b0\u5230\u73af\u4e0d\u8d70\u56de\u5934\u8def)\u5e76\u4e14\u5b58\u5728\u8fd9\u6761\u8fb9/\u8fd9\u6761\u8fb9\u5728\u4e4b\u524d\u8d70\u8fc7\u4f46\u8fd8\u6709\u7a7a\u4f59\u5bb9\u91cf(\u5bb9\u91cf&gt;0) \n                //***\u91cd\u8981 \n                mf[v]=min(mf[u],e[i].c);//\u66f4\u65b0\u6d41\u91cf\u4e0a\u9650\u4e3a\u4e4b\u524d\u66f4\u65b0\u8fc7\u7684\u53ef\u4ee5\u5230\u8fbeu\u7684\u6d41\u91cf(\u5373\u70b9u\u80fd\u63d0\u4f9b\u7684\u6700\u5927\u6d41\u91cf)\u4e0eu-v\u89c1\u4e4b\u95f4\u7684\u5bb9\u91cf\u7684min \n                pre[v]=i; //\u5b58\u76ee\u524d\u8def\u5f84\u4e0a\u70b9v\u7684\u524d\u9a71\u8fb9\n                //***\n                q.push(v);\n                if(v==t)return 1;//\u8bf4\u660e\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def \n                 //\u627e\u589e\u5149\u8def\u76f8\u5f53\u4e8e\u627e\u5230\u4e00\u6761\u65b0\u7684\u6d41\u91cf\u5230t,\u56de\u987e\u4e8c\u5206\u56fe\u7684\u589e\u5149\u8def,\u4e4b\u524d\u5df2\u7ecf\u627e\u5230\u7684\u589e\u5149\u8def\u7684\u8def\u5f84\u53ef\u4ee5\u8c03\u6574,\u4f46\u6d41\u91cf\u4e0d\u4f1a\u53d8\u5316(\u5373\u4e0d\u4f1a\u4f7f\u4e4b\u524d\u5df2\u7ecf\u6709\u7684\u6d41\u91cf\u51cf\u5c0f) \n            }\n        }\n    }\n    return 0;\n} \nint EK(){\n    int nf=0;//\u5f53\u524d\u6d41\u91cfnowflow \n    while(bfs()){//\u65b0\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def,\u8def\u7684\u6d41\u91cf\u4e3amf[t] (\u6d41\u91cf\u662f\u4eces\u5f00\u59cb\u5728\u5230\u8fbet\u9014\u4e2d\u53d7\u5230\u9650\u5236\u9010\u6e10\u51cf\u5c0f\u7684,\u56e0\u6b64\u5230\u8fbet\u7684\u6d41\u91cf\u624d\u662f\u8fd9\u6761\u8def\u7684\u6d41\u91cf)\n        int v=t;\n        while(v!=s){//\u4ecet\u5f80\u56de\u5728\u66f4\u65b0\u6b8b\u7559\u7f51 \n            int i=pre[v];\n            //***\u91cd\u8981 \n            e[i].c-=mf[t];//\u4e3b\u8fb9,\u7a7a\u4f59\u7684\u5bb9\u91cf\u51cf\u5c11\u4e86 \n            e[i^1].c+=mf[t];//\u6b8b\u7559\u8fb9(\u53cd\u5411\u8fb9) \n            //\u6b64\u6d88\u5f7c\u957f \n            //***\n            v=e[i^1].v; \n        }\n        nf+=mf[t];//\u6c47\u5165\u4e00\u80a1\u65b0\u7684\u6d41\u91cf \n    }\n    return nf; \n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s&gt;&gt;t;\n    for(int i=1;i&lt;=m;i++){\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        add(u,v,w);add(v,u,0);\n\n    }\n    cout&lt;&lt;EK()&lt;&lt;endl; \n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E4%B8%8A%E4%B8%8B%E7%95%8C%E7%BD%91%E7%BB%9C%E6%B5%81/","title":"\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41","text":"<p>\u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0(60): \u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41</p> <p>\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u53ef\u4ee5\u770b\u505a\u666e\u901a\u7f51\u7edc\u6d41\u7684\u5347\u7ea7\u7248\uff0c\u73b0\u5728\u5bf9\u4e8e\u6d41\u91cf\u7f51\u7edc\uff0c\u6211\u4eec\u4e0d\u518d\u53ea\u5173\u6ce8\u5176\u6d41\u91cf\u7684**\u4e0a\u754c**\uff0c\u800c\u662f\u540c\u65f6\u5173\u6ce8\u6d41\u91cf\u7684**\u4e0a\u4e0b\u754c**\u3002</p> <p>\u4ee5\u4e0b\u6458\u81ea\u77e5\u4e4e\uff0c\u4ec5\u9650\u6613\u61c2\u7684\u5185\u5bb9\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E4%B8%8A%E4%B8%8B%E7%95%8C%E7%BD%91%E7%BB%9C%E6%B5%81/#_2","title":"\u65e0\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41","text":"<p>\u8fd9\u662f\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u4e2d\u6700\u7b80\u5355\u7684\u4e00\u79cd\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6ca1\u6709\u6e90\u70b9\u548c\u6c47\u70b9\u3001\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u6709\u4e0a\u4e0b\u754c\u7684\u6d41\u91cf\u7f51\u7edc\uff0c\u95ee\u662f\u5426\u5b58\u5728\u4e00\u79cd\u53ef\u884c\u6d41\u4f7f\u5f97\u6d41\u91cf\u5e73\u8861\u3002</p> <p></p> <p>\u505a\u6cd5\u662f\uff0c\u6211\u4eec\u628a\u5b83**\u62c6**\u6210\u4e24\u4e2a\u7ed3\u6784\u4e0e\u539f\u56fe\u76f8\u540c\u7684\u666e\u901a\u7f51\u7edc\uff0c\u4e00\u4e2a\u6bcf\u6761\u8fb9\u7684\u5bb9\u91cf\u4e3a\u539f\u7f51\u7edc\u5bf9\u5e94\u8fb9\u7684**\u6d41\u91cf\u4e0b\u754c**\uff0c\u53e6\u4e00\u4e2a\u4e3a\u5bf9\u5e94\u8fb9\u7684**\u6d41\u91cf\u4e0a\u754c\u4e0e\u4e0b\u754c\u4e4b\u5dee**\u3002</p> <p></p> <p>\u6211\u4eec\u5e0c\u671b\u4e0b\u754c\u7f51\u7edc\u548c\u5dee\u7f51\u7edc\u7684\u6d41\u76f8\u52a0\u540e\u6070\u597d\u662f\u539f\u56fe\u7684\u4e00\u4e2a\u53ef\u884c\u6d41\uff0c\u8fd9\u9996\u5148\u8981\u6c42\u4e0b\u754c\u7f51\u7edc\u662f\u6ee1\u6d41\u7684\uff08\u53ef\u884c\u6d41\u5fc5\u987b\u8fbe\u5230\u6bcf\u6761\u8fb9\u7684\u4e0b\u754c\uff09\u3002\u4f46\u662f\u4e0b\u754c\u7f51\u7edc\u6ee1\u6d41\u540e\u4e0d\u4e00\u5b9a\u6d41\u91cf\u5e73\u8861\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u5dee\u7f51\u7edc\u8fdb\u884c\u4e00\u5b9a\u7684\u4fee\u6539\u4ee5\u5f25\u8865\u8fd9\u79cd\u4e0d\u5e73\u8861\u3002</p> <p>\u6211\u4eec\u5206\u522b\u8003\u8651\u4e0b\u754c\u7f51\u7edc\u7684\u6bcf\u4e2a\u70b9\u3002A\u70b9\uff0c\u6d41\u5165\u91cf\u4e3a3\uff0c\u6d41\u51fa\u91cf\u4e5f\u4e3a3\uff0c\u6240\u4ee5\u662f\u5e73\u8861\u7684\uff0c\u90a3\u4e48\u5728\u5dee\u7f51\u7edc\u4e2d\uff0c\u4e5f\u5e94\u8be5\u662f\u5e73\u8861\u7684\uff0c\u6240\u4ee5\u4e0d\u505a\u4fee\u6539\u3002B\u70b9\uff0c\u6d41\u5165\u91cf\u4e3a3\uff0c\u6d41\u51fa\u91cf\u4e3a1\uff0c\u6d41\u5165\u6bd4\u6d41\u51fa\u591a2\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u5728\u5dee\u7f51\u7edc\u4e2d\uff0cB\u7684\u6d41\u51fa\u5e94\u8be5\u6bd4\u6d41\u5165\u591a2\uff0c\u4e8e\u662f\u6211\u4eec\u5728\u5dee\u7f51\u7edc\u4e2d\u65b0\u8bbe\u4e00\u4e2a**\u6e90\u70b9**\uff0c\u7136\u540e\u52a0\u5165\u4e00\u6761\u5bb9\u91cf\u4e3a2\u7684**\u9644\u52a0\u8fb9**\u4ece\u6e90\u70b9\u8fde\u5411B\uff0c\u8fd9\u6837\u5728\u5dee\u7f51\u7edc\u5e73\u8861\u65f6\uff0c\u9664\u53bb\u9644\u52a0\u8fb9\uff0cB\u70b9\u7684\u6d41\u51fa\u6070\u597d\u6bd4\u6d41\u5165\u591a2\uff0cC\u70b9\u4e0eB\u70b9\u7c7b\u4f3c\u3002D\u70b9\u5219\u76f8\u53cd\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5728\u5dee\u7f51\u7edc\u4e2dD\u70b9\u6d41\u5165\u6bd4\u6d41\u51fa\u591a2\uff0c\u6240\u4ee5\u6211\u4eec\u65b0\u8bbe\u4e00\u4e2a**\u6c47\u70b9**\uff0c\u7136\u540e\u4eceD\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a2\u7684\u9644\u52a0\u8fb9\u5230\u6c47\u70b9\uff0cE\u70b9\u53c8\u548cD\u7c7b\u4f3c\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e0b\u754c\u7f51\u7edc\u4e2d\u67d0\u4e2a\u70b9\u6709x\u7684\u51c0\u6d41\u5165\uff0c\u5728\u5dee\u7f51\u7edc\u4e2d\u6211\u4eec\u5c31\u4ece\u6e90\u70b9\u5411\u5b83\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3ax\u7684\u9644\u52a0\u8fb9\uff1b\u76f8\u53cd\uff0c\u5982\u679c\u4e0b\u754c\u7f51\u7edc\u4e2d\u67d0\u4e2a\u70b9\u6709x\u7684\u51c0\u6d41\u51fa\uff0c\u5728\u5dee\u7f51\u7edc\u4e2d\u6211\u4eec\u5c31\u4ece\u5b83\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3ax\u7684\u9644\u52a0\u8fb9\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u628a\u5dee\u7f51\u7edc\u4fee\u6539\u5982\u4e0b\uff1a</p> <p></p> <p>\u5728\u5dee\u7f51\u7edc\u4e0a\u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u628a\u6bcf\u6761\u975e\u9644\u52a0\u8fb9\u7684\u6d41\uff0c\u52a0\u4e0a\u4e0b\u754c\u7f51\u7edc\u7684\u6ee1\u6d41\uff0c\u5c31\u662f\u4e00\u4e2a\u53ef\u884c\u6d41\u3002\u4f46\u662f\uff0c\u5982\u679c\u8dd1\u5b8c\u6700\u5927\u6d41\u53d1\u73b0\uff0c\u5b58\u5728\u9644\u52a0\u8fb9\u672a\u6ee1\u6d41\uff0c\u90a3\u8bf4\u660e\u5e73\u8861\u6761\u4ef6\u6ca1\u6709\u5f97\u5230\u6ee1\u8db3\uff0c\u4e8e\u662f\u539f\u56fe\u4e0d\u5b58\u5728\u53ef\u884c\u6d41\u3002</p> <p>\u5728\u5b9e\u9645\u4e2d\uff0c\u662f\u4e0d\u9700\u8981\u5efa\u7acb\u4e0b\u754c\u7f51\u7edc\u7684\uff0c\u53ea\u9700\u8981\u5bf9\u5dee\u7f51\u7edc\u8fdb\u884c\u64cd\u4f5c\u5373\u53ef\u3002\u53e6\u5916\u6700\u540e\u5224\u65ad\u7684\u65f6\u5019\u5e76\u65e0\u5fc5\u8981\u904d\u5386\u6240\u6709\u9644\u52a0\u8fb9\uff0c\u800c\u53ea\u9700\u8981\u5224\u65ad\u6240\u6709\u4ece\u6e90\u70b9\u51fa\u53d1\u7684\u8fb9\uff0c\u6216\u8005\u5224\u65ad\u6240\u6709\u8fde\u5411\u6c47\u70b9\u7684\u8fb9\u5373\u53ef\uff0c\u56e0\u4e3a\u6839\u636e\u7f51\u7edc\u6d41\u7684\u6027\u8d28\uff0c\u4e24\u8005\u5bb9\u91cf\u548c\u5e94\u8be5\u76f8\u7b49\uff0c\u4e8e\u662f\u5b83\u4eec\u8981\u4e48\u90fd\u6ee1\u6d41\uff0c\u8981\u4e48\u90fd\u4e0d\u6ee1\u6d41\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E4%B8%8A%E4%B8%8B%E7%95%8C%E7%BD%91%E7%BB%9C%E6%B5%81/#_3","title":"\u6709\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41","text":"<p>\u4ece\u6c47\u70b9\u5230\u6e90\u70b9\u8fde\u4e00\u6761\u4e0b\u754c\u4e3a \\(0\\) \uff0c\u4e0a\u754c\u4e3a \\(\\inf\\) \u7684\u9644\u52a0\u8fb9\uff0c\u5f97\u5230\u4e00\u5f20\u548c\u539f\u56fe\u7b49\u4ef7\u7684\u65e0\u6e90\u6c47\u6d41\u91cf\u7f51\u7edc\uff0c\u4e8e\u662f\u8f6c\u5316\u6210\u4e86\u65e0\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u95ee\u9898\u3002\u6b64\u65f6\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u53ef\u884c\u6d41\u6d41\u91cf\uff0c\u5373\u4e3a\u4ece\u6c47\u70b9\u5230\u6e90\u70b9\u7684\u90a3\u6761\u9644\u52a0\u8fb9\u7684\u6d41\u91cf\uff08\u6ce8\u610f\u4e0b\u754c\u7f51\u7edc\u4e2d\u5bf9\u5e94\u8fb9\u6d41\u91cf\u4e3a0\uff09\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E4%B8%8A%E4%B8%8B%E7%95%8C%E7%BD%91%E7%BB%9C%E6%B5%81/#_4","title":"\u6709\u6e90\u6c47\u6709\u4e0a\u4e0b\u754c\u6700\u5927\u6d41","text":""},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E4%B8%8A%E4%B8%8B%E7%95%8C%E7%BD%91%E7%BB%9C%E6%B5%81/#_5","title":"\u6709\u4e0a\u4e0b\u754c\u6700\u5c0f\u8d39\u7528\u53ef\u884c\u6d41","text":"<p>\u548c\uff08\u65e0/\u6709\u6e90\u6c47\uff09\u6709\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u7684\u539f\u7406\u76f8\u540c\uff0c\u4e5f\u662f\u62c6\u6210\u4e24\u4e2a\u7f51\u7edc\u3002\u6240\u6709\u9644\u52a0\u8fb9\u7684\u8d39\u7528\u8bbe\u4e3a0\u3002\u6700\u540e\u7684\u8d39\u7528\u662f\u4e0b\u754c\u7f51\u7edc\u6ee1\u6d41\u7684\u8d39\u7528\uff0c\u52a0\u4e0a\u5728\u5dee\u7f51\u7edc\u4e0a\u8dd1MCMF\uff08\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff09\u540e\u5f97\u5230\u7684\u8d39\u7528\u4e4b\u548c\u3002\u800c\u524d\u8005\u5373\u6240\u6709\u8fb9\u7684\u5bb9\u91cf\u4e0e\u8d39\u7528\u4e58\u79ef\u7684\u548c\u3002\u6ce8\u610f\uff0c\u8fd9\u6837\u6c42\u51fa\u6765\u7684\u662f\u6ee1\u8db3\u6700\u5c0f\u8d39\u7528\u7684\u53ef\u884c\u6d41\uff0c\u800c\u4e0d\u662f\u6ee1\u8db3\u6d41\u6700\u5927\u7684\u524d\u63d0\u4e0b\u8d39\u7528\u6700\u5c0f\u7684\u6d41\u3002</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E6%9C%80%E5%B0%8F%E5%89%B2/","title":"\u7f51\u7edc\u6d41 \u6700\u5c0f\u5272 Dinic \u7b97\u6cd5","text":"<p>363 \u7f51\u7edc\u6d41 \u6700\u5c0f\u5272 Dinic \u7b97\u6cd5_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p></p> <p>\u6ce8\uff1a\u5bb9\u6613\u5212\u5206\u5747\u53ef</p> <p></p> <p>\u5982\u4e0a\u56fe\u3002\u5de6\u8fb9\u4e3a\\(S\\)\uff0c\u53f3\u8fb9\u4e3a\\(T\\)\uff0c\\(c(S,T)=7+6\\)\u53731\u21922\u548c1\u21924\u7684\u5bb9\u91cf\u548c\uff0c\u4e0d\u5305\u62ec\u4ece\\(T\\)\u5230\\(S\\)\u7684\uff08\u53735\u21921\uff09</p> <p></p> <p>\u5982\u4e0a\u56fe\u3002\u5de6\u8fb9\u4e3a\\(S\\)\uff0c\u53f3\u8fb9\u4e3a\\(T\\)\uff0c\\(c(S,T)=2+1+2\\)\u53732\u21923\u548c2\u21925\u548c4\u21925\u7684\u5bb9\u91cf\u548c\uff0c\u4e0d\u5305\u62ec\u4ece\\(T\\)\u5230\\(S\\)\u7684\uff08\u53735\u21921\uff09</p> <p></p> <p></p> <p>\u5373\uff1a\u6700\u5927\u6d41\u7684\u6d41\u91cf=\u6700\u5c0f\u5272\u7684\u5bb9\u91cf</p> <p></p> <p>\u8bf7\u601d\u8003\u8bc1\u660e\uff01</p> <p></p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E6%9C%80%E5%B0%8F%E5%89%B2/#q1","title":"Q1 \u6c42\u6700\u5c0f\u5272","text":"<p>\u5176\u5b9e\u5c31\u662f\u6c42\u6700\u5927\u6d41\uff0c\u6a21\u677f\u5373\u53ef</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E6%9C%80%E5%B0%8F%E5%89%B2/#q2","title":"Q2","text":"<p>\u5728\u6c42\u5b8c\u6700\u5927\u6d41\u540e \u5bf9\u6b8b\u7559\u7f51\u8fdb\u884cdfs</p> <pre><code>void mincut(int u){\n    vis[u]=1;\n    for(int i=h[u];i;i=e[i].nxt){\n        int v=e[i].v;\n        if(!vis[v])&amp;&amp;e[i].c){mincut(v);}\n    }\n}\n</code></pre> <p>\u626b\u63cf\u540e\u88ab\u6807\u8bb0\u7684\u70b9\u5c31\u662f\\(S\\)\u90e8\u5206\uff0c\u5426\u5219\u5c31\u662f\\(T\\)\u90e8\u5206</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E6%9C%80%E5%B0%8F%E5%89%B2/#q3","title":"Q3","text":"<p>\u5c06\u6b63\u8fb9\u4e3a1\uff0c\u53cd\u5411\u8fb9\u4e3a0\uff0c\u518d\u6b21\u8fd0\u884c\u4e00\u904ddinic</p> <pre><code>//a[],b[]\u8bb0\u5f55\u8f93\u5165\u7684\u70b9\u5bf9\nidx=1;\nmemset(h,0,sizeof h);\nfor(int i=1;i&lt;=m;i++){\n    add(a[i],b[i],1);\n    add(b[i],a[i],0);\n}\ncout&lt;&lt;dinic()&lt;&lt;endl;\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E6%9C%80%E5%B0%8F%E5%89%B2/#1-usaco44-pollutant-control","title":"\u4f8b\u9898 #1 [USACO4.4] \u8ffd\u67e5\u574f\u725b\u5976 Pollutant Control","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u4f60\u7b2c\u4e00\u5929\u63a5\u624b\u4e09\u9e7f\u725b\u5976\u516c\u53f8\u5c31\u53d1\u751f\u4e86\u4e00\u4ef6\u5012\u9709\u7684\u4e8b\u60c5\uff1a\u516c\u53f8\u4e0d\u5c0f\u5fc3\u53d1\u9001\u4e86\u4e00\u6279\u6709\u4e09\u805a\u6c30\u80fa\u7684\u725b\u5976\u3002</p> <p>\u5f88\u4e0d\u5e78\uff0c\u4f60\u53d1\u73b0\u8fd9\u4ef6\u4e8b\u7684\u65f6\u5019\uff0c\u6709\u4e09\u805a\u6c30\u80fa\u7684\u725b\u5976\u5df2\u7ecf\u8fdb\u5165\u4e86\u9001\u8d27\u7f51\u3002\u8fd9\u4e2a\u9001\u8d27\u7f51\u5f88\u5927\uff0c\u800c\u4e14\u5173\u7cfb\u590d\u6742\u3002\u4f60\u77e5\u9053\u8fd9\u6279\u725b\u5976\u8981\u53d1\u7ed9\u54ea\u4e2a\u96f6\u552e\u5546\uff0c\u4f46\u662f\u8981\u628a\u8fd9\u6279\u725b\u5976\u9001\u5230\u4ed6\u624b\u4e2d\u6709\u8bb8\u591a\u79cd\u9014\u5f84\u3002</p> <p>\u9001\u8d27\u7f51\u7531\u4e00\u4e9b\u4ed3\u5e93\u548c\u8fd0\u8f93\u5361\u8f66\u7ec4\u6210\uff0c\u6bcf\u8f86\u5361\u8f66\u90fd\u5728\u5404\u81ea\u56fa\u5b9a\u7684\u4e24\u4e2a\u4ed3\u5e93\u4e4b\u95f4\u5355\u5411\u8fd0\u8f93\u725b\u5976\u3002\u5728\u8ffd\u67e5\u8fd9\u4e9b\u6709\u4e09\u805a\u6c30\u80fa\u7684\u725b\u5976\u7684\u65f6\u5019\uff0c\u6709\u5fc5\u8981\u4fdd\u8bc1\u5b83\u4e0d\u88ab\u9001\u5230\u96f6\u552e\u5546\u624b\u91cc\uff0c\u6240\u4ee5\u5fc5\u987b\u4f7f\u67d0\u4e9b\u8fd0\u8f93\u5361\u8f66\u505c\u6b62\u8fd0\u8f93\uff0c\u4f46\u662f\u505c\u6b62\u6bcf\u8f86\u5361\u8f66\u90fd\u4f1a\u6709\u4e00\u5b9a\u7684\u7ecf\u6d4e\u635f\u5931\u3002</p> <p>\u4f60\u7684\u4efb\u52a1\u662f\uff0c\u5728\u4fdd\u8bc1\u574f\u725b\u5976\u4e0d\u9001\u5230\u96f6\u552e\u5546\u7684\u524d\u63d0\u4e0b\uff0c\u5236\u5b9a\u51fa\u505c\u6b62\u5361\u8f66\u8fd0\u8f93\u7684\u65b9\u6848\uff0c\u4f7f\u635f\u5931\u6700\u5c0f\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c \\(1\\) \u884c\u4e24\u4e2a\u6574\u6570 \\(N\\)\u3001\\(M\\)\uff0c\\(N\\) \u8868\u793a\u4ed3\u5e93\u7684\u6570\u76ee\uff0c\\(M\\) \u8868\u793a\u8fd0\u8f93\u5361\u8f66\u7684\u6570\u91cf\u3002\u4ed3\u5e93 \\(1\\) \u4ee3\u8868\u53d1\u8d27\u5de5\u5382\uff0c\u4ed3\u5e93 \\(N\\) \u4ee3\u8868\u6709\u4e09\u805a\u6c30\u80fa\u7684\u725b\u5976\u8981\u53d1\u5f80\u7684\u96f6\u552e\u5546\u3002</p> <p>\u7b2c \\(2\\sim M+1\\) \u884c\uff0c\u6bcf\u884c \\(3\\) \u4e2a\u6574\u6570 \\(S_i\\)\u3001\\(E_i\\) \u548c \\(C_i\\)\u3002\u5176\u4e2d \\(S_i\\)\u3001\\(E_i\\) \u5206\u522b\u8868\u793a\u8fd9\u8f86\u5361\u8f66\u7684\u51fa\u53d1\u4ed3\u5e93\u548c\u76ee\u7684\u4ed3\u5e93\u3002\\(C_i\\) \u8868\u793a\u8ba9\u8fd9\u8f86\u5361\u8f66\u505c\u6b62\u8fd0\u8f93\u7684\u635f\u5931\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e24\u4e2a\u6574\u6570 \\(C\\) \u548c \\(T\\)\uff0c\\(C\\) \u8868\u793a\u6700\u5c0f\u7684\u635f\u5931\uff0c\\(T\\) \u8868\u793a\u5728\u635f\u5931\u6700\u5c0f\u7684\u524d\u63d0\u4e0b\uff0c\u6700\u5c11\u8981\u505c\u6b62\u7684\u5361\u8f66\u6570\u3002</p> <p>\u5bf9\u4e8e \\(100 \\%\\) \u7684\u6570\u636e\uff0c\u6ee1\u8db3 \\(2 \\le N \\le 32\\)\uff0c\\(0 \\le M \\le 10^3\\)\uff0c\\(1 \\le S_i \\le N\\)\uff0c\\(1 \\le E_i \\le N\\)\uff0c\\(0 \\le C_i \\le 2 \\times 10^6\\)\u3002</p> <p>\u9898\u76ee\u7ffb\u8bd1\u6765\u81ea NOCOW\u3002</p> <p>USACO Training Section 4.4</p> <p>\u56e0\u4e3a\u672c\u9898\u65e2\u8981\u8f93\u51fa\u6700\u5c0f\u5272\u7684\u503c\u53c8\u8981\u8f93\u51fa\u5272\u7684\u8fb9\u6570\uff0c\u524d\u8005\u597d\u6c42\u5173\u952e\u662f\u540e\u8005\u5982\u4f55\u53bb\u6c42\u66f4\u7b80\u5355\uff0c\u5bb9\u6613\u60f3\u5230\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5efa\u4e24\u6b21\u56fe\uff0c\u4e00\u6b21\u6309\u539f\u8fb9\u6743\u5efa\u56fe\u8dd1\u6700\u5927\u6d41\u6c42\u5f97\u6700\u5c0f\u5272\uff0c\u518d\u6309\u8fb9\u6743\u4e3a1\u5efa\u56fe\u8dd1\u6700\u5927\u6d41\u6c42\u5272\u7684\u8fb9\u6570\uff0c\u8fd9\u662f\u4e00\u79cd\u601d\u8def;</p> <p>\u5f53\u7136\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u6362\u79cd\u601d\u8def\u7528\u4e00\u6b21\u6700\u5927\u6d41\u641e\u5b9a\uff0c\u53ea\u9700\u5efa\u56fe\u65f6\u5c06\u8fb9\u6743$w=w\\times a/a<code>\uff0c\u5272\u7684\u8fb9\u6570\u4e3a</code>ans%a`\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=1e4+5;\nint mf[N];//\u6700\u5927\u6d41\u91cfmaxflow \nint s,t,pre[N],n,m,u,v,w;\nstruct edge{\n    int v,c,nxt;\n}e[20*N];\nint h[N],idx=1;//\u8fb9\u7684id\u4ece2\u5f00\u59cb\u5b58,\u56e0\u4e3a\u8fb9\u4e0e\u6b8b\u7559\u8fb9\u5bf9\u5e94,\u4f7f\u7528i^1\u53ef\u4ee5\u8fc5\u901f\u5728n\u4e0en+1\u4e4b\u95f4\u76f8\u4e92\u8f6c\u6362(n\u4e3a\u5076\u6570),\u4e0d\u7528\u7279\u5224 \nvoid add(int a,int b,int c){\n    e[++idx]={b,c,h[a]};\n    h[a]=idx;\n}\nbool bfs(){//\u627e\u4e00\u6761\u53ef\u4ee5\u4eces\u5230t\u7684\u6709\u6548\u8def\u5f84 \n    memset(mf,0,sizeof mf);//\u5c06\u6bcf\u4e2a\u70b9\u7684\u6d41\u91cf\u4e0a\u9650\u53d8\u62100\n    queue&lt;int&gt; q;\n    q.push(s);mf[s]=1e9;//\u6e90\u70b9\u7684\u6d41\u91cf\u4e0a\u9650\u4e3a\u65e0\u7a77\u5927,\u5373\u6e90\u70b9\u80fd\u4e3a\u540e\u9762\u63d0\u4f9b\u65e0\u9650\u5927\u7684\u6d41\u91cf \n    while(q.size()){\n        int u=q.front();q.pop();\n        for(int i=h[u];i;i=e[i].nxt){//\u626b\u63cf\u51fa\u8fb9 \n            int v=e[i].v;\n            if(!mf[v]&amp;&amp;e[i].c){//\u5982\u679c \u6ca1\u6709\u8bbf\u95ee\u8fc7v(\u5728\u672c\u8f6ebfs\u4e2d,\u5373\u78b0\u5230\u73af\u4e0d\u8d70\u56de\u5934\u8def)\u5e76\u4e14\u5b58\u5728\u8fd9\u6761\u8fb9/\u8fd9\u6761\u8fb9\u5728\u4e4b\u524d\u8d70\u8fc7\u4f46\u8fd8\u6709\u7a7a\u4f59\u5bb9\u91cf(\u5bb9\u91cf&gt;0) \n                //***\u91cd\u8981 \n                mf[v]=min(mf[u],e[i].c);//\u66f4\u65b0\u6d41\u91cf\u4e0a\u9650\u4e3a\u4e4b\u524d\u66f4\u65b0\u8fc7\u7684\u53ef\u4ee5\u5230\u8fbeu\u7684\u6d41\u91cf(\u5373\u70b9u\u80fd\u63d0\u4f9b\u7684\u6700\u5927\u6d41\u91cf)\u4e0eu-v\u89c1\u4e4b\u95f4\u7684\u5bb9\u91cf\u7684min \n                pre[v]=i; //\u5b58\u76ee\u524d\u8def\u5f84\u4e0a\u70b9v\u7684\u524d\u9a71\u8fb9\n                //***\n                q.push(v);\n                if(v==t)return 1;//\u8bf4\u660e\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def \n                 //\u627e\u589e\u5149\u8def\u76f8\u5f53\u4e8e\u627e\u5230\u4e00\u6761\u65b0\u7684\u6d41\u91cf\u5230t,\u56de\u987e\u4e8c\u5206\u56fe\u7684\u589e\u5149\u8def,\u4e4b\u524d\u5df2\u7ecf\u627e\u5230\u7684\u589e\u5149\u8def\u7684\u8def\u5f84\u53ef\u4ee5\u8c03\u6574,\u4f46\u6d41\u91cf\u4e0d\u4f1a\u53d8\u5316(\u5373\u4e0d\u4f1a\u4f7f\u4e4b\u524d\u5df2\u7ecf\u6709\u7684\u6d41\u91cf\u51cf\u5c0f) \n            }\n        }\n    }\n    return 0;\n} \nint EK(){\n    int nf=0;//\u5f53\u524d\u6d41\u91cfnowflow \n    while(bfs()){//\u65b0\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def,\u8def\u7684\u6d41\u91cf\u4e3amf[t] (\u6d41\u91cf\u662f\u4eces\u5f00\u59cb\u5728\u5230\u8fbet\u9014\u4e2d\u53d7\u5230\u9650\u5236\u9010\u6e10\u51cf\u5c0f\u7684,\u56e0\u6b64\u5230\u8fbet\u7684\u6d41\u91cf\u624d\u662f\u8fd9\u6761\u8def\u7684\u6d41\u91cf)\n        int v=t;\n        while(v!=s){//\u4ecet\u5f80\u56de\u5728\u66f4\u65b0\u6b8b\u7559\u7f51 \n            int i=pre[v];\n            //***\u91cd\u8981 \n            e[i].c-=mf[t];//\u4e3b\u8fb9,\u7a7a\u4f59\u7684\u5bb9\u91cf\u51cf\u5c11\u4e86 \n            e[i^1].c+=mf[t];//\u6b8b\u7559\u8fb9(\u53cd\u5411\u8fb9) \n            //\u6b64\u6d88\u5f7c\u957f \n            //***\n            v=e[i^1].v; \n        }\n        nf+=mf[t];//\u6c47\u5165\u4e00\u80a1\u65b0\u7684\u6d41\u91cf \n    }\n    return nf; \n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    s=1,t=n;\n\n    for(int i=1;i&lt;=m;i++){\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        add(u,v,w*10000+1);add(v,u,0);\n\n    }\n\n    int ans=EK();\n\n    cout&lt;&lt;ans/10000&lt;&lt;' '&lt;&lt;ans%10000&lt;&lt;endl; \n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E7%BD%91%E7%BB%9C%E6%B5%81%E5%AE%9A%E4%B9%89/","title":"\u7f51\u7edc\u6d41\u5b9a\u4e49","text":"<p>\u53c2\u8003</p> <p>361 \u7f51\u7edc\u6d41 \u6700\u5927\u6d41 EK \u7b97\u6cd5_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E7%BD%91%E7%BB%9C%E6%B5%81%E5%AE%9A%E4%B9%89/#_1","title":"\u7f51\u7edc\u6d41\u7684\u5b9a\u4e49","text":"<p>\u6d41\u91cf\u5b88\u6052\uff1a\u6d41\u5165dianS\u7684\u6d41\u91cf\u548c=\u6d41\u51faS\u7684\u6d41\u91cf\u548c</p> <p>\u6e90\u70b9\u7684\u6d41\u51fa\u6d41\u91cf\u548c=\u6574\u4e2a\u7f51\u7edc\u7684\u6d41\u91cf</p> <p></p> <p>\u6b8b\u7559\u7f51\u7684\u53ef\u884c\u6027\u89e3\u91ca\uff1a</p> <p></p> <p></p> <p>\u539f\u6765\u8def\u5f841\u21922\u21924\u21926\u7684\u6d41\u91cf\u4e3a5\uff0c\u73b0\u57281\u21923\u21924\u6709\u4e00\u4e2a\u6d41\u91cf\u4e3a2\u7684\u6d41\uff0c\u52304\u65f6\u53d1\u73b0\u88ab\u5835\u4f4f\u4e86\u3002\u5efa\u7acb\u4e86\u6b8b\u7559\u7f51\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5b83\u5411\u4e0a\u8d70\u52302\uff0c\u518d\u901a\u8fc72\u21925\u21926\u5230\u8fbe\u6c47\u70b9</p> <p>\u5219\u5176\u5b9e\u662f\u7531\u4ee5\u4e0b\u53d8\u5316\u7b49\u6548\u800c\u6765\u7684\uff1a</p> <p>\u8def\u5f841\u21922\u21924\u21926\u7684\u6d41\u91cf\u4e3a5\u53d8\u5316\u4e3a1\u21922\u4e3a5\uff0c\u5230\u4e862\u540e\u5206\u4e3a</p> <ul> <li> <p>3 \u4ece2\u21924\u21926</p> </li> <li> <p>2 \u4ece2\u21925\u21926</p> </li> </ul> <p>\u8fd9\u68371\u21923\u21924\u21926\u5c31\u53ef\u4ee5\u67092\u7684\u6d41\u91cf\u4e86</p> <p></p> <p>\u8bf7\u601d\u8003</p> <p></p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E8%B4%B9%E7%94%A8%E6%B5%81/","title":"\u8d39\u7528\u6d41","text":"<p>b23.tv \u8d39\u7528\u6d41</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E8%B4%B9%E7%94%A8%E6%B5%81/#_1","title":"\u8d39\u7528\u6d41","text":"<p>\u8bf7\u5148\u590d\u4e60**\u7f51\u7edc\u6d41**\u7684\u5185\u5bb9</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E8%B4%B9%E7%94%A8%E6%B5%81/#ek","title":"EK\u7b97\u6cd5","text":"<p>\u7f51\u7edc\u6d41</p> <p>364 \u7f51\u7edc\u6d41 \u8d39\u7528\u6d41 EK \u7b97\u6cd5_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p></p> <p>\u5176\u4e2d\u6700\u5927\u6d41\u6307\u7684\u662f**\u603b\u6d41\u91cf**\u6700\u5927\uff0c\u4e0d\u662f\u5355\u72ec\u7684\u4e00\u6761\u8def\u5f84</p> <p></p> <p>\u4e0a\u56fe \u6700\u5927\u8d39\u7528\u6700\u5927\u6d41</p> <p>\u4e0b\u56fe \u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41</p> <p></p> <p>\u4e0eEK\u6a21\u677f\u7684\u533a\u522b</p> <p></p> <p>\u5173\u4e8ecost\u7684\u4fee\u6539</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=1e4+5;\nint mf[N];//\u6700\u5927\u6d41\u91cfmaxflow \nint s,t,pre[N],n,m;\nint cst,dis[N],vis[N];\nstruct edge{\n    int v,c,nxt,w;\n}e[20*N];\nint h[N],idx=1;//\u8fb9\u7684id\u4ece2\u5f00\u59cb\u5b58,\u56e0\u4e3a\u8fb9\u4e0e\u6b8b\u7559\u8fb9\u5bf9\u5e94,\u4f7f\u7528i^1\u53ef\u4ee5\u8fc5\u901f\u5728n\u4e0en+1\u4e4b\u95f4\u76f8\u4e92\u8f6c\u6362(n\u4e3a\u5076\u6570),\u4e0d\u7528\u7279\u5224 \nvoid add(int a,int b,int c,int dd){\n    e[++idx]={b,c,h[a],dd};\n    h[a]=idx;\n}\n//***\u91cd\u8981 \nbool spfa(){//\u627e\u4e00\u6761\u53ef\u4ee5\u4eces\u5230t\u7684\u6709\u6548\u8def\u5f84 \n    memset(dis,0x3f,sizeof dis);//\u6700\u77ed\u8def\u5e38\u89c4\u64cd\u4f5c \n    dis[s]=0,vis[s]=1;//vis\u6807\u8bb0\u5176\u662f\u5426\u5728\u961f\u5185 \n    memset(mf,0,sizeof mf);//\u5c06\u6bcf\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u6d41\u91cf\u4e0a\u9650\u53d8\u62100\n    queue&lt;int&gt; q;\n    q.push(s);mf[s]=1e9;//\u6e90\u70b9\u7684\u6d41\u91cf\u4e0a\u9650\u4e3a\u65e0\u7a77\u5927,\u5373\u6e90\u70b9\u80fd\u4e3a\u540e\u9762\u63d0\u4f9b\u65e0\u9650\u5927\u7684\u6d41\u91cf \n    while(q.size()){\n        int u=q.front();q.pop();vis[u]=0;       \n        for(int i=h[u];i;i=e[i].nxt){//\u626b\u63cf\u51fa\u8fb9 \n            int v=e[i].v,w=e[i].w;\n            if(dis[v]&gt;dis[u]/\u8fd9\u6761\u8fb9\u5728\u4e4b\u524d\u8d70\u8fc7\u4f46\u8fd8\u6709\u7a7a\u4f59\u5bb9\u91cf(\u5bb9\u91cf&gt;0) \n                dis[v]=dis[u]+w;                \n                mf[v]=min(mf[u],e[i].c);//\u66f4\u65b0\u6d41\u91cf\u4e0a\u9650\u4e3a\u4e4b\u524d\u66f4\u65b0\u8fc7\u7684\u53ef\u4ee5\u5230\u8fbeu\u7684\u6d41\u91cf(\u5373\u70b9u\u80fd\u63d0\u4f9b\u7684\u6700\u5927\u6d41\u91cf)\u4e0eu-v\u89c1\u4e4b\u95f4\u7684\u5bb9\u91cf\u7684min \n                pre[v]=i; //\u5b58\u76ee\u524d\u8def\u5f84\u4e0a\u70b9v\u7684\u524d\u9a71\u8fb9                \n                if(!vis[v])//\u9632\u6b62\u91cd\u590d\u5165\u961f \n                    q.push(v),vis[v]=1;\n                 //\u627e\u589e\u5e7f\u8def\u76f8\u5f53\u4e8e\u627e\u5230\u4e00\u6761\u65b0\u7684\u6d41\u91cf\u5230t,\u56de\u987e\u4e8c\u5206\u56fe\u7684\u589e\u5149\u8def,\u4e4b\u524d\u5df2\u7ecf\u627e\u5230\u7684\u589e\u5149\u8def\u7684\u8def\u5f84\u53ef\u4ee5\u8c03\u6574,\u4f46\u6d41\u91cf\u4e0d\u4f1a\u53d8\u5316(\u5373\u4e0d\u4f1a\u4f7f\u4e4b\u524d\u5df2\u7ecf\u6709\u7684\u6d41\u91cf\u51cf\u5c0f) \n            }\n        }\n    }\n    if(mf[t])return 1;//\u5982\u679c\u6709\u6d41\u91cf\u5230\u8fbet,\u8bf4\u660e\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def \n    else return 0;//\u4e00\u5b9a\u8981\u8fd4\u56de0!\u6ca1\u6709\u8fd4\u56de\u503c\u4f1a\u5f53\u4f5ctrue\u5904\u7406! \n}\n//***\nint EK(){\n    int nf=0;//\u5f53\u524d\u603b\u6d41\u91cfnowflow \n    while(spfa()){//\u65b0\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def,\u8def\u7684\u6d41\u91cf\u4e3amf[t] (\u6d41\u91cf\u662f\u4eces\u5f00\u59cb\u5728\u5230\u8fbet\u9014\u4e2d\u53d7\u5230\u9650\u5236\u9010\u6e10\u51cf\u5c0f\u7684,\u56e0\u6b64\u5230\u8fbet\u7684\u6d41\u91cf\u624d\u662f\u8fd9\u6761\u8def\u7684\u6d41\u91cf)\n        //cout&lt;&lt;'K';\n        int v=t;\n        while(v!=s){//\u4ecet\u5f80\u56de\u5728\u66f4\u65b0\u6b8b\u7559\u7f51 \n            int i=pre[v];\n            e[i].c-=mf[t];//\u4e3b\u8fb9,\u7a7a\u4f59\u7684\u5bb9\u91cf\u51cf\u5c11\u4e86 \n            e[i^1].c+=mf[t];//\u6b8b\u7559\u8fb9(\u53cd\u5411\u8fb9) \n            //\u6b64\u6d88\u5f7c\u957f          \n            v=e[i^1].v; \n        }\n        nf+=mf[t];//\u6c47\u5165\u4e00\u80a1\u65b0\u7684\u6d41\u91cf\n        //***\u91cd\u8981\n        cst+=mf[t]*dis[t]; \n        //***\n    }\n    return nf; \n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s&gt;&gt;t;\n    for(int i=1;i&lt;=m;i++){\n        int u,v,w,dd;\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w&gt;&gt;dd;\n        add(u,v,w,dd);add(v,u,0,-dd);\n\n    }\n    cout&lt;&lt;EK()&lt;&lt;' '&lt;&lt;cst&lt;&lt;endl; \n}\n</code></pre> <p>\u4ec5\u4ec5\u4ee5\u4e0b\u66f4\u6539</p> <ul> <li> <p>\u5bf9\u4e8ecost\u7684\u7edf\u8ba1\u4e0e\u76f8\u5173\u4ee3\u7801</p> </li> <li> <p>\u5c06bfs\u627e\u589e\u5149\u8def\u53d8\u6210spfa\u6c42\u6700\u77ed\u8def</p> </li> </ul> <p>\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u5224\u5b9a\u4e0d\u80fd\u7528\u4e86\uff1f</p> <pre><code>// use this at spfa\u6700\u540e\n    if(mf[t])return 1;//\u5982\u679c\u6709\u6d41\u91cf\u5230\u8fbet,\u8bf4\u660e\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def \n    else return 0;//\u4e00\u5b9a\u8981\u8fd4\u56de0!\u6ca1\u6709\u8fd4\u56de\u503c\u4f1a\u5f53\u4f5ctrue\u5904\u7406!\n//instead of\n    if(v==t)return 1;//\u8bf4\u660e\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def \n</code></pre> <p>\u90a3\u662f\u56e0\u4e3a\u4e4b\u524dbfs\u53ea\u662f\u8981\u6c42\u627e\u5230\uff0c\u4e8e\u662f\u53ea\u6709\u4e00\u5230\u8fbe\u6c47\u70b9\u5c31\u53ef\u4ee5\u5224\u5b9a\u627e\u5230<code>if(v==t)return 1;</code>\uff0c\u800c\u73b0\u5728\u662f\u8981\u6c42\u627e\u5230\u6700\u5c0f\u7684\u3002\u56e0\u6b64\u53ea\u6709\u5b8c\u6574\u7684\u8fd0\u884c\u4e86\u4e00\u6b21spfa\uff0c\u624d\u80fd\u5224\u5b9a\u6709\u6ca1\u6709\u5230\u6c47\u70b9\u7684\u65b0\u589e\u6d41\u91cf</p>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E8%B4%B9%E7%94%A8%E6%B5%81/#dinic","title":"Dinic\u7b97\u6cd5","text":"<p>\u540cEK\uff0c\u5c06bfs\u6539\u4e3aspfa\u5373\u53ef\u3002</p> <p>\u672a\u9a8c\u8bc1\u7684\u4ee3\u7801</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n#include &lt;limits&gt;\n\nusing namespace std;\n\nconst int INF = numeric_limits&lt;int&gt;::max();\n\nstruct Edge {\n    int to, rev;\n    long long cap, cost;\n};\n\nvector&lt;vector&lt;Edge&gt;&gt; graph;\nvector&lt;int&gt; level, iter;\nint n;\n\n// \u4f7f\u7528BFS\u6784\u5efa\u5206\u5c42\u56fe\u5e76\u8fd4\u56de\u662f\u5426\u80fd\u591f\u5230\u8fbe\u6c47\u70b9\nbool bfs(int s, int t) {\n    level.assign(n, -1);\n    level[s] = 0;\n    queue&lt;int&gt; que;\n    que.push(s);\n    while (!que.empty()) {\n        int v = que.front(); que.pop();\n        for (auto&amp; e : graph[v]) {\n            if (e.cap &gt; 0 &amp;&amp; level[e.to] &lt; 0) {\n                level[e.to] = level[v] + 1;\n                que.push(e.to);\n            }\n        }\n    }\n    return level[t] &gt;= 0;\n}\n\n// DFS\u5bfb\u627e\u589e\u5e7f\u8def\u5f84\u5e76\u8fd4\u56de\u6d41\u91cf\nlong long dfs(int v, int t, long long f) {\n    if (v == t) return f;\n    for (int&amp; i = iter[v]; i &lt; graph[v].size(); ++i) {\n        Edge&amp; e = graph[v][i];\n        if (e.cap &gt; 0 &amp;&amp; level[v] &lt; level[e.to]) {\n            long long d = dfs(e.to, t, min(f, e.cap));\n            if (d &gt; 0) {\n                e.cap -= d;\n                graph[e.to][e.rev].cap += d;\n                return d;\n            }\n        }\n    }\n    return 0;\n}\n\n// Dinic\u7b97\u6cd5\u4e3b\u51fd\u6570\uff0c\u8fd4\u56de\u6700\u5927\u6d41\uff0c\u5e76\u66f4\u65b0\u603b\u8d39\u7528\nlong long dinic(int s, int t, long long&amp; flowCost) {\n    long long maxFlow = 0;\n    flowCost = 0;\n    while (bfs(s, t)) {\n        iter.assign(n, 0);\n        long long f;\n        while ((f = dfs(s, t, INF)) &gt; 0) {\n            maxFlow += f;\n            // \u5728\u8fd9\u91cc\u66f4\u65b0\u8d39\u7528\uff0c\u9700\u8981\u6709\u4e00\u4e2a\u8d39\u7528\u6570\u7ec4\u6765\u8bb0\u5f55\u6bcf\u6761\u8fb9\u7684\u8d39\u7528\n            // \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2avector&lt;long long&gt; cost\u6570\u7ec4\n            for (int v = t; v != s; v = graph[v][graph[v][iter[v]].rev].to) {\n                flowCost += f * graph[v][graph[v][iter[v]].rev].cost;\n            }\n        }\n    }\n    return maxFlow;\n}\n\nint main() {\n    int m, s, t;\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s &gt;&gt; t;\n    graph.assign(n, vector&lt;Edge&gt;());\n    for (int i = 0; i &lt; m; ++i) {\n        int u, v, cap, cost;\n        cin &gt;&gt; u &gt;&gt; v &gt;&gt; cap &gt;&gt; cost;\n        graph[u].push_back({v, (int)graph[v].size(), cap, cost});\n        graph[v].push_back({u, (int)graph[u].size() - 1, 0, -cost});\n    }\n    long long flowCost = 0;\n    long long maxFlow = dinic(s, t, flowCost);\n    cout &lt;&lt; \"Max flow: \" &lt;&lt; maxFlow &lt;&lt; endl;\n    cout &lt;&lt; \"Min cost: \" &lt;&lt; flowCost &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%9B%BE%E8%AE%BA/%E7%BD%91%E7%BB%9C%E6%B5%81/%E8%B4%B9%E7%94%A8%E6%B5%81/#_2","title":"\u6700\u5c0f\u8d39\u7528\u53ef\u884c\u6d41","text":"<p>\u6700\u5c0f\u8d39\u7528\u53ef\u884c\u6d41\u6307\u7684\u662f\u5728\u8d39\u7528\u6d41\u57fa\u7840\u4e0a\u7ed9\u6bcf\u6761\u8fb9\u7684\u6d41\u91cf\u8bbe\u7f6e\u4e0d\u4ec5\u6709\u4e0a\u9650\uff0c\u8fd8\u6709\u4e0b\u9650\u3002</p> <p>\u89c1\u7ec3\u4e60 | \u8fd9\u4eba\u600e\u4e48\u5929\u5929\u5237\u9898\u554a'\u652f\u7ebf\u5267\u60c5</p> <p>zhuanlan.zhihu.com</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/","title":"AC\u81ea\u52a8\u673a","text":"<p>\u4e13\u9898 | \u54c8\u5e0c&amp;\u5b57\u7b26\u4e32\u5339\u914d\uff08\u4ece\u5b57\u5178\u6811\u5230KMP\u518d\u5230AC\u81ea\u52a8\u673a\uff09</p> <p>\u8865\u5145\u8d44\u6599</p> <p>https://www.cnblogs.com/ailanxier/p/13370753.html</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#ac","title":"AC\u81ea\u52a8\u673a","text":"<p>\u5355\u6a21\u5f0f\u4e32\uff0c\u591a\u8be2\u95ee\u4e32</p> <p>\u591a\u6a21\u5f0f\u4e32\uff0c\u591a\u8be2\u95ee\u4e32\u8bf7\u89c1\u5b57\u5178\u6811</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_1","title":"\u8865\u5145\u8d44\u6599","text":"<p>https://www.cnblogs.com/hyfhaha/p/10802604.html</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_2","title":"\u767e\u79d1\u4ecb\u7ecd","text":"<p>\u4e00\u4e2a\u5e38\u89c1\u7684\u4f8b\u5b50\u5c31\u662f\u7ed9\u51fan\u4e2a\u5355\u8bcd\uff0c\u518d\u7ed9\u51fa\u4e00\u6bb5\u5305\u542bm\u4e2a\u5b57\u7b26\u7684\u6587\u7ae0\uff0c\u8ba9\u4f60\u627e\u51fa\u6709\u591a\u5c11\u4e2a\u5355\u8bcd\u5728\u6587\u7ae0\u91cc\u51fa\u73b0\u8fc7\u3002 \u8981\u641e\u61c2AC\u81ea\u52a8\u673a\uff0c\u5148\u5f97\u6709\u6a21\u5f0f\u6811\uff08\u5b57\u5178\u6811\uff09Trie\u548cKMP\u6a21\u5f0f\u5339\u914d\u7b97\u6cd5\u7684\u57fa\u7840\u77e5\u8bc6\u3002AC\u81ea\u52a8\u673a\u7b97\u6cd5\u5206\u4e3a\u4e09\u6b65\uff1a\u6784\u9020\u4e00\u68f5Trie\u6811\uff0c\u6784\u9020\u5931\u8d25\u6307\u9488\u548c\u6a21\u5f0f\u5339\u914d\u8fc7\u7a0b\u3002 \u5982\u679c\u4f60\u5bf9KMP\u7b97\u6cd5\u4e86\u89e3\u7684\u8bdd\uff0c\u5e94\u8be5\u77e5\u9053KMP\u7b97\u6cd5\u4e2d\u7684next\u51fd\u6570\uff08shift\u51fd\u6570\u6216\u8005fail\u51fd\u6570\uff09\u662f\u5e72\u4ec0\u4e48\u7528\u7684\u3002KMP\u4e2d\u6211\u4eec\u7528\u4e24\u4e2a\u6307\u9488i\u548cj\u5206\u522b\u8868\u793a\uff0cA[i-j+ 1..i]\u4e0eB[1..j]\u5b8c\u5168\u76f8\u7b49\u3002\u4e5f\u5c31\u662f\u8bf4\uff0ci\u662f\u4e0d\u65ad\u589e\u52a0\u7684\uff0c\u968f\u7740i\u7684\u589e\u52a0j\u76f8\u5e94\u5730\u53d8\u5316\uff0c\u4e14j\u6ee1\u8db3\u4ee5A[i]\u7ed3\u5c3e\u7684\u957f\u5ea6\u4e3aj\u7684\u5b57\u7b26\u4e32\u6b63\u597d\u5339\u914dB\u4e32\u7684\u524d j\u4e2a\u5b57\u7b26\uff0c\u5f53A[i+1]\u2260B[j+1]\uff0cKMP\u7684\u7b56\u7565\u662f\u8c03\u6574j\u7684\u4f4d\u7f6e\uff08\u51cf\u5c0fj\u503c\uff09\u4f7f\u5f97A[i-j+1..i]\u4e0eB[1..j]\u4fdd\u6301\u5339\u914d\u4e14\u65b0\u7684B[j+1]\u6070\u597d\u4e0eA[i+1]\u5339\u914d\uff0c\u800cnext\u51fd\u6570\u6070\u6070\u8bb0\u5f55\u4e86\u8fd9\u4e2aj\u5e94\u8be5\u8c03\u6574\u5230\u7684\u4f4d\u7f6e\u3002\u540c\u6837AC\u81ea\u52a8\u673a\u7684\u5931\u8d25\u6307\u9488\u5177\u6709\u540c\u6837\u7684\u529f\u80fd\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u6211\u4eec\u7684\u6a21\u5f0f\u4e32\u5728Trie\u4e0a\u8fdb\u884c\u5339\u914d\u65f6\uff0c\u5982\u679c\u4e0e\u5f53\u524d\u8282\u70b9\u7684\u5173\u952e\u5b57\u4e0d\u80fd\u7ee7\u7eed\u5339\u914d\uff0c\u5c31\u5e94\u8be5\u53bb\u5f53\u524d\u8282\u70b9\u7684\u5931\u8d25\u6307\u9488\u6240\u6307\u5411\u7684\u8282\u70b9\u7ee7\u7eed\u8fdb\u884c\u5339\u914d\u3002</p> <p></p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_3","title":"\u6784\u5efa","text":"<p>1 \uff0e\u6784\u9020 Trie \u6811</p> <p>\u6211\u4eec\u5148\u7528 n \u4e2a\u6a21\u5f0f\u4e32\u6784\u9020\u4e00\u9897 Trie\u6811</p> <p>Trie \u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u4ece\u6839\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b57\u7b26\u4e32</p> <p>\u6839\u8282\u70b9\u8868\u793a\u7a7a\u4e32\uff0c\u5982\u679c\u8282\u70b9\u662f\u4e2a\u6a21\u5f0f\u4e32\uff0c\u5219\u6253\u4e2a\u6807\u8bb0 cnt_u=1</p> <p>\u5efa\u5b57\u5178\u6811</p> <pre><code>void add(char s[]) {\n    int now=1,l=strlen(s);\n    for(int i=0; i&lt;l; i++) {\n        int ch=s[i]-'a';\n        if(!trie[now].nxt[ch]) {\n            cnt++;\n            trie[now].nxt[ch]=cnt;\n        }\n        now=trie[now].nxt[ch];\n    }\n    trie[now].flag++;   //\u6839\u636e\u9700\u6c42\u53d8\u5316flag\u6240\u5b58\u7684\u4fe1\u606f\n}\n</code></pre> <p>2 \uff0e\u6784\u9020\u81ea\u52a8\u673a\u5728 Trie \u4e0a\u6784\u5efa\u4e24\u7c7b\u8fb9\uff1a\u56de\u8df3\u8fb9\u548c\u8f6c\u79fb\u8fb9\u3002</p> <p>\u6c42Fail\u6307\u9488</p> <p>\u6ce8\u610f\u8003\u8651fail\u6307\u9488\u7684\u610f\u4e49</p> <p>fail[v] \u5b58\u8282\u70b9 v \u7684\u56de\u8df3\u8fb9\u7684\u7ec8\u70b9\u3002 \u56de\u8df3\u8fb9\u6307\u5411\u7236\u8282\u70b9\u7684\u56de\u8df3\u8fb9\u6240\u6307\u8282\u70b9\u7684\u513f\u5b500\u56db\u4e2a\u70b9\uff08 v, u, fail[u], ch[][]) \u6784\u6210\u56db\u8fb9\u5f62\u56de\u8df3\u8fb9\u6240\u6307\u8282\u70b9\u4e00\u5b9a\u662f\u5f53\u524d\u8282\u70b9\u7684\u6700\u957f\u540e\u7f00\u3002</p> <p></p> <p>\u5982\u56fe\uff0cv=7,u=6\u3002\u90a3\u4e48\u6211\u4eec\u901a\u8fc7v\u8bbf\u95eeu\u540e\u6cbf\u7740u\u5f80\u5176fail\u8d70\u5230x=fail[u]\u3002\u6b64\u65f6\u5982\u679c\u5b58\u5728x\u2192son(x)\u548cu\u2192v\u6240\u6307\u4ee3\u7684\u5b57\u7b26\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u94fe\u63a5fail[v]=son(x)\uff0c\u5f62\u6210\u4e86\u4e00\u4e2a\u56db\u8fb9\u5f62\u3002</p> <p>ch[u][i]\u5b58\u8282\u70b9 u \u7684\u6811\u8fb9\u7684\u7ec8\u70b9\u548c\u8282\u70b9 u \u7684\u8f6c\u79fb\u8fb9\u7684\u7ec8\u70b9\u3002 \u6240\u8c13\u8f6c\u79fb\u8fb9\uff0c\u5c31\u662f\u4eceu\u8fde\u5411\u6240\u6709\u7684son(fail[u])\u3002\u90a3\u4e48\u5b83\u548c\u56de\u8c03\u8fb9\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f</p> <p>\u56de\u8df3\u8fb9\u662f\u5728\u5f53\u524du\u7684\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u5931\u914d\u65f6\u5feb\u901f\u8f6c\u79fb\u7684\u8fb9\uff0c\u800c\u8f6c\u79fb\u8fb9\u662f\u5728\u5f53\u524du\u5df2\u7ecf\u662f\u4e00\u4e2a\u88ab\u5339\u914d\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u8981\u5feb\u901f\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u4ee5u\u4e3a\u524d\u7f00\u7684\u5f85\u5339\u914d\u5b57\u7b26\u4e32\u3002</p> <pre><code>queue&lt;int&gt; q;\nvoid getFail() { //\u6c42\u51faFail\u6307\u9488\n    for(int i=0; i&lt;26; i++)trie[0].nxt[i]=1;\n    q.push(1);\n    trie[1].fail=0;\n    while(q.size()) {\n        int u=q.front();\n        q.pop();\n        for(int i=0; i&lt;26; i++) {\n            int v=trie[u].nxt[i],fail=trie[u].fail;\n            if(!v) {\n                trie[u].nxt[i]=trie[fail].nxt[i];\n                continue;\n            }\n            trie[v].fail=trie[fail].nxt[i];\n            q.push(v);\n        }\n    }\n}\n</code></pre> <p>3 \uff0c\u626b\u63cf\u4e3b\u4e32\u5339\u914d</p> <p>\u67e5\u8be2</p> <p>\u67e5\u627e\u51fa\u73b0\u4e86\u51e0\u4e2a\u5355\u8bcd\uff08\u591a\u4e2a\u76f8\u540c\u7684\u5355\u8bcd\u7b97\u4e00\u4e2a\uff09\u626b\u63cf\u4e3b\u4e32\uff0c\u4f9d\u6b21\u53d6\u51fa\u5b57\u7b26 s[i] \uff0c</p> <p>1 \uff0e v \u6307\u9488\u8d70\u4e3b\u4e32\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u6cbf\u7740\u6811\u8fb9\u6216\u8f6c\u79fb\u8fb9\u8d70\uff0c\u4fdd\u8bc1\u4e0d\u56de\u9000</p> <p>2 \u3001 k \u6307\u9488\u6cbf\u7740\u56d7\u8df3\u8fb9\u641c\u7d22\u6a21\u5f0f\u4e32\u6bcf\u6b21\u4ece\u5f53\u524d\u8282\u70b9\u8d70\u5230\u6839\u8282\u70b9\uff0c\u628a\u5f53\u524d\u8282\u70b9\u4e2d\u7684\u6240\u6709\u540e\u7f00\u6a21\u5f0f\u4e32\u4e00\u7f51\u6253\u5c3d\uff0c\u4fdd\u8bc1\u4e0d\u6f0f\u89e3</p> <p>3 \u3001\u626b\u63cf\u5b8c\u4e3b\u4e32\uff0c\u8fd4\u56de\u7b54\u68480\u7b97\u6cd5\u4e00\u8fb9\u8d70\u4e32\uff0c\u4e00\u8fb9\u628a\u5f53\u524d\u4e32\u7684\u6240\u6709\u540e\u7f00\u4e32\u641c\u51fa\u6765.</p> <pre><code>int query(char s[]) {\n    int u=1,ans=0,l=strlen(s);\n    for(int i=0; i&lt;l; i++) {\n        int v=s[i]-'a',k=trie[u].nxt[v];\n        while(k&gt;1&amp;&amp;trie[k].flag!=-1) {\n            ans+=trie[k].flag,trie[k].flag=-1;//\u56e0\u4e3a\u591a\u4e2a\u76f8\u540c\u7684\u5355\u8bcd\u7b97\u4e00\u4e2a\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u9752\u7a7a\u5e76\u4e14\u6807\u8bb0-1\u8868\u793a\u6539\u5355\u8bcd\u5df2\u7ecf\u88ab\u7edf\u8ba1\u8fc7\u4e86\n            k=trie[k].fail;\n        }\n        u=trie[u].nxt[v];\n    }\n    return ans;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_4","title":"\u4f18\u5316","text":"<p>\u6709\u4e9b\u65f6\u5019\uff0c\u666e\u901a\u7684AC\u81ea\u52a8\u673a\u53ef\u80fd\u4f1aTLE\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u4e00\u70b9\u70b9\u4f18\u5316</p> <p>\u62d3\u6251\u5efa\u56fe\u4f18\u5316 \u8ba9\u6211\u4eec\u628aTrie\u4e0a\u7684fail\u90fd\u60f3\u8c61\u6210\u4e00\u6761\u6761\u6709\u5411\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u679c\u5728\u4e00\u4e2a\u70b9\u5bf9\u90a3\u4e2a\u70b9\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\uff0c\u90a3\u4e48\u6cbf\u7740\u8fd9\u4e2a\u70b9\u8fde\u51fa\u53bb\u7684\u70b9\u4e5f\u4f1a\u8fdb\u884c\u64cd\u4f5c\uff08\u5c31\u662f\u8df3fail\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u624d\u8981\u66b4\u529b\u8df3fail\u53bb\u66f4\u65b0\u4e4b\u540e\u7684\u70b9\u3002</p> <p></p> <p>\u6211\u4eec\u5148\u627e\u5230\u4e86\u7f16\u53f74\u8fd9\u4e2a\u70b9\uff0c\u7f16\u53f74\u7684fail\u8fde\u5411\u7f16\u53f77\u8fd9\u4e2a\u70b9\uff0c\u7f16\u53f77\u7684fail\u8fde\u5411\u7f16\u53f79\u8fd9\u4e2a\u70b9\u3002\u90a3\u4e48\u6211\u4eec\u8981\u66f4\u65b0\u7f16\u53f74\u8fd9\u4e2a\u70b9\u7684\u503c\uff0c\u540c\u65f6\u4e5f\u8981\u66f4\u65b0\u7f16\u53f77\u548c\u7f16\u53f79\uff0c\u8fd9\u5c31\u662f\u66b4\u529b\u8df3fail\u7684\u8fc7\u7a0b\u3002</p> <p>\u6211\u4eec\u4e0b\u4e00\u6b21\u627e\u5230\u7f16\u53f77\u8fd9\u4e2a\u70b9\uff0c\u8fd8\u8981\u518d\u6b21\u66f4\u65b0\u7f16\u53f79\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u5728\u8fd9\u91cc\u88ab\u6d6a\u8d39\u4e86\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u5728\u627e\u5230\u7684\u70b9\u6253\u4e00\u4e2a\u6807\u8bb0\uff0c\u6700\u540e\u518d\u4e00\u6b21\u6027\u5c06\u6807\u8bb0\u5168\u90e8\u4e0a\u4f20 \u6765 \u66f4\u65b0\u5176\u4ed6\u70b9\u7684ans \u3002\u4f8b\u5982\u6211\u4eec\u627e\u5230\u7f16\u53f74\uff0c\u5728\u7f16\u53f74\u8fd9\u4e2a\u70b9\u6253\u4e00\u4e2aans\u6807\u8bb0\u4e3a1\uff0c\u4e0b\u4e00\u6b21\u627e\u5230\u4e86\u7f16\u53f77\uff0c\u53c8\u5728\u7f16\u53f77\u8fd9\u4e2a\u70b9\u6253\u4e00\u4e2aans\u6807\u8bb0\u4e3a1\uff0c\u90a3\u4e48\u6700\u540e\uff0c\u6211\u4eec\u76f4\u63a5\u4ece\u7f16\u53f74\u5f00\u59cb\u8df3fail\uff0c\u7136\u540e\u5c06\u6807\u8bb0ans\u4e0a\u4f20\uff0c((\u70b9i\u7684fail)\u7684ans)\u52a0\u4e0a(\u70b9i\u7684ans)\uff0c\u6700\u540e\u4f7f\u7f16\u53f74\u7684ans\u4e3a1\uff0c\u7f16\u53f77\u7684ans\u4e3a2\uff0c\u7f16\u53f79\u7684ans\u4e3a2\uff0c\u8fd9\u6837\u7684\u7b54\u6848\u548c\u66b4\u529b\u8df3fail\u662f\u4e00\u6837\u7684\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u70b9\u53ea\u7ecf\u8fc7\u4e86\u4e00\u6b21\u3002</p> <p>\u6700\u540e\u6211\u4eec\u5c06\u6709flag\u6807\u8bb0\u7684ans\u4f20\u5230vis\u6570\u7ec4\u91cc\uff0c\u5c31\u6c42\u51fa\u4e86\u7b54\u6848\u3002</p> <p>\u8bf7\u601d\u8003\uff01</p> <p>\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u786e\u5b9a\u66f4\u65b0\u987a\u5e8f\u5462\uff1f\u660e\u663e\u6211\u4eec\u6253\u4e86\u6807\u8bb0\u540e\u80af\u5b9a\u662f\u4ece\u6df1\u5ea6\u5927\u7684\u70b9\u5f00\u59cb\u66f4\u65b0\u4e0a\u53bb\u7684\u3002</p> <p>\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u62d3\u6251\u6392\u5e8f\uff01</p> <p>\u6211\u4eec\u4f7f\u6bcf\u4e00\u4e2a\u70b9\u5411\u5b83\u7684fail \u6307\u9488\u8fde\u4e00\u6761\u8fb9\uff0c\u660e\u663e\uff0c\u6bcf\u4e00\u4e2a\u70b9\u7684\u51fa\u5ea6\u4e3a1 \uff08fail\u53ea\u6709\u4e00\u4e2a\uff09\uff0c\u5165\u5ea6\u53ef\u80fd\u5f88\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u50cf\u62d3\u6251\u6392\u5e8f\u90a3\u6837\u5148\u5efa\u4e2a\u56fe\u4e86\uff0c\u76f4\u63a5\u5f80fail \u6307\u9488\u8df3\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u6700\u540e\u6211\u4eec\u6839\u636efail \u6307\u9488\u5efa\u597d\u56fe\u540e\uff08\u60f3\u8c61\u4e00\u4e0b\uff0c\u7a0b\u5e8f\u91cc\u4e0d\u7528\u5b9e\u73b0\uff09\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2aDAG\uff0c\u5177\u4f53\u539f\u56e0\u4e0d\u89e3\u91ca\uff08\u5f88\u7b80\u5355\u7684\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u5728\u4e0a\u9762\u8dd1\u62d3\u6251\u6392\u5e8f\uff0c\u7136\u540e\u66f4\u65b0ans\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a \u9996\u5148\u662fgetfail \u8fd9\u91cc\uff0c\u8bb0\u5f97\u5c06fail\u7684\u5165\u5ea6in\u66f4\u65b0\u3002</p> <p>\u5728<code>GetFail</code>\u51fd\u6570\u4e2d</p> <pre><code>trie[v].fail=trie[fail].nxt[i];\nin[trie[v].fail]++;\n</code></pre> <p>\u5728<code>query</code>\u51fd\u6570\u4e2d</p> <pre><code>void query(char s[]){\n    int u=1,l=strlen(s);\n    for(int i=0;i&lt;l;i++){\n        u=trie[u].nxt[s[i]-'a'],trie[u].ans++;  //\u76f4\u63a5\u6253\u6807\u8bb0\u5c31\u53ef\u4ee5\u4e86\n    }\n}\n\n//\u5bf9\u6bd4\u4e0b\u539f\u6765\u7684\n/*\n\nint query(char s[]) {\n    int u=1,ans=0,l=strlen(s);\n    for(int i=0; i&lt;l; i++) {\n        int v=s[i]-'a',k=trie[u].nxt[v];\n        while(k&gt;1&amp;&amp;trie[k].flag!=-1) {\n            ans+=trie[k].flag,trie[k].flag=-1;\n            k=trie[k].fail;\n        }\n        u=trie[u].nxt[v];\n    }\n    return ans;\n}\n\n*/\n</code></pre> <p>\u7136\u540e\u662f\u62d3\u6251\u6392\u5e8f</p> <pre><code>void topsort(){\n    for(int i=1;i&lt;=cnt;i++){if(!in[i])q.push(i);}\n    while(!q.empty()){\n        int u=q.front();q,pop();\n        vis[trie[u].flag]=trie[u].ans;\n        int v=trie[u].fail;in[v]--;\n        trie[v].ans+=trie[u].ans;\n        if(!in[v])q.push(v);\n    }\n}\n</code></pre> <p>\u6ce8\u91ca\u89c1\u5927\u4f6c\u7684...</p> <pre><code>void topu(){\n    for(int i=1;i&lt;=cnt;++i)\n    if(in[i]==0)q.push(i);              //\u5c06\u5165\u5ea6\u4e3a0\u7684\u70b9\u5168\u90e8\u538b\u5165\u961f\u5217\u91cc\n    while(!q.empty()){\n        int u=q.front();q.pop();vis[trie[u].flag]=trie[u].ans;  //\u5982\u679c\u6709flag\u6807\u8bb0\u5c31\u66f4\u65b0vis\u6570\u7ec4\n        int v=trie[u].fail;in[v]--;     //\u5c06\u552f\u4e00\u8fde\u51fa\u53bb\u7684\u51fa\u8fb9fail\u7684\u5165\u5ea6\u51cf\u53bb\uff08\u62d3\u6251\u6392\u5e8f\u7684\u64cd\u4f5c\uff09\n        trie[v].ans+=trie[u].ans;       //\u66f4\u65b0fail\u7684ans\u503c\n        if(in[v]==0)q.push(v);          //\u62d3\u6251\u6392\u5e8f\u5e38\u89c4\u64cd\u4f5c\n    }\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_5","title":"\u62d3\u6251\u6392\u5e8f","text":"<p>\u767e\u79d1 \u5bf9\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe(Directed Acyclic Graph\u7b80\u79f0DAG)G\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u662f\u5c06G\u4e2d\u6240\u6709\u9876\u70b9\u6392\u6210\u4e00\u4e2a\u7ebf\u6027\u5e8f\u5217\uff0c\u4f7f\u5f97\u56fe\u4e2d\u4efb\u610f\u4e00\u5bf9\u9876\u70b9u\u548cv\uff0c\u82e5\u8fb9 \\(&lt;u,v&gt;\u2208E(G)\\) \uff0c\u5219u\u5728\u7ebf\u6027\u5e8f\u5217\u4e2d\u51fa\u73b0\u5728v\u4e4b\u524d\u3002\u901a\u5e38\uff0c\u8fd9\u6837\u7684\u7ebf\u6027\u5e8f\u5217\u79f0\u4e3a\u6ee1\u8db3\u62d3\u6251\u6b21\u5e8f(Topological Order)\u7684\u5e8f\u5217\uff0c\u7b80\u79f0\u62d3\u6251\u5e8f\u5217\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u7531\u67d0\u4e2a\u96c6\u5408\u4e0a\u7684\u4e00\u4e2a\u504f\u5e8f\u5f97\u5230\u8be5\u96c6\u5408\u4e0a\u7684\u4e00\u4e2a\u5168\u5e8f\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u79f0\u4e4b\u4e3a\u62d3\u6251\u6392\u5e8f\u3002</p> <p>\u62d3\u6251\u6392\u5e8f\u5e38\u7528\u6765\u786e\u5b9a\u4e00\u4e2a\u4f9d\u8d56\u5173\u7cfb\u96c6\u4e2d\uff0c\u4e8b\u7269\u53d1\u751f\u7684\u987a\u5e8f\u3002\u4f8b\u5982\uff0c\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5c06\u9879\u76ee\u62c6\u5206\u6210A\u3001B\u3001C\u3001D\u56db\u4e2a\u5b50\u90e8\u5206\u6765\u5b8c\u6210\uff0c\u4f46A\u4f9d\u8d56\u4e8eB\u548cD\uff0cC\u4f9d\u8d56\u4e8eD\u3002\u4e3a\u4e86\u8ba1\u7b97\u8fd9\u4e2a\u9879\u76ee\u8fdb\u884c\u7684\u987a\u5e8f\uff0c\u53ef\u5bf9\u8fd9\u4e2a\u5173\u7cfb\u96c6\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u5f97\u51fa\u4e00\u4e2a\u7ebf\u6027\u7684\u5e8f\u5217\uff0c\u5219\u6392\u5728\u524d\u9762\u7684\u4efb\u52a1\u5c31\u662f\u9700\u8981\u5148\u5b8c\u6210\u7684\u4efb\u52a1\u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u5f97\u5230\u7684\u6392\u5e8f\u5e76\u4e0d\u662f\u552f\u4e00\u7684\uff01\u5c31\u597d\u50cf\u4f60\u65e9\u4e0a\u7a7f\u8863\u670d\u53ef\u4ee5\u5148\u7a7f\u4e0a\u8863\u4e5f\u53ef\u4ee5\u5148\u7a7f\u88e4\u5b50\uff0c\u53ea\u8981\u91cc\u9762\u7684\u8863\u670d\u5728\u5916\u9762\u7684\u8863\u670d\u4e4b\u524d\u7a7f\u5c31\u884c\u3002</p> <p>\u5b9e\u73b0</p> <p>\u5728\u56fe\u8bba\u4e2d\uff0c\u62d3\u6251\u6392\u5e8f\uff08Topological Sorting\uff09\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG, Directed Acyclic Graph\uff09\u7684\u6240\u6709\u9876\u70b9\u7684\u7ebf\u6027\u5e8f\u5217\u3002\u4e14\u8be5\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u4e0b\u9762\u4e24\u4e2a\u6761\u4ef6\uff1a</p> <ul> <li> <p>\u6bcf\u4e2a\u9876\u70b9\u51fa\u73b0\u4e14\u53ea\u51fa\u73b0\u4e00\u6b21\u3002</p> </li> <li> <p>\u82e5\u5b58\u5728\u4e00\u6761\u4ece\u9876\u70b9 A \u5230\u9876\u70b9 B \u7684\u8def\u5f84\uff0c\u90a3\u4e48\u5728\u5e8f\u5217\u4e2d\u9876\u70b9 A \u51fa\u73b0\u5728\u9876\u70b9 B \u7684\u524d\u9762\u3002 \u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\u624d\u6709\u62d3\u6251\u6392\u5e8f\uff0c\u975eDAG\u56fe\u6ca1\u6709\u62d3\u6251\u6392\u5e8f\u4e00\u8bf4\u3002</p> </li> </ul> <p>\u4f8b\u5982\uff0c\u4e0b\u9762\u8fd9\u4e2a\u56fe\uff1a</p> <p></p> <p>\u5b83\u662f\u4e00\u4e2a DAG \u56fe\uff0c\u90a3\u4e48\u5982\u4f55\u5199\u51fa\u5b83\u7684\u62d3\u6251\u6392\u5e8f\u5462\uff1f\u8fd9\u91cc\u8bf4\u4e00\u79cd\u6bd4\u8f83\u5e38\u7528\u7684\u65b9\u6cd5\uff1a</p> <p>\u4ece DAG \u56fe\u4e2d\u9009\u62e9\u4e00\u4e2a \u6ca1\u6709\u524d\u9a71\uff08\u5373\u5165\u5ea6\u4e3a0\uff09\u7684\u9876\u70b9\u5e76\u8f93\u51fa\u3002 \u4ece\u56fe\u4e2d\u5220\u9664\u8be5\u9876\u70b9\u548c\u6240\u6709\u4ee5\u5b83\u4e3a\u8d77\u70b9\u7684\u6709\u5411\u8fb9\u3002 \u91cd\u590d 1 \u548c 2 \u76f4\u5230\u5f53\u524d\u7684 DAG \u56fe\u4e3a\u7a7a\u6216\u5f53\u524d\u56fe\u4e2d\u4e0d\u5b58\u5728\u65e0\u524d\u9a71\u7684\u9876\u70b9\u4e3a\u6b62\u3002\u540e\u4e00\u79cd\u60c5\u51b5\u8bf4\u660e\u6709\u5411\u56fe\u4e2d**\u5fc5\u7136\u5b58\u5728\u73af**\u3002</p> <p>\u4e8e\u662f\uff0c\u5f97\u5230\u62d3\u6251\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u662f { 1, 2, 4, 3, 5 }\u3002</p> <p>\u901a\u5e38\uff0c\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u53ef\u4ee5\u6709**\u4e00\u4e2a\u6216\u591a\u4e2a**\u62d3\u6251\u6392\u5e8f\u5e8f\u5217\u3002</p> <pre><code>void topu(){\n    for(int i=1;i&lt;=n;i++)if(!in[i])q.push(i);//\u70b9\u7684\u5165\u5ea6\n\n    while(q.size()){\n        int u=q.front();\n\n        cout&lt;&lt;u&lt;&lt;' ';//\u8f93\u51fatopu\u5e8f\n\n        q.pop();\n        if(vis[u])continue;\n        vis[u]=1;\n        for(auto v:e[u]){\n            if(vis[v])continue;\n            in[v]--;\n            if(!in[v])q.push(v);\n        }\n    }\n}\n</code></pre> <p>\u62d3\u6251\u6392\u5e8f\u7684\u5e94\u7528</p> <p>\u62d3\u6251\u6392\u5e8f\u901a\u5e38\u7528\u6765\u201c\u6392\u5e8f\u201d\u5177\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u4efb\u52a1\u3002</p> <p>\u6bd4\u5982\uff0c\u5982\u679c\u7528\u4e00\u4e2aDAG\u56fe\u6765\u8868\u793a\u4e00\u4e2a\u5de5\u7a0b\uff0c\u5176\u4e2d\u6bcf\u4e2a\u9876\u70b9\u8868\u793a\u5de5\u7a0b\u4e2d\u7684\u4e00\u4e2a\u4efb\u52a1\uff0c\u7528\u6709\u5411\u8fb9 \u8868\u793a\u5728\u505a\u4efb\u52a1 B \u4e4b\u524d\u5fc5\u987b\u5148\u5b8c\u6210\u4efb\u52a1 A\u3002\u6545\u5728\u8fd9\u4e2a\u5de5\u7a0b\u4e2d\uff0c\u4efb\u610f\u4e24\u4e2a\u4efb\u52a1\u8981\u4e48\u5177\u6709\u786e\u5b9a\u7684\u5148\u540e\u5173\u7cfb\uff0c\u8981\u4e48\u662f\u6ca1\u6709\u5173\u7cfb\uff0c\u7edd\u5bf9\u4e0d\u5b58\u5728\u4e92\u76f8\u77db\u76fe\u7684\u5173\u7cfb\uff08\u5373\u73af\u8def\uff09\u3002 \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 https://blog.csdn.net/lisonglisonglisong/article/details/45543451</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_6","title":"\u4f8b\u9898","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#ac_1","title":"AC \u81ea\u52a8\u673a\uff08\u4e8c\u6b21\u52a0\u5f3a\u7248\uff09","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_7","title":"\u914d\u4e50","text":"<p>\u767e\u6218\u6210\u8bd72023</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_8","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6587\u672c\u4e32 \\(S\\) \u548c \\(n\\) \u4e2a\u6a21\u5f0f\u4e32 \\(T_{1 \\sim n}\\)\uff0c\u8bf7\u4f60\u5206\u522b\u6c42\u51fa\u6bcf\u4e2a\u6a21\u5f0f\u4e32 \\(T_i\\) \u5728 \\(S\\) \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_9","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570 \\(n\\) \u8868\u793a\u6a21\u5f0f\u4e32\u7684\u4e2a\u6570\u3002</p> <p>\u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u7b2c \\(i\\) \u884c\u5305\u542b\u4e00\u4e2a\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u6784\u6210\u7684\u975e\u7a7a\u5b57\u7b26\u4e32 \\(T_i\\)\u3002</p> <p>\u6700\u540e\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u6784\u6210\u7684\u975e\u7a7a\u5b57\u7b26\u4e32 \\(S\\)\u3002</p> <p>\u6570\u636e\u4e0d\u4fdd\u8bc1\u4efb\u610f\u4e24\u4e2a\u6a21\u5f0f\u4e32\u4e0d\u76f8\u540c\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_10","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u5305\u542b \\(n\\) \u884c\uff0c\u5176\u4e2d\u7b2c \\(i\\) \u884c\u5305\u542b\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u8868\u793a \\(T_i\\) \u5728 \\(S\\) \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#1","title":"\u6837\u4f8b #1","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#1_1","title":"\u6837\u4f8b\u8f93\u5165 #1","text":"<pre><code>5\na\nbb\naa\nabaa\nabaaa\nabaaabaa\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#1_2","title":"\u6837\u4f8b\u8f93\u51fa #1","text":"<pre><code>6\n0\n3\n2\n1\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_11","title":"\u63d0\u793a","text":"<p>\u5bf9\u4e8e \\(100 \\%\\) \u7684\u6570\u636e\uff0c\\(1 \\le n \\le 2 \\times {10}^5\\)\uff0c\\(T_{1 \\sim n}\\) \u7684\u957f\u5ea6\u603b\u548c\u4e0d\u8d85\u8fc7 \\(2 \\times {10}^5\\)\uff0c\\(S\\) \u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(2 \\times {10}^6\\)\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#solution","title":"Solution","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#char-schar-s","title":"\u8865\u5145\u77e5\u8bc6\u70b9:<code>char* s</code>\u548c<code>char s[]</code>\u7684\u533a\u522b","text":"<p>https://blog.csdn.net/weibo1230123/article/details/80278828</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_12","title":"\u6ce8\u610f","text":"<ul> <li> <p>\u666e\u901aAC\u81ea\u52a8\u673a\u65f6\u95f4\u590d\u6742\u5ea6\u8fc7\u9ad8</p> </li> <li> <p>\u4e0d\u4fdd\u8bc1\u4efb\u610f\u4e24\u4e2a\u6a21\u5f0f\u4e32\u4e0d\u76f8\u540c,\u8fd9\u9053\u9898\u6709\u76f8\u540c\u5b57\u7b26\u4e32\u8981\u7edf\u8ba1\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2a<code>web[]</code>\u6570\u7ec4\u5b58\u8fd9\u4e2a\u5b57\u7b26\u4e32\u6307\u7684\u662fTrie\u4e2d\u7684\u90a3\u4e2a\u4f4d\u7f6e\uff0c\u6700\u540e\u628a<code>vis[web[i]]</code>\u8f93\u51fa\u5c31OK\u4e86\u3002</p> </li> </ul> <p>\u5982\u679c\u4ea4\u3010\u6a21\u677f\u3011AC \u81ea\u52a8\u673a\uff08\u52a0\u5f3a\u7248\uff09\u7684\u4ee3\u7801\u53ea\u670944\u5206</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_13","title":"\u4ee3\u7801","text":"<pre><code>//AC\u81ea\u52a8\u673a\u4f18\u5316\u6a21\u677f\n//AC\u81ea\u52a8\u673a\u6a21\u677f\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N=2e6+5;\nint n,x,t,i,cnt,vis[N],ans,web[N],in[N];\nchar c[N];\nstruct node {\n    int nxt[27];\n    int fail,flag,ans;\n    void init() {\n        fail=flag=0;\n        memset(nxt,0,sizeof nxt);\n    }\n} trie[N];\n\nvoid add(char s[],int num) {\n    int now=1,l=strlen(s);\n    for(int i=0; i&lt;l; i++) {\n        int ch=s[i]-'a';\n        if(!trie[now].nxt[ch]) {\n            cnt++;\n            trie[now].nxt[ch]=cnt;\n        }\n        now=trie[now].nxt[ch];\n    }\n    if(!trie[now].flag)trie[now].flag=num;\n    web[num]=trie[now].flag;\n}\nqueue&lt;int&gt; q;\nvoid getFail() { //\u6c42\u51faFail\u6307\u9488\n    for(int i=0; i&lt;26; i++)trie[0].nxt[i]=1;\n    q.push(1);\n    trie[1].fail=0;\n    while(q.size()) {\n        int u=q.front();\n        q.pop();\n        for(int i=0; i&lt;26; i++) {\n            int v=trie[u].nxt[i],fail=trie[u].fail;\n            if(!v) {\n                trie[u].nxt[i]=trie[fail].nxt[i];\n                continue;\n            }\n            trie[v].fail=trie[fail].nxt[i];\n            in[trie[v].fail]++;\n            q.push(v);\n        }\n    }\n}\n\nvoid query(char s[]) {  //\u6b64\u6b21query\u662fvoid\u7c7b\u578b\n    int u=1,l=strlen(s);\n    for(int i=0; i&lt;l; i++) {\n        u=trie[u].nxt[s[i]-'a'],trie[u].ans++;  //\u76f4\u63a5\u6253\u6807\u8bb0\u5c31\u53ef\u4ee5\u4e86\n    }\n}\nvoid topsort() {\n    for(int i=1; i&lt;=cnt; i++) {\n        if(!in[i])q.push(i);\n    }\n    while(!q.empty()) {\n        int u=q.front();\n        q.pop();\n        vis[trie[u].flag]=trie[u].ans;\n        int v=trie[u].fail;\n        in[v]--;\n        trie[v].ans+=trie[u].ans;\n        if(!in[v])q.push(v);\n    }\n}\nvoid init() {\n    cnt=1;\n}\nsigned main() {\n\n    cin&gt;&gt;n;\n    init();\n    for(int i=1; i&lt;=n; i++)\n        scanf(\"%s\",&amp;c),add(c,i);\n\n    getFail();\n    char c2[N];\n    scanf(\"%s\",&amp;c2);\n    query(c2);\n    topsort();\n\n    for(int i=1; i&lt;=n; i++)\n        cout&lt;&lt;vis[web[i]]&lt;&lt;endl;\n\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#_14","title":"\u540e\u7f00\u5e73\u8861\u6811","text":"<p>\u5176\u5b83\u5e73\u8861\u6811</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/","title":"KMP\u7b97\u6cd5","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#_1","title":"\u767e\u79d1\u4ecb\u7ecd","text":"<p>KMP\u7b97\u6cd5\u7684\u6838\u5fc3\u662f\u5229\u7528\u5339\u914d\u5931\u8d25\u540e\u7684\u4fe1\u606f\uff0c\u5c3d\u91cf\u51cf\u5c11\u6a21\u5f0f\u4e32\u4e0e\u4e3b\u4e32\u7684\u5339\u914d\u6b21\u6570\u4ee5\u8fbe\u5230\u5feb\u901f\u5339\u914d\u7684\u76ee\u7684\u3002\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u901a\u8fc7\u4e00\u4e2anext()\u51fd\u6570\u5b9e\u73b0\uff0c\u51fd\u6570\u672c\u8eab\u5305\u542b\u4e86\u6a21\u5f0f\u4e32\u7684\u5c40\u90e8\u5339\u914d\u4fe1\u606f\u3002KMP\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6O(m+n)</p> <p>\u5b57\u7b26\u4e32\u7684\u6a21\u5f0f\u5339\u914d</p> <p>\u5b57\u7b26\u4e32\u7684\u6a21\u5f0f\u5339\u914d\u662f\u4e00\u79cd\u5e38\u7528\u7684\u8fd0\u7b97\u3002\u6240\u8c13\u6a21\u5f0f\u5339\u914d,\u53ef\u4ee5\u7b80\u5355\u5730\u7406\u89e3\u4e3a\u5728\u76ee\u6807(\u5b57\u7b26\u4e32)\u4e2d\u5bfb\u627e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6a21\u5f0f(\u4e5f\u662f\u5b57\u7b26\u4e32)\uff0c\u8fd4\u56de\u76ee\u6807\u548c\u6a21\u5f0f\u5339\u914d\u7684\u7b2c\u4e00\u4e2a\u5b50\u4e32\u7684\u9996\u5b57\u7b26\u4f4d\u7f6e\u3002\u901a\u5e38\u76ee\u6807\u4e32\u6bd4\u8f83\u5927\uff0c\u800c\u6a21\u5f0f\u4e32\u5219\u6bd4\u8f83\u77ed\u5c0f</p> <p>\u6a21\u5f0f\u5339\u914d\u7684\u7c7b\u578b</p> <p>(1)\u7cbe\u786e\u5339\u914d \u5982\u679c\u5728\u76ee\u6807T\u4e2d\u81f3\u5c11\u4e00\u5904\u5b58\u5728\u6a21\u5f0fP\uff0c\u5219\u79f0\u5339\u914d\u6210\u529f\uff0c\u5426\u5219\u5373\u4f7f\u76ee\u6807\u4e0e\u6a21\u5f0f\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\u4e0d\u540c\u4e5f\u4e0d\u80fd\u79f0\u4e3a\u5339\u914d\u6210\u529f\uff0c\u5373\u5339\u914d\u5931\u8d25\u3002\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u6216\u7b26\u53f7\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u76ee\u6807\u5bf9\u8c61T\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6a21\u5f0fP\uff0c\u6a21\u5f0f\u5339\u914d\u7684\u76ee\u7684\u662f\u5728\u76ee\u6807T\u4e2d\u641c\u7d22\u4e0e\u6a21\u5f0fP\u5b8c\u5168\u76f8\u540c\u7684\u5b50\u4e32,\u8fd4\u56deT\u548cP\u5339\u914d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u6bcd\u4f4d\u7f6e \u3002 (2)\u8fd1\u4f3c\u5339\u914d \u5982\u679c\u6a21\u5f0fP\u4e0e\u76ee\u6807T(\u6216\u5176\u5b50\u4e32)\u5b58\u5728\u67d0\u79cd\u7a0b\u5ea6\u7684\u76f8\u4f3c,\u5219\u8ba4\u4e3a\u5339\u914d\u6210\u529f\u3002\u5e38\u7528\u7684\u8861\u91cf\u5b57\u7b26\u4e32\u76f8\u4f3c\u5ea6\u7684\u65b9\u6cd5\u662f\u6839\u636e\u4e00\u4e2a\u4e32\u8f6c\u6362\u6210\u53e6\u4e00\u4e2a\u4e32\u6240\u9700\u7684\u57fa\u672c\u64cd\u4f5c\u6570\u76ee\u6765\u786e\u5b9a\u3002\u57fa\u672c\u64cd\u4f5c\u7531\u5b57\u7b26\u4e32\u7684\u63d2\u5165\u3001\u5220\u9664\u548c\u66ff\u6362\u6765\u7ec4\u6210 \u3002</p> <p>KMP\u6a21\u5f0f\u5339\u914d\u7b97\u6cd5</p> <p>KMP\u7b97\u6cd5\u662f\u4e00\u79cd\u6539\u8fdb\u7684\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5,\u5176\u5173\u952e\u662f\u5229\u7528\u5339\u914d\u5931\u8d25\u540e\u7684\u4fe1\u606f,\u5c3d\u91cf\u51cf\u5c11\u6a21\u5f0f\u4e32\u4e0e\u4e3b\u4e32\u7684\u5339\u914d\u6b21\u6570\u4ee5\u8fbe\u5230\u5feb\u901f\u5339\u914d\u7684\u76ee\u7684 \u3002 \u6c42\u5f97\u6a21\u5f0f\u7684\u7279\u5f81\u5411\u91cf\u4e4b\u540e\uff0c\u57fa\u4e8e\u7279\u5f81\u5206\u6790\u7684\u5feb\u901f\u6a21\u5f0f\u5339\u914d\u7b97\u6cd5(KMP\u6a21\u5f0f\u5339\u914d\u7b97\u6cd5)\u4e0e\u6734\u7d20\u5339\u914d\u7b97\u6cd5\u7c7b\u4f3c\uff0c\u53ea\u662f\u5728\u6bcf\u6b21\u5339\u914d\u8fc7\u7a0b\u4e2d\u53d1\u751f\u67d0\u6b21\u5931\u914d\u65f6\uff0c\u4e0d\u518d\u5355\u7eaf\u5730\u628a\u6a21\u5f0f\u540e\u79fb\u4e00\u4f4d\uff0c\u800c\u662f\u6839\u636e\u5f53\u524d\u5b57\u7b26\u7684\u7279\u5f81\u6570\u6765\u51b3\u5b9a\u6a21\u5f0f\u53f3\u79fb\u7684\u4f4d\u6570 \u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#1-kmp","title":"\u4f8b\u9898 #1 KMP\u5b57\u7b26\u4e32\u5339\u914d","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32 \\(s_1\\) \u548c \\(s_2\\)\uff0c\u82e5 \\(s_1\\) \u7684\u533a\u95f4 \\([l, r]\\) \u5b50\u4e32\u4e0e \\(s_2\\) \u5b8c\u5168\u76f8\u540c\uff0c\u5219\u79f0 \\(s_2\\) \u5728 \\(s_1\\) \u4e2d\u51fa\u73b0\u4e86\uff0c\u5176\u51fa\u73b0\u4f4d\u7f6e\u4e3a \\(l\\)\u3002 \u73b0\u5728\u8bf7\u4f60\u6c42\u51fa \\(s_2\\) \u5728 \\(s_1\\) \u4e2d\u6240\u6709\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002</p> <p>\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32 \\(s\\) \u7684 border \u4e3a \\(s\\) \u7684\u4e00\u4e2a**\u975e \\(s\\) \u672c\u8eab**\u7684\u5b50\u4e32 \\(t\\)\uff0c\u6ee1\u8db3 \\(t\\) \u65e2\u662f \\(s\\) \u7684\u524d\u7f00\uff0c\u53c8\u662f \\(s\\) \u7684\u540e\u7f00\u3002 \u5bf9\u4e8e \\(s_2\\)\uff0c\u4f60\u8fd8\u9700\u8981\u6c42\u51fa\u5bf9\u4e8e\u5176\u6bcf\u4e2a\u524d\u7f00 \\(s'\\) \u7684\u6700\u957f border \\(t'\\) \u7684\u957f\u5ea6\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5373\u4e3a \\(s_1\\)\u3002 \u7b2c\u4e8c\u884c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5373\u4e3a \\(s_2\\)\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u9996\u5148\u8f93\u51fa\u82e5\u5e72\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c**\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f**\u8f93\u51fa \\(s_2\\) \u5728 \\(s_1\\) \u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u6700\u540e\u4e00\u884c\u8f93\u51fa \\(|s_2|\\) \u4e2a\u6574\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6574\u6570\u8868\u793a \\(s_2\\) \u7684\u957f\u5ea6\u4e3a \\(i\\) \u7684\u524d\u7f00\u7684\u6700\u957f border \u957f\u5ea6\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(1 \\leq |s_1|,|s_2| \\leq 10^6\\)\uff0c\\(s_1, s_2\\) \u4e2d\u5747\u53ea\u542b\u5927\u5199\u82f1\u6587\u5b57\u6bcd\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#solution","title":"Solution","text":"<pre><code>    #include&lt;bits/stdc++.h&gt;\n    using namespace std;\n    char a[1000100],b[1000100];\n    int p[1000100],ls1,ls2,j;\n\n    void pre(){\n        for(int i=2;i&lt;=ls2;i++){\n            while(j&gt;0 &amp;&amp; b[i]!=b[j+1]) j=p[j];\n            if(b[i]==b[j+1]) j++;\n            p[i]=j;\n        }\n    }\n    int main(){\n        scanf(\"%s%s\",a+1,b+1);\n        ls1=strlen(a+1),ls2=strlen(b+1);\n        p[1]=0;\n        pre();\n\n        j=0;\n        for(int i=1;i&lt;=ls1;i++){\n            while(j&gt;0 &amp;&amp; a[i]!=b[j+1]) j=p[j];\n            if(a[i]==b[j+1]) j++;\n            if(j==ls2) printf(\"%d\\n\",i-ls2+1),j=p[j];\n        }\n        for(int i=1;i&lt;ls2;i++)\n        printf(\"%d \",p[i]);\n        printf(\"%d\",p[ls2]);\n        return 0;\n    }\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#_2","title":"\u7ec3\u4e60","text":"<p>\u5bf9nxt\u6570\u7ec4\u7684\u672c\u8d28\u63a2\u7a76</p> <p>www.luogu.com.cn</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#kmpexkmp","title":"\u6269\u5c55KMP\uff08exkmp\uff09","text":"<p>183 \u6269\u5c55 KMP(Z \u51fd\u6570)_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 \\(a,b\\)\uff0c\u4f60\u8981\u6c42\u51fa\u4e24\u4e2a\u6570\u7ec4\uff1a</p> <ul> <li> <p>\\(b\\) \u7684 \\(z\\) \u51fd\u6570\u6570\u7ec4 \\(z\\)\uff0c\u5373 \\(b\\) \u4e0e \\(b\\) \u7684\u6bcf\u4e00\u4e2a\u540e\u7f00\u7684 LCP\uff08\u6700\u957f\u516c\u5171\u524d\u7f00\uff09\u957f\u5ea6\u3002</p> </li> <li> <p>\\(b\\) \u4e0e \\(a\\) \u7684\u6bcf\u4e00\u4e2a\u540e\u7f00\u7684 LCP \u957f\u5ea6\u6570\u7ec4 \\(p\\)\u3002</p> </li> </ul> <p>\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6570\u7ec4 \\(a\\)\uff0c\u8bbe\u5176\u6743\u503c\u4e3a \\(\\operatorname{xor}_{i=1}^n i \\times (a_i + 1)\\)\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=2e7+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,q,T,z[N],p[N],ans;\nchar s[N],t[N];\n\nvoid get_z(char s[],int n){\n    z[1]=n;\n    int l=0,r=0;\n    for(int i=2;i&lt;=n;i++){\n        if(i&lt;=r)z[i]=min(z[i-l+1],r-i+1);\n        while(s[1+z[i]]==s[i+z[i]])z[i]++;\n\n        if(i/\u8f6c\u79fbbox \n    }\n}\n\nvoid get_p(char s[],char t[],int n,int m){\n    int l=0,r=0;\n    for(int i=1;i&lt;=m;i++){\n        if(i&lt;=r)p[i]=min(z[i-l+1],r-i+1);\n        while(s[1+p[i]]==t[i+p[i]]&amp;&amp;1+p[i]&lt;=n&amp;&amp;i+p[i]&lt;=m)p[i]++;\n\n        if(i/\u8f6c\u79fbbox \n    }\n}\n\nsigned main(){\n    scanf(\"%s\",t+1);\n    scanf(\"%s\",s+1);\n    n=strlen(s+1);\n    m=strlen(t+1);\n    get_z(s,n);\n    get_p(s,t,n,m);\n\n//  for(int i=1;i&lt;=n;i++)cerr&lt;&lt;z[i]&lt;&lt;' ';\n//  cerr&lt;&lt;\"z[]end\\n\";\n    for(int i=1;i&lt;=n;i++)ans^=i*(z[i]+1);\n    cout&lt;&lt;ans&lt;&lt;endl;\n    ans=0;\n    for(int i=1;i&lt;=m;i++)ans^=i*(p[i]+1);\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre> <p>\u6ce8\u610f\u6c42\u7684\u662fb\u7684z\u51fd\u6570</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#z","title":"Z\u51fd\u6570","text":"<p>z \u51fd\u6570 \u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u5b57\u7b26\u4e32 s \u3002$ z_i$\u8868\u793a $s $\u4e0e\u5176\u540e\u7f00 $s[ i , n ] $\u7684\u6700\u957f\u516c\u5171\u524d\u7f00 \uff08 LCP \uff09 \u7684\u957f\u5ea6</p> <p></p> <p>\u66b4\u529b\u8ba1\u7b97\u81ea\u7136\u662fO(n^2)</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#z-box","title":"Z-box","text":"<p>\u624b\u6276\u7740\u94c1\u7a97<sub>~\u6211\u671b</sub><sub>\u5916\u8fb9</sub>~~</p> <p></p> <p>\u5bf9\u4e8e i, \u6211\u4eec\u79f0\u533a\u95f4$ [i,i+ z[i]- 1 ]$ \u662f\u7684\u5339\u914d\u6bb5 \uff0c \u4e5f\u53ef\u4ee5\u53eb Z-box \u7b97\u6cd5\u8fc7\u7a0b\u4e2d\u6211\u4eec\u7ef4\u62a4\u53f3\u7aef\u70b9\u6700\u9760\u53f3\u7684\u5339\u914d\u6bb5 \u3002 \u4e3a\u4e86\u65b9\u4fbf \uff0c \u8bb0\u4f5c[l, r ] \u3002 s [l,r]\u4e00\u5b9a\u7b49\u4e8e s  \u7684\u524d\u7f00 \u3002 \u5728\u8ba1\u7b97 z[i] \u65f6\u6211\u4eec\u4fdd\u8bc1l\u2264i</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u5904\u7406\u4e86z[1\\sim 5]\uff0c\u6b64\u65f6\u76d2\u5b50\u4e3a[5,8]\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u5904\u7406z[6\\sim 8]\u65f6\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ecez[2\\sim 4]\u8f6c\u79fb\u8fc7\u6765\u3002</p> <p>\u7b97\u6cd5\u6d41\u7a0b</p> <p></p> <p>\u5bf9\u6bd4\u4e00\u4e0b\uff1f\u9a6c\u62c9\u8f66\u5982\u4e0b\uff1a</p> <p></p> <p>\u6211\u4eec\u6765\u89e3\u91ca\u4e00\u4e0b</p> <p></p> <ol> <li> <p>\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1s[1,r-l+1]=s[l,r]\uff0c\u4f46\u662f\u5176\u4f59\u90e8\u5206\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u3002\u5982\u679ci\u5728box\u5185 (1) \u5982z[i-l+1]&lt;r-i+1\uff0c\u8bf4\u660ez[i-l+1]\u7684\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u5168\u90e8\u5728box\u5185\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1z[i-l+1]\u53ef\u4ee5\u5b8c\u7f8e\u8f6c\u79fb\u5230z[i] (2) \u5982z[i-l+1]\u2265r-i+1\uff0c\u8bf4\u660ez[i-l+1]\u7684\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u524d\u90e8\u5206\u5728box\u5185\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e0d\u80fd\u4fdd\u8bc1z[i-l+1]\u53ef\u4ee5\u5b8c\u7f8e\u8f6c\u79fb\u5230z[i]\uff0c\u6545\u5bf9\u4e8e\u4f38\u51fabox\u5916\u7684\u90e8\u5206\uff0c\u6211\u4eec\u8981\u9010\u4e2a\u679a\u4e3e</p> </li> <li> <p>\u5982\u679ci\u5728box\u5916\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u597d\u66b4\u529b\u679a\u4e3e\u4e86\u3002</p> </li> </ol> <p>\u4f46\u662f\u6709\u4e00\u4e2a\u91cd\u70b9\u5c31\u662fbox\u7684\u8f6c\u79fb\u4e86\u3002\u8981\u4e0d\u7136\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u5931\u53bb\u4e86\u610f\u4e49\u3002</p> <p>\u6c42\u51fa \\(z[i]\\) \u540e \uff0c \u5982\u679c \\(i + z[i] - 1 &gt; r\\), \u5219\u66f4\u65b0\u76d2\u5b50 \\(l = i , r = i + z [i]-1\\)\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3ai + z[i] - 1 \u4ee3\u8868\u5f53\u524dz[i]\u7684\u5bf9\u5e94\u4e32\u7684\u53f3\u7aef\u70b9\u3002\u5982\u679ci + z[i] - 1 &gt; r\uff0c\u5c31\u8bf4\u660e\u5bf9\u5e94\u4e32\u7684\u53f3\u7aef\u70b9\u4f38\u51fa\u4e86\u5f53\u524d\u7684box</p> <p></p> <p>\u5f88\u660e\u663e\uff0c\u4ee5\u5de6\u56fe\u4e3a\u4f8b\uff0c\u7ea2\u8272box\u533a\u95f4\u5df2\u7ecf\u6ca1\u6709\u7528\u5904\u4e86\uff0c\u800c\u73b0\u5728\u6211\u4eec\u77e5\u9053\u84dd\u8272\u533a\u95f4\u5bf9\u5e94\u76f8\u7b49\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628abox\u8f6c\u79fb\u5230[l',r']</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#_3","title":"\u4ee3\u7801","text":"<pre><code>void get_z(char s[],int n){\n    z[1]=n;\n    int l=0,r=0;\n    for(int i=2;i&lt;=n;i++){\n        if(i&lt;=r)z[i]=min(z[i-l+1],r-i+1);\n        while(s[1+z[i]]==s[i+z[i]])z[i]++;\n        if(i/\u8f6c\u79fbbox \n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u5b8c\u5168\u53d6\u51b3\u4e8ewhile\uff0c\u800c\u6211\u4eec\u77e5\u9053\uff0c\u53ea\u6709\u5f53\u524dz[i]\u5bf9\u5e94\u5b57\u7b26\u7684\u53f3\u8fb9\u754c\u4f38\u51fa\u4e86box\uff0c\u4f38\u51fa\u591a\u5c11\u5c31\u8dd1\u51e0\u904dwhile\u3002\u800c\u5728\u4f38\u51fa\u540e\u6211\u4eec\u53c8\u4f1a\u66f4\u65b0box\uff0c\u6240\u4ee5\u6211\u4eec\u7684while\u6b21\u6570\\(=r\\)\u4ece\\(1\\sim n=n\\)\u6b21</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP/#p","title":"P\u51fd\u6570","text":"<p>\\(b\\) \u4e0e \\(a\\) \u7684\u6bcf\u4e00\u4e2a\u540e\u7f00\u7684 LCP \u957f\u5ea6\u6570\u7ec4 \\(p\\)\u3002</p> <pre><code>void get_p(char s[],char p[],int n,int m){\n    int l=0,r=0;\n    for(int i=1;i&lt;=n;i++){\n        if(i&lt;=r)p[i]=min(z[i-l+1],r-i+1);\n        while(s[1+p[i]]==t[i+p[i]]&amp;&amp;1+p[i]&lt;=n&amp;&amp;i+p[i]&lt;=m)p[i]++;\n\n        if(i/\u8f6c\u79fbbox \n    }\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/Trie%E6%A0%91/","title":"\u5b57\u5178\u6811 Trie","text":"<p>\u591a\u6a21\u5f0f\u4e32\uff0c\u591a\u8be2\u95ee\u4e32</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/Trie%E6%A0%91/#_1","title":"\u8d44\u6599","text":"<p>https://www.cnblogs.com/fusiwei/p/11972776.html</p> <p>\u767e\u79d1\u5b9a\u4e49</p> <p>Trie\u6811\uff0c\u662f\u4e00\u79cd\u6811\u5f62\u7ed3\u6784\uff0c\u662f\u4e00\u79cd\u54c8\u5e0c\u6811\u7684\u53d8\u79cd\u3002\u5178\u578b\u5e94\u7528\u662f\u7528\u4e8e\u7edf\u8ba1\uff0c\u6392\u5e8f\u548c\u4fdd\u5b58\u5927\u91cf\u7684\u5b57\u7b26\u4e32\uff08\u4f46\u4e0d\u4ec5\u9650\u4e8e\u5b57\u7b26\u4e32\uff09\uff0c\u6240\u4ee5\u7ecf\u5e38\u88ab\u641c\u7d22\u5f15\u64ce\u7cfb\u7edf\u7528\u4e8e\u6587\u672c\u8bcd\u9891\u7edf\u8ba1\u3002\u5b83\u7684\u4f18\u70b9\u662f\uff1a\u5229\u7528\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u6765\u51cf\u5c11\u67e5\u8be2\u65f6\u95f4\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u65e0\u8c13\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\uff0c\u67e5\u8be2\u6548\u7387\u6bd4\u54c8\u5e0c\u6811\u9ad8\u3002</p> <p>\u6027\u8d28</p> <p>\u5b83\u67093\u4e2a\u57fa\u672c\u6027\u8d28\uff1a \u6839\u8282\u70b9\u4e0d\u5305\u542b\u5b57\u7b26\uff0c\u9664\u6839\u8282\u70b9\u5916\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ea\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\uff1b \u4ece\u6839\u8282\u70b9\u5230\u67d0\u4e00\u8282\u70b9\uff0c\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u5b57\u7b26\u8fde\u63a5\u8d77\u6765\uff0c\u4e3a\u8be5\u8282\u70b9\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff1b \u6bcf\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u5305\u542b\u7684\u5b57\u7b26\u90fd\u4e0d\u76f8\u540c\u3002</p> <p>\u57fa\u672c\u64cd\u4f5c</p> <p>\u5176\u57fa\u672c\u64cd\u4f5c\u6709\uff1a\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664,\u5f53\u7136\u5220\u9664\u64cd\u4f5c\u6bd4\u8f83\u5c11\u89c1\u3002</p> <p>\u5b9e\u73b0\u65b9\u6cd5</p> <p>\u641c\u7d22\u5b57\u5178\u9879\u76ee\u7684\u65b9\u6cd5\u4e3a\uff1a (1) \u4ece\u6839\u7ed3\u70b9\u5f00\u59cb\u4e00\u6b21\u641c\u7d22\uff1b (2) \u53d6\u5f97\u8981\u67e5\u627e\u5173\u952e\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5e76\u6839\u636e\u8be5\u5b57\u6bcd\u9009\u62e9\u5bf9\u5e94\u7684\u5b50\u6811\u5e76\u8f6c\u5230\u8be5\u5b50\u6811\u7ee7\u7eed\u8fdb\u884c\u68c0\u7d22\uff1b (3) \u5728\u76f8\u5e94\u7684\u5b50\u6811\u4e0a\uff0c\u53d6\u5f97\u8981\u67e5\u627e\u5173\u952e\u8bcd\u7684\u7b2c\u4e8c\u4e2a\u5b57\u6bcd,\u5e76\u8fdb\u4e00\u6b65\u9009\u62e9\u5bf9\u5e94\u7684\u5b50\u6811\u8fdb\u884c\u68c0\u7d22\u3002 (4) \u8fed\u4ee3\u8fc7\u7a0b\u2026\u2026 (5) \u5728\u67d0\u4e2a\u7ed3\u70b9\u5904\uff0c\u5173\u952e\u8bcd\u7684\u6240\u6709\u5b57\u6bcd\u5df2\u88ab\u53d6\u51fa\uff0c\u5219\u8bfb\u53d6\u9644\u5728\u8be5\u7ed3\u70b9\u4e0a\u7684\u4fe1\u606f\uff0c\u5373\u5b8c\u6210\u67e5\u627e\u3002 \u5176\u4ed6\u64cd\u4f5c\u7c7b\u4f3c\u5904\u7406</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/Trie%E6%A0%91/#_2","title":"\u601d\u8def","text":"<p>\u6570\u636e\u7ed3\u6784 \u7ed3\u6784\u4f53\u5b9e\u73b0</p> <pre><code>struct node {\n    int nxt[27];\n} trie[N];\n</code></pre> <p>\u5efa\u6811\uff08\u63d2\u5165\uff09</p> <p>\u4ee5\u4e0b\u4ec5\u8003\u8651\u5305\u542b \\(a\\to z\\) 26\u4e2a\u5355\u8bcd\u7684 Trie</p> <p>\u5411Trie\u4e2d\u63d2\u5165\u4e00\u4e2a\u5355\u8bcd \\(s\\)</p> <pre><code>void add(char s[]) {\n    int now=1,l=strlen(s);\n    for(int i=0; i&lt;l; i++) {\n        int ch=s[i]-'a';\n        if(!trie[now].nxt[ch]) {\n            cnt++;\n            trie[now].nxt[ch]=cnt;\n        }\n        now=trie[now].nxt[ch];\n    }\n}\n</code></pre> <p>\u67e5\u8be2 \u67e5\u8be2\u662f\u5426\u6709\u5355\u8bcd \\(s\\) \u6216**\u4ee5 \\(s\\) \u4e3a\u524d\u7f00\u7684\u5355\u8bcd**</p> <pre><code>int find(char s[]){\n    int now=0,l=strlen(s);\n    for(int i=0;i&lt;l;i++){\n        int ch=getch(s[i]);\n        if(!tre[now].nxt[ch]){\n            return 0;\n        }\n        now=tre[now].nxt[ch];\n\n    }\n    return 1;\n}\n</code></pre> <p>\u6e05\u7a7a</p> <p>\u6ce8\u610f\u6839\u8282\u70b9\uff081\u6216\u80050\u8282\u70b9\uff09\u4e5f\u8981\u6e05\u7a7a\uff01\u867d\u7136\u4e0d\u8bb0\u5f55cnt\uff0c\u4f46\u662f\u8bb0\u5f55\u4e86s\uff0c\u800c\u90a3\u4e9bs\u5df2\u7ecf\u88ab\u5220\u9664\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/Trie%E6%A0%91/#1","title":"\u4f8b\u9898 #1","text":"<p>\u7ed9\u5b9a \\(n\\) \u4e2a\u6a21\u5f0f\u4e32 \\(s_1, s_2, \\dots, s_n\\) \u548c \\(q\\) \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u4e32 \\(t_i\\)\uff0c\u8bf7\u56de\u7b54 \\(s_1 \\sim s_n\\) \u4e2d\u6709\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32 \\(s_j\\) \u6ee1\u8db3 \\(t_i\\) \u662f \\(s_j\\) \u7684**\u524d\u7f00**\u3002</p> <p>\u4e00\u4e2a\u5b57\u7b26\u4e32 \\(t\\) \u662f \\(s\\) \u7684\u524d\u7f00\u5f53\u4e14\u4ec5\u5f53\u4ece \\(s\\) \u7684\u672b\u5c3e\u5220\u53bb\u82e5\u5e72\u4e2a\uff08\u53ef\u4ee5\u4e3a 0 \u4e2a\uff09\u8fde\u7eed\u7684\u5b57\u7b26\u540e\u4e0e \\(t\\) \u76f8\u540c\u3002</p> <p>\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u5927\u5c0f\u654f\u611f\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 <code>Fusu</code> \u548c\u5b57\u7b26\u4e32 <code>fusu</code> \u4e0d\u540c\u3002</p> <p>\u672c\u9898\u5355\u6d4b\u8bd5\u70b9\u5185\u6709\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e\u3002</p> <p>\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6570\u636e\u7ec4\u6570 \\(T\\)\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a \u7b2c\u4e00\u884c\u662f\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u6a21\u5f0f\u4e32\u7684\u4e2a\u6570 \\(n\\) \u548c\u8be2\u95ee\u7684\u4e2a\u6570 \\(q\\)\u3002 \u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u4e00\u4e2a**\u6a21\u5f0f\u4e32**\u3002 \u63a5\u4e0b\u6765 \\(q\\) \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u4e00\u6b21\u8be2\u95ee\uff08\u8be2\u95ee\u4e32\uff09\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u6309\u7167\u8f93\u5165\u7684\u987a\u5e8f\u4f9d\u6b21\u8f93\u51fa\u5404\u6d4b\u8bd5\u6570\u636e\u7684\u7b54\u6848\u3002 \u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u7b54\u6848\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/Trie%E6%A0%91/#_3","title":"\u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a","text":"<p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(1 \\leq T, n, q\\leq 10^5\\)\uff0c\u4e14\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u603b\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(3 \\times 10^6\\)\u3002\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53ea\u542b\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\u6570\u5b57\uff0c\u4e14\u4e0d\u542b\u7a7a\u4e32\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/Trie%E6%A0%91/#_4","title":"\u8bf4\u660e","text":"<p>std \u7684 IO \u4f7f\u7528\u7684\u662f\u5173\u95ed\u540c\u6b65\u540e\u7684 cin/cout\uff0c\u672c\u9898\u4e0d\u5361\u5e38\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN=3e6+5;\nint cnt,n,q,T;\nchar s[MAXN];\nstruct tree{\n    int nxt[63];\n}tre[MAXN];\nint nend[MAXN],sum[MAXN];\nint getch(char c){\n    int ch;\n        if(c&gt;='a')ch=c-'a'/ 10~35,a~z\n        else if(c&gt;='A')ch=c-'A'/36~61,A~Z\n        else ch=c-'0'; //0~9,0~9\n        return ch;\n}\nvoid add(char s[]){\n    int now=0,l=strlen(s);\n    for(int i=0;i&lt;l;i++){\n        int ch=getch(s[i]);\n        if(!tre[now].nxt[ch]){\n            cnt++;\n            tre[now].nxt[ch]=cnt;\n        }\n        now=tre[now].nxt[ch];sum[now]++;\n    }\n}\nint find(char s[]){\n    int now=0,l=strlen(s);\n    for(int i=0;i&lt;l;i++){\n        int ch=getch(s[i]);\n        if(!tre[now].nxt[ch]){\n            return 0;\n        }\n        now=tre[now].nxt[ch];\n\n    }\n    return sum[now];\n}\nint main(){\n    scanf(\"%d\",&amp;T);\n    while(T--){\n\n        for(int i=0;i&lt;=cnt;i++){\n            sum[i]=0;\n            for(int j=0;j&lt;=61;j++)tre[i].nxt[j]=0;\n        }\n        cnt=0;\n\n        cin&gt;&gt;n&gt;&gt;q;\n        for(int i=1;i&lt;=n;i++){\n            scanf(\"%s\",s);\n            add(s);\n        }for(int i=1;i&lt;=q;i++){\n            scanf(\"%s\",s);\n            printf(\"%d\\n\",find(s));\n        }\n    }\n    return 0;\n} \n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/Trie%E6%A0%91/#2-phone-list","title":"\u4f8b\u9898 #2 Phone List","text":"<p>\u9898\u9762\u7ffb\u8bd1</p> <p>\u7ed9\u5b9a\\(n\\)\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7\\(10\\)\u7684\u6570\u5b57\u4e32\uff0c\u5224\u65ad\u662f\u5426\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32\\(A\\)\u548c\\(B\\),\u6ee1\u8db3\\(A\\)\u662f\\(B\\)\u7684\u524d\u7f00\uff0c\u82e5\u6709\uff0c\u8f93\u51fa<code>NO</code>\uff0c\u82e5\u6ca1\u6709\uff0c\u8f93\u51fa<code>YES</code>\u3002</p> <p>Translated by @wasa855</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nint f;\n\nnamespace Trie{\n    struct node{\n        int s[12];\n        int cnt;\n        int end;\n\n        void init(){\n            cnt=end=0;\n            memset(s,0,sizeof s);\n        }\n    }t[N];\n    int tot=0;\n\n    void init(){\n        for(int i=0;i&lt;=tot;i++)memset(t[i].s,0,sizeof t[i].s),t[i].cnt=0,t[i].end=0;\n        tot=0;\n    }\n\n\n    void insert(string s){\n        int x=0;\n        for(int i=0;i&lt;s.size();i++){\n            int cur=s[i]-'0';\n            if(!t[x].s[cur])t[x].s[cur]=++tot,t[tot].init();\n            x=t[x].s[cur];\n            t[x].cnt++;\n            if(t[x].end)f=1;\n        }\n        if(t[x].cnt&gt;1)f=1;\n        t[x].end++;\n    }\n}using namespace Trie;\n\nvoid solve(){\n    itn n=rd;\n    init();\n    f=0;\n    for(int i=1;i&lt;=n;i++){\n        string s;\n        cin&gt;&gt;s;\n        insert(s);\n    }\n    if(f){\n        puts(\"NO\");\n    }else{\n        puts(\"YES\");\n    }\n\n\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=rd;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/Trie%E6%A0%91/#trie_1","title":"\u5339\u914d\u5b50\u4e32\uff08\u540e\u7f00Trie\uff09","text":"<p>\u672c\u9898\u5339\u914d\u7684\u662f\u524d\u7f00\uff0c\u4f46\u5982\u679c\u8981\u5339\u914d\u7684\u662f\u5b50\u4e32\u5462\uff1f\u90a3\u4e48\u6211\u4eec\u5c31\u8fd9\u6837\uff1a\u5047\u8bbe\u4e00\u4e2a\u6a21\u5f0f\u4e32\u4e3aacde\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628aacde,cde,de,e\u90fd\u52a0\u5165\u5b57\u5178\u6811\u5373\u53ef\u3002</p> <p>\u5bf9\u5e94\u4e60\u9898</p> <p>\u7ec3\u4e60 | \u5357\u591620230801</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/Trie%E6%A0%91/#01trie","title":"01trie","text":"<p>01 trie \u662f\u4e00\u79cd\u7279\u6b8a\u7684 trie\uff0c\u5b57\u7b26\u96c6\u4e3a {0,1}\uff0c\u53ef\u4ee5\u7ef4\u62a4\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u5f02\u6216\u76f8\u5173\u4fe1\u606f\u3002</p> <p>www.luogu.com.cn</p> <p>\u6709q\u6b21\u64cd\u4f5c\u548c\u4e00\u4e2a\u96c6\u5408A\uff0c\u5f00\u59cb\u65f6\u96c6\u5408\u4e2d\u53ea\u6709\u4e00\u4e2a\u65700\uff0c\u4e0b\u9762\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u64cd\u4f5c\uff1a</p> <ul> <li> <p><code>+ x</code> \u628ax\u63d2\u5165\u96c6\u5408A</p> </li> <li> <p><code>- x</code> \u628ax\u4ece\u96c6\u5408A\u4e2d\u5220\u53bb\uff0c\u4fdd\u8bc1x\u5df2\u5b58\u5728\u4e8e\u96c6\u5408A\u4e2d</p> </li> <li> <p><code>? x</code> \u7ed9\u4e00\u4e2a\u6570x\u5728\u96c6\u5408A\u4e2d\u627e\u4e00\u4e2ay\u4f7f\u5f97x^y\u6700\u5927\uff0c\u5e76\u6c42\u51fa\u8fd9\u4e2a\u503c \u6570\u636e\u8303\u56f4:\\(1\\leq q\\leq 200000\\) \\(1\\leq x_i\\leq10^9\\)</p> </li> </ul> <p>\u6ce8\u610f\u6211\u4eec\u5728\u5efa\u7acbtrie\u6811\u65f6\u5e94\u8be5\u662f\u9ad8\u4f4d\u5728\u4e0a\uff08\u5373\u4e8c\u8fdb\u5236\u7684\u9ad8\u4f4d\u9760\u8fd1\u6811\u6839\uff09\uff0c\u5426\u5219\u6211\u4eec\u7684\u8d2a\u5fc3\u5c31\u5931\u6548\u4e86\uff01</p> <p>\u6ce8\u610f\u7a7a\u95f4\uff0c\u548c\u7ebf\u6bb5\u6811\u4e00\u6837\u662f\u5f00\u6b7b\u4e86\u7684\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n// const char el='\\n';\n// const bool enable_dbg = 1;\n// template &lt;typename T,typename... Args&gt;\n// void dbg(T s,Args... args) {\n//  if constexpr (enable_dbg){\n//     cerr &lt;&lt; s &lt;&lt; ' ';\n//      if constexpr (sizeof...(Args))\n//          dbg(args...);\n//  }\n// }\n\nconst int N = 6e6 + 7;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\nnamespace trie{\n    struct ndoe{\n        int s[2];\n        int cnt,val;\n    }t[N];\n    int idx=1;\n    void insert(int m){\n        int x=1;\n        for(int i=63;~i;i--){\n            int v=m&gt;&gt;i&amp;1ll;\n            if(!t[x].s[v])t[x].s[v]=++idx;\n            x=t[x].s[v];\n            t[x].cnt++;\n        }\n        t[x].val=m;\n\n        // while(m){\n        //     int cur=m&amp;1;\n        //     if(!t[x].s[cur])t[x].s[cur]=++idx;\n        //     x=t[x].s[cur];\n        //     t[x].cnt++;\n        //     m&gt;&gt;=1;\n        // }\n    }\n\n    void del(int m){\n        int x=1;\n        for(int i=63;~i;i--){\n            int v=m&gt;&gt;i&amp;1ll;\n            x=t[x].s[v];\n            t[x].cnt--;\n        }\n\n        // while(m--){\n        //     int cur=m&amp;1;\n        //     x=t[x].s[cur];\n        //     t[x].cnt--;\n        //     m&gt;&gt;=1;\n        // }\n    }\n\n    int query(int m){\n        int x=1;\n        // int res=0;\n        // while(1){\n        //     int cur=m&amp;1;\n        //     int f=0;\n        //     if(t[x].s[1^cur]&amp;&amp;t[t[x].s[1^cur]].cnt)x=t[x].s[1^cur],f=1^cur;\n        //     else x=t[x].s[cur],f=cur;\n        //     if(!t[x].cnt)break;\n        //     res&lt;&lt;=1;\n        //     res|=cur^f;\n        //     m&gt;&gt;=1;\n        // }\n        // return res;\n        for(int i=63;~i;i--){\n            int v=m&gt;&gt;i&amp;1ll;\n            if(t[x].s[v^1]&amp;&amp;t[t[x].s[v^1]].cnt)x=t[x].s[v^1];\n            else x=t[x].s[v];\n        }\n        return m^t[x].val;\n    }\n}using namespace trie;\n\nvoid solve(){\n    int q=rd;\n    insert(0);\n    while(q--){\n        char op;\n        cin&gt;&gt;op;\n        if(op=='-'){\n            del(rd);\n        }if(op=='+'){\n            insert(rd);\n        }if(op=='?'){\n            cout&lt;&lt;query(rd)&lt;&lt;endl;\n        }\n    }\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre> <p>www.luogu.com.cn</p> <p>\u6211\u4eec\u770b\u523001trie\u662f\u5bf9\u6bcf\u4e00\u4e2a\u6570\u5b57\u628a\u5176\u4e8c\u8fdb\u5236\u52a0\u5165trie\u6811\u5f97\u5230\u7684\u3002</p> <p></p> <p>\u5f53\u6211\u4eec\u8981\u67e5\u8be2\u6240\u6709\u6570\u5b57\u4e2d\u5bf9x\u5f02\u6216\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u3001\u540c\u65f6\u4ecetrie\u6839\u8282\u70b9\u5f80\u4e0b\u6309\u8d2a\u5fc3\u7b56\u7565\uff08x\u5f53\u524d\u4f4d\u4e3a1\uff0c\u90a3\u4e48\u8d700\uff0c\u53cd\u4e4b\u8d701\uff09\u8d70\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/Trie%E6%A0%91/#01trie_1","title":"\u53ef\u6301\u4e45\u531601trie","text":"<p>\u53c2\u8003\u8bfe\u7a0b | \u6811\u4e0a\u95ee\u9898[TJOI2018] \u5f02\u6216</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/manacher%2B%E9%A9%AC%E6%8B%89%E8%BD%A6%E7%AE%97%E6%B3%95/","title":"manacher \u9a6c\u62c9\u8f66\u7b97\u6cd5","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/manacher%2B%E9%A9%AC%E6%8B%89%E8%BD%A6%E7%AE%97%E6%B3%95/#_1","title":"\u7b97\u6cd5\u7528\u9014","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8f93\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5305\u542b\u7684\u6700\u957f\u56de\u6587\u5b50\u4e32\u3002</p> <p>\u666e\u901a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n^2)\\)\uff0c\u5982\u4e0b\u56fe</p> <p></p> <p>\u4f46manacher \u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u662f\\(O(n)\\)\uff0c\u60ca\u4e0d\u60ca\u559c\u610f\u4e0d\u610f\u5916\uff01</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/manacher%2B%E9%A9%AC%E6%8B%89%E8%BD%A6%E7%AE%97%E6%B3%95/#_2","title":"\u7b97\u6cd5\u5b9e\u73b0","text":"<p>184 Manacher(\u9a6c\u62c9\u8f66)_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u521d\u59cb\u5316</p> <p></p> <p>Code</p> <pre><code>void init(){\n    scanf(\"%s\",a+1);\n//  scanf(\"%s\",b+1);\n    int n=strlen(a+1);\n    s[0]='$';\n    for(int i=1;i&lt;=n;i++){\n        s[++ls]='#',s[++ls]=a[i];\n    }   \n    s[++ls]='#';\n}\n</code></pre> <p>\u4f18\u5316\u6570\u7ec4</p> <p></p> <p>\u6ce8\u91ca\uff1ad[i]\u8bb0\u5f55\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u5411\u4e0a\u53d6\u6574\uff08\u5373\\((len+1)\\div 2\\)\uff09\uff0c\u5373\u7c7b\u4f3c\u5706\u7684\u534a\u5f84\uff0c\u5305\u542b\u4e2d\u95f4\u7684\u90a3\u4e2a\u5b57\u7b26</p> <p>\u5728\u201c\u52a0\u901f\u76d2\u5b50\u201d\u4e2d\uff0c\u5f53\u679a\u4e3e\u5230\u70b9i=6\u65f6\uff0c\u52a0\u901f\u76d2\u5b50\u7684\u533a\u95f4\u53d8\u6210\\([i-d_i+1=3,i+d_i-1=9]\\)\uff0c\u5f53\u679a\u4e3e\u5230\u70b9\\(j(j&gt;i,j&lt;i+d_i-1)\\)\u65f6\uff0cd[j]\u5c31\u53ef\u4ee5\u76f4\u63a5\u4eced[2\\times i-j]\u8f6c\u79fb\u8fc7\u6765\u3002\u4f46\u6ce8\u610f\uff0c\u5bf9\u4e8e\u8fb9\u754c\u7684\u70b9d[i+d_i-1=9]\u4e0d\u80fd\u76f4\u63a5\u8f6c\u79fb\uff0c\u8fd9\u4e2a\u8bf7\u770b\u4e0b\u9762\u7684\u5206\u6790\u3002\u76d2\u5b50\u5916\u7684\u66b4\u529b\u3002</p> <p></p> <p>\u60c5\u51b5</p> <p></p> <ul> <li>\u60c5\u51b51\uff1a\\(i+d[r-i+l]\u2264r\\)\u65f6</li> </ul> <p>\u6211\u4eec\u76d2\u5b50\u5185\u7684\u60c5\u51b5\u5df2\u77e5\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b89\u5fc3\u5730\u8f6c\u79fb\\(d[i]=d[r-i+l]\\)</p> <ul> <li>\u60c5\u51b52\uff1a\\(i+d[r-i+l]&gt;r\\)\u65f6</li> </ul> <p>\u7531\u4e8e\u76f4\u63a5\u8f6c\u79fb\u8fc7\u6765\u540e\u4ee5i\u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\u4e32\uff08\u56fe\u4e2di\u4e0b\u65b9\u7684\u84dd\u8272\u957f\u6761\uff09\u5ef6\u7533\u51fa\u4e86\u76d2\u5b50\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u77e5\u9053\u76d2\u5b50\u5de6\u53f3\u4e24\u4fa7\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e5f\u5bf9\u79f0\uff08\u5373\u6211\u4eec\u4e0d\u77e5\u9053\u76d2\u5b50\u53f3\u8fb9\u7684\u4fe1\u606f\uff09\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5ef6\u7533\u51fa\u76d2\u5b50\u7684\u90e8\u5206\u6211\u4eec\u8981\u6162\u6162\u679a\u4e3e\u3002\u4e5f\u5c31\u662f\u8bf4d[i]=d[r-i+1]\u662f\u4fdd\u5e95\u7684\uff0c\u4f46r\u540e\u9762\u7684\u5c31\u9700\u8981\u4e00\u4e2a\u4e2a\u53bb\u679a\u4e3e\u5224\u5b9a\u4e86\u3002</p> <p>\u6c42\u51fad[i] \u540e\uff0c\u5982\u679ci\u56de\u6587\u4e32\uff08\u6211\u4eec\u5c31\u59d1\u4e14\u8fd9\u4e48\u79f0\u547c\u5b83\uff09\u7684\u53f3\u7aef\u70b9\u5ef6\u7533\u5230\u4e86\u5f53\u524d\u76d2\u5b50\u5916\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u66f4\u65b0\u76d2\u5b50\u7684l,r\u4e86\u3002</p> <p>\u8f6c\u79fb\u4ee5\u4e0b\u4e24\u5e45\u56fe\u8868\u8fbe\u65b9\u5f0f\u662f\u7b49\u6548\u7684\uff0c\u4f5c\u8005\u53ef\u80fd\u5728\u4e0d\u7ecf\u610f\u95f4\u8f6c\u6362\u8868\u8fbe\u65b9\u5f0f\u54e6\u3002</p> <p></p> <p>Code</p> <pre><code>void getd(){\n    d[1]=1;\n    int l,r=1;//r\u53ea\u8981\u5c0f\u4e8e2\u5373\u53ef,\u76ee\u7684\u662f\u8ba9\u4e0b\u9762\u7b2c\u4e00\u6b21\u5faa\u73af\u5728i&lt;=r\u4e0d\u6210\u7acb\n    for(int i=2;i&lt;=ls;i++){\n        if(i&lt;=r)d[i]=min(d[r-i/\u8f6c\u79fbd[i]\u4e14\u5224\u5b9a\u662f\u5426\u8d85\u51far\n        while(s[i-d[i]]==s[i/\u5982\u679cd[i]\u6ca1\u6709\u8d85\u51far,\u90a3\u4e48\u7b2c\u4e00\u6b21while\u5224\u5b9a\u5c31\u4e0d\u6210\u7acb,\u8be5\u8bed\u53e5\u4e0d\u4f1a\u6267\u884c.\u5982\u679ci\u672c\u6765\u5c31\u5728\u76d2\u5b50\u5916\u9762,\u5219\u4e0a\u9762\u4e00\u53e5\u8bdd\u4e0d\u4f1a\u6267\u884c,\u76f4\u63a5\u5230\u672c\u53e5\u8bdd\u5f00\u59cb\u66b4\u529b\n        if(i/\u8f6c\u79fb\u76d2\u5b50\n    }\n}\n</code></pre> <p>\u5404\u90e8\u5206\u8bf4\u660e</p> <p></p> <p>\u8be5\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8bc1\u660e\u4e3a\\(O(n)\\)\uff0c\u56e0\u4e3a\u4f60\u8003\u8651i+d[i]\uff0c\u5982\u679ci+d[i]&gt;r\uff0c\u90a3\u4e48\u624d\u4f1a\u6267\u884cwhile\uff0c\u7136\u540e\u53c8\u4f1a\u5c06r\u4fee\u6539\u4e3ai+d[i]\uff0c\u5373\u6bcf\u6b21while\u8fd0\u884c\u4e00\u6b21\uff0c\u5c31\u4f1a\u8ba9r\u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\uff0cr\u4ece1\u5f80\u53f3\u79fb\u52a8\uff0c\u5230n\u505c\u6b62\uff0c\u5c31n\u6b21\u3002\u4e5f\u5c31\u662f\u8bf4\u5230\u4f1a\u6267\u884cwhile\u65f6\uff0ci+d[i]\u4e00\u5b9a\u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5i+d[i] \u53ea\u4f1a\u4ece1\u9012\u589e\u5230n\uff0c\u4e00\u5171n\u6b21\u3002\u8fd9\u91cc\u63cf\u8ff0\u4e0d\u5f53\uff0c\u8bf7\u4ed4\u7ec6\u4f53\u4f1a\u3002</p> <p>\u7b54\u6848\u5728d[]\u6570\u7ec4\u4e2d\uff0c\u7ecf\u8fc7\u8ba1\u7b97\uff0c\u7b54\u6848\u53d6\\(\\max(d[i]-1)\\)\u5373\u53ef</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=2e7/\u6ce8\u610f\u4e24\u500d\u7a7a\u95f4 \nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,p,q,T;\nchar s[N];\nint ls,ans,d[N];\nchar a[N];\n\nvoid init(){\n    scanf(\"%s\",a+1);\n//  scanf(\"%s\",b+1);\n    n=strlen(a+1);\n    s[0]='$';\n    for(int i=1;i&lt;=n;i++){\n        s[++ls]='#',s[++ls]=a[i];\n    }   \n    s[++ls]='#';\n}\n\nvoid getd(){\n    d[1]=1;\n    int l,r=1;//r\u53ea\u8981\u5c0f\u4e8e2\u5373\u53ef,\u76ee\u7684\u662f\u8ba9\u4e0b\u9762\u7b2c\u4e00\u6b21\u5faa\u73af\u5728i&lt;=r\u4e0d\u6210\u7acb\n    for(int i=2;i&lt;=ls;i++){\n        if(i&lt;=r)d[i]=min(d[r-i/\u8f6c\u79fbd[i]\u4e14\u5224\u5b9a\u662f\u5426\u8d85\u51far\n        while(s[i-d[i]]==s[i/\u5982\u679cd[i]\u6ca1\u6709\u8d85\u51far,\u90a3\u4e48\u7b2c\u4e00\u6b21while\u5224\u5b9a\u5c31\u4e0d\u6210\u7acb,\u8be5\u8bed\u53e5\u4e0d\u4f1a\u6267\u884c.\u5982\u679ci\u672c\u6765\u5c31\u5728\u76d2\u5b50\u5916\u9762,\u5219\u4e0a\u9762\u4e00\u53e5\u8bdd\u4e0d\u4f1a\u6267\u884c,\u76f4\u63a5\u5230\u672c\u53e5\u8bdd\u5f00\u59cb\u66b4\u529b\n        if(i/\u8f6c\u79fb\u76d2\u5b50\n    }\n}\n\nsigned main(){\n\n    init();\n    getd();\n\n    for(int i=1;i&lt;=ls;i++)ans=max(ans,d[i]-1); \n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/manacher%2B%E9%A9%AC%E6%8B%89%E8%BD%A6%E7%AE%97%E6%B3%95/#_3","title":"\u4f8b\u9898","text":"<p>Codeforces Round 934 (Div. 2) 6/7 E</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/manacher%2B%E9%A9%AC%E6%8B%89%E8%BD%A6%E7%AE%97%E6%B3%95/#_4","title":"\u5bf9\u6bd4\u7b97\u6cd5","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/","title":"\u540e\u7f00\u6570\u7ec4","text":"<p>\u4e13\u9898 | \u9ad8\u7ea7\u5b57\u7b26\u4e32\u7b97\u6cd5</p> <p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | SA</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/#_1","title":"\u540e\u7f00\u6570\u7ec4","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/#_2","title":"\u6982\u5ff5","text":"<p>\u540e\u7f00\u6570\u7ec4 (Suffix Array)</p> <p>e.g. \u4e00\u4e2a\u957f\u5ea6\u4e3a 8 \u7684\u5b57\u7b26\u4e32 aabaaaab\uff0c\u4e00\u5171\u6709 8 \u4e2a\u540e\u7f00\uff0c\u540e\u7f00\u7684\u7f16\u53f7\u662f\u540e\u7f00\u5728\u539f\u4e32\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\u628a 8 \u4e2a\u540e\u7f00\u6309\u7167\u5b57\u5178\u5e8f\u5347\u5e8f\u6392\u5e8f\u3002</p> <p>1 aabaaaab</p> <p>2 abaaaab</p> <p>3 baaaab</p> <p>4 aaaab</p> <p>5 aaab</p> <p>6 aab</p> <p>7 ab</p> <p>8 b</p> <p>4 aaaab</p> <p>5 aaab</p> <p>6 aab</p> <p>1 aabaaaab</p> <p>7 ab</p> <p>2 abaaaab</p> <p>8 b</p> <p>3 baaaab</p> <p>\u540e\u7f00\u6570\u7ec4 <code>sa[i]</code></p> <p>\u8868\u793a\u6392\u5e8f\u4e3a i \u7684\u540e\u7f00\u7f16\u53f7</p> <p><code>sa[1]=4, sa[2]=5, sa[3]=6, sa[4]=1</code></p> <p>\u540d\u6b21\u6570\u7ec4 <code>rk[i]</code></p> <p>\u8868\u793a\u540e\u7f00 i \u7684\u6392\u540d</p> <p><code>rk[4]= 1 , rk[5]=2, rk[6] = 3 , rk[1]=4</code></p> <p>\u5173\u7cfb\uff1a <code>rk[sa[i]] = sa[rk[i]] =i</code></p> <p>\u9ad8\u5ea6\u6570\u7ec4 </p> <p><code>height[i] = lcp(sa[i], sa[i-1])</code></p> <p>\u7b2c i \u540d\u540e\u7f00\u4e0e\u7b2c i - 1 \u540d\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u7684\u957f\u5ea6\u3002</p> <p><code>height[2] = lcp(5,4) = 3</code> \uff0c<code>height[3] = lcp(6,5) = 2</code> \uff0c<code>height[4] = lcp(I,6) = 3</code> \uff0c\u9ad8\u5ea6\u6570\u7ec4\u8868\u793a\u4e24\u4e2a\u540e\u7f00\u7684\u76f8\u4f3c\u5ea6\uff0c\u6392\u5e8f\u76f8\u90bb\u7684\u4e24\u4e2a\u540e\u7f00\u76f8\u4f3c\u5ea6\u6700\u9ad8\u3002 </p> <p><code>void getsa()</code></p> <p>\u5229\u7528\u500d\u589e\u6cd5\u548c\u6876\u6392\u5e8f\uff0c\u8ba1\u7b97sa\u6570\u7ec4 </p> <p><code>void geth()</code></p> <p>\u5229\u7528 <code>sa[]</code> \u548c <code>rk[]</code> \uff0c\u8ba1\u7b97 height \u6570\u7ec4</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/#sa","title":"\u6c42SA\u6570\u7ec4","text":"<p>Part.1</p> <p>\u6309\u6bcf\u4e2a\u540e\u7f00\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6392\u5e8f\u3002\u8fd9\u91cc\u662f\u8ba1\u6570\u6392\u5e8f</p> <pre><code>   for(int i=1;i&lt;=n;i++)cnt[x[i]=s[i]]++;\n    for(int i=1;i&lt;=m;i++)cnt[i]+=cnt[i-1];//\u524d\u7f00\u6876\u8ba1\u6570\n    for(int i=n;i;i--)sa[cnt[x[i]]--]=i;//\u628a\u5f53\u524d\u4f4d\u5206\u914d\u7ed9i\n</code></pre> <p>Part.2</p> <p>\u500d\u589e</p> <p>k\u7684\u89e3\u91ca\uff1a\uff08\u8bbe\u5f53\u524d\u679a\u4e3e\u5230k\uff09 \u5373\u5bf9\u4e8e\u5f53\u524d\u6c42\u51fa\u7684sa\u6570\u7ec4\uff0c\u5df2\u7ecf\u662f\u6309\u7167\u67d0\u4e2a\u524d\u7f00\u7684\u524dk\u4e2a\u5b57\u7b26\u6392\u597d\u5e8f\u7684\u3002 \u5728\u5f53\u524d\u5faa\u73af\u4e0b\uff0c\u6211\u4eec\u4f1a\u4ee5\u67d0\u4e2a\u524d\u7f00\u7684\u7b2ck+1<sub>2k\u4e2a\u5b57\u7b26\u7684\u987a\u5e8f\uff08\u5b57\u5178\u5e8f\uff09\u4f5c\u4e3a\u7b2c2\u5173\u952e\u5b57\uff0c\u5c061</sub>k\u4e2a\u5b57\u7b26\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u3002 \u800c\u65e0\u8bba\u662f\u524d\u7f00\u7684\u7b2ck+1<sub>2k\u4e2a\u5b57\u7b26\u8fd8\u662f\u7b2c1</sub>k\u4e2a\u5b57\u7b26\uff0c\u5176\u76f8\u5bf9\u987a\u5e8f\u6211\u4eec\u90fd\u5df2\u7ecf\u5728\u4e0a\u4e00\u8f6ek\u4e2d\u6c42\u5f97\u4e86 \uff08\u8fd9\u91cc\u6ce8\u610f\u6211\u4eec\u662f\u5bf9\u540e\u7f00\u6570\u7ec4\u7ee7\u7eed\u6392\u5e8f\uff01\u52a0\u4e0a\u6211\u4eec\u8981\u6c42\u6bcf\u4e2a\u540e\u7f00\u7684\u7b2ck+1<sub>2k\u4e2a\u5b57\u7b26\u7684\u76f8\u5bf9\u987a\u5e8f\uff0c\u90a3\u4e48\u7b2ci\u4e2a\u540e\u7f00\u7684\u7b2ck+1</sub>2k\u4e2a\u5b57\u7b26\u5c31\u76f8\u5f53\u4e8e\u7b2ci+k\u4e2a\u540e\u7f00\u7684\u7b2c1~k\u4e2a\u5b57\u7b26\u3002 <sub>~</sub><sub>\u800c\u7b2ci+k\u4e2a\u540e\u7f00\u7684\u7b2c1</sub>k\u4e2a\u5b57\u7b26\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u5176\u76f8\u5bf9\u987a\u5e8f\u8bb0\u5f55\u5728sa\u6570\u7ec4\u4e2d\u3002\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff01 \u8fd9\u5c31\u662f**\u500d\u589e**\u7684\u601d\u60f3</p> <pre><code>for(int k=1;k&lt;=n;k&lt;&lt;=1){\n  //...\n}\n</code></pre> <p>\u5faa\u73af\u5185\uff1a</p> <p>Part.2.1</p> <p>\u539f\u7406\uff1a\u8ba1\u6570\u6392\u5e8f/\u6876\u6392\u5e8f\uff0c\u5982\u679c\u8981\u6309\u4e24\u4e2a\u5173\u952e\u5b57\u6392\u5e8f\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u5148\u6309\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u540e\u518d\u6309\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\u3002 \u8ba1\u6570\u6392\u5e8f\u53ef\u4ee5\u770b\u6210\u4e00\u79cd\u5fae\u6270\u6392\u5e8f\uff0c\u5373\u5728\u6309\u67d0\u4e2a\u5173\u952e\u5b57k\u6392\u5e8f\u65f6\uff0c\u4e4b\u524d\u6309\u53e6\u5916\u4e00\u4e2a\u5173\u952e\u5b57t\u6392\u5e8f\u7684\u987a\u5e8f\u5728k\u76f8\u540c\u65f6\u4f4d\u7f6e\u76f8\u5bf9\u4e0d\u53d8\u3002 \u53ef\u4ee5\u7406\u89e3\u6210\u662f\u7a33\u5b9a\u6392\u5e8f</p> <pre><code>        memset(cnt,0,sizeof cnt);//\u6309\u7b2c2\u5173\u952e\u5b57\u6392\u5e8f\n        for(int i=1;i&lt;=n;i++)sa2[i]=sa[i];\n        for(int i=1;i&lt;=n;i++)cnt[x[sa2[i]/\u5982\u679csa2[i]\u6307\u4ee3\"abcdef\",\u5219sa2[i]+2\u6307\u4ee3\"cdef\"\n        for(int i=1;i&lt;=m;i++)cnt[i]+=cnt[i-1];//\u524d\u7f00\u6876\u8ba1\u6570\n        for(int i=n;i;i--)sa[cnt[x[sa2[i]/\u628a\u5f53\u524d\u4f4d\u5206\u914d\u7ed9i\n\n        memset(cnt,0,sizeof cnt);//\u6309\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\n        for(int i=1;i&lt;=n;i++)sa2[i]=sa[i];\n        for(int i=1;i&lt;=n;i++)cnt[x[sa2[i]]]++;//\u5982\u679csa2[i]\u6307\u4ee3\"abcdef\",\u5219sa2[i]+2\u6307\u4ee3\"cdef\"\n        for(int i=1;i&lt;=m;i++)cnt[i]+=cnt[i-1];//\u524d\u7f00\u6876\u8ba1\u6570\n        for(int i=n;i;i--)sa[cnt[x[sa2[i]]]--]=sa2[i];//\u628a\u5f53\u524d\u4f4d\u5206\u914d\u7ed9i\n</code></pre> <p>Part.2.2</p> <p>\u6211\u4eec\u628a\u6309\u7167\u5f53\u524d2k\u4e2a\u5173\u952e\u5b57\u6392\u5e8f\u7684sa\u8bb0\u5f55\u4e0b\u6765\uff0c\u5728\u4e0b\u4e00\u4e2a\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u4f1a\u4ee5\u7b2c2k+1<sub>4k\u4e2a\u5b57\u7b26\u4f5c\u4e3a\u7b2c2\u5173\u952e\u5b57\uff0c\u5c06\u5f53\u524d\u6c42\u51fa\u7684sa\u6570\u7ec4\uff08\u5373\u5c06\u7b2c1</sub>2k\u4e2a\u5b57\u7b26\u7684\u987a\u5e8f\u4e3a\u5173\u952e\u5b57\uff09\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f</p> <pre><code>        m=0;    \n        for(int i=1;i&lt;=n;i++)sa2[i]=x[i];\n        for(int i=1;i&lt;=n;i++){\n            if(sa2[sa[i]]==sa2[sa[i-1]]&amp;&amp;sa2[sa[i]+k]==sa2[sa[i-1]+k])\n                x[sa[i]]=m;\n            else x[sa[i]]=++m;\n        }\n</code></pre> <p>Part.2.3</p> <p>\u63d0\u524d\u8df3\u51fa \u5f53\u524d\u60c5\u51b5\u5373\u6211\u4eec\u5df2\u7ecf\u628a\u7b2c1<sub>2k\u4e2a\u5b57\u7b26\u5206\u522b\u4f5c\u4e3a\u7b2c1</sub>2k\u5173\u952e\u5b57\u6876\u6392\u5e8f\u540e\u3002 \u5982\u679c\u6876\u7684\u6570\u91cfm&lt;\u540e\u7f00\u4e2a\u6570n\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u8fd8\u6709\u22652\u4e2a\u540e\u7f00\u7684\u8fd92k\u4e2a\u5173\u952e\u5b57\u76f8\u540c\u3002 \u90a3\u4e48\u5bf9\u4e8e\u8fd9\u51e0\u4e2a\u540e\u7f00\uff0c\u5176\u5728\u5f53\u524d\u6c42\u51fa\u7684sa\u6570\u7ec4\u4e2d\u7684\u5148\u540e\u987a\u5e8f\u8fd8\u662f\u4e71\u5e8f\u7684\uff0c\u6211\u4eec\u8981\u7ee7\u7eed\u6392\u5e8f\u3002 \u5982\u679cm=n\uff0c\u5219\u8bf4\u660e\u8fd9n\u4e2a\u540e\u7f00\u5206\u522b\u53d6\u4ed6\u4eec\u7684\u524d2k\u4e2a\u5b57\u7b26\u5df2\u7ecf\u4e24\u4e24\u4e92\u4e0d\u76f8\u540c\u4e86\uff0c\u6b64\u65f6sa\u6570\u7ec4\u662f\u51c6\u786e\u7684\uff0c\u5373\u5df2\u7ecf\u6c42\u51fa\u4e86sa\u6570\u7ec4\u3002</p> <pre><code>if(m==n)break;\n</code></pre> <p>WholeCode</p> <p>\u4e0d\u653e\u5fc3\u53ef\u4f7f\u7528\u4ee5\u4e0b\u9898\u76ee\u4e2d\u7684\u4ee3\u7801</p> <p>www.luogu.com.cn</p> <pre><code>int n,m='z';\n\nvoid getsa(){\n    for(int i=1;i&lt;=n;i++)cnt[x[i]=s[i]]++;\n    for(int i=1;i&lt;=m;i++)cnt[i]+=cnt[i-1];//\u524d\u7f00\u6876\u8ba1\u6570\n    for(int i=n;i;i--)sa[cnt[x[i]]--]=i;//\u628a\u5f53\u524d\u4f4d\u5206\u914d\u7ed9i\n\n    for(int k=1;k&lt;=n;k&lt;&lt;=1){\n        /*\n        k\u7684\u89e3\u91ca\uff1a\n        \u8bbe\u5f53\u524d\u679a\u4e3e\u5230k\n        \u5373\u5bf9\u4e8e\u5f53\u524d\u6c42\u51fa\u7684sa\u6570\u7ec4\uff0c\u5df2\u7ecf\u662f\u6309\u7167\u67d0\u4e2a\u524d\u7f00\u7684\u524dk\u4e2a\u5b57\u7b26\u6392\u597d\u5e8f\u7684\u3002\n        \u5728\u5f53\u524d\u5faa\u73af\u4e0b\uff0c\u6211\u4eec\u4f1a\u4ee5\u67d0\u4e2a\u524d\u7f00\u7684\u7b2ck+1~2k\u4e2a\u5b57\u7b26\u7684\u987a\u5e8f\uff08\u5b57\u5178\u5e8f\uff09\u4f5c\u4e3a\u7b2c2\u5173\u952e\u5b57\uff0c\u5c061~k\u4e2a\u5b57\u7b26\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u3002\n        \u800c\u65e0\u8bba\u662f\u524d\u7f00\u7684\u7b2ck+1~2k\u4e2a\u5b57\u7b26\u8fd8\u662f\u7b2c1~k\u4e2a\u5b57\u7b26\uff0c\u5176\u76f8\u5bf9\u987a\u5e8f\u6211\u4eec\u90fd\u5df2\u7ecf\u5728\u4e0a\u4e00\u8f6ek\u4e2d\u6c42\u5f97\u4e86\n        \uff08\u8fd9\u91cc\u6ce8\u610f\u6211\u4eec\u662f\u5bf9\u540e\u7f00\u6570\u7ec4\u7ee7\u7eed\u6392\u5e8f\uff01\u52a0\u4e0a\u6211\u4eec\u8981\u6c42\u6bcf\u4e2a\u540e\u7f00\u7684\u7b2ck+1~2k\u4e2a\u5b57\u7b26\u7684\u76f8\u5bf9\u987a\u5e8f\uff0c\u90a3\u4e48\u7b2ci\u4e2a\u540e\u7f00\u7684\u7b2ck+1~2k\u4e2a\u5b57\u7b26\u5c31\u76f8\u5f53\u4e8e\u7b2ci+k\u4e2a\u540e\u7f00\u7684\u7b2c1~k\u4e2a\u5b57\u7b26\u3002\n        \u800c\u7b2ci+k\u4e2a\u540e\u7f00\u7684\u7b2c1~k\u4e2a\u5b57\u7b26\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u5176\u76f8\u5bf9\u987a\u5e8f\u8bb0\u5f55\u5728sa\u6570\u7ec4\u4e2d\u3002\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff01\n        \u8fd9\u5c31\u662f**\u500d\u589e**\u7684\u601d\u60f3\n        */\n\n        //Part.1\n        /*\n        \u539f\u7406\uff1a\u8ba1\u6570\u6392\u5e8f/\u6876\u6392\u5e8f\uff0c\u5982\u679c\u8981\u6309\u4e24\u4e2a\u5173\u952e\u5b57\u6392\u5e8f\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u5148\u6309\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u540e\u518d\u6309\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\u3002\n        \u8ba1\u6570\u6392\u5e8f\u53ef\u4ee5\u770b\u6210\u4e00\u79cd\u5fae\u6270\u6392\u5e8f\uff0c\u5373\u5728\u6309\u67d0\u4e2a\u5173\u952e\u5b57k\u6392\u5e8f\u65f6\uff0c\u4e4b\u524d\u6309\u53e6\u5916\u4e00\u4e2a\u5173\u952e\u5b57t\u6392\u5e8f\u7684\u987a\u5e8f\u5728k\u76f8\u540c\u65f6\u4f4d\u7f6e\u76f8\u5bf9\u4e0d\u53d8\u3002\n        \u53ef\u4ee5\u7406\u89e3\u6210\u662f\u7a33\u5b9a\u6392\u5e8f\n        */\n        memset(cnt,0,sizeof cnt);//\u6309\u7b2c2\u5173\u952e\u5b57\u6392\u5e8f\n        for(int i=1;i&lt;=n;i++)sa2[i]=sa[i];\n        for(int i=1;i&lt;=n;i++)cnt[x[sa2[i]/\u5982\u679csa2[i]\u6307\u4ee3\"abcdef\",\u5219sa2[i]+2\u6307\u4ee3\"cdef\"\n        for(int i=1;i&lt;=m;i++)cnt[i]+=cnt[i-1];//\u524d\u7f00\u6876\u8ba1\u6570\n        for(int i=n;i;i--)sa[cnt[x[sa2[i]/\u628a\u5f53\u524d\u4f4d\u5206\u914d\u7ed9i\n\n        memset(cnt,0,sizeof cnt);//\u6309\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\n        for(int i=1;i&lt;=n;i++)sa2[i]=sa[i];\n        for(int i=1;i&lt;=n;i++)cnt[x[sa2[i]]]++;//\u5982\u679csa2[i]\u6307\u4ee3\"abcdef\",\u5219sa2[i]+2\u6307\u4ee3\"cdef\"\n        for(int i=1;i&lt;=m;i++)cnt[i]+=cnt[i-1];//\u524d\u7f00\u6876\u8ba1\u6570\n        for(int i=n;i;i--)sa[cnt[x[sa2[i]]]--]=sa2[i];//\u628a\u5f53\u524d\u4f4d\u5206\u914d\u7ed9i\n\n        //Part.2\n        /*\n        \u6211\u4eec\u628a\u6309\u7167\u5f53\u524d2k\u4e2a\u5173\u952e\u5b57\u6392\u5e8f\u7684sa\u8bb0\u5f55\u4e0b\u6765\uff0c\u5728\u4e0b\u4e00\u4e2a\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u4f1a\u4ee5\u7b2c2k+1~4k\u4e2a\u5b57\u7b26\u4f5c\u4e3a\u7b2c2\u5173\u952e\u5b57\uff0c\u5c06\u5f53\u524d\u6c42\u51fa\u7684sa\u6570\u7ec4\uff08\u5373\u5c06\u7b2c1~2k\u4e2a\u5b57\u7b26\u7684\u987a\u5e8f\u4e3a\u5173\u952e\u5b57\uff09\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\n        */\n\n        for(int i=1;i&lt;=n;i++)sa2[i]=x[i];\n        m=0;\n        for(int i=1;i&lt;=n;i++){\n            if(sa2[sa[i]]==sa2[sa[i-1]]&amp;&amp;sa2[sa[i]+k]==sa2[sa[i-1]+k])\n                x[sa[i]]=m;\n            else x[sa[i]]=++m;\n        }\n\n        //Part.3\n        /*\n        \u63d0\u524d\u8df3\u51fa\n        \u5f53\u524d\u60c5\u51b5\u5373\u6211\u4eec\u5df2\u7ecf\u628a\u7b2c1~2k\u4e2a\u5b57\u7b26\u5206\u522b\u4f5c\u4e3a\u7b2c1~2k\u5173\u952e\u5b57\u6876\u6392\u5e8f\u540e\u3002\n        \u5982\u679c\u6876\u7684\u6570\u91cfm&lt;\u540e\u7f00\u4e2a\u6570n\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u8fd8\u6709&gt;=2\u4e2a\u540e\u7f00\u7684\u8fd92k\u4e2a\u5173\u952e\u5b57\u76f8\u540c\u3002\n        \u90a3\u4e48\u5bf9\u4e8e\u8fd9\u51e0\u4e2a\u540e\u7f00\uff0c\u5176\u5728\u5f53\u524d\u6c42\u51fa\u7684sa\u6570\u7ec4\u4e2d\u7684\u5148\u540e\u987a\u5e8f\u8fd8\u662f\u4e71\u5e8f\u7684\uff0c\u6211\u4eec\u8981\u7ee7\u7eed\u6392\u5e8f\u3002\n        \u5982\u679cm=n\uff0c\u5219\u8bf4\u660e\u8fd9n\u4e2a\u540e\u7f00\u5206\u522b\u53d6\u4ed6\u4eec\u7684\u524d2k\u4e2a\u5b57\u7b26\u5df2\u7ecf\u4e24\u4e24\u4e92\u4e0d\u76f8\u540c\u4e86\uff0c\u6b64\u65f6sa\u6570\u7ec4\u662f\u51c6\u786e\u7684\uff0c\u5373\u5df2\u7ecf\u6c42\u51fa\u4e86sa\u6570\u7ec4\u3002\n        */\n        if(m==n)break;\n    }\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/#hheight","title":"\u6c42h\uff08height\uff09\u6570\u7ec4","text":"<p>\u9ad8\u5ea6\u6570\u7ec4 <code>height[i]= LCP(sa[i], sa[i-1])</code></p> <p>\u7b2c i \u540d\u540e\u7f00\u4e0e\u7b2c i- 1 \u540d\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u7684\u957f\u5ea6\u3002</p> <p>\u540e\u7f00 i \u7684\u524d\u90bb\u540e\u7f00\u4e00\u5b9a\u662f <code>sa[rk[i]-1]</code>\uff0c\u56e0\u4e3a <code>i = sa[rk[i]]</code>\uff0c i \u7684\u6392\u540d\u4e3a <code>rk[i]</code>\uff0c\u6392\u540d\u51cf 1 \u53d6 sa \u5373\u5f97\u3002</p> <p>\u5b9a\u7406\uff1a<code>height[rk[i]] \u2265 height[rk[i-1]]-1</code></p> <p><code>h[i]</code>\u5b9a\u4e49\u4e3a\\(rk_i\\)\u7684\u540e\u7f00\u4e0e\\(rk_{i-1}\\)\u7684\u540e\u7f00\u7684\u6700\u5927\u524d\u7f00\u957f\u5ea6\u3002</p> <p><code>rk[i]</code>\u5b9a\u4e49\u4e3a\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\u540e\u540e\u7f00i\u7684\u6392\u540d</p> <p></p> <pre><code>void geth(){\n    for(int i=1;i&lt;=n;i++)rk[sa[i]]=i;//\u5148\u6c42\u51fark\u6570\u7ec4\uff0c\u4f9d\u636erk[]\u4e0esa[]\u4e92\u4e3a\u53cd\u51fd\u6570\n    for(int i=1,k=0;i&lt;=n;i++){\n        if(rk[i]==1)continue;//\u6ca1\u5f97\u6bd4\uff0c\u5c31\u662f0\n        if(k)k--;//\u5b9a\u7406\n        int j=sa[rk[i]-1];\n        while(i/\u4ece\u521d\u59cbk\u5f00\u59cb\u9010\u4f4d\u5411\u540e\u6bd4\u5bf9\u76f4\u5230\u4e0d\u540c\n        h[rk[i]]=k;\n    }\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91/","title":"\u54c8\u592b\u66fc\u6811","text":"<p>\u54c8\u592b\u66fc\u6811\uff08Huffman Tree\uff09\uff0c\u4e5f\u88ab\u79f0\u4e3a\u970d\u592b\u66fc\u6811\u6216\u6700\u4f18\u4e8c\u53c9\u6811\uff0c\u662f\u4e00\u79cd\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u6700\u77ed\u7684\u4e8c\u53c9\u6811\uff0c\u5e38\u7528\u4e8e\u6570\u636e\u538b\u7f29\u3002\u5b83\u7531\u7f8e\u56fd\u6570\u5b66\u5bb6\u5927\u536b\u00b7\u54c8\u592b\u66fc\u63d0\u51fa\u3002</p> <p>\u54c8\u592b\u66fc\u6811\u7684\u6838\u5fc3\u601d\u60f3\u662f\u4ee5\u53f6\u5b50\u8282\u70b9\u7684\u6743\u503c\uff08\u901a\u5e38\u662f\u5b57\u7b26\u51fa\u73b0\u7684\u9891\u7387\uff09\u4f5c\u4e3a\u6784\u5efa\u6811\u7684\u4f9d\u636e\uff0c\u9891\u7387\u9ad8\u7684\u5b57\u7b26\u62e5\u6709\u66f4\u77ed\u7684\u7f16\u7801\u8def\u5f84\uff0c\u9891\u7387\u4f4e\u7684\u5b57\u7b26\u5219\u8def\u5f84\u8f83\u957f\u3002\u4ee5\u4e0b\u662f\u54c8\u592b\u66fc\u6811\u7684\u57fa\u672c\u7279\u70b9\u548c\u6784\u5efa\u6b65\u9aa4\uff1a</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91/#_2","title":"\u7279\u70b9\uff1a","text":"<ol> <li> <p>\u6743\u503c\uff1a\u6811\u4e2d\u7684\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u5e26\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u6743\u503c\u901a\u5e38\u4ee3\u8868\u67d0\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u9891\u7387\u3002</p> </li> <li> <p>\u8def\u5f84\uff1a\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e0e\u8be5\u53f6\u5b50\u8282\u70b9\u7684\u6743\u503c\u6709\u5173\uff0c\u6743\u503c\u8d8a\u5927\u7684\u53f6\u5b50\u8282\u70b9\u79bb\u6839\u8282\u70b9\u8d8a\u8fd1\u3002</p> </li> <li> <p>\u6700\u4f18\u6027\uff1a\u5728\u6240\u6709\u5305\u542b\u76f8\u540c\u6743\u503c\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u4e2d\uff0c\u54c8\u592b\u66fc\u6811\u7684\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u662f\u6700\u77ed\u7684\u3002</p> </li> </ol>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91/#_3","title":"\u6784\u5efa\u6b65\u9aa4\uff1a","text":"<ol> <li> <p>\u6392\u5e8f\uff1a\u5c06\u6240\u6709\u8282\u70b9\u6309\u7167\u6743\u503c\uff08\u9891\u7387\uff09\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p> </li> <li> <p>\u9009\u53d6\uff1a\u6bcf\u6b21\u4ece\u6392\u5e8f\u597d\u7684\u8282\u70b9\u4e2d\u53d6\u51fa\u4e24\u4e2a\u6743\u503c\u6700\u5c0f\u7684\u8282\u70b9\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5185\u90e8\u8282\u70b9\u4f5c\u4e3a\u5b83\u4eec\u7684\u7236\u8282\u70b9\uff0c\u8fd9\u4e2a\u65b0\u8282\u70b9\u7684\u6743\u503c\u662f\u8fd9\u4e24\u4e2a\u5b50\u8282\u70b9\u6743\u503c\u7684\u548c\u3002</p> </li> <li> <p>\u66ff\u6362\uff1a\u5c06\u8fd9\u4e24\u4e2a\u6700\u5c0f\u7684\u8282\u70b9\u4ece\u5217\u8868\u4e2d\u79fb\u9664\uff0c\u5e76\u5c06\u65b0\u521b\u5efa\u7684\u7236\u8282\u70b9\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\u3002</p> </li> <li> <p>\u91cd\u590d\uff1a\u91cd\u590d\u6b65\u9aa42\u548c3\uff0c\u76f4\u5230\u5217\u8868\u4e2d\u53ea\u5269\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u5c31\u662f\u54c8\u592b\u66fc\u6811\u7684\u6839\u8282\u70b9\u3002</p> </li> </ol>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91/#_4","title":"\u5e94\u7528\uff1a","text":"<p>\u54c8\u592b\u66fc\u6811\u7684\u4e3b\u8981\u5e94\u7528\u662f\u5728\u6570\u636e\u538b\u7f29\u9886\u57df\uff0c\u901a\u8fc7\u5b83\u6784\u5efa\u7684\u54c8\u592b\u66fc\u7f16\u7801\u53ef\u4ee5\u5b9e\u73b0\u65e0\u524d\u7f00\u7f16\u7801\uff0c\u5373\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u7f16\u7801\u662f\u53e6\u4e00\u4e2a\u7f16\u7801\u7684\u524d\u7f00\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u7f16\u7801\u7684\u552f\u4e00\u53ef\u89e3\u6027\u3002\uff08\u89c1\u4f8b\u9898 #1\uff09</p> <p>\u54c8\u592b\u66fc\u7f16\u7801\u7684\u8fc7\u7a0b\u5c31\u662f\u6839\u636e\u54c8\u592b\u66fc\u6811\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u6765\u4e3a\u6bcf\u4e2a\u5b57\u7b26\u6307\u5b9a\u4e00\u4e2a\u552f\u4e00\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\uff0c\u8def\u5f84\u4e0a\u7684\u5de6\u5206\u652f\u4ee3\u88680\uff0c\u53f3\u5206\u652f\u4ee3\u88681\u3002</p> <p>\u7531\u4e8e\u54c8\u592b\u66fc\u6811\u548c\u7f16\u7801\u5bf9\u4e8e\u4e0d\u540c\u6570\u636e\u7684\u7edf\u8ba1\u7279\u6027\u975e\u5e38\u654f\u611f\uff0c\u56e0\u6b64\u5b83\u4eec\u5728\u6587\u4ef6\u538b\u7f29\uff0c\u5c24\u5176\u662f\u6587\u672c\u6587\u4ef6\u7684\u538b\u7f29\u4e2d\u975e\u5e38\u6709\u6548\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91/#1-noi2015","title":"\u4f8b\u9898 #1 [NOI2015] \u8377\u9a6c\u53f2\u8bd7","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>Allison \u6700\u8fd1\u8ff7\u4e0a\u4e86\u6587\u5b66\u3002\u5979\u559c\u6b22\u5728\u4e00\u4e2a\u6175\u61d2\u7684\u5348\u540e\uff0c\u7ec6\u7ec6\u5730\u54c1\u4e0a\u4e00\u676f\u5361\u5e03\u5947\u8bfa\uff0c\u9759\u9759\u5730\u9605\u8bfb\u5979\u7231\u4e0d\u91ca\u624b\u7684\u300a\u8377\u9a6c\u53f2\u8bd7\u300b\u3002\u4f46\u662f\u7531\u300a\u5965\u5fb7\u8d5b\u300b\u548c\u300a\u4f0a\u5229\u4e9a\u7279\u300b \u7ec4\u6210\u7684\u9e3f\u7bc7\u5de8\u5236\u300a\u8377\u9a6c\u53f2\u8bd7\u300b\u5b9e\u5728\u662f\u592a\u957f\u4e86\uff0cAllison \u60f3\u901a\u8fc7\u4e00\u79cd\u7f16\u7801\u65b9\u5f0f\u4f7f\u5f97\u5b83\u53d8\u5f97\u77ed\u4e00\u4e9b\u3002</p> <p>\u4e00\u90e8\u300a\u8377\u9a6c\u53f2\u8bd7\u300b\u4e2d\u6709 \\(n\\) \u79cd\u4e0d\u540c\u7684\u5355\u8bcd\uff0c\u4ece \\(1\\) \u5230 \\(n\\) \u8fdb\u884c\u7f16\u53f7\u3002\u5176\u4e2d\u7b2c \\(i\\) \u79cd\u5355\u8bcd\u51fa\u73b0\u7684\u603b\u6b21\u6570\u4e3a \\(w_i\\)\u3002Allison \u60f3\u8981\u7528 \\(k\\) \u8fdb\u5236\u4e32 \\(s_i\\) \u6765\u66ff\u6362\u7b2c \\(i\\) \u79cd\u5355\u8bcd\uff0c\u4f7f\u5f97\u5176\u6ee1\u8db3\u5982\u4e0b\u8981\u6c42\uff1a</p> <p>\u5bf9\u4e8e\u4efb\u610f\u7684 \\(1\\leq i, j\\leq n\\) \uff0c\\(i\\ne j\\) \uff0c\u90fd\u6709\uff1a\\(s_i\\) \u4e0d\u662f \\(s_j\\) \u7684\u524d\u7f00\u3002</p> <p>\u73b0\u5728 Allison \u60f3\u8981\u77e5\u9053\uff0c\u5982\u4f55\u9009\u62e9 \\(s_i\\)\uff0c\u624d\u80fd\u4f7f\u66ff\u6362\u4ee5\u540e\u5f97\u5230\u7684\u65b0\u7684\u300a\u8377\u9a6c\u53f2\u8bd7\u300b\u957f\u5ea6\u6700\u5c0f\u3002\u5728\u786e\u4fdd\u603b\u957f\u5ea6\u6700\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0cAllison \u8fd8\u60f3\u77e5\u9053\u6700\u957f\u7684 \\(s_i\\) \u7684\u6700\u77ed\u957f\u5ea6\u662f\u591a\u5c11\uff1f</p> <p>\u4e00\u4e2a\u5b57\u7b26\u4e32\u88ab\u79f0\u4e3a \\(k\\) \u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u6bcf\u4e2a\u5b57\u7b26\u662f \\(0\\) \u5230 \\(k-1\\) \u4e4b\u95f4\uff08\u5305\u62ec \\(0\\) \u548c \\(k-1\\) \uff09\u7684\u6574\u6570\u3002</p> <p>\u5b57\u7b26\u4e32 \\(str1\\) \u88ab\u79f0\u4e3a\u5b57\u7b26\u4e32 \\(str2\\) \u7684\u524d\u7f00\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a\u5b58\u5728 \\(1 \\leq t\\leq m\\) \uff0c\u4f7f\u5f97 \\(str1 = str2[1..t]\\)\u3002\u5176\u4e2d\uff0c\\(m\\) \u662f\u5b57\u7b26\u4e32 \\(str2\\) \u7684\u957f\u5ea6\uff0c\\(str2[1..t]\\) \u8868\u793a \\(str2\\) \u7684\u524d \\(t\\) \u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u7684\u7b2c \\(1\\) \u884c\u5305\u542b \\(2\\) \u4e2a\u6b63\u6574\u6570 \\(n, k\\) \uff0c\u4e2d\u95f4\u7528\u5355\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u8868\u793a\u5171\u6709 \\(n\\) \u79cd\u5355\u8bcd\uff0c\u9700\u8981\u4f7f\u7528 \\(k\\) \u8fdb\u5236\u5b57\u7b26\u4e32\u8fdb\u884c\u66ff\u6362\u3002</p> <p>\u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u7b2c \\(i + 1\\) \u884c\u5305\u542b \\(1\\) \u4e2a\u975e\u8d1f\u6574\u6570 \\(w_i\\)\uff0c\u8868\u793a\u7b2c \\(i\\) \u79cd\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u5305\u62ec \\(2\\) \u884c\u3002</p> <p>\u7b2c \\(1\\) \u884c\u8f93\u51fa \\(1\\) \u4e2a\u6574\u6570\uff0c\u4e3a\u300a\u8377\u9a6c\u53f2\u8bd7\u300b\u7ecf\u8fc7\u91cd\u65b0\u7f16\u7801\u4ee5\u540e\u7684\u6700\u77ed\u957f\u5ea6\u3002</p> <p>\u7b2c \\(2\\) \u884c\u8f93\u51fa \\(1\\) \u4e2a\u6574\u6570\uff0c\u4e3a\u4fdd\u8bc1\u6700\u77ed\u603b\u957f\u5ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u957f\u5b57\u7b26\u4e32 \\(s_i\\) \u7684\u6700\u77ed\u957f\u5ea6\u3002</p> <p>\u6240\u6709\u6d4b\u8bd5\u6570\u636e\u7684\u8303\u56f4\u548c\u7279\u70b9\u5982\u4e0b\u8868\u6240\u793a\uff08\u6240\u6709\u6570\u636e\u5747\u6ee1\u8db3 \\(0 &lt; w_i \\leq 10^{11}\\)\uff09\uff1a</p> \u6d4b\u8bd5\u70b9\u7f16\u53f7 \\(n\\) \u7684\u89c4\u6a21 \\(k\\) \u7684\u89c4\u6a21 for all n\u2264100,000 k\u22649 <p>\u6784\u5efaK\u53c9\u54c8\u592b\u66fc\u6811\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nstruct node{\n    int w,h;\n    bool operator &lt;(const node b)const{\n        if(w==b.w)return h&gt;b.h;\n        return w&gt;b.w;\n    }\n};\n\npriority_queue&lt;node&gt; pq;\n\nvoid solve(){\n    int n=rd,K=rd;\n\n    int ans=0;\n\n    for(int i=1;i&lt;=n;i++){\n        int w=rd;\n        pq.push({w,1});\n    }\n\n    while((pq.size()-1)%(K-1)!=0)pq.push({0,1});//\u8865\u5168\u6811\n\n    while(pq.size()&gt;=K){\n        int h=-1,w=0;\n        for(int i=1;i&lt;=K;i++){\n            node t=pq.top();\n            pq.pop();\n            h=max(h,t.h);\n            w+=t.w;\n        }\n\n        ans+=w;\n        pq.push({w,h+1});\n    }\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n    cout&lt;&lt;pq.top().h-1&lt;&lt;endl;\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%B8%8C/","title":"\u54c8\u5e0c","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%B8%8C/#_2","title":"\u5b57\u7b26\u4e32\u54c8\u5e0c","text":"<p>\u5e94\u7528\u4e8e\u5b57\u7b26\u4e32\u5339\u914d\u7684\u54c8\u5e0c\u7b97\u6cd5\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%B8%8C/#1","title":"\u4f8b\u9898 #1 \u540e\u7f00\u6570\u7ec4","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u540e\u7f00\u6570\u7ec4 (SA) \u662f\u4e00\u79cd\u91cd\u8981\u7684\u6570\u636e\u7ed3\u6784\uff0c\u901a\u5e38\u4f7f\u7528\u500d\u589e\u6216\u8005 DC3 \u7b97\u6cd5\u5b9e\u73b0\uff0c\u8fd9\u8d85\u51fa\u4e86\u6211\u4eec\u7684\u8ba8\u8bba\u8303\u56f4\u3002</p> <p>\u5728\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u5feb\u6392\u3001Hash \u4e0e\u4e8c\u5206\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684 \\(O(n\\log^2n)\\) \u7684\u540e\u7f00\u6570\u7ec4\u6c42\u6cd5\u3002</p> <p>\u8be6\u7ec6\u5730\u8bf4\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5b57\u7b26\u4e32 \\(S\\)\uff08\u4e0b\u6807 \\(0 \\sim n-1\\)\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6574\u6570 \\(k(0 \\le k &lt; n)\\) \u8868\u793a\u5b57\u7b26\u4e32 \\(S\\) \u7684\u540e\u7f00 \\(S(k \\sim n-1)\\)\u3002</p> <p>\u628a\u5b57\u7b26\u4e32 \\(S\\) \u7684\u6240\u6709\u540e\u7f00\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5217\uff0c\u6392\u540d\u4e3a \\(i\\) \u7684\u540e\u7f00\u8bb0\u4e3a SA[i]\u3002</p> <p>\u989d\u5916\u5730\uff0c\u6211\u4eec\u8003\u8651\u6392\u540d\u4e3a \\(i\\) \u7684\u540e\u7f00\u4e0e\u6392\u540d\u4e3a \\(i-1\\) \u7684\u540e\u7f00\uff0c\u628a\u4e8c\u8005\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u7684\u957f\u5ea6\u8bb0\u4e3a Height[i]\u3002</p> <p>\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u6c42\u51fa SA \u4e0e Height \u8fd9\u4e24\u4e2a\u6570\u7ec4\u3002</p> <p>\u4e0b\u9762\u7ed9\u51fa\u7684\u4ee3\u7801\u540c\u65f6\u53ef\u4ee5\u4f5c\u4e3a\u7ebf\u6027\u54c8\u5e0c\u7684\u6a21\u677f\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\ntypedef unsigned long long ull;\n\n\null pw[N],hs[N];\null base=1e9+7;\n\nstring s;\nint SA[N];\nint n;\n\n\null getHash(int l,int r){\n    return hs[r]-hs[l-1]*pw[r-l/\u81ea\u7136\u6ea2\u51fa\n}\n\nint findPos(int a,int b){\n    int l=-1,r=min(n-a+1,n-b+1)+1;\n    while(l+1&lt;r){\n        int mid=l+r&gt;&gt;1;\n        if(getHash(a,a+mid-1)==getHash(b,b+mid-1))l=mid;\n        else r=mid;\n    }\n\n    return l;\n}\n\nbool cmp(int a,int b){\n    int p=findPos(a,b);\n    return s[a+p]&lt;s[b+p];\n}\n\nvoid solve(){\n    cin&gt;&gt;s;\n    n=s.size();\n    s=\" \"+s;\n    pw[0]=1;\n    for(int i=1;i&lt;=n;i++){\n        SA[i]=i;\n        pw[i]=pw[i-1]*base;\n        hs[i]=hs[i-1]*base+s[i];\n    }\n\n    sort(SA+1,SA+n+1,cmp);\n\n    for(itn i=1;i&lt;=n;i++){\n        cout&lt;&lt;SA[i]-1&lt;&lt;' ';\n    }\n\n    cout&lt;&lt;endl;\n    for(itn i=1;i&lt;=n;i++){\n        cout&lt;&lt;findPos(SA[i],SA[i-1])&lt;&lt;' ';\n    }\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%B8%8C/#2","title":"\u4f8b\u9898 #2 \u7eb8\u724c\u6e38\u620f","text":"<p>\u54c8\u5e0c\u5feb\u901f\u627e\u5230\u4e24\u4e2a\u5e8f\u5217\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u540c\u7684\u6570\u5b57\uff0c\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u4e22\u8fdb\u4f18\u5148\u961f\u5217\u3002</p> <pre><code>#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n\n/*\n                      Keyblinds Guide\n                                ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n// #define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el = '\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T, typename... Args&gt;\nvoid dbg(T s, Args... args) {\n    if constexpr (enable_dbg) {\n        cerr &lt;&lt; s;\n        if (1)\n            cerr &lt;&lt; ' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...)            \\\n    do {                      \\\n        cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; \\\n        err(x);               \\\n    } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate &lt;template &lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) {\n    for (auto v : a) cerr &lt;&lt; v &lt;&lt; ' ';\n    err(x...);\n}\ntemplate &lt;typename T, typename... A&gt;\nvoid err(T a, A... x) {\n    cerr &lt;&lt; a &lt;&lt; ' ';\n    err(x...);\n}\n#else\n#define dbg(...)\n#endif\n\nconst int N = 3e3 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n// \u8d2a\u5fc3\uff1f\n\nconst int P = 99248247;\n\nitn ksm(int a, itn b) {\n    int res = 1;\n    while (b) {\n        if (b &amp; 1)\n            res = (res * a) % MOD;\n        b &gt;&gt;= 1;\n        a = (a * a) % MOD;\n    }\n    return res;\n}\n\n\nint pw[N];\n\nstruct node {\n    int l, cnt, a[1002];\n    int hs[1002];\n    void input() {\n        a[0] = 0;\n        l = rd;\n        for (int i = 1; i &lt;= l; i++) {\n            a[i] = rd;\n        }\n        cnt = 0;\n    }\n\n    void initHash() {\n        for (int i = 1; i &lt;= l + 1; i++) {\n            hs[i] = ((long long)hs[i - 1] * P%MOD + a[i - 1]) % MOD;\n        }\n    }\n\n    inline int calHash(int l, int r) const { return (hs[r + 1] - (long long)hs[l] * pw[r-l+1] % MOD + MOD) % MOD; }\n\n    bool operator&lt;(const node &amp;b) const {\n        // \u52a0\u901f\u8fd9\u627e\u7684\u6d41\u7a0b\uff01\n        int L = 1, r = min(l - cnt, b.l - b.cnt);  //\u957f\u5ea6\n        int len = min(l - cnt, b.l - b.cnt);\n\n        int res = -1;  //\u76f8\u7b49\uff1f\n        while (L &lt;= r) {\n            int mid = L + r &gt;&gt; 1;\n            if (calHash(1 + cnt, mid + cnt) == b.calHash(1 + b.cnt, mid + b.cnt))\n                L = mid + 1, res = L;\n            else\n                r = mid - 1;\n        }\n        if (calHash(1 + cnt, len + cnt) == b.calHash(1 + b.cnt, len + b.cnt)) {\n            return l - cnt &lt; b.l - b.cnt;\n        }\n        return a[cnt + L] &gt; b.a[L + b.cnt];\n    }\n};\n\npriority_queue&lt;node&gt; pq;\n\nvoid solve() {\n    pw[0]=1;\n    for(itn i=1;i&lt;=1002;i++)pw[i]=((long long)pw[i-1]*P)%MOD;\n\n\n    int n = rd;\n    for (int i = 1; i &lt;= n; i++) {\n        node t;\n        t.input();\n        t.initHash();\n        pq.push(t);\n    }\n    // cdbg(\"---\");\n\n    while (pq.size()) {\n        node cur = pq.top();\n\n        pq.pop();\n        write(cur.a[++cur.cnt]);\n        putchar(' ');\n\n        if (cur.cnt &lt; cur.l)\n            pq.push(cur);\n    }\n}\n\nint a[N], b[N];\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T = 1;\n    while (T--) {\n        solve();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%B8%8C/#_3","title":"\u53cc\u54c8\u5e0c\u9632\u5361","text":"<p>\u4e13\u9898 | \u5357\u591620230712-\u94fe\u8868\u3001\u54c8\u5e0c\u3001\u5e76\u67e5\u96c6\u3001\u5206\u5757 E\u9898</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%B8%8C/#1_1","title":"\u4f8b\u9898 #1","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u957f\u4e3a N \u7684\u6570\u5217 A,B \u4e0e Q \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa \\(x_i,y_i\\)\uff0c\u6c42\u51faA\u7684\u524d \\(x_i\\) \u9879\u53bb\u91cd\u540e\u662f\u5426\u4e0e B \u7684\u524d \\(y_i\\) \u9879\u76f8\u540c\u3002</p> <p>\u9898\u76ee\u7684\u5927\u610f\u662f\u8981\u6211\u4eec\u6c42\u51fa\\(a\\)\u7684\u524d\\(i\\)\u9879\u7684set\u4e0e\\(b\\)\u7684\u524d\\(j\\)\u9879\u7684set\u662f\u5426\u76f8\u540c\u3002</p> <p>\u9996\u5148\u6700\u66b4\u529b\u7684\u505a\u6cd5\u5f53\u7136\u662f\u628a\u4ed6\u4eec\u4fe9\u7684set\u6c42\u51fa\u6765\uff0c\u7136\u540e\u4e00\u4e00\u6bd4\u5bf9\uff0c\u8fd9\u6837\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5bfb\u6c42\u54c8\u5e0c\u7684\u7b97\u6cd5\u3002</p> <p>\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5728\u4e4b\u524d\u5fd7\u4e0d\u7545\u54c8\u5e0c\u4e2d\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u5b57\u7b26\u6620\u5c04\u6210\u4e00\u4e2a\u6574\u6570\uff0c\u90a3\u8fd9\u6837\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u5c31\u4f1a\u6620\u5c04\u6210\u4e00\u4e2a\u6574\u6570\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u987a\u5e8f\u5bf9\u54c8\u5e0c\u662f\u6709\u5f71\u54cd\u7684\u3002</p> <p>\u4f46\u662f\u5728\u672c\u9898\u4e2d\u6211\u4eec**\u53ea\u5173\u5fc3\u8fd9\u4e2a\u5b57\u7b26\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u800c\u4e0d\u5173\u5fc3\u5b83\u51fa\u73b0\u7684\u987a\u5e8f**\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u80fd\u4f7f\u7528\u4e4b\u524d\u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u65b9\u6cd5\u3002</p> <p>\u6211\u4eec\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5b57\u7b26\u4e32\\(12\\)\u548c\u5b57\u7b26\u4e32\\(21\\)\u662f\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u5728\u4e24\u4e2aset\u4e2d\u5148\u52a0\u5165\\(1\\)\u518d\u52a0\u5165\\(2\\)\u548c\u5148\u52a0\u5165\\(2\\)\u518d\u52a0\u5165\\(1\\)\uff0c\u662f\u4e00\u6837\u7684\u3002</p> <p>\u5bf9\u4e8e\u672c\u9898\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u60f3\u5230\u52a0\u6cd5\uff0c\u56e0\u4e3a\u52a0\u6cd5\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u6240\u4ee5\u4ed6\u5bf9\u4e8e\u987a\u5e8f\u662f\u6ca1\u6709\u8981\u6c42\u7684\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u6211\u4eec\u5f88\u8f7b\u677e\u5c31\u53ef\u4ee5\u4e3e\u51fa\u53cd\u4f8b\uff0c\u6bd4\u5982\u8bf4\\(1+2+6=2+3+4\\)\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u628a\u8fd9\u4e2a\u54c8\u5e0c\u54c8\u5e0c\u51fd\u6570\u53d8\u5f97\u590d\u6742\u4e00\u70b9\uff0c\u6bd4\u5982\u8bf4\uff1a</p> <ul> <li> <p>\u6bd4\u5bf9\u5b83\u4eec\u7684\u548c\uff0c\u5e73\u65b9\u7684\u548c\uff0c\u7acb\u65b9\u548c\u5206\u522b\u662f\u5426\u76f8\u7b49</p> </li> <li> <p>\u6216\u8005\u5c06\u6bcf\u4e2a\u6570\u5b57\u5de6\u79fb\u82e5\u5e72\u4f4d\u518d\u53f3\u79fb\u82e5\u5e72\u4f4d\uff0c\u518d\u5c06\u5b83\u4eec\u76f8\u52a0\u6bd4\u5bf9\u5b83\u4eec\u662f\u5426\u76f8\u7b49\u3002</p> </li> <li> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u6570\u8ba1\u7b97\u4e00\u4e2a\u968f\u673a\u503c\u51fa\u6765\uff1a\u6211\u4eec\u628a\u6bcf\u4e2a\u6570\\(i\\)\u5206\u914d\u4e00\u4e2a\u968f\u673a\u6570\\(h_i\\)\uff0c\u5c06\u5b83\u7684\u54c8\u5e0c\u503c\u8bbe\u5b9a\u4e3a\\(i\\times h_i\\)</p> </li> </ul> <p>\u8fd9\u4e2a\u95ee\u9898\u4e0e\u6811\u7684\u540c\u6784\u8f83\u4e3a\u76f8\u4f3c\u3002</p> <pre><code>ull shift(ull x){//ull\u662funsigned long long\n    x^=mask;//mask\u662f\u968f\u673a\u8d28\u6570\n    x^=x&lt;&lt;13;\n    x^=x&gt;&gt;7;\n    x^=x&lt;&lt;17\n    x^=mask;\n    return x;\n}\n</code></pre> <p>\u4e0a\u9762\u5c31\u662f\u4e00\u79cd\u54c8\u5e0c\u7684\u7b97\u6cd5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u4e00\u4e2a\u5efa\u7acb\u4e00\u4e2a\\(x\\)\u4e0e\u5176\u54c8\u5e0c\u503c\u7684\u5355\u5c04\u5373\u53ef\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b\u5bf9\u4e8e\u8fd9\u79cd\u987a\u5e8f\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\u7684\u60c5\u51b5\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6ee1\u8db3\u4ea4\u6362\u5f8b\u7684\u8fd0\u7b97\u7b26\u6765\u6784\u5efa\u54c8\u5e0c\u51fd\u6570\uff0c\u6bd4\u5982\u52a0\u6cd5\u4e58\u6cd5\u6216\u8005\u5f02\u6216\u3002</p> <p>\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u524d\u7f00\u7684\u54c8\u5e0c\u503c\u3002\u5bf9\u4e8e\u53bb\u91cd\u95ee\u9898\uff0c\u6211\u4eec\u5728\u4ece\u524d\u5f80\u540e\u540e\u52a0\u5165\u6570\u65f6\uff0c\u6211\u4eec\u5c06\u5b83\u52a0\u5165\u4e00\u4e2aset\u4e2d\u6765\u5224\u65ad\u662f\u5426\u4e4b\u524d\u5df2\u7ecf\u5b58\u5728\u8fc7\u8fd9\u4e2a\u6570\uff0c\u5982\u679c\u4e4b\u524d\u6709\u8fc7\u5c31\u4e0d\u5c06\u5b83\u7684\u54c8\u5e0c\u503c\u7b97\u51fa\u8fdb\u884c\u7d2f\u52a0\u3002</p> <p>Code</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\n#define i1n int i=1;i&lt;=n;i++\n#define in1 int i=n;i&gt;=1;i--\nusing namespace std;\n\n\n\nconst int N=2e5+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\nint suma[N],sumb[N],a[N],b[N],n,q,x,y,suma2[N],sumb2[N];\nvoid solve(int x,int y){\n    if(suma[x]==sumb[y]&amp;&amp;suma2[x]==sumb2[y])cout&lt;&lt;\"Yes\\n\";\n    else cout&lt;&lt;\"No\\n\";\n    return;\n}\n\nint hashh(int x){\n    return x*x;\n}\n\nsigned main(){\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i];\n    }\n    for(int i=1;i&lt;=n;i++)cin&gt;&gt;b[i];\n\n    set&lt;int&gt; sa,sb;\n    for(int i=1;i&lt;=n;i++){\n        suma[i]=suma[i-1];\n        suma2[i]=suma2[i-1];\n        sumb[i]=sumb[i-1];\n        sumb2[i]=sumb2[i-1];\n        if(sa.count(a[i])==0)\n        {\n//          cout&lt;&lt;\"OK\";\n            suma[i]+=hashh(a[i]);\n            suma2[i]+=a[i];\n            sa.insert(a[i]);\n        }\n        if(sb.count(b[i])==0){\n            sumb[i]+=hashh(b[i]);\n            sumb2[i]+=b[i];\n            sb.insert(b[i]);\n        }\n    }\n\n    cin&gt;&gt;q;\n    while(q--){\n        cin&gt;&gt;x&gt;&gt;y;\n        solve(x,y);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%B8%8C/#_4","title":"\u6811\u54c8\u5e0c","text":"<p>\u4e13\u9898 | \u5357\u591620230712-\u94fe\u8868\u3001\u54c8\u5e0c\u3001\u5e76\u67e5\u96c6\u3001\u5206\u5757 F\u9898</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%B8%8C/#1-noip2018","title":"\u4f8b\u9898 #1 [NOIP2018 \u666e\u53ca\u7ec4] \u5bf9\u79f0\u4e8c\u53c9\u6811","text":"<p>\u4e00\u68f5\u6709\u70b9\u6743\u7684\u6709\u6839\u6811\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff0c\u5219\u88ab\u8f69\u8f69\u79f0\u4e3a\u5bf9\u79f0\u4e8c\u53c9\u6811\uff1a</p> <ol> <li> <p>\u4e8c\u53c9\u6811\uff1b</p> </li> <li> <p>\u5c06\u8fd9\u68f5\u6811\u6240\u6709\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u4ea4\u6362\uff0c\u65b0\u6811\u548c\u539f\u6811\u5bf9\u5e94\u4f4d\u7f6e\u7684\u7ed3\u6784\u76f8\u540c\u4e14\u70b9\u6743\u76f8\u7b49\u3002</p> </li> </ol> <p>\u4e0b\u56fe\u4e2d\u8282\u70b9\u5185\u7684\u6570\u5b57\u4e3a\u6743\u503c\uff0c\u8282\u70b9\u5916\u7684 \\(id\\) \u8868\u793a\u8282\u70b9\u7f16\u53f7\u3002</p> <p></p> <p>\u73b0\u5728\u7ed9\u51fa\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5e0c\u671b\u4f60\u627e\u51fa\u5b83\u7684\u4e00\u68f5\u5b50\u6811\uff0c\u8be5\u5b50\u6811\u4e3a\u5bf9\u79f0\u4e8c\u53c9\u6811\uff0c\u4e14\u8282\u70b9\u6570\u6700\u591a\u3002\u8bf7\u8f93\u51fa\u8fd9\u68f5\u5b50\u6811\u7684\u8282\u70b9\u6570\u3002</p> <p>\u6ce8\u610f\uff1a\u53ea\u6709\u6811\u6839\u7684\u6811\u4e5f\u662f\u5bf9\u79f0\u4e8c\u53c9\u6811\u3002\u672c\u9898\u4e2d\u7ea6\u5b9a\uff0c\u4ee5\u8282\u70b9 \\(T\\) \u4e3a\u5b50\u6811\u6839\u7684\u4e00\u68f5\u201c\u5b50 \u6811\u201d\u6307\u7684\u662f\uff1a\u8282\u70b9\\(T\\) \u548c\u5b83\u7684\u5168\u90e8\u540e\u4ee3\u8282\u70b9\u6784\u6210\u7684\u4e8c\u53c9\u6811\u3002</p> <p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570 \\(n\\)\uff0c\u8868\u793a\u7ed9\u5b9a\u7684\u6811\u7684\u8282\u70b9\u7684\u6570\u76ee\uff0c\u89c4\u5b9a\u8282\u70b9\u7f16\u53f7 \\(1 \\sim n\\)\uff0c\u5176\u4e2d\u8282\u70b9 \\(1\\) \u662f\u6811\u6839\u3002</p> <p>\u7b2c\u4e8c\u884c \\(n\\) \u4e2a\u6b63\u6574\u6570\uff0c\u7528\u4e00\u4e2a\u7a7a\u683c\u5206\u9694\uff0c\u7b2c \\(i\\) \u4e2a\u6b63\u6574\u6570 \\(v_i\\) \u4ee3\u8868\u8282\u70b9 \\(i\\) \u7684\u6743\u503c\u3002</p> <p>\u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6b63\u6574\u6570 \\(l_i, r_i\\)\uff0c\u5206\u522b\u8868\u793a\u8282\u70b9 \\(i\\) \u7684\u5de6\u53f3\u5b69\u5b50\u7684\u7f16\u53f7\u3002\u5982\u679c\u4e0d\u5b58\u5728\u5de6 / \u53f3\u5b69\u5b50\uff0c\u5219\u4ee5 \\(-1\\) \u8868\u793a\u3002\u4e24\u4e2a\u6570\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002</p> <p>\\(v_i \u2264 1000\\)\uff0c\\(n \u2264 10^6\\)\u3002</p> <p>\u672c\u9898\u7ea6\u5b9a\uff1a</p> <p>\u5c42\u6b21\uff1a\u8282\u70b9\u7684\u5c42\u6b21\u4ece\u6839\u5f00\u59cb\u5b9a\u4e49\u8d77\uff0c\u6839\u4e3a\u7b2c\u4e00\u5c42\uff0c\u6839\u7684\u5b69\u5b50\u4e3a\u7b2c\u4e8c\u5c42\u3002\u6811\u4e2d\u4efb\u4e00\u8282 \u70b9\u7684\u5c42\u6b21\u7b49\u4e8e\u5176\u7236\u4eb2\u8282\u70b9\u7684\u5c42\u6b21\u52a0 \\(1\\)\u3002</p> <p>\u6811\u7684\u6df1\u5ea6\uff1a\u6811\u4e2d\u8282\u70b9\u7684\u6700\u5927\u5c42\u6b21\u79f0\u4e3a\u6811\u7684\u6df1\u5ea6\u3002</p> <p>\u6ee1\u4e8c\u53c9\u6811\uff1a\u8bbe\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a \\(h\\)\uff0c\u4e14\u4e8c\u53c9\u6811\u6709 \\(2^h-1\\) \u4e2a\u8282\u70b9\uff0c\u8fd9\u5c31\u662f\u6ee1\u4e8c\u53c9\u6811\u3002</p> <p></p> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u8bbe\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a \\(h\\)\uff0c\u9664\u7b2c \\(h\\) \u5c42\u5916\uff0c\u5176\u5b83\u5404\u5c42\u7684\u7ed3\u70b9\u6570\u90fd\u8fbe\u5230\u6700\u5927 \u4e2a\u6570\uff0c\u7b2c \\(h\\) \u5c42\u6240\u6709\u7684\u7ed3\u70b9\u90fd\u8fde\u7eed\u96c6\u4e2d\u5728\u6700\u5de6\u8fb9\uff0c\u8fd9\u5c31\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</p> <p></p> <p>\u5206\u522b\u7ef4\u62a4\u5f53\u524d\u5b50\u6811\u4f5c\u4e3a\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u54c8\u5e0c\u503c\u5373\u53ef\u3002\u4e3a\u4e86\u9632\u6b62\u5361\u54c8\u5e0c\uff0c\u6211\u4eec\u8981\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u53cc\u54c8\u5e0chas1,has2</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n\n\nconst int N = 1e6 + 5;\nconst int M = 40;\nconst int INF = 1e9 + 5;\nconst int MOD = 9982353998244357;\nconst int MODD = 9982353998244357;\nconst int v1 = 998294353;\nconst int v2 = 998254357;\nconst int v3 = 988234357;\n\n\nint v[N],has1l[N],has2l[N],has1r[N],has2r[N];\nint sum[N],l[N],r[N];\n\nint n,m,ans;\n\nvoid pushup(int x){\n    has1l[x]=(has1l[l[x]]*v1+v[x]*v2+has1l[r[x]]*v3)%MOD;\n    has2l[x]=(has2l[l[x]]*v1+v[x]*v2+has2l[r[x]]*v3)%MODD;\n\n    has1r[x]=(has1r[r[x]]*v1+v[x]*v2+has1r[l[x]]*v3)%MOD;\n    has2r[x]=(has2r[r[x]]*v1+v[x]*v2+has2r[l[x]]*v3)%MODD;\n\n}\n\n\nvoid dfs(int x){\n    if(l[x])dfs(l[x]);\n    if(r[x])dfs(r[x]);\n    sum[x]=sum[l[x]]+sum[r[x]]+1;\n    if(sum[l[x]]==sum[r[x]]&amp;&amp;has1l[l[x]]==has1r[r[x]]&amp;&amp;has2l[l[x]]==has2r[r[x]])ans=max(ans,sum[x]);\n\n    pushup(x);\n}\n\nsigned main(){\n\n    n=rd;\n    for(int i=1;i&lt;=n;i++){\n        v[i]=rd;\n\n    }\n    for(int i=1;i&lt;=n;i++){\n        l[i]=rd;r[i]=rd;\n        if(l[i]==-1)l[i]=0;\n        if(r[i]==-1)r[i]=0;\n    }\n    dfs(1);\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n/*\n1\n2 5 1 \n0 0 1 \n0 0 4 \n\n*/\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%B8%8C/#_5","title":"\u4e8c\u7ef4\u54c8\u5e0c","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%B8%8C/#1-beijing2011-matrix","title":"\u4f8b\u9898 #1 [BeiJing2011] Matrix \u77e9\u9635\u54c8\u5e0c","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u5b9a\u4e00\u4e2a \\(M\\) \u884c \\(N\\) \u5217\u7684 \\(01\\) \u77e9\u9635\uff0c\u4ee5\u53ca \\(Q\\) \u4e2a \\(A\\) \u884c \\(B\\) \u5217\u7684 \\(01\\) \u77e9\u9635\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u8fd9 \\(Q\\) \u4e2a\u77e9\u9635\u54ea\u4e9b\u5728\u539f\u77e9\u9635\u4e2d\u51fa\u73b0\u8fc7\u3002</p> <p>\u6240\u8c13 \\(01\\) \u77e9\u9635\uff0c\u5c31\u662f\u77e9\u9635\u4e2d\u6240\u6709\u5143\u7d20\u4e0d\u662f \\(0\\) \u5c31\u662f \\(1\\)\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u4e3a \\(M,N,A,B\\)\uff0c\u53c2\u89c1\u9898\u76ee\u63cf\u8ff0\u3002</p> <p>\u63a5\u4e0b\u6765 \\(M\\) \u884c\uff0c\u6bcf\u884c \\(N\\) \u4e2a\u5b57\u7b26\uff0c\u975e \\(0\\) \u5373 \\(1\\) \uff0c\u63cf\u8ff0\u539f\u77e9\u9635\u3002</p> <p>\u63a5\u4e0b\u6765\u4e00\u884c\u4e3a\u4f60\u8981\u5904\u7406\u7684\u8be2\u95ee\u6570 \\(Q\\)\u3002</p> <p>\u63a5\u4e0b\u6765 \\(Q\\) \u4e2a\u77e9\u9635\uff0c\u4e00\u5171 \\(Q\\times A\\) \u884c\uff0c\u6bcf\u884c \\(B\\) \u4e2a\u5b57\u7b26\uff0c\u63cf\u8ff0 \\(Q\\) \u4e2a \\(01\\) \u77e9\u9635\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4f60\u9700\u8981\u8f93\u51fa \\(Q\\) \u884c\uff0c\u6bcf\u884c\u4e3a \\(0\\) \u6216\u8005 \\(1\\)\uff0c\u8868\u793a\u8fd9\u4e2a\u77e9\u9635\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\\(0\\) \u8868\u793a\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\\(1\\) \u8868\u793a\u51fa\u73b0\u8fc7\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u5b9e\u9645\u6d4b\u8bd5\u6570\u636e\uff0c\\(1\\leq M,N \\leq 1000\\)\uff0c\\(Q = 1000\\)\u3002</p> <p>\u5bf9\u4e8e \\(40\\%\\) \u7684\u6570\u636e\uff0c\\(A = 1\\)\u3002</p> <p>\u5bf9\u4e8e \\(80\\%\\) \u7684\u6570\u636e\uff0c\\(A \\leq 10\\)\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(A \\leq 100\\)\u3002</p> <p>\u4ee5\u4e0b\u4ee3\u7801\u53ef\u4ee5\u4f5c\u4e3a\u4e8c\u7ef4\u54c8\u5e0c\u7684\u6a21\u677f\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n\n#define ull unsigned long long\n\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e3 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int P = 197;\nconst int P2 = 107;\n\null f[N][N],g[N][N],G[N][N],F[N][N];\null pw[N],pw2[N];\n\nint a[N][N];\n\nunordered_map&lt;ull,bool&gt; vis;\n\n\nvoid solve(){\n    int n=rd,m=rd;\n    int A=rd,B=rd;\n    for(int i=1;i&lt;=n;i++){\n        for(itn j=1;j&lt;=m;j++){\n            char c;\n            cin&gt;&gt;c;\n\n            a[i][j]=c-'0';\n        }\n    }\n\n    pw[0]=pw2[0]=1;\n    for(int i=1;i&lt;=max(n,m);i++){\n        pw[i]=pw[i-1]*P;\n        pw2[i]=pw2[i-1]*P2;\n\n    }\n\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            f[i][j]=(f[i][j-1]*P+a[i][j]);\n        }\n    }\n\n\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            g[i][j]=(g[i-1][j]*P2+f[i][j]);\n        }\n    }\n\n\n    for(int i=A;i&lt;=n;i++){\n        for(int j=B;j&lt;=m;j++){\n            vis[g[i][j]-g[i-A][j]*pw2[A]-g[i][j-B]*pw[B]+g[i-A][j-B]*pw2[A]*pw[B]]=1;\n        }\n    }\n\n    itn q=rd;\n    while(q--){\n        for(int i=1;i&lt;=A;i++){\n            for(int j=1;j&lt;=B;j++){\n                char c;\n                cin&gt;&gt;c;\n                a[i][j]=c-'0';\n            }\n        }\n\n\n        for(int i=1;i&lt;=A;i++){\n            for(int j=1;j&lt;=B;j++){\n                F[i][j]=(F[i][j-1]*P+a[i][j]);\n            }\n        }\n\n\n        for(int i=1;i&lt;=A;i++){\n            for(int j=1;j&lt;=B;j++){\n                G[i][j]=(G[i-1][j]*P2+F[i][j]);\n            }\n        }\n\n        if(vis[G[A][B]]){\n            cout&lt;&lt;1&lt;&lt;endl;\n        }else{\n            cout&lt;&lt;0&lt;&lt;endl;\n        }\n    }\n\n\n\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%93%88%E5%B8%8C/#2-coci2020-20213-sateliti","title":"\u4f8b\u9898 #2 [COCI2020-2021#3] Sateliti","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6355\u6349\u5230\u7684\u56fe\u50cf\u53ef\u4ee5\u4ee5\u4e00\u4e2a \\(n \\times m\\) \u7684\u77e9\u9635\u5448\u73b0\uff0c\u5176\u4e2d <code>*</code> \u8868\u793a\u706b\u5c71\uff0c\u800c <code>.</code> \u8868\u793a\u5e73\u5730\u3002\u6211\u4eec\u8ba4\u4e3a\u4e24\u4e2a\u56fe\u50cf\u5c5e\u4e8e\u540c\u4e00\u9897\u536b\u661f\uff0c\u5f53\u4e14\u5b83\u4eec\u80fd**\u73af\u5f62\u5730\u4e92\u76f8\u901a\u8fc7\u5411\u4e0a\u4e0b\u6216\u5de6\u53f3\u5e73\u79fb\u5f97\u5230**\u3002</p> <p>\u79d1\u7814\u5de5\u4f5c\u8005\u60f3\u8981\u627e\u5230**\u5b57\u5178\u5e8f\u6700\u5c0f**\u7684\u4e0e\u7ed9\u5b9a\u56fe\u50cf\u5c5e\u4e8e\u540c\u4e00\u9897\u536b\u661f\u7684\u56fe\u50cf\u3002\u6211\u4eec\u628a\u56fe\u50cf\u7684\u6240\u6709\u884c\u4f9d\u6b21\u8fde\u63a5\u7ec4\u6210\u5b57\u7b26\u4e32\uff0c\u518d\u5224\u65ad\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u5373\u53ef\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 \\(n,m\\)\uff0c\u8868\u793a\u56fe\u50cf\u7684\u89c4\u6a21\u3002</p> <p>\u63a5\u4e0b\u6765\u7684 \\(n\\) \u884c\uff0c\u6bcf\u884c\u8f93\u5165 \\(m\\) \u4e2a\u5b57\u7b26\uff0c\u8868\u793a\u56fe\u50cf\u6240\u5bf9\u5e94\u7684\u77e9\u9635\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u5171 \\(n\\) \u884c\uff0c\u6bcf\u884c\u6709 \\(m\\) \u4e2a\u5b57\u7b26\uff0c\u8868\u793a\u6ee1\u8db3\u8981\u6c42\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u56fe\u50cf\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\le n,m \\le 1000\\)\u3002</p> <p>\u3010\u8bf4\u660e\u3011</p> <p>\u672c\u9898\u5206\u503c\u6309 COCI \u539f\u9898\u8bbe\u7f6e\uff0c\u6ee1\u5206 \\(110\\)\u3002</p> <p>\u9898\u76ee\u8bd1\u81ea COCI2020-2021 CONTEST #3 T3 Sateliti\u3002</p> <p>\u5927\u610f</p> <p>\u5373\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u77e9\u9635\uff0c\u6c42\u5728\u73af\u5f62\u5730\u4e0a\u4e0b\u5de6\u53f3\u5e73\u79fb\u540e\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u77e9\u9635\u3002\u5bf9\u4e8e\u77e9\u9635\u7684\u5b57\u5178\u5e8f\uff0c\u628a\u77e9\u9635\u7684\u6240\u6709\u884c\u4f9d\u6b21\u8fde\u63a5\u7ec4\u6210\u5b57\u7b26\u4e32\uff0c\u518d\u5224\u65ad\u5176\u5b57\u5178\u5e8f\u5373\u53ef\u3002</p> <p>\u601d\u8def</p> <p>\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u73af\u72b6\u7684\u6eda\u52a8\uff0c\u6240\u4ee5\u6211\u4eec\u81ea\u7136\u4f1a\u628a\u8fd9\u4e2a\u77e9\u9635\u590d\u5236\u62104\u4efd\u5206\u522b\u653e\u5728\u5de6\u4e0a\uff0c\u5de6\u4e0b\uff0c\u53f3\u4e0a\uff0c\u53f3\u4e0b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ea\u9700\u8981\u5728\u8fd9\u4e2a\\(2n\\times 2m\\)\u7684\u77e9\u9635\u4e2d\u622a\u53d6\u4e00\u4e2a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u77e9\u9635\u5373\u53ef\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u6837\u622a\u53d6\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u77e9\u9635\u5462\uff1f\u9996\u5148\u5173\u6ce8\u6570\u636e\u8303\u56f4\uff0c\u6211\u4eec\u662f\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u622a\u53d6\u7684\u77e9\u9635\u7684\u4f4d\u7f6e\u7684\uff08\u6211\u4eec\u679a\u4e3e\u622a\u53d6\u7684\u77e9\u9635\u7684\u5de6\u4e0a\u89d2\u7684\u5750\u6807\u5373\u53ef\uff0c\u56e0\u4e3a\u8981\u622a\u53d6\u7684\u77e9\u9635\u7684\u957f\u5bbd\u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u786e\u5b9a\u4e86\u5de6\u4e0a\u89d2\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fd9\u4e2a\u88ab\u622a\u53d6\u7684\u77e9\u9635\uff09</p> <p>\u53ef\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u6211\u4eec\u82b1\u8d39\u4e86O(mn)\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u6765\u679a\u4e3e\u88ab\u622a\u53d6\u7684\u77e9\u9635\uff0c\u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u662f\u8981\u4e0d\u65ad\u53bb\u628a\u5f53\u524d\u679a\u4e3e\u5230\u7684\u77e9\u9635\u7684\u5b57\u5178\u5e8fc\u548c\u524d\u9762\u7684\u6700\u4f18\u7684\u5b57\u5178\u5e8fans\u8fdb\u884c\u6bd4\u8f83\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8981\u8003\u8651\u53bb\u600e\u4e48\u6c42\u51fa\u679a\u4e3e\u7684\u77e9\u9635\u7684\u5b57\u5178\u5e8f\u3002</p> <p>\u6ca1\u6709\u5934\u7eea\uff1f\u6211\u4eec\u4e5f\u8bb8\u53ef\u4ee5\u6362\u4e00\u4e2a\u89d2\u5ea6\u601d\u8003\u3002</p> <p>\u5982\u679c\u6211\u4eec\u8981\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u662f\u5426\u76f8\u540c\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u6c42\u51fa\u4ed6\u4eec\u7684\u5b57\u5178\u5e8f\uff0c\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u662f**\u6211\u4eec\u77e5\u9053\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u4e0d\u540c\u7684\u4f4d\u7f6e\uff0c\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u7684\u5927\u5c0f\u5173\u7cfb\u5373\u53ef\u3002**</p> <p>\u5982\u679c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u7528\u7b2c\u4e00\u5f20\u65b9\u6cd5\u6bd4\u8f83\u597d\uff0c\u76f4\u63a5\u6bd4\u8f83\u5373\u53ef\u3002\u4f46\u662f\u73b0\u5728\u6211\u4eec\u662f\u77e9\u9635\uff0c\u6211\u4eec\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u6837\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4f7f\u7528**\u4e8c\u7ef4\u5b57\u7b26\u77e9\u9635\u54c8\u5e0c**\uff0c\u603b\u4e4b\u5c31\u662f\u4e00\u4e2a\u5feb\u901f\u5224\u65ad\u4e24\u4e2a\u533a\u95f4\u662f\u5426\u76f8\u540c\u7684\u54c8\u5e0c\uff0c\u8fd9\u91cc\u4e0d\u518d\u5c55\u5f00\u3002</p> <p>\u6b64\u65f6\uff0c\u6211\u4eec\u8981\u4f7f\u7528\u4e24\u4e2a**\u4e8c\u5206**\u2014\u2014\u7b2c\u4e00\u4e2a\u4e8c\u5206\u627e\u5230\u4e24\u4e2a\u77e9\u9635\u4e2d\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\u6240\u51fa\u73b0\u7684\u884c\uff0c\u7b2c\u4e8c\u4e2a\u4e8c\u5206\u6211\u4eec\u5728\u524d\u9762\u627e\u5230\u7684\u884c\u4e2d\u627e\u5230\u90a3\u4e2a\u6700\u524d\u9762\u7684\u4e0d\u76f8\u540c\u7684\u5730\u65b9\u3002</p> <p>\u8fd9\u4e24\u4e2a\u4e8c\u5206\u5f88\u660e\u663e\u662f\u5e76\u5217\u7684\u800c\u4e0d\u662f\u5305\u542b\u7684\u3002</p> <p>\u672c\u9898\u6838\u5fc3\uff1a\u5feb\u901f\u5224\u65ad\u4e24\u4e2a\u89c4\u6a21\u76f8\u540c\u7684\u77e9\u9635\u7684\u5b57\u5178\u5e8f\u3002</p> <p>\u5b9e\u73b0\uff1a\u672c\u8d28\u4e0a\u7684\u4e00\u7ef4\u54c8\u5e0c\u3002\uff08\u4e24\u6b21\uff09</p> <p>\u4ee3\u7801</p> <p>WA</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e3 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nint n,m;\nitn ansx=1,ansy=1;//\u8bb0\u5f55\u7b54\u6848\u5de6\u4e0a\u89d2\nint mpp[N][N];\n\n\null pw[N];\null hs[N][N];\null base=107;\n\null calHash(int a,int b,int len){\n    return hs[a][b+len-1]-hs[a][b-1]*len;\n}\n\nvoid check(int a,int b,int x,int y){\n    itn l=1,r=n;\n    while(l&lt;=r){\n        int mid=l+r&gt;&gt;1;\n        if(calHash(a+mid-1,b,m)==calHash(x+mid-1,y,m))l=mid+1;\n        else r=mid-1;\n    }\n\n    //ans is r;\n    // cdbg(calHash(1,2,5),calHash(2,2,5));\n    itn resx=l;\n\n    l=1,r=m;\n    int res=1;\n    while(l&lt;=r){\n        int mid=l+r&gt;&gt;1;\n        if(calHash(a-1+resx,b,mid)==calHash(x-1+resx,y,mid))l=mid+1;\n        else res=mid,r=mid-1;\n    }\n\n    // if(calHash(a-1+resx,b,l)==calHash(x-1+resx,y,l))l++;\n    // if(calHash(a-1+resx,b,l)==calHash(x-1+resx,y,l))l++;\n    // if(calHash(a-1+resx,b,l)==calHash(x-1+resx,y,l))l++;\n    // cdbg(calHash(a-1+resx,b,l+1),calHash(x-1+resx,y,l+1));\n    // cdbg(calHash(a-1+resx,b,l),calHash(x-1+resx,y,l));\n\n\n    int resy=l;\n    // cdbg(a,b,x,y,resx,resy);\n\n    if(mpp[a+resx-1][b+resy-1]&gt;mpp[x+resx-1][y+resy-1])ansx=x,ansy=y;\n\n}\n\nvoid solve(){\n    n=rd,m=rd;\n    for(int i=1;i&lt;=n;i++){\n        for(itn j=1;j&lt;=m;j++){\n            char c;\n            cin&gt;&gt;c;\n            int v=(c=='.')?1:0;\n            mpp[i][j]=mpp[i+n][j]=mpp[i+n][j+m]=mpp[i][j+m]=v;\n        }\n    }\n\n    // for(int i=1;i&lt;=n*2;i++){\n    //     for(itn j=1;j&lt;=m*2;j++){\n    //           cerr&lt;&lt;mpp[i][j];\n\n    //     }\n    //     cerr&lt;&lt;\"\\n\";\n    // }\n\n    pw[0]=1;\n    for(itn j=1;j&lt;=m*2;j++){\n        pw[j]=pw[j-1]*base;\n    }\n\n\n    for(int i=1;i&lt;=2*n;i++){//\u6ce8\u610f\u4e24\u500d\n        for(int j=1;j&lt;=2*m;j++){\n            hs[i][j]=hs[i][j-1]*base+mpp[i][j];\n        }\n    }\n\n    // for(int i=1;i&lt;=n*2;i++){\n    //     for(itn j=1;j&lt;=m*2;j++){\n    //           cerr&lt;&lt;hs[i][j]&lt;&lt;' ';\n\n    //     }\n    //     cerr&lt;&lt;\"\\n\";\n    // }\n\n\n    // cdbg(hs[1][1],hs[1][6],base);\n    // cdbg(hs[2][1],hs[2][6]);\n\n\n\n\n    for(int i=n+1;i&lt;=2*n;i++){\n        for(int j=m+1;j&lt;=2*m;j++){\n            if(i==n||j==m)continue;\n\n            check(ansx,ansy,i-n,j-m);\n        }\n    }\n\n\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            if(0==mpp[i+ansx-1][j+ansy-1])cout&lt;&lt;'*';\n            else cout&lt;&lt;'.';\n        }\n        puts(\"\");\n    }\n\n    // cdbg(calHash(1,2,1),calHash(2,2,1));\n    // cdbg(calHash(1,2,2),calHash(2,2,2));\n    // cdbg(calHash(1,2,3),calHash(2,2,3));\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%90%E5%BA%8F%E5%88%97%E8%87%AA%E5%8A%A8%E6%9C%BA/","title":"\u5b50\u5e8f\u5217\u81ea\u52a8\u673a","text":"<p>\u548cKMP\u7c7b\u4f3c\uff0c\u4e0d\u8fc7KMP\u5904\u7406\u7684\u662f\u5b50\u4e32\uff0c\u8fd9\u91cc\u662f\u5b50\u5e8f\u5217\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6b63\u6574\u6570\u5e8f\u5217 \\(a\\) \uff0c\u6709 \\(q\\) \u6b21\u8be2\u95ee\uff0c\u7b2c \\(i\\) \u6b21\u8be2\u95ee\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(L_i\\) \u7684\u5e8f\u5217 \\(b_i\\)\uff0c\u8bf7\u4f60\u5224\u65ad \\(b_i\\) \u662f\u4e0d\u662f \\(a\\) \u7684\u5b50\u5e8f\u5217\u3002\u5e8f\u5217 \\(a\\) \u548c\u6240\u6709 \\(b_i\\) \u4e2d\u7684\u5143\u7d20\u90fd\u4e0d\u5927\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6b63\u6574\u6570 \\(m\\)\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(1 \\leq n, m, q \\leq 10^5\\)\uff0c\\(1 \\leq a_i, b_{i, j} \\leq m\\)\uff0c\\(1 \\leq l_i \\leq 10^6\\)\uff0c\\(\\sum_{i = 1}^{q} l_i \\leq 10^6\\)\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%90%E5%BA%8F%E5%88%97%E8%87%AA%E5%8A%A8%E6%9C%BA/#_2","title":"\u5e8f\u5217\u81ea\u52a8\u673a","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%90%E5%BA%8F%E5%88%97%E8%87%AA%E5%8A%A8%E6%9C%BA/#_3","title":"\u5b50\u5e8f\u5217\u81ea\u52a8\u673a","text":"<p>\\(nxt_{i,j}\\) \u8868\u793a \\(i\\) \u540e\u9762\uff08\u4e0d\u5305\u62ec\u81ea\u5df1\uff09\u7b2c\u4e00\u4e2a \\(j\\) \u7684\u4f4d\u7f6e\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bbe\u6210 \\(n+1\\)\u3002</p> <p>\\(O(nm)\\) \u7684\u65b9\u6cd5\u5982\u4e0b</p> <pre><code>FOR(j,1,m) nxt[n+1][j]=n+1;\nFOR(i,1,n){\n    FOR(j,1,m) nxt[i][j]=nxt[i+1][j];\n    if(i!=n) nxt[i][a[i+1]]=i+1;\n}\n</code></pre> <p>\u7528\u5728\u5224\u65ad\u5b50\u5e8f\u5217\u4e0a\u7684\u8bdd\uff0c\u53d1\u73b0\u5c31\u662f\u4ece \\(0\\) \u5f00\u59cb\u8df3\uff0c\u6bcf\u6b21\u8df3\u5230\u5b83\u540e\u9762\u7b2c\u4e00\u4e2a \\(a_i\\) \u7684\u4f4d\u7f6e\u3002\u770b\u770b\u6700\u540e\u662f\u5426\u4e0d\u5728 \\(n+1\\)\u3002</p> <p>\u8fd9\u4e48\u8d2a\u5fc3\u662f\u56e0\u4e3a\u5bf9\u4e8e\u6240\u6709\u76f8\u540c\u7684\u6570\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u80fd\u8df3\u5230\u7684\u6570\u4e2d\u6700\u524d\u9762\u7684\u90a3\u4e2a\u3002\u80af\u5b9a\u4e0d\u4f1a\u66f4\u52a3\u3002</p> <p>\u4f46\u662f\u8fd9\u9898\u4e2d\uff0c\u5982\u679c\u5f00\u8fd9\u4e48\u4e2a\u4e24\u7ef4\u6570\u7ec4\uff0c\u590d\u6742\u5ea6\u662f \\(O(nm)\\) \u7684\uff0c\u7206\u4e86\u3002</p> <p>\u6807\u7b97\u4f7f\u7528\u7684\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\uff0c\u56e0\u4e3a\u89c2\u5bdf\u5230 \\(nxt_i\\) \u548c \\(nxt_{i+1}\\) \u8fd9\u4e24\u4e2a\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u4f4d\u7f6e\u4e0d\u4e00\u6837\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O((n+\\sum l)\\log m)\\)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f \\(O(m+n\\log m)\\)\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u4e0d\u9700\u8981\u771f\u7684\u628a\u6570\u7ec4\u5b58\u4e0b\u6765\u3002</p> <p>\\(i\\) \u540e\u9762\u7b2c\u4e00\u4e2a \\(j\\) \u7684\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u5728\u6240\u6709\u662f \\(j\\) \u7684\u4e0b\u6807\u4e2d\u4e8c\u5206\u5c31\u884c\u4e86\uff01</p> <p>\u5f00 \\(m\\) \u4e2a vector \u5b58\u4e0b\u8fd9\u4e9b\u4e0b\u6807\uff0c\u6bcf\u6b21\u4e8c\u5206\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n+(\\sum l)\\log m)\\)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f \\(O(n+m)\\)\u3002</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%90%E5%BA%8F%E5%88%97%E8%87%AA%E5%8A%A8%E6%9C%BA/#_4","title":"\u6a21\u677f","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(l, r, i) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(r, l, i) for (int i = r, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define pb push_back\n// #define mpy make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps b\n#define pf a\n\n#define lc(x) (x &lt;&lt; 1)\n#define rc(x) (x &lt;&lt; 1 | 1)\n\n#define X(j) i[j]\n#define Y(j) (dp[j] + (i[j] + L) * (i[j] + L))\n\n#define rd read()\nint read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n        xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\nconst int N = 1e5 + 15;\nconst int INF = 1e9 + 5;\nconst int MOD = 1e9 + 7;\nconst int M = N * 21;\n\nint n,m,a[N],f[N];\nint s[N],q;\n\n\n\nvector&lt;int&gt; v[N];\nsigned main(){\n    rd;n=rd;q=rd;rd;\n    for(int i=1;i&lt;=n;i++) v[rd].push_back(i);\n    while(q--){\n        int l=rd,at=0;\n        bool f=true;\n        while(l--){\n            int x=rd;\n            if(!f) continue;\n            vector&lt;int&gt;::iterator it=lower_bound(v[x].begin(),v[x].end(),at+1);\n            if(it==v[x].end()) f=false;\n            else at=*it;\n        }\n        puts(f?\"Yes\":\"No\");\n    }\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%90%E5%BA%8F%E5%88%97%E8%87%AA%E5%8A%A8%E6%9C%BA/#fjoi2016","title":"[FJOI2016] \u6240\u6709\u516c\u5171\u5b50\u5e8f\u5217\u95ee\u9898","text":"<p>\u4e00\u4e2a\u7ed9\u5b9a\u5e8f\u5217\u7684\u5b50\u5e8f\u5217\u662f\u5728\u8be5\u5e8f\u5217\u4e2d\u5220\u53bb\u82e5\u5e72\u5143\u7d20\u540e\u5f97\u5230\u7684\u5e8f\u5217\u3002\u786e\u5207\u5730\u8bf4\uff0c\u82e5\u7ed9\u5b9a\u5e8f\u5217 \\(X=x_1x_2\\ldots x_m\\)\uff0c\u5219\u53e6\u4e00\u5e8f\u5217 \\(Z=z_1z_2\\ldots z_k\\) \u662f \\(X\\) \u7684\u5b50\u5e8f\u5217\u662f\u6307\u5b58\u5728\u4e00\u4e2a\u4e25\u683c\u9012\u589e\u4e0b\u6807\u5e8f\u5217 \\(i_1,i_2, \\ldots ,i_k\\) \u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709 \\(j=1,2,\u2026,k\\) \u6709 \\(z_j=x_{i_j}\\)\u3002</p> <p>\u4f8b\u5982\uff0c\u5e8f\u5217 \\(Z=\\)<code>GACT</code> \u662f\u5e8f\u5217 \\(X=\\)<code>GCTACT</code> \u7684\u5b50\u5e8f\u5217\uff0c\u76f8\u5e94\u7684\u9012\u589e\u4e0b\u6807\u5e8f\u5217\u4e3a \\(1,4,5,6\\)\u3002\u7ed9\u5b9a\u4e24\u4e2a\u5e8f\u5217 \\(X\\) \u548c \\(Y\\)\uff0c\u5f53\u53e6\u4e00\u5e8f\u5217 \\(Z\\) \u65e2\u662f \\(X\\) \u7684\u5b50\u5e8f\u5217\u53c8\u662f \\(Y\\) \u7684\u5b50\u5e8f\u5217\u65f6\uff0c\u79f0 \\(Z\\) \u662f\u5e8f\u5217 \\(X\\) \u548c \\(Y\\) \u7684\u516c\u5171\u5b50\u5e8f\u5217\u3002\u4f8b\u5982\uff0c\u82e5 \\(X=\\)<code>GCTACT</code>\uff0c \\(Y=\\)<code>GATCCT</code>\uff0c\u5e8f\u5217 \\(T\\) \u662f \\(X\\) \u548c \\(Y\\) \u7684\u4e00\u4e2a\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u5e8f\u5217 <code>GACT</code> \u4e5f\u662f \\(X\\) \u548c \\(Y\\) \u7684\u4e00\u4e2a\u516c\u5171\u5b50\u5e8f\u5217\u3002\u6ce8\u610f\u5bf9\u4e8e\u4efb\u4f55\u7ed9\u5b9a\u7684\u5e8f\u5217 \\(X\\) \u548c \\(Y\\)\uff0c\u7a7a\u5e8f\u5217\u603b\u662f\u5b83\u4eec\u7684\u4e00\u4e2a\u516c\u5171\u5b50\u5e8f\u5217\u3002</p> <p>\u6240\u6709\u516c\u5171\u5b50\u5e8f\u5217\u95ee\u9898\u662f\u8981\u6c42\u5bf9\u4e8e\u7ed9\u5b9a\u7684 \\(2\\) \u4e2a\u5e8f\u5217 \\(X=x_1x_2\\ldots x_m\\) \u548c \\(Y=y_1y_2\\ldots y_m\\)\uff0c\u627e\u51fa \\(X\\) \u548c \\(Y\\) \u7684\u6240\u6709\u4e0d\u540c\u7684\u516c\u5171\u5b50\u5e8f\u5217\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6b63\u6574\u6570 \\(m\\) \u548c \\(n\\)\uff0c\u5206\u522b\u8868\u793a \\(2\\) \u4e2a\u8f93\u5165\u5e8f\u5217 \\(X\\) \u548c \\(Y\\) \u7684\u957f\u5ea6\u3002</p> <p>\u63a5\u4e0b\u6765\u7684\u4e24\u884c\u5206\u522b\u7ed9\u51fa\u8f93\u5165\u5e8f\u5217 \\(X=x_1x_2\\cdots x_m\\) \u548c \\(Y=y_1y_2\\cdots y_m\\)\uff0c\u5176\u4e2d\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5747\u4e3a\u4e8c\u5341\u516d\u4e2a\u82f1\u6587\u5927\u5c0f\u5199\u5b57\u6bcd\u3002</p> <p>\u6587\u4ef6\u7684\u6700\u540e\u4e00\u884c\u7ed9\u51fa\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 \\(k\\)\u3002</p> <p>\\(k\\) \u7684\u503c\u4e3a \\(1\\) \u65f6\uff0c\u8868\u793a\u8ba1\u7b97\u7ed3\u679c\u8981\u8f93\u51fa \\(X\\) \u548c \\(Y\\) \u7684\u6240\u6709\u4e0d\u540c\u7684\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u4ee5\u53ca \\(X\\) \u548c \\(Y\\) \u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u516c\u5171\u5b50\u5e8f\u5217\u3002</p> <p>\\(k\\) \u7684\u503c\u4e3a \\(0\\) \u65f6\uff0c\u8868\u793a\u8ba1\u7b97\u7ed3\u679c\u53ea\u8981\u8f93\u51fa \\(X\\) \u548c \\(Y\\) \u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u516c\u5171\u5b50\u5e8f\u5217\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5c06\u8ba1\u7b97\u51fa\u7684 \\(X\\) \u548c \\(Y\\) \u7684\u6240\u6709\u4e0d\u540c\u7684\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u6216 \\(X\\) \u548c \\(Y\\) \u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u516c\u5171\u5b50\u5e8f\u5217\u8f93\u51fa\u5230\u6587\u4ef6\u4e2d\u3002\u5f53 \\(k=1\\) \u65f6\uff0c\u5148\u8f93\u51fa \\(X\\) \u548c \\(Y\\) \u7684\u6240\u6709\u4e0d\u540c\u7684\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u6bcf\u884c\u8f93\u51fa\u4e00\u4e2a\u516c\u5171\u5b50\u5e8f\u5217\uff0c\u6309\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u3002\u6700\u540e\u8f93\u51fa\u4e0d\u540c\u7684\u516c\u5171\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002\u5f53 \\(k=0\\) \u65f6\uff0c\u53ea\u8981\u8f93\u51fa\u4e0d\u540c\u7684\u516c\u5171\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002</p> <p>\u7b54\u6848....\u5f88\u5927\u5566\uff08\u9ad8\u7cbe\u5ea6\u63d0\u793a\uff09</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/","title":"\u6700\u5c0f\u8868\u793a\u6cd5","text":"<p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5bfb\u627e\u4e86</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/#_1","title":"\u6700\u5c0f\u8868\u793a\u6cd5","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/#_2","title":"\u7b97\u6cd5","text":"<p>\u5b57\u7b26\u4e32\u7684\u6700\u5c0f\u8868\u793a\u6cd5\uff08Minimum Representation\uff09\u901a\u5e38\u6307\u7684\u662f\u5c06\u5b57\u7b26\u4e32\u65cb\u8f6c\u81f3\u67d0\u4e2a\u4f4d\u7f6e\u540e\uff0c\u5f97\u5230\u7684\u6240\u6709\u53ef\u80fd\u5b57\u7b26\u4e32\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e00\u4e2a\u3002\u5bf9\u4e8e\u5b57\u7b26\u4e32<code>S</code>\uff0c\u5176\u6700\u5c0f\u8868\u793a\u6cd5\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u627e\u5230\uff1a</p> <ol> <li> <p>\u5c06\u5b57\u7b26\u4e32<code>S</code>\u81ea\u8eab\u8fde\u63a5\u4e00\u6b21\uff0c\u5f62\u6210\u65b0\u5b57\u7b26\u4e32<code>S+S</code>\u3002</p> </li> <li> <p>\u5728<code>S+S</code>\u4e2d\u627e\u5230\u4ece\u4efb\u610f\u4f4d\u7f6e<code>i</code>\u5f00\u59cb\uff0c\u957f\u5ea6\u7b49\u4e8e\u539f\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u5b50\u4e32\uff0c\u8be5\u5b50\u4e32\u5e94\u6ee1\u8db3\u5b83\u662f\u6240\u6709\u8fd9\u6837\u7684\u5b50\u4e32\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u3002 \u5177\u4f53\u7b97\u6cd5\u6b65\u9aa4\u5982\u4e0b\uff1a</p> </li> <li> <p>\u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488<code>i</code>\u548c<code>j</code>\uff0c\u5206\u522b\u6307\u5411<code>S+S</code>\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5373<code>i = 0</code>\u548c<code>j = 1</code>\u3002</p> </li> <li> <p>\u8ba1\u7b97\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u7684\u5b50\u4e32\u7684\u957f\u5ea6<code>n</code>\uff08\u539f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff09\u3002</p> </li> <li> <p>\u6bd4\u8f83\u4e24\u4e2a\u6307\u9488\u6307\u5411\u7684\u5b50\u4e32\uff0c\u5982\u679c<code>S[i:i+n]</code>\u5927\u4e8e<code>S[j:j+n]</code>\uff0c\u5219\u5c06<code>i</code>\u66f4\u65b0\u4e3a<code>i + n</code>\u548c<code>j</code>\u4e2d\u7684\u8f83\u5c0f\u503c\uff1b\u5426\u5219\uff0c\u5c06<code>j</code>\u66f4\u65b0\u4e3a<code>j + n</code>\u548c<code>i</code>\u4e2d\u7684\u8f83\u5c0f\u503c\u3002</p> </li> <li> <p>\u91cd\u590d\u6b65\u9aa43\uff0c\u76f4\u5230<code>i</code>\u548c<code>j</code>\u76f8\u7b49\uff0c\u6b64\u65f6<code>i</code>\uff08\u6216<code>j</code>\uff09\u7684\u4f4d\u7f6e\u5c31\u662f\u6700\u5c0f\u8868\u793a\u6cd5\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002</p> </li> <li> <p>\u6700\u5c0f\u8868\u793a\u6cd5\u5373\u4e3a<code>S[i:i+n]</code>\u3002</p> </li> </ol>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/#1-necklace","title":"\u4f8b\u9898 #1 Necklace","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6709\u4e00\u5929\uff0c\u8881\u540c\u5b66\u7ef5\u4e86\u4e00\u6761\u4ef7\u503c\u8fde\u57ce\u5b9d\u77f3\u9879\u94fe\uff0c\u4f46\u662f\uff0c\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\u662f\uff0c\u4ed6\u7adf\u7136\u5fd8\u8bb0\u4e86\u9879\u94fe\u7684\u4e3b\u4eba\u662f\u8c01\uff01\u5728\u5f97\u77e5\u6b64\u4e8b\u540e\uff0c\u5f88\u591a\u4eba\u5411\u540c\u5b66\u53d1\u6765\u4e86\u5f88\u591a\u90ae\u4ef6\uff0c\u90fd\u8bf4\u9879\u94fe\u662f\u81ea\u5df1\u7684\uff0c\u8981\u6c42\u4ed6\u5f52\u8fd8\uff08\u663e\u7136\u5176\u4e2d\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u4eba\u8bf4\u4e86\u771f\u8bdd\uff09\u3002\u8881\u540c\u5b66\u8981\u6c42\u6bcf\u4e2a\u4eba\u90fd\u5199\u4e86\u4e00\u6bb5\u5173\u4e8e\u81ea\u5df1\u9879\u94fe\u7684\u63cf\u8ff0\uff1a</p> <p>\u9879\u94fe\u4e0a\u7684\u5b9d\u77f3\u7528\u6570\u5b57 \\(0\\) \u81f3 \\(9\\) \u6765\u8868\u793a\u3002\u4e00\u4e2a\u5bf9\u4e8e\u9879\u94fe\u7684\u8868\u793a\u5c31\u662f\u4ece\u9879\u94fe\u7684\u67d0\u4e2a\u5b9d\u77f3\u5f00\u59cb\uff1a\u987a\u6307\u9488\u7ed5\u4e00\u5708\uff0c\u6cbf\u9014\u8bb0\u4e0b\u7ecf\u8fc7\u7684\u5b9d\u77f3\uff0c\u6bd4\u5982\u5982\u4e0b\u9879\u94fe\uff1a</p> <p></p> <p>\u5b83\u7684\u53ef\u80fd\u7684\u56db\u79cd\u8868\u793a\u662f \\(0123\\)\u3001\\(1230\\)\u3001\\(2301\\)\u3001\\(3012\\)\u3002</p> <p>\u8881\u540c\u5b66\u73b0\u5728\u5fc3\u6025\u5982\u711a\uff0c\u4e8e\u662f\u4ed6\u627e\u5230\u4e86\u4f60\uff0c\u5e0c\u671b\u4f60\u80fd\u591f\u7f16\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5224\u65ad\u4e24\u4e2a\u7ed9\u5b9a\u7684\u63cf\u8ff0\u662f\u5426\u4ee3\u8868\u540c\u4e00\u4e2a\u9879\u94fe\uff08\u6ce8\u610f\uff0c\u9879\u94fe\u662f\u4e0d\u4f1a\u7ffb\u8f6c\u7684\uff09\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u6587\u4ef6\u53ea\u6709\u4e24\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u7531 \\(0\\) \u81f3 \\(9\\) \u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u63cf\u8ff0\u4e00\u4e2a\u9879\u94fe\u7684\u8868\u793a\uff08\u4fdd\u8bc1\u9879\u94fe\u7684\u957f\u5ea6\u662f\u76f8\u7b49\u7684\uff09\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5982\u679c\u4e24\u6761\u9879\u94fe\u4e0d\u53ef\u80fd\u540c\u6784\uff0c\u90a3\u4e48\u8f93\u51fa <code>No</code>\uff0c\u5426\u5219\u7684\u8bdd\uff0c\u7b2c\u4e00\u884c\u8f93\u51fa\u4e00\u4e2a <code>Yes</code> \u7b2c\u4e8c\u884c\u8f93\u51fa\u8be5\u9879\u94fe\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8868\u793a\u3002</p> <p>\u8bbe \\(L =\\) \u9879\u94fe\u957f\u5ea6\uff0c\u5219 \\(1\\leq L \\leq 1000000\\)\u3002</p> <p>\u6734\u7d20\u505a\u6cd5\uff1a\u65ad\u73af\u4e3a\u94fe\uff0c\u4ee4a=a+a\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u662f\u8981\u5728a\u4e2d\u5339\u914d\u4e00\u4e2a\u4e3ab\u7684\u5b57\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7ebf\u6027\u7528\u54c8\u5e0c\u3002</p> <p>\u5f53\u7136\u8003\u8651\u5230\u7b2c\u4e8c\u95ee\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u5b57\u7b26\u4e32\u7684\u6700\u5c0f\u8868\u793a\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u50cfkmp\u4e00\u6837\u6c42\u51faa,b\u7684\u6700\u5c0f\u8868\u793a\u6cd5\u540e\u76f4\u63a5\u6bd4\u8f83\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\nstring a,b;\n\nstring getMin(string a){\n    int n=a.size();\n    a=\" \"+a+a;\n\n    itn l=1,r=2;\n    int k=0;\n    while(r&lt;=n){\n        k=0;\n        while(k&lt;n&amp;&amp;a[l+k]==a[r+k])k++;\n        if(k==n)break;\n\n        if(a[l+k]&gt;a[r+k])l+=k,l++;\n        else r+=k,r++;\n        if(l==r)r++;\n        if(l&gt;r)swap(l,r);\n    }\n\n    return a.substr(l,n);\n}\n\n\nvoid solve(){\n    cin&gt;&gt;a&gt;&gt;b;\n    string aa=getMin(a);\n    string bb=getMin(b);\n    if(aa==bb){\n        cout&lt;&lt;\"Yes\"&lt;&lt;endl&lt;&lt;aa&lt;&lt;endl;\n\n    }else{\n        cout&lt;&lt;\"No\"&lt;&lt;endl;\n    }\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/#_3","title":"\u6811\u7684\u6700\u5c0f\u8868\u793a\u6cd5","text":""},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/#1-subway-tree-systems","title":"\u4f8b\u9898 #1 Subway tree systems","text":"<p>\u3010\u9898\u76ee\u63cf\u8ff0\u3011</p> <p>\u4e00\u4e9b\u4e3b\u8981\u57ce\u5e02\u7684\u5730\u94c1\u7cfb\u7edf\u91c7\u7528\u6811\u72b6\u7ed3\u6784\uff0c\u5373\u5728\u4efb\u4f55\u4e24\u4e2a\u8f66\u7ad9\u4e4b\u95f4\uff0c\u53ea\u6709\u4e00\u6761\u4e14\u4ec5\u6709\u4e00\u6761\u5730\u94c1\u7ebf\u8def\u3002\u6b64\u5916\uff0c\u5927\u591a\u6570\u8fd9\u4e9b\u57ce\u5e02\u90fd\u6709\u4e00\u4e2a\u72ec\u7279\u7684\u4e2d\u592e\u8f66\u7ad9\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u4f60\u662f\u8fd9\u4e9b\u57ce\u5e02\u4e2d\u7684\u4e00\u540d\u6e38\u5ba2\uff0c\u4f60\u60f3\u8981\u63a2\u7d22\u6574\u4e2a\u5730\u94c1\u7cfb\u7edf\u3002\u4f60\u4ece\u4e2d\u592e\u8f66\u7ad9\u51fa\u53d1\uff0c\u968f\u673a\u9009\u62e9\u4e00\u6761\u5730\u94c1\u7ebf\u8def\uff0c\u8df3\u4e0a\u5730\u94c1\u5217\u8f66\u3002\u6bcf\u5f53\u4f60\u5230\u8fbe\u4e00\u4e2a\u8f66\u7ad9\uff0c\u4f60\u5c31\u4f1a\u9009\u62e9\u4e00\u6761\u4f60\u5c1a\u672a\u4e58\u5750\u8fc7\u7684\u5730\u94c1\u7ebf\u8def\u3002\u5982\u679c\u5728\u5f53\u524d\u8f66\u7ad9\u6ca1\u6709\u5176\u4ed6\u8981\u63a2\u7d22\u7684\u5730\u94c1\u7ebf\u8def\u4e86\uff0c\u4f60\u5c31\u4f1a\u4e58\u5750\u7b2c\u4e00\u6b21\u5230\u8fbe\u8be5\u8f66\u7ad9\u7684\u5730\u94c1\u7ebf\u8def\u8fd4\u56de\uff0c\u76f4\u5230\u6700\u7ec8\u4f60\u6cbf\u7740\u6240\u6709\u7684\u7ebf\u8def\u90fd\u884c\u9a76\u4e86\u4e24\u6b21\uff0c\u5373\u6bcf\u4e2a\u65b9\u5411\u90fd\u884c\u9a76\u4e86\u4e00\u6b21\u3002\u5728\u90a3\u65f6\uff0c\u4f60\u56de\u5230\u4e86\u4e2d\u592e\u8f66\u7ad9\u3002\u4e4b\u540e\uff0c\u4f60\u6240\u8bb0\u5f97\u7684\u63a2\u7d22\u987a\u5e8f\u53ea\u662f\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u662f\u5426\u5411\u4e2d\u592e\u8f66\u7ad9\u66f4\u8fdc\u6216\u66f4\u8fd1\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5c06\u4f60\u7684\u65c5\u7a0b\u7f16\u7801\u4e3a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d 0 \u8868\u793a\u4e58\u5750\u4e00\u6761\u5730\u94c1\u7ebf\u8def\u4f7f\u4f60\u79bb\u4e2d\u592e\u8f66\u7ad9\u66f4\u8fdc\u4e00\u7ad9\uff0c\u800c 1 \u8868\u793a\u4f7f\u4f60\u79bb\u4e2d\u592e\u8f66\u7ad9\u66f4\u8fd1\u4e00\u7ad9\u3002</p> <p>\u3010\u8f93\u5165\u683c\u5f0f\u3011</p> <p>\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6b63\u6574\u6570 \\(n\\)\uff0c\u8868\u793a\u63a5\u4e0b\u6765\u8981\u8ddf\u968f\u7684\u6d4b\u8bd5\u65b9\u6848\u7684\u6570\u91cf\u3002\u6bcf\u4e2a\u6d4b\u8bd5\u65b9\u6848\u5305\u62ec\u4e24\u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e00\u4e2a\u957f\u5ea6\u6700\u591a\u4e3a \\(3000\\) \u7684\u7531\u5b57\u7b26 '0' \u548c '1' \u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u63cf\u8ff0\u4e86\u5730\u94c1\u6811\u7cfb\u7edf\u7684\u6b63\u786e\u63a2\u7d22\u65c5\u7a0b\u3002</p> <p>\u3010\u8f93\u51fa\u683c\u5f0f\u3011</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u65b9\u6848\uff0c\u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u8868\u793a\u76f8\u540c\u5730\u94c1\u6811\u7cfb\u7edf\u7684\u63a2\u7d22\u65c5\u7a0b\uff0c\u5219\u8f93\u51fa \"same\"\uff1b\u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e0d\u80fd\u8868\u793a\u76f8\u540c\u5730\u94c1\u6811\u7cfb\u7edf\u7684\u63a2\u7d22\u65c5\u7a0b\uff0c\u5219\u8f93\u51fa \"different\"\u3002</p> <p>\u7ffb\u8bd1\u6765\u81ea\u4e8e\uff1aChatGPT\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\nstring a,b;\n\nstring s1,s2;\nvoid getMin(string &amp;s)\n{\n    if(s==\"01\") return;\n    s=s.substr(1,s.size()-2);\n    int st=0,cnt=0;\n    vector&lt;string&gt; v;\n    v.clear(); \n    for(int i=0;i&lt;s.size();++i)\n    {\n        cnt+=(s[i]=='0'?1:-1);\n        if(!cnt)\n        {\n            string ss=s.substr(st,i-st+1);\n            getMin(ss);\n            v.push_back(ss);\n            st=i+1;\n        }\n    }\n    sort(v.begin(),v.end());\n    s='0';\n    for(int j=0;j&lt;v.size();++j) s+=v[j];\n    s+='1';\n    return;\n}\nsigned main()\n{\n    int t;\n    scanf(\"%lld\",&amp;t);\n    while(t--)\n    {\n        cin&gt;&gt;s1;\n        cin&gt;&gt;s2;\n        s1='0'+s1+'1';\n        s2='0'+s2+'1';\n        getMin(s1);\n        getMin(s2);\n        if(s1==s2) printf(\"same\\n\");\n        else printf(\"different\\n\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/","title":"\u9ad8\u7cbe\u5ea6","text":"<p>\u4e13\u9898 | \u9ad8\u7cbe\u5ea6&amp;\u5feb\u8bfb\u5feb\u8f93</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/#_1","title":"\u5c0f\u6280\u5de7","text":"<p>\u5982\u679c\u53ea\u662f\u7565\u5fae\u8d85\u8fc7<code>long long</code>\u8303\u56f4\uff0c\u53ef\u4ee5\u4f7f\u7528<code>__int128</code></p> <p>\u8be6\u89e3__int128 - FReQuenter - \u535a\u5ba2\u56ed</p> <p>__int128\u76ee\u524d\u5df2\u77e5\u53ef\u4ee5\u4f7f\u7528</p> <ul> <li> <p>&lt;\u6bd4\u8f83\u5927\u5c0f</p> </li> <li> <p>\u56db\u5219\u8fd0\u7b97</p> </li> <li> <p>\u53d6\u6a21</p> </li> </ul>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/#_2","title":"\u9ad8\u7cbe\u5ea6","text":"<p>\u4ecb\u7ecd:</p> <p>\u6211\u4eec\u6709\u4e9b\u65f6\u5019\u8981\u5bf9\u5f88\u5927\u7684\u6570(\u8d85\u51fa<code>long long</code>\u8303\u56f4)\u8fdb\u884c\u52a0\u51cf\u4e58\u9664,\u666e\u901a\u7684\u8fd0\u7b97\u7b26\u65e0\u6cd5\u5b8c\u6210,\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u9ad8\u7cbe\u5ea6</p> <p>\u4ee3\u7801</p> <pre><code>#include \nusing namespace std;\n</code></pre> <p>//\u8bf7\u5c06\u51fd\u6570\u590d\u5236\u5728\u4f60\u7684\u7a0b\u5e8f\u91cc,\u4e0d\u7528\u76f4\u63a5\u4ece\u672c\u6587\u4ef6\u8c03\u7528!)</p> <pre><code>//\u524d\u7f6e\uff08\u5b9a\u4e49\u53d8\u91cf\uff09\uff08\u5c06\u6b64\u4ee3\u7801\u590d\u5236\u5728\u4e3b\u51fd\u6570\u5916\uff09\nstring sa, sb;\nint la, lb, lc;\nint a[99999], b[99999], c[99999];\n//\u524d\u7f6e\uff08\u8f93\u5165\u5e76\u5904\u7406\uff09\uff08\u653e\u5728\u8fd0\u7b97\u51fd\u6570\u7684\u524d\u9762\uff09\ncin &gt;&gt; sa &gt;&gt; sb;\nla = sa.size();\nlb = sb.size();\nlc = max(la, lb);\nfor (int i = 0; i &lt; la; i++)\n    a[la - i] = sa[i] - '0';\nfor (int i = 0; i &lt; lb; i++)\n    b[lb - i] = sb[i] - '0';\n//\u8f93\u51fa\u7ed3\u679c\u7684\u4ee3\u7801\nfor (int i = lc; i &gt; 0; i--)\n    cout &lt;&lt; c[i];\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/#_3","title":"\u5927\u6570\u52a0\u6cd5","text":"<p>//\u53c2\u6570(\u52a0\u6570,\u52a0\u6570,\u8fdb\u5236(&lt;=10))</p> <pre><code>void add(int B) {\n\n    for (int i = 0; i &lt;= lc; i++) //\u5148\u52a0\n        c[i] = a[i] + b[i];\n\n    for (int i = 0; i &lt;= lc; i++) { //\u8fdb\u4f4d\n        c[i + 1] += c[i] / B;\n        c[i] %= B;\n    }\n\n    if (c[lc + 1] != 0)\n        lc++;\n    while (c[lc] == 0 &amp;&amp; lc &gt; 1)\n        lc--;//\u53bb\u524d\u5bfc0\n\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/#_4","title":"\u5927\u6570\u51cf\u6cd5","text":"<pre><code>void sub() {\n\n    for (int i = 0; i &lt;= lc; i++)\n        c[i] = a[i] - b[i];\n\n    for (int i = 0; i &lt;= lc; i++) {\n        if (c[i] &lt; 0) {\n            c[i] += 10;\n            c[i + 1]--;\n        }\n    }\n\n    while (c[lc] == 0 &amp;&amp; lc &gt; 1)\n        lc--;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/#_5","title":"\u5927\u6570\u4e58\u6cd5","text":"<p>\u9ad8\u7cbe\u5ea6\u4e58\u4f4e\u7cbe\u5ea6</p> <pre><code>void mul_small(int x) {\n\n    for (int i = 0; i &lt;= lc; i++) //\u5148\u52a0\n        c[i] = a[i] * x;\n\n    for (int i = 0; i &lt;= lc; i++) { //\u8fdb\u4f4d\n        c[i + 1] += c[i] / 10;\n        c[i] %= 10;\n    }\n\n    if (c[lc + 1] != 0)\n        lc++;\n    while (c[lc] == 0 &amp;&amp; lc &gt; 1)\n        lc--;//\u53bb\u524d\u5bfc0\n\n}\n</code></pre> <p>\u9ad8\u7cbe\u5ea6\u4e58\u9ad8\u7cbe\u5ea6</p> <pre><code>string s1, s2;\n\nstring mul() {\n    int n1 = s1.size(), n2 = s2.size();\n    string res(n1 + n2, '0');\n    for (int i = n1 - 1; i &gt;= 0; i--) {\n        for (int j = n2 - 1; j &gt;= 0; j--) {\n            int t = res[i + j + 1] - '0' + (s1[i] - '0') * (s2[j] - '0'); //\u52a0\u672c\u4f4d\n            res[i + j] += t / 10;\n            res[i + j + 1] = t % 10 + '0';\n        }\n    }\n    for (int i = 0; i &lt; n1 + n2; i++)\n        if (res[i] != '0')\n            return res.substr(i);\n    return \"0\";\n}\n\nint main() {\n    cin &gt;&gt; s1 &gt;&gt; s2;\n    cout &lt;&lt; mul() &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u9ad8\u7cbe\u4e58\u9ad8\u7cbe\u7684\u538b\u4f4d\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\uff0823.10.7\uff09</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e5+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,p,q,T;\nstring sa,sb;\n\nstruct node{\n    int res[N];//define\u4e3all \uff0c\u538b8\u4f4d \n    int len;\n};\nnode mul(node a,node b){\n    node c;\n    int n=a.len,m=b.len;\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            c.res[i+j-1]+=a.res[i]*b.res[j];\n        }\n    }\n\n    for(int i=1;i&lt;=n+m-1;i++){\n        c.res[i/100000000;\n        c.res[i]%=100000000;\n    }\n\n    c.len=n+m-1; \n    while(c.res[c.len+1])c.len++;\n    return c;\n}\n\nnode init(string s){//\u5b57\u7b26\u4e32\u8f6c\u538b\u4f4d\u6570\u7ec4\n    node a;\n    a.len=0;\n    int l=s.size();\n    int t=0;\n    for(int i=l-1,k=0;i&gt;=0;i--){\n        k++;\n        t+=(s[i]-'0')*pow(10,k-1);\n        if(k==8||i==0){\n            a.res[++a.len]=t;\n            t=0;k=0;\n        }\n    }\n    return a;\n}\n\ninline void out(node a){//\u8bf7\u5f00\u6808\uff01 //\u8f93\u51fa\u538b\u4f4d\u6570\u7ec4\n    cerr&lt;&lt;a.len&lt;&lt;endl;\n    printf(\"%lld\",a.res[a.len]);\n    for(int i=a.len-1;i;i--)printf(\"%08lld\",a.res[i]);\n}\n\nsigned main(){\n    cin&gt;&gt;sa&gt;&gt;sb;\n\n    node a=init(sa);\n    node b=init(sb);\n    node c=mul(a,b);\n\n    out(c);\n    return 0;\n}\n</code></pre> <p>\u8865\u5145\u77e5\u8bc6\uff1aprintf\u56fa\u5b9a\u524d\u7f000\u8f93\u51fa</p> <pre><code>int a = 4;\nprintf(\"%03d\",a);\n</code></pre> <p>\u8f93\u51fa\uff1a004</p> <p>\u4e5f\u53ef\u4ee5\u7528 * \u4ee3\u66ff\u4f4d\u6570\uff0c\u5728\u540e\u9762\u7684\u53c2\u6570\u5217\u8868\u4e2d\u7528\u53d8\u91cf\u63a7\u5236\u8f93\u51fa\u4f4d\u6570\uff1b</p> <pre><code>int a = 4;\nint n = 3;\nprintf(\"%0*d\",n,a);\n</code></pre> <p>\u8f93\u51fa\uff1a004</p>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/#_6","title":"\u5927\u6570\u9664\u6cd5(\u5927\u6570/\u5355\u7cbe\u5ea6)","text":"<pre><code>void div_small(int x) {\n    lc = la;\n    for (int i = 0; i &lt; lc; i++) {\n        c[i] = a[i] / x;\n        a[i + 1] += (a[i] % x) * 10;\n    }\n\n    c[lc] = a[lc] / x;\n    int yu = a[lc] % x;\n\n}\n</code></pre> <pre><code>string divv(string a,int b){\n    // int b=atoi(strb.c_str());\n    int res=0;\n    string r=\"\";\n    for(int i=0;i&lt;a.size();i++){\n        res*=10;\n        res+=a[i]-'0';\n        if(res&gt;=b){\n            r=r+(char)(res/b+'0');\n            res=res-res/b*b;    \n        }\n        else{\n            if(r!=\"\")r=r+'0';\n        }\n\n    }\n    return r;\n}\n</code></pre> <p>//\u5927\u6570\u9664\u6cd5(\u5927\u6570/\u5927\u6570)</p> <pre><code>void div_big() {}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/#15","title":"\u5c0f\u6570\u9664\u6cd5\uff08\u7528\u4e8e\u6c42\u51fa\u5c0f\u6570\u70b9\u540e&gt;15\u4f4d\uff09","text":"<pre><code>int a,b,c,f[N],cnt[N],l,r,tend=INF;\n\nvoid xiaosc(int a,int b) {//a\u00f7b\n    cout&lt;&lt;a/b;\n    if(!(a%b))return ;//\u53ef\u4ee5\u6574\u9664\n    cout&lt;&lt;'.';\n    int d=a%b; \n    for(int i=1;i;i++){\n        d*=10;\n        if(!d){//\u9664\u5c3d\u4e86\n            tend=i;break;\n        }\n        if(cnt[d]){//\u627e\u5230\u5faa\u73af\u8282\n            l=cnt[d];r=i-1;break;\n        }\n        cnt[d]=i;\n        int t=d/b;\n        d-=t*b;\n        f[i]=t; \n    }\n  //\u8f93\u51fa\u5faa\u73af\u8282\uff0c\u4f1a\u7528\u62ec\u53f7\u62ec\u8d77\u6765\n    for(int i=1;i;i++){\n        if(i==tend)break;\n        if(i==l)cout&lt;&lt;'(';\n        cout&lt;&lt;f[i];\n        if(i==r){\n            cout&lt;&lt;')';return ;\n        }\n    }\n    return ;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/#_7","title":"\u4ed6\u4eba\u7248\u672c\uff08\u538b\u4f4d\uff09\uff08\u6253\u5305\uff09","text":"<pre><code>typedef long long LL;\nconst int base = 1e8;\nint aux[N];//\u50a8\u5b58\u539f\u59cb\u6570\u636e \nclass HighPrecision{//\u9ad8\u7cbe\u5ea6\u538b\u4f4d\u6a21\u677f \n    private:\n        int p[N], sz;//\u7c7b\u7684\u79c1\u6709\u6210\u5458 \n    public://\u533a\u57df\u4e00:\n        void cin() {//\u8bfb\u5165\u51fd\u6570 \n            this -&gt; clear();//\u6e05\u7a7a\u5bf9\u8c61 \n            memset(aux, 0, sizeof(aux));\n            int tot = 0,x = 0, y, k = 1;\n            char ch = getchar();\n\n            int fu = 1; //\u7b26\u53f7\u5224\u65ad\n            for (; ch &lt; '0' || ch &gt; '9'; ch = getchar()) \n                if (ch == '-') fu *= -1;\n\n            for (; ch &gt;= '0' &amp;&amp; ch &lt;= '9'; ch = getchar()){\n                if(tot==1&amp;&amp;aux[tot]==0)aux[tot] = ch - '0';\n                else aux[+/\u5904\u7406\u524d\u7f00\u96f6\u548c\u8bfb\u5165\u96f6\u7684\u60c5\u51b5 \n            }\n            sz = (tot + 7) / 8;//\u8ba1\u7b97\u4f4d\u6570 \n            y = (tot - 1) % 8 + 1;//\u6700\u9ad8\u4f4d\u6807\u8bb0 \n            for (int i = tot; i &gt;= y; i -= 8, x=0){\n                for(int j=7;j&gt;=0;--j){//\u538b\u4f4d(\u4ebf\u8fdb\u5236) \n                    if(i &lt;= j)continue;//\u6700\u9ad8\u4f4d\u5904\u7406 \n                    x = x * 10 + aux[i - j];\n                }\n                p[k++] = x;//\u5bf9\u6bcf\u4e00\u4f4d\u8fdb\u884c\u50a8\u5b58 \n            }\n            p[sz] *= fu;//\u6807\u8bb0\u7b26\u53f7 \n        }\n        void cout(bool u = false){//\u8bfb\u51fa\u51fd\u6570 \n            if(sz == 0) { printf(\"inf\"); return;}//\u5f02\u5e38\u72b6\u51b5 \n            printf(\"%d\", p[sz]);//\u5148\u8f93\u51fa\u9996\u4f4d\u5e26\u7b26\u53f7 \n            for(int i = sz - 1; i; --i)\n                printf(\"%08d\", p[i]);\n            if(u) printf(\"\\n\");//\u6362\u884c \n        } \n    public://\u533a\u57df\u4e8c\uff1a \n        HighPrecision operator = (const int &amp;d){//\u91cd\u8f7d= (int)\n            int b = d;\n\n            int fu = 1;//\u7b26\u53f7\u5224\u65ad \n            if(b &lt; 0) b *= -1, fu = -1;\n\n            this -&gt; clear();//\u6e05\u7a7a\u5bf9\u8c61 \n            do {//\u7528do~while\u5904\u7406d\u4e3a\u96f6\u7684\u72b6\u51b5 \n                p[++sz] = b % base;\n                b /= base;\n            } while(b);\n            p[sz] *= fu;\n            return *this;\n        }\n        HighPrecision operator = (const LL &amp;d){//\u91cd\u8f7d= (long long) \n            LL b = d;\n\n            int fu = 1;//\u7b26\u53f7\u5224\u65ad           \n            if (b &lt; 0) b *= -1, fu = -1; \n\n            this -&gt; clear();//\u6e05\u7a7a\u5bf9\u8c61 \n            do {//\u7528do~while\u5904\u7406d\u4e3a\u96f6\u7684\u72b6\u51b5 \n                p[++sz] = b % base;\n                b /= base;\n            } while(b);\n            p[sz] *= fu;//\u6807\u8bb0\u7b26\u53f7 \n            return *this;\n        }\n        HighPrecision operator + (const int &amp;d){//\u91cd\u8f7d+ (int)\n            LL x = d;\n\n            int fu = 1;//\u7b26\u53f7\u5224\u65ad \n            HighPrecision c;\n            if (p[sz] &lt; 0 &amp;&amp; x &lt; 0) p[sz] *= -1, x *= -1, fu = -1;\n            else if (p[sz] &lt; 0) {p[sz] *= -1; return (c = x) - *this;}\n            else if (x &lt; 0) {x *= -1; return *this - x;}\n\n            for (int i = 1; i &lt;= sz &amp;&amp; x; +/\u8fdb\u4f4d\u8ba1\u7b97 \n                x = x + p[i];\n                p[i] = x % base;\n                x = x / base;\n            }\n            if (x) p[+/\u8fdb\u4f4d \u4f4d\u6570+1 \n            p[sz] *= fu;\n            return *this;\n        }   \n        HighPrecision operator + (const LL &amp;d){//\u91cd\u8f7d+ (long long)\n            LL x = d;\n\n            int fu = 1;//\u7b26\u53f7\u5224\u65ad \n            HighPrecision c;\n            if (p[sz] &lt; 0 &amp;&amp; x &lt; 0) p[sz] *= -1, x *= -1, fu = -1;\n            else if (p[sz] &lt; 0) {p[sz] *= -1; return (c = x) - *this;}\n            else if (x &lt; 0) {x *= -1; return *this - x;}\n\n            for (int i = 1; i &lt;= sz &amp;&amp; x; +/\u8fdb\u4f4d\u8ba1\u7b97 \n                x = x + p[i];\n                p[i] = x % base;\n                x = x / base;\n            }\n            if (x) p[+/\u8fdb\u4f4d \u4f4d\u6570+1 \n            p[sz] *= fu;\n            return *this;\n        }   \n        HighPrecision operator + (const HighPrecision &amp;d){//\u91cd\u8f7d+ (HighPrecision)\n            HighPrecision c, a = *this, b = d;\n\n            int fu = 1;//\u7b26\u53f7\u5224\u65ad \n            if (a.p[a.sz] &lt; 0 &amp;&amp; b.p[b.sz] &lt; 0) a.p[a.sz] *= -1, b.p[b.sz] *= -1, fu = -1;\n            else if (a.p[a.sz] &lt; 0) {a.p[a.sz] *= -1; return b - a;}\n            else if (b.p[b.sz] &lt; 0) {b.p[b.sz] *= -1; return a - b;}\n\n            if (a &lt; b) a.swap(b);//a\u4e3a\u5927\u503c,\u65b9\u4fbf\u8ba1\u7b97 \n            if (b.sz &lt; 3) {c = a + b.toLL(); c.p[c.sz] *= fu; return c;}//\u8282\u7701\u65f6\u95f4 \n            LL x = 0;\n            for(int i = 1; i &lt;= a.sz; ++i) {\n                x = x + a.p[i] + b.p[i];\n                c.p[i] = x % base;\n                x = x / base; \n            } \n            c.sz = a.sz;\n            if (x) c.p[+/\u8fdb\u4f4d \u4f4d\u6570+1 \n            c.p[c.sz] *= fu;//\u6807\u8bb0\u7b26\u53f7 \n            return c;\n        }\n        HighPrecision operator - (const HighPrecision &amp;d){//\u91cd\u8f7d- (HighPrecision)\n            HighPrecision a = *this, c, b = d;\n\n            int fu = 1;//\u7b26\u53f7\u5224\u65ad \n            if(a.p[a.sz] &lt; 0 &amp;&amp; b.p[b.sz] &lt; 0) a.p[a.sz] *= -1, b.p[b.sz] *= -1, fu *= -1;\n            else if (a.p[a.sz] &lt; 0) {a.p[a.sz] *= -1;c = a + b; c.p[c.sz] *= -1; return c;}\n            else if (b.p[b.sz] &lt; 0) {b.p[b.sz] *= -1; return a + b;}  \n\n            LL x = 1, k = 0;\n            if(a&lt;b) a.swap(b), fu *= -1;\n            if(a == b)return c = 0;//\u7279\u6b8a\u60c5\u51b5\u76f4\u63a5\u8f93\u51fa \n            for(int i = 1; i &lt;= a.sz; +/\u501f\u4f4d\u8ba1\u7b97 \n                x = x + a.p[i] + base -1 - b.p[i]; \n                c.p[i] = x % base;\n                x = x / base;   \n            }\n            for(c.sz = a.sz; c.p[c.sz] == 0; --c.sz);//\u8ba1\u7b97c.sz \n            c.p[c.sz] *= fu;//\u7b26\u53f7\u6807\u8bb0 \n            return c;\n        }\n        HighPrecision operator - (const int &amp;d){//\u91cd\u8f7d- (int)\n            HighPrecision c;\n            int b = d;\n\n            int fu = 1;//\u7b26\u53f7\u5224\u65ad \n            if(p[sz] &lt; 0 &amp;&amp; b &lt; 0) p[sz] *= -1, b *= -1, fu *= -1;\n            else if (p[sz] &lt; 0) {p[sz] *= -1;c = *this + b; c.p[c.sz] *= -1; return c;}\n            else if (b &lt; 0) {b *= -1; return *this + b;}\n\n            c=*this - (c = b);\n            c.p[c.sz] *= fu;//\u7b26\u53f7\u6807\u8bb0 \n            return c;\n        }\n        HighPrecision operator - (const LL &amp;d){//\u91cd\u8f7d- (long long)\n            HighPrecision c;\n            LL b = d;\n\n            int fu = 1;//\u7b26\u53f7\u5224\u65ad \n            if(p[sz] &lt; 0 &amp;&amp; b &lt; 0) p[sz] *= -1, b *= -1, fu *= -1;\n            else if (p[sz] &lt; 0) {p[sz] *= -1;c = *this + b; c.p[c.sz] *= -1; return c;}\n            else if (b &lt; 0) {b *= -1; return *this + b;}\n\n            c=*this - (c = b);\n            c.p[c.sz] *= fu;//\u7b26\u53f7\u6807\u8bb0 \n            return c;\n        }\n        HighPrecision operator * (const int &amp;d){//\u91cd\u8f7d* (int)\n            HighPrecision a=*this,c;\n            int b = d;\n\n            int fu = 1;//\u7b26\u53f7\u5224\u65ad \n            if(a.p[a.sz] &lt; 0) a.p[a.sz] *= -1, fu *= -1; \n            if(b &lt; 0) b *= -1, fu *= -1;\n\n            LL x = 0;\n            if(b == 0||a.sz == 1 &amp;&amp; a.p[a.sz] == 0) return c = 0;\n            for(int i = 1; i &lt;= a.sz; ++i){\n                x = x + 1ll * a.p[i] * b;\n                c.p[i] = x % base;\n                x = x / base;\n            }\n            c.sz = a.sz;//\u8ba1\u7b97c.sz \n            for(; x; x /= base){\n                c.p[++c.sz] = x % base;\n            }   \n            c.p[c.sz] *= fu;//\u7b26\u53f7\u6807\u8bb0 \n            return c;\n        } \n        HighPrecision operator * (const HighPrecision &amp;d){//\u91cd\u8f7d* (HighPrecision)\n            HighPrecision a =* this, b = d, c;\n\n            int fu = 1;//\u7b26\u53f7\u5224\u65ad \n            if(a.p[a.sz] &lt; 0) a.p[a.sz] *= -1, fu *= -1; \n            if(b.p[b.sz] &lt; 0) b.p[b.sz] *= -1, fu *= -1;\n\n            if(a &lt; b) a.swap(b);\n            if(b.sz &lt; 2) return a * b.toLL(fu);\n            if(b.sz == 1 &amp;&amp; b.p[b.sz] == 0) return c = 0;\n            LL x=0;\n\n            for (int i = 1; i &lt; a.sz + b.sz || x; +/\u6309\u4f4d\u4f9d\u6b21\u6c42\u51fa \n                int l = 1, r = b.sz, k = i;\n                if (i &lt;= b.sz) r = i;\n                if (i &gt;  a.sz) l = i - a.sz + 1, k = a.sz;\n                for(int j = l; j &lt;= r; ++j, --k){\n                    x += 1ll * a.p[k] * b.p[j]; //\u6ce8\u610f\u6570\u503c\u8303\u56f4 \n                }\n                c.p[++c.sz] = x % base;\n                x = x / base;\n            }\n            c.p[c.sz] *= fu;//\u7b26\u53f7\u6807\u8bb0 \n            return c;\n        } \n        HighPrecision operator * (const LL &amp;d){//\u91cd\u8f7d* (long long)\n            HighPrecision a=*this,c;\n            LL b=d;\n\n            int fu = 1;//\u7b26\u53f7\u5224\u65ad \n            if(a.p[a.sz] &lt; 0) a.p[a.sz] *= -1, fu *= -1; \n            if(b &lt; 0) b *= -1, fu *= -1;\n\n            if(d &gt; 2e9) return a * (c = d);\n            LL x = 0;\n            if(b == 0||a.sz == 1 &amp;&amp; a.p[a.sz] == 0) return c = 0;\n            for(int i = 1; i &lt;= a.sz; ++i){\n                x = x + 1ll * a.p[i] * b;\n                c.p[i] = x % base;\n                x = x / base;\n            }\n            c.sz = a.sz;//\u8ba1\u7b97c.sz \n            for(; x; x /= base){\n                c.p[++c.sz] = x%base;\n            }   \n            c.p[c.sz] *= fu; //\u7b26\u53f7\u6807\u8bb0 \n            return c;\n        }\n        HighPrecision operator / (const int &amp;d){//\u91cd\u8f7d/ (int) \n            HighPrecision a=*this, c;\n            int b=d;\n\n            int fu = 1;//\u5224\u65ad\u7b26\u53f7\n            if (a.p[a.sz] &lt; 0) a.p[a.sz] *= -1, fu *= -1;\n            if (b &lt; 0) b *= -1, fu *= -1; \n\n            LL x=0;\n            if (b == 0) return c;//\u9664\u6570\u4e3a\u96f6 \u629b\u51fa\u5f02\u5e38\u72b6\u51b5 \n            for(int i = a.sz; i; --i){\n                x = x * base + a.p[i];\n                c.p[i] = x / b;\n                x = x % b;\n            } \n            for(c.sz = a.sz; c.p[c.sz] == 0 &amp;&amp; c.sz &gt; 1; --c.sz);\n            c.p[c.sz] *= fu; //\u7b26\u53f7\u6807\u8bb0 \n            return c;\n        }\n        HighPrecision operator / (const LL &amp;d){//\u91cd\u8f7d/ (long long)\n            HighPrecision a=*this, c;\n            LL b=d;\n\n            int fu = 1;//\u5224\u65ad\u7b26\u53f7\n            if (a.p[a.sz] &lt; 0) a.p[a.sz] *= -1, fu *= -1;\n            if (b &lt; 0) b *= -1, fu *= -1; \n\n            LL x=0;\n            if (b == 0) return c;//\u9664\u6570\u4e3a\u96f6 \u629b\u51fa\u5f02\u5e38\u72b6\u51b5 \n            for(int i = a.sz; i; --i){\n                x = x * base + a.p[i];\n                c.p[i] = x / b;\n                x = x % b;\n            } \n            for(c.sz = a.sz; c.p[c.sz] == 0 &amp;&amp; c.sz &gt; 1; --c.sz); \n            c.p[c.sz] *= fu;//\u7b26\u53f7\u6807\u8bb0 \n            return c;\n        }\n        HighPrecision operator / (const HighPrecision &amp;d){//\u91cd\u8f7d/ (HighPrecision) \n            HighPrecision a=*this,b=d,c,ce; \n\n            int fu = 1;//\u5224\u65ad\u7b26\u53f7\n            if (a.p[a.sz] &lt; 0) a.p[a.sz] *= -1, fu *= -1;\n            if (b.p[b.sz] &lt; 0) b.p[b.sz] *= -1, fu *= -1; \n\n            if(b.sz == 1 &amp;&amp; b.p[b.sz] == 0) return c;//\u9664\u6570\u4e3a\u96f6 \u629b\u51fa\u5f02\u5e38\u72b6\u51b5 \n            if (a &lt;  b) return c = 0;//\u88ab\u9664\u6570\u5c0f\u4e8e\u9664\u6570 \n            if (a == b) return c = 1;//\u88ab\u9664\u6570\u7b49\u4e8e\u9664\u6570 \n            if (b.sz &lt; 2) return a / b.toLL(fu);\n            for(int i = a.sz; i; --i){\n                for(int j = +/\u6a21\u62df\u8fdb\u4f4d \n                    ce.p[j] = ce.p[j-1];\n                ce.p[1] = a.p[i];\n                if (ce &lt; b) continue;//\u5546\u4e3a\u96f6 \u76f4\u63a5\u8df3\u8fc7 \n                int l = 0, r = base, x;\n                while(l &lt;= r) {//\u4e8c\u5206\u67e5\u627e\u5546 \n                    int mid = l + r &gt;&gt; 1; \n                    if (b  * mid &lt;= ce) {\n                        x = mid;\n                        l = mid + 1;\n                    }\n                    else {\n                        r = mid - 1; \n                    }\n                } \n                c.p[i] = x; \n                ce = ce - b * x;\n            }\n            for(c.sz = a.sz; c.p[c.sz] == 0 &amp;&amp; c.sz &gt; 1; --c.sz);\n            c.p[c.sz] *= fu; //\u7b26\u53f7\u6807\u8bb0 \n            return c;\n        }\n        HighPrecision operator % (const int &amp;d){//\u91cd\u8f7d% (int) \n            HighPrecision a=*this, c;\n            int b=d;\n\n            int fu = 1;//\u5224\u65ad\u7b26\u53f7\n            if (a.p[a.sz] &lt; 0) a.p[a.sz] *= -1, fu *= -1;\n            if (b &lt; 0) b *= -1, fu *= -1; \n\n            LL x=0;\n            if (d == 0) return c;//\u9664\u6570\u4e3a\u96f6 \u629b\u51fa\u5f02\u5e38\u72b6\u51b5 \n            for(int i = a.sz; i; --i){\n                x = (x * base + a.p[i]) % b;\n            } \n            return c = x * fu;\n        }\n        HighPrecision operator % (const LL &amp;d){//\u91cd\u8f7d% (long long)\n            HighPrecision a=*this, c;\n            LL b=d;\n\n            int fu = 1;//\u5224\u65ad\u7b26\u53f7\n            if (a.p[a.sz] &lt; 0) a.p[a.sz] *= -1, fu *= -1;\n            if (b &lt; 0) b *= -1, fu *= -1; \n\n            LL x=0;\n            if (d == 0) return c;//\u9664\u6570\u4e3a\u96f6 \u629b\u51fa\u5f02\u5e38\u72b6\u51b5 \n            for(int i = a.sz; i; --i){\n                x = (x * base + a.p[i]) % b;\n            } \n            return c = x * fu;\n        }\n        HighPrecision operator % (const HighPrecision &amp;d){//\u91cd\u8f7d% (HighPrecision) \n            HighPrecision a=*this,b=d,ce; \n\n            int fu = 1;//\u5224\u65ad\u7b26\u53f7\n            if (a.p[a.sz] &lt; 0) a.p[a.sz] *= -1, fu *= -1;\n            if (b.p[b.sz] &lt; 0) b.p[b.sz] *= -1, fu *= -1; \n\n            if (b.sz == 1 &amp;&amp; b.p[b.sz] == 0) return ce;//\u9664\u6570\u4e3a\u96f6 \u629b\u51fa\u5f02\u5e38\u72b6\u51b5 \n            if (a &lt;  b) return a;//\u88ab\u9664\u6570\u5c0f\u4e8e\u9664\u6570 \n            if (a == b) return ce = 0;//\u88ab\u9664\u6570\u7b49\u4e8e\u9664\u6570 \n            if (b.sz &lt; 2) return a % b.toLL(fu);\n            for(int i = a.sz; i; --i){\n                if (!(ce.sz == 1 &amp;&amp; ce.p[ce.sz] == 0))\n                    for(int j = +/\u6a21\u62df\u8fdb\u4f4d \n                        ce.p[j] = ce.p[j-1];\n                ce.p[1] = a.p[i];\n                if (ce &lt; b) continue;//\u5546\u4e3a\u96f6 \u76f4\u63a5\u8df3\u8fc7 \n                int l = 0, r = base, x;\n                while(l &lt;= r) {//\u4e8c\u5206\u67e5\u627e\u5546 \n                    int mid = l + r &gt;&gt; 1;\n                    if (ce &lt; b * mid) {\n                        r = mid - 1;\n                    }\n                    else {\n                        x = mid;\n                        l = mid + 1; \n                    }\n                } \n                ce = ce - b * x;\n            } \n            ce.p[ce.sz] *= fu; //\u7b26\u53f7\u6807\u8bb0 \n            return ce;\n        }\n    public://\u533a\u57df\u4e09\uff1a \n        HighPrecision operator += (int &amp;b) {return *this = *this + b;}\n        HighPrecision operator -= (int &amp;b) {return *this = *this - b;}\n        HighPrecision operator *= (int &amp;b) {return *this = *this * b;}\n        HighPrecision operator /= (int &amp;b) {return *this = *this / b;}\n        HighPrecision operator %= (int &amp;b) {return *this = *this % b;}\n        HighPrecision operator += (LL  &amp;b) {return *this = *this + b;}\n        HighPrecision operator -= (LL  &amp;b) {return *this = *this - b;}\n        HighPrecision operator *= (LL  &amp;b) {return *this = *this * b;}\n        HighPrecision operator /= (LL  &amp;b) {return *this = *this / b;}\n        HighPrecision operator %= (LL  &amp;b) {return *this = *this % b;}\n        HighPrecision operator += (HighPrecision &amp;b) {return *this = *this + b;}\n        HighPrecision operator -= (HighPrecision &amp;b) {return *this = *this - b;}\n        HighPrecision operator *= (HighPrecision &amp;b) {return *this = *this * b;}\n        HighPrecision operator /= (HighPrecision &amp;b) {return *this = *this / b;}\n        HighPrecision operator %= (HighPrecision &amp;b) {return *this = *this % b;}\n        bool operator &lt;  (const int &amp;b) const {HighPrecision c;return *this &lt;  (c=b);}\n        bool operator &lt;= (const int &amp;b) const {HighPrecision c;return *this &lt;= (c=b);}\n        bool operator &gt;  (const int &amp;b) const {HighPrecision c;return *this &gt;  (c=b);}\n        bool operator &gt;= (const int &amp;b) const {HighPrecision c;return *this &gt;= (c=b);}\n        bool operator == (const int &amp;b) const {HighPrecision c;return *this == (c=b);}\n        bool operator != (const int &amp;b) const {HighPrecision c;return *this != (c=b);}\n        bool operator &lt;  (const LL  &amp;b) const {HighPrecision c;return *this &lt;  (c=b);}\n        bool operator &lt;= (const LL  &amp;b) const {HighPrecision c;return *this &lt;= (c=b);}\n        bool operator &gt;  (const LL  &amp;b) const {HighPrecision c;return *this &gt;  (c=b);}\n        bool operator &gt;= (const LL  &amp;b) const {HighPrecision c;return *this &gt;= (c=b);}\n        bool operator == (const LL  &amp;b) const {HighPrecision c;return *this == (c=b);}\n        bool operator != (const LL  &amp;b) const {HighPrecision c;return *this != (c=b);}\n        bool operator == (const HighPrecision &amp;b) const {if(sz^b.sz)return false;\n            for (int     i=sz;i;i--) if(p[i] ^ b.p[i]) return false;         return true ;}\n        bool operator != (const HighPrecision &amp;b) const {if(sz^b.sz)return true ;\n            for (int     i=sz;i;i--) if(p[i] ^ b.p[i]) return true ;         return false;}\n        bool operator &lt;  (const HighPrecision &amp;b) const {if(sz^b.sz)return sz&lt;b.sz;\n            for (int     i=sz;i;i--) if(p[i] ^ b.p[i]) return p[i] &lt; b.p[i]; return false;}\n        bool operator &lt;= (const HighPrecision &amp;b) const {if(sz^b.sz)return sz&lt;b.sz;\n            for (int     i=sz;i;i--) if(p[i] ^ b.p[i]) return p[i] &lt; b.p[i]; return true ;}\n        bool operator &gt;  (const HighPrecision &amp;b) const {if(sz^b.sz)return sz&gt;b.sz;\n            for (int     i=sz;i;i--) if(p[i] ^ b.p[i]) return p[i] &gt; b.p[i]; return false;}\n        bool operator &gt;= (const HighPrecision &amp;b) const {if(sz^b.sz)return sz&gt;b.sz;\n            for (int     i=sz;i;i--) if(p[i] ^ b.p[i]) return p[i] &gt; b.p[i]; return true ;}     \n    public://\u533a\u57df\u56db:\n        HighPrecision() {clear();}//\u91cd\u8f7d\u6784\u9020\u51fd\u6570 \n        HighPrecision(int x) {*this = x;}\n        HighPrecision(LL  x) {*this = x;} \n        void clear() {sz = 0; memset(p, 0, sizeof(p));}//\u6e05\u7a7a\u51fd\u6570 \n        void swap(HighPrecision &amp;b) {HighPrecision c = *this; *this = b; b = c;}//\u4ea4\u6362\u51fd\u6570 \n        LL toLL(int fu = 1) {//\u5316\u503c\u51fd\u6570 \n            LL x = 0;\n            if (p[sz] &lt; 0) \n                p[sz] *= -1, fu = -1;\n            fm'banor(int i=sz;i;--i)\n                x=x*base+p[i];\n            return x * fu;\n        }\n\n    public:\n        bool check(){//\u5224\u5076\u6570\n            if(p[1]&amp;1)return 0;\n            return 1;\n        }\n\n//\u533a\u57df\u4e00\uff1a\u8f93\u5165\u8f93\u51fa \u3001\u533a\u57df\u4e8c\uff1a\u56db\u5219\u8fd0\u7b97 \u3001\u533a\u57df\u4e09\uff1a\u57fa\u7840\u914d\u7f6e \u3001\u533a\u57df\u56db\uff1a\u8f85\u52a9\u51fd\u6570 \n} a, b;\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/#gcd","title":"\u9ad8\u7cbeGCD","text":"<pre><code>//\u4f9d\u8d56\u4e0a\u9762\u7684\u9ad8\u7cbe\u5ea6\n\nHighPrecision gcd(HighPrecision a,HighPrecision b){//\u5c0f\u5fc3\u7206\u6808\u54e6\n    HighPrecision r=1;\n    while(b!=0){\n        if(a&lt;b)swap(a,b);\n        // a.cout(),b.cout(1);\n        if(a.check()&amp;&amp;b.check()){\n            a=a/2;\n            b=b/2;\n            r=r*2;\n        }\n        else if(a.check()){a=a/2;}\n        else if(b.check()){b=b/2;}//\u591a\u6253\u62ec\u53f7&amp;cmr\n        else a-=b;\n    }\n    return a*r;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/#_8","title":"\u4ed6\u4eba\u7248\u672c","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nint cmp(string, string);\nstring add(string, string);\nstring sub(string, string);\nstring mul(string, string);\nstring div(string, string);\nstring mod(string, string);\n\nint main()\n{\nstd:\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    string a, b;\n    cin &gt;&gt; a &gt;&gt; b;\n    cout &lt;&lt; add(a, b) &lt;&lt; \"\\n\"\n         &lt;&lt; sub(a, b) &lt;&lt; \"\\n\"\n         &lt;&lt; mul(a, b) &lt;&lt; \"\\n\"\n         &lt;&lt; div(a, b) &lt;&lt; \"\\n\"\n         &lt;&lt; mod(a, b) &lt;&lt; \"\\n\";\n    return 0;\n}\n\nint cmp(string str1, string str2)\n{\n    if (str1.length() &lt; str2.length())\n        return -1;\n    if (str1.length() &gt; str2.length())\n        return 1;\n    return str1.compare(str2);\n}\n\nstring add(string str1, string str2)\n{\n    string str = \"\";\n    int str1_len = str1.length(), str2_len = str2.length(), temp = 0;\n    bool carry = 0;\n    if (str1_len &lt; str2_len)\n        for (int i = 1; i &lt;= str2_len - str1_len; i++)\n            str1 = '0' + str1;\n    else\n        for (int i = 1; i &lt;= str1_len - str2_len; i++)\n            str2 = '0' + str2;\n    str1_len = str1.length(), str2_len = str.length();\n    for (int i = str1_len - 1; i &gt;= 0; i--)\n    {\n        temp = str1[i] - '0' + str2[i] - '0' + carry;\n        carry = temp / 10;\n        temp %= 10;\n        str = char(temp + '0') + str;\n    }\n    if (carry == 1)\n        str = '1' + str;\n    return str;\n}\n\nstring sub(string str1, string str2)\n{\n    string str = \"\";\n    int str1_len = str1.length(), str2_len = str2.length(), temp = 0;\n    bool carry = 0;\n    if (str1_len &lt; str2_len)\n        for (int i = 1; i &lt;= str2_len - str1_len; i++)\n            str1 = '0' + str1;\n    else\n        for (int i = 1; i &lt;= str1_len - str2_len; i++)\n            str2 = '0' + str2;\n    str1_len = str1.length(), str2_len = str2.length();\n    for (int i = str1_len - 1; i &gt;= 0; i--)\n    {\n        temp = (str1[i] - '0') - (str2[i] - '0') - carry;\n        if (temp &lt; 0)\n        {\n            carry = 1;\n            temp += 10;\n        }\n        else\n            carry = 0;\n        str = char(temp + '0') + str;\n    }\n    str.erase(0, str.find_first_not_of('0'));\n    if (str.empty())\n        str = \"0\";\n    return str;\n}\n\nstring mul(string str1, string str2)//\u6ce8\u610f\uff01\u6709\u9505\uff01\u8bf7\u7528\u4e0a\u9762\u7684\uff01\n{\n    string str = \"\", temp_num = \"\";\n    int carry = 0, temp_digit = 0;\n    int str1_len = str1.length(), str2_len = str2.length();\n    for (int i = str2_len - 1; i &gt;= 0; i--)\n    {\n        temp_num = \"\";\n        temp_num.insert(0, str2_len - 1 - i, '0');\n        for (int j = str1_len - 1; j &gt;= 0; j--)\n        {\n            temp_digit = (str2[i] - '0') * (str1[j] - '0') + carry;\n            carry = temp_digit / 10;\n            temp_digit %= 10;\n            temp_num = char(temp_digit + '0') + temp_num;\n        }\n        if (carry != 0)\n            temp_num = char(carry + '0') + temp_num;\n        str = add(str, temp_num);\n    }\n    str.erase(0, str.find_first_not_of('0'));\n    if (str.empty())\n        str = \"0\";\n    return str;\n}\n\nstring div(string str1, string str2)\n{\n    string str = \"\";\n    int str1_len = str1.length(), str2_len = str2.length();\n    if (str2 == \"0\")\n        str = \"ERROR\";\n    else if (str1 == \"0\")\n        str = \"0\";\n    else if (cmp(str1, str2) &lt; 0)\n        str = \"0\";\n    else if (cmp(str1, str2) == 0)\n        str = \"1\";\n    else\n    {\n        string dividend = \"\";\n        dividend.append(str1, 0, str2_len - 1);\n        for (int i = str2_len - 1; i &lt; str1_len; i++)\n        {\n            dividend += str1[i];\n            dividend.erase(0, dividend.find_first_not_of('0'));\n            if (dividend.empty())\n                dividend = \"0\";\n            for (char ch = '9'; ch &gt;= '0'; ch--)\n            {\n                string tempstr;\n                tempstr += ch;\n                string temp = mul(str2, (tempstr));\n                if (cmp(temp, dividend) &lt;= 0)\n                {\n                    str += ch;\n                    dividend = sub(dividend, temp);\n                    break;\n                }\n            }\n        }\n        str.erase(0, str.find_first_not_of('0'));\n        if (str.empty())\n            str = \"0\";\n    }\n    return str;\n}\n\nstring mod(string str1, string str2)\n{\n    string str;\n    if (str2 == \"0\")\n        str = \"ERROR\";\n    str = sub(str1, mul(div(str1, str2), str2));\n    return str;\n}\n</code></pre>"},{"location":"%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%AB%98%E7%B2%BE%E5%BA%A6/#fft","title":"FFT\u9ad8\u7cbe\u5ea6","text":"<p>\u4ee3\u7801</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define cp complex &lt;double&gt;\nconst int N=10000005;\nconst double PI=acos(-1);\nint n=1,la,lb,res[N*2];\ncp a[N],b[N],omg[N],inv[N];\nchar sa[N],sb[N];\n\nvoid init(){\n    for(int i=0;i&lt;n;i++){\n        omg[i]=cp(cos(2*PI*i/n),sin(2*PI*i/n));\n        inv[i]=conj(omg[i]);\n    }\n}\n\nvoid fft(cp *a,cp *omg){\n    int lim =0;\n    while((1&lt;&lt;lim)&lt;n)lim++;\n    for(int i=0;i&lt;n;i++){\n        int t=0;\n        for(int j=0;j&lt;lim;j++)if((i&gt;&gt;j)&amp;1)t|=(1&lt;&lt;(lim-j-1));\n        if(i&lt;t)swap(a[i],a[t]);\n    }\n    for(int l=2;l&lt;=n;l*=2){\n        int m=l/2;\n        for(cp *p=a;p!=a+n;p+=l)for(int i=0;i&lt;m;i++){\n            cp t=omg[n/l*i]*p[i+m];\n            p[i+m]=p[i]-t;\n            p[i]+=t;\n        }\n    }\n}\nsigned main(){\n    //freopen(\"P1919_1.in\",\"r\",stdin);\n    scanf(\"%s%s\",&amp;sa,&amp;sb);\n    la=strlen(sa),lb=strlen(sb);\n\n    while(n&lt;la+lb)n*=2;\n    for(int i=0;i&lt;la;i++)a[i].real(sa[la-1-i]-'0');\n    for(int i=0;i&lt;lb;i++)b[i].real(sb[lb-1-i]-'0');\n\n    init();\n\n    fft(a,omg);\n    fft(b,omg);\n\n    for(int i=0;i&lt;n;i++){\n        a[i]*=b[i];\n    }\n\n    fft(a,inv);\n\n    for(int i=0;i&lt;n;i++){\n        res[i]+=floor(a[i].real()/n+0.5);\n        res[i/10;\n        res[i]%=10;\n    }\n    int l=la+lb-1;\n    if(!res[la+lb-1])l--;\n    for(int i=l;i&gt;=0;i--)putchar('0'+res[i]);\n\n    return 0;\n}\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/","title":"\u4e00\u53e5\u8bdd\u89e3\u9898","text":"<p>\u7b97\u6cd5\u7ade\u8d5b\u4e00\u53e5\u8bdd\u89e3\u9898&amp;\u7ecf\u5178\u95ee\u9898\u5206\u6790 \u00a9ntsc 2024 \u955c\u50cf \u4e0a\u6b21\u540c\u6b65\uff1a@2024/07/21</p> <p>\u7b97\u6cd5\u7ade\u8d5b\u4e00\u53e5\u8bdd\u89e3\u9898&amp;\u7ecf\u5178\u95ee\u9898\u5206\u6790 \u00a9ntsc 2024</p> <p></p> <p>\u539f\u540d\uff1a\u7b97\u6cd5\u7ade\u8d5b\u4e00\u53e5\u8bdd\u89e3\u9898&amp;\u7ecf\u5178\u95ee\u9898\u5206\u6790 \u00a9ntsc 2024</p> <p>\u5904\u7406\u8fdb\u5ea6\uff08\u4ec5\u4ec5\u5904\u7406\u4e86\u4f5c\u8005\u505a\u8fc7\u7684\u9898\u76ee\uff0c\u4e14\u4e0d\u4fdd\u8bc1\u987a\u5e8f\uff01\uff09 - \u7eff\uff1aP6824 - \u84dd\uff1aP1099</p> <p>\u81f4CSDN\u7f51\u53cb\uff1a \u672c\u6587\u7ae0\u4e0d\u5b9a\u671f\u66f4\u65b0\uff01\u6587\u7ae0\u94fe\u63a5\uff1ahttps://blog.csdn.net/hzx616599/article/details/139567004</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_1","title":"\u7ecf\u5178\u95ee\u9898\u5206\u6790","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_2","title":"\u57fa\u7840\u77e5\u8bc6\u4e0e\u7f16\u7a0b\u73af\u5883","text":"<ul> <li> <p>\u4e86\u89e3\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7684\u6027\u8d28\u6765\u8bbe\u8ba1\u7b97\u6cd5\u2192P1040</p> </li> <li> <p>\u6309\u4e8c\u8fdb\u5236\u6bcf\u4e00\u4f4d\u5206\u5f00\u7b97\u2192\u8bb0\u524d\u7f00\u5f02\u6216\u503cX[0...N]\uff0c\u4e00\u6bb5\u533a\u95f4[L, R]\u7684\u5f02\u6216\u503c\u5c31\u662fX[L-1] xor X[R]\u2192\u90a3\u4e48\u5c31\u662f\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u7684\u5f02\u6216\u503c\u662f1\uff0c\u90a3\u53ea\u9700\u8981\u7edf\u8ba1X[0...N]\u4e2d\u662f0\u548c1\u7684\u5206\u522b\u6709\u591a\u5c11\u4e2a\uff0c\u4e24\u4e2a\u4e2a\u6570\u76f8\u4e58\u5c31\u662f\u533a\u95f4\u4e2a\u6570\u3002\u2192P3917</p> </li> <li> <p>\u6bcf\u4e00\u4f4d\u62c6\u5f00\u2192\u5b9a\u4e49f_j\u4e3a\u4ee5a_j\u7ed3\u5c3e\u7684\u7b54\u6848\uff0cg_i\u4e3a\u5230a_j\u65f6\u7b2ci\u4f4d\u4e3a1\u7684\u957f\u5ea6\u2192P4310</p> </li> <li> <p>\u9884\u5904\u7406\u2192P8865</p> </li> <li> <p>\u6784\u9020\u4e00\u4e2ax\uff0c\u4f7f\u5f97\u6ee1\u8db3a_i<sup>\uff08\u5f02\u6216\uff09x&lt;k\u7684i\u6700\u591a\u2192\u5bf9\u6bcf\u4e2aa_i\u8003\u8651\uff0c\u53d1\u73b0\u4f7fa_i</sup>x&lt;k\u7684x\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u2192\u9010\u4f4d\u8003\u8651\uff0c\u6c42\u51fax\u7684\u533a\u95f4\uff0c\u76f8\u5f53\u4e8e\u4e00\u6761\u7ebf\u6bb5\u2192\u6c42\u51fa\u8986\u76d6\u7ebf\u6bb5\u6700\u591a\u7684\u90a3\u4e2ax\u5c31\u662f\u7b54\u6848\u2192P6824</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_3","title":"\u601d\u7ef4","text":"<ul> <li> <p>\u8003\u8651\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684\u8d21\u732e\u800c\u4e0d\u662f\u8003\u8651\u6bcf\u4e00\u79cd\u60c5\u51b5\u90a3\u4e2a\u6570\u5b57\u505a\u8d21\u732e\u2192mna.816/p4</p> </li> <li> <p>\u89c2\u5bdf\u6570\u636e\u8bbf\u95ee\uff0c\u53d1\u73b0\u4e00\u4e2a\u8303\u56f4\u5f88\u5c0f\u2192\u5c06\u8fd9\u4e2a\u6570\u636e\u4f5c\u4e3a\u6700\u5916\u5c42\u5faa\u73af\uff0c\u6bcf\u6b21\u8003\u8651\u8fd9\u4e2a\u6570\u636e\u53d6\u7279\u5b9a\u503c\u65f6\u7684\u7b54\u6848\u7684\u6c42\u89e3\u2192P1311</p> </li> <li> <p>\u6c42\u6700\u4f18\u5316\u4e00\u4e2a\u8ba1\u7b97\u5f0f\uff0c\u5e76\u4e14\u91cc\u9762\u6709\u4e00\u4e2a\u503c\u9700\u8981\u4f60\u6765\u786e\u5b9a\uff0c\u5e76\u4e14\u4e0d\u597d\u76f4\u63a5\u6c42\u2192\u4e8c\u5206\u2192\u4f18\u5316\u6bcf\u4e00\u6b21\u8ba1\u7b97\u8fc7\u7a0b\u2192O(n)\u6c42\u591a\u4e2a\u8be2\u95ee\u533a\u95f4\u5185&gt;m\u7684\u6570\u5b57\u7684\u4e2a\u6570\u4e4b\u548c\u2192\u5148\u628a\u2264m\u7684\u6570\u5b57\u8d4b0\uff0c\u7136\u540e\u8dd1\u524d\u7f00\u548c\uff0c\u518d\u5bf9\u6bcf\u4e2a\u8be2\u95eeO(1)\u5904\u7406\u2192P1314</p> </li> <li> <p>\u5c06\u5b57\u7b26\u4e32\u54c8\u5e0c\u540e\u79bb\u6563\u5316\u2192\u53cc\u6307\u9488\uff0c\u53f3\u7aef\u70b9\u4e0d\u65ad\u6269\u6563\uff08\u53f3\u79fb\uff09\uff0c\u5de6\u7aef\u70b9\u8d2a\u5fc3\u5730\u7f29\u5c0f\uff08\u53f3\u79fb\uff09\u2192P1381</p> </li> <li> <p>\u6b63\u786e\u8ba1\u7b97\u6c42\u56e0\u6570\u7684\u590d\u6742\u5ea6\uff08\u662fO(\\sqrt n)\u800c\u4e0d\u662fO(n)\uff09\u2192\u53d1\u73b0\u66b4\u529b\u53ef\u884c\u2192P1483</p> </li> <li> <p>\u8f6c\u5316\u4e3a\u6a21\u578b\u2192\u6c42\u96c6\u5408\u4e2d\u5c0f\u4e8ek\u7684\u6700\u5927\u503c\u548c\u5927\u4e8ek\u7684\u6700\u5c0f\u503c\u2192set\u2192P1503</p> </li> <li> <p>\u7b80\u5355\u7684\u6570\u5b66\u8d2a\u5fc3\u2192\u8fde\u63a51<sub>n\u52a0\u70ed\u7b2c1\u676f\uff0c\u518d\u8fde\u63a52</sub>n\u52a0\u70ed\u7b2c2\u676f\uff0c\u518d\u2026\u2026\u2192P1984</p> </li> <li> <p>\u7ed3\u8bba\u9898\u2192P2041</p> </li> <li> <p>\u9010\u4f4d\u8003\u8651\u540e\u8d2a\u5fc3\u53d6\u6bcf\u4e00\u4f4d\u7684\u6700\u5927\u503c\u2192P2114</p> </li> <li> <p>\u76f4\u63a5\u641c\u7d22\u4e0d\u884c\uff0c\u56e0\u4e3a\u53d1\u73b0m\u8f83\u5c0f\uff0c\u8003\u8651\u7ed3\u5408\u8d2a\u5fc3\u2192\u8d2a\u5fc3\u5148\u5206\u51fa\u6700\u77ed\u7684\u6728\u677f\u2192\u4e8c\u5206\u7b54\u6848\u2192\u641c\u7d22\u9a8c\u8bc1\u2192\u526a\u679d\u2192P2329</p> </li> <li> <p> \u8d2a\u5fc3\u7684\u7ebf\u6bb5\u8986\u76d6\u95ee\u9898\u2192\u7ebf\u6bb5\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\u540e\uff0c\u518d\u4ece\u5c0f\u5230\u5927\u5c06\u6bcf\u4e2a\u70b9\u6392\u5e8f\u2192P2887</p> </li> <li> <p>\u76f4\u63a5\u6a21\u62df\u2192\u5148\u628a\u6240\u6709\u725b\u7684\u9ad8\u5ea6\u8bbe\u4e3a\u6700\u9ad8\u503c\uff0c\u5982\u679c\u67d0\u4e24\u5934\u725b\u4e4b\u95f4\u80fd\u4e92\u76f8\u770b\u5230\u7684\u8bdd\uff0c\u90a3\u76f4\u63a5\u628a\u4e2d\u95f4\u8fd9\u4e9b\u725b\u7684\u9ad8\u5ea6\u90fd\u51cf\u4e00\u2192\u8bc1\u660e\u5408\u6cd5\uff1a\u552f\u4e00\u4e0d\u5408\u6cd5\u7684\u5c31\u662f\u7ed9\u51fa\u5173\u7cfb[a,b][c,d],\u4e14b&gt;c\uff0c\u90a3\u4e48\u6309\u4e0a\u9762\u6a21\u62df\u5c31\u4f1a\u4e0d\u6ee1\u8db3[a,b]\uff0c\u4f46\u662f\u53d1\u73b0\u8fd9\u79cd\u60c5\u51b5\u672c\u6765\u5c31\u65e0\u89e3\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u662f\u6b63\u786e\u7684\u2192P2879</p> </li> <li> <p>\u7ed3\u5408\u6570\u636e\u8303\u56f4\uff0c\u76f4\u63a5\u4f7f\u7528map\u8bb0\u5f55\u6bcf\u4e2a\u5355\u8bcd\u7684\u51fa\u73b0\u6587\u7ae0\uff0c\u89c4\u907f\u6b63\u89e3\u2192P3879</p> </li> <li> <p>\u5f53\u8d2a\u5fc3\u6709\u65f6\u4e0d\u80fd\u8bc1\u660e\u65f6\uff0c\u5c31\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\u591a\u7b97\u4e00\u70b9\u2192P4395\uff0c\u2014\u2014\u4e5f\u8bb8\u4f1a\u50cf\u53ea\u586b1\u6216\u80052\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u53ef\u80fd\u586b3\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u53ea\u586b1\\sim 20\u5373\u53ef\u3002</p> </li> <li> <p>\u7b49\u4ef7\u96c6\u5408\u95ee\u9898\u2192\u628a \u80fd\u591f\u88ab\u5176\u4ed6\u94b1\u51d1\u51fa\u6765\u7684\u94b1 \u7ed9\u7b5b\u6389\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u6211\u4eec\u5fc5\u987b\u8981\u4fdd\u7559\u7684\u9762\u503c\u2192P5020</p> </li> <li> <p>\u5408\u5e76\u679c\u5b50\u52a0\u5f3a\u7248\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u7684\u4e24\u5806\uff0c\u4e0d\u80fd\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff08log n\uff09\u2192\u7ef4\u62a4\u4e24\u4e2a\u9012\u589e\u961f\u5217,p,q\uff0cp\u4e3a\u539f\u679c\u5b50\u6876\u6392\u540e\u7684\u7ed3\u679c\u3002\u6bcf\u6b21\u4ece\u4e24\u4e2a\u961f\u5934\u6bd4\u8f83\u5e76\u53d6\u51fa\u4e24\u4e2a\u6700\u5c0f\u7684\uff0c\u7136\u540e\u653e\u5165q\u7684\u961f\u5c3e\u3002\u53ef\u4ee5\u4fdd\u8bc1\u5355\u8c03\u6027\u2192P6033</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#stl","title":"STL \u6a21\u677f","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_4","title":"\u6392\u5e8f\u7b97\u6cd5&amp;\u5206\u6cbb","text":"<ul> <li> <p>\u5728DAG\u4e2d\uff0c\u66f4\u65b0\u4e00\u4e2a\u70b9\u7684\u4fe1\u606f\u5982\u679c\u9700\u8981\u5148\u66f4\u65b0\u5176\u6765\u70b9\u2192\u62d3\u6251\u6392\u5e8f\u2192P1038</p> </li> <li> <p>\u4e00\u4e9b\u504f\u5e8f\u95ee\u9898\uff08\u975e\u8ba1\u6570\u7c7b\uff09\uff0c\u8003\u8651\u62d3\u6251\u6392\u5e8f\u8fdb\u884c\u987a\u5e8f\u786e\u5b9a\u2192\u8003\u8651\u4e0d\u540c\u60c5\u51b5\u53cd\u6620\u5728DAG\u4e2d\u7684\u60c5\u51b5\u2192\u4e00\u5b9a\u6709\u5e8f\uff1a\u5b58\u5728n\u957f\u94fe/\u9519\u8bef\uff1a\u6709\u73af\u2192P1347</p> </li> <li> <p>\u5206\u5c42\u95ee\u9898\u2192\u7ed9\u51fa\u4e00\u4e9b\u8282\u70b9\u7684\u5c42\u7ea7\u5173\u7cfb\uff0c\u8981\u6c42\u5206\u5c42\u2192P1983</p> </li> <li> <p>\u8003\u8651\u4f7f\u7528\u5206\u6cbb\u2192\u626b\u63cf\u5de6\u90e8\uff0c\u5c06\u7b54\u6848\u8bb0\u5f55\u5230\u6811\u72b6\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u626b\u63cf\u53f3\u90e8u\uff0c\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u53d6\u7b26\u5408\u8981\u6c42\u7684\u8303\u56f4\u7684\u533a\u95f4\u548c\u5373\u53ef\u2192\u6743\u503c\u6811\u72b6\u6570\u7ec4\u2192P5459</p> </li> <li> <p> cdq\u5206\u6cbb\u2192P5459</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_5","title":"\u641c\u7d22\u7b97\u6cd5","text":"<ul> <li> <p>\u6253\u8868\u2192P1549\uff0cP1790\uff08\u4e5f\u53ef\u4f7f\u7528\u641c\u7d22\u7a76\u6781\u4f18\u5316\uff0c\u63d2\u5934dp\uff09</p> </li> <li> <p>\\(O(2^{40})\\)\u7684\u641c\u7d22\u2192Meet in the middle\u2192P4799</p> </li> <li> <p>\u6570\u636e\u8303\u56f4\u5c0f\u7684\u65f6\u5019\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u641c\u7d22\uff08\u586b\u8868\uff09\u2192P1004</p> </li> <li> <p>\u6709\u4e9b\u65f6\u5019\u770b\u4e0a\u53bbn\u4e0d\u9002\u5408\u641c\u7d22\uff08e.g. n=50\uff09\uff0c\u4f46\u662f\u52a0\u4e0a\u526a\u679d\u4e5f\u8bb8\u5c31\u662f\u6b63\u89e3\u2192\u526a\u679d\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bc1\u660e\u548c\u8ba1\u7b97\u2192P1034</p> </li> <li> <p>\u5e38\u89c1\u6570\u77e9\u9635\u4e2a\u6570\u4f18\u5316\uff08n<sup>4\u53d8n</sup>3\uff09\u2192P1191</p> </li> <li> <p>\u7ed3\u5408\u8ba1\u7b97\u6027\u8d28\u8fdb\u884c\u526a\u679d\u2192P1092</p> </li> <li> <p>\u679a\u4e3e/\u641c\u7d22\u2192P1378\uff0cP1441\uff0cP1731\uff0cP1120\u3002P2476,P4537</p> </li> <li> <p>\u7ed3\u5408dfs\u7ee7\u7eed\u6811\u4e0a\u9012\u63a8\u2192f_{x,dep}=\\sum f_{v,dep-1}\u2192P3047</p> </li> <li> <p>bfs\u2192P3956\uff0cP5195</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_6","title":"\u56fe\u8bba\u7b97\u6cd5","text":"<ul> <li> <p>\u5e94\u7528\u5206\u5c42\u56fe\u601d\u60f3\u3010\u6a21\u578b\u3011\u2192P1073</p> </li> <li> <p> \u8bb0\u5f55\u9644\u52a0\u4fe1\u606f\u7684\u6700\u77ed\u8def\u2192P1078\uff0cP1144\uff0cP1608\uff0cP2047</p> </li> <li> <p>\u7ed9\u5b9a\u5173\u7cfb\u6c42\u5c42\u7ea7\u6570\u6700\u5c0f\u503c\u2192\u5148\u6574\u7406\u51fa\u7ea6\u675f\uff08e.g. A\u5728B\u4e4b\u4e0a\uff09\uff0c\u8fde\u6709\u5411\u8fb9\u2192\u6c42\u6700\u957f\u94fe\u2192\u62d3\u6251\u6392\u5e8f\u2192P1983</p> </li> <li> <p>\u603b\u7ed3\u51fa\u6700\u540e\u7684\u56fe\u7684\u7279\u70b9\u2192\u751f\u6210\u6811\u2192\u6700\u5927\u751f\u6210\u6811\u2192\u8bc1\u660e\u67d0\u4e9b\u5f88\u96be\u89e3\u51b3\u7684\u60c5\u51b5\u4e0d\u5b58\u5728\u2192\u7b80\u5355\u89e3\u51b3\u2192P1265</p> </li> <li> <p>\u7ed3\u5408\u6570\u636e\u8303\u56f4\uff0c\u8003\u5bdffloyd\u7b97\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u7684\u5185\u5bb9\u2192\u6c42\u51fa\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u2192\u679a\u4e3e\u914d\u5bf9\u2192\u8003\u5bdf\u7b54\u6848\u7684\u51e0\u4e2a\u60c5\u51b5\u2192P1522</p> </li> <li> <p>\u9884\u5904\u7406\u56fe\u540e\u518d\u8dd1\u6700\u77ed\u8def\u2192\u5220\u9664\u4e0d\u5408\u6cd5\u7684\u70b9\u2192P2296</p> </li> <li> <p>\u8003\u8651\u5230\u4e00\u4e2a\u70b9\u8981\u662f\u6709\u51fa\u5ea6\u5230v\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u6709\u4ecev\u6765\u7684\u5165\u5ea6\uff0c\u8fd9\u4e2a\u70b9\u624d\u53ef\u80fd\u5168\u5458\u53ef\u8fbe\u2192\u70b9\u5c5e\u4e8e\u5f3a\u8fde\u901a\u5206\u91cf\u2192\u5f3a\u8fde\u901a\u5206\u91cf\u627e\u5230\u552f\u4e00\u4e00\u4e2a\u6ca1\u6709\u51fa\u5ea6\u7684\u96c6\u5408\uff0c\u96c6\u5408\u5185\u6240\u6709\u70b9\u90fd\u5408\u6cd5\u2192\u5982\u679c\u6709\u4e24\u4e2a\u96c6\u5408\u6ee1\u8db3\uff0c\u5219\u65e0\u7b54\u6848\u3002\u2192P2341</p> </li> <li> <p>\u5c06\u51b3\u7b56\u8f6c\u5316\u4f4d\u56fe\u8bba\u6a21\u578b\u2192\u7559\u5728\u539f\u5730\uff1a\u81ea\u73af\uff0c\u81ea\u7206\uff1a\u8d85\u7ea7\u6c47\u70b9\u2192\u4ecefloyd\u7b97\u6cd5\u7684\u89d2\u5ea6\u8003\u8651\uff0cA^k\uff08A\u4e3a\u90bb\u63a5\u77e9\u9635\uff09\u7684\u7b2ci\u884c\u7b2cj\u5217\u7684\u6570\u5b57\u542b\u4e49\u662f\u4ecei\u5230j\u7ecf\u8fc7k\u6b65\u7684\u8def\u5f84\u65b9\u6848\u603b\u6570\u2192\u77e9\u9635\u5feb\u901f\u5e42\u2192\u7d2f\u52a0A_{1,i}\u2192P3758\uff0cP5789</p> </li> <li> <p>\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u2192P3386</p> </li> <li> <p>Tarjan\u2192P3387,P3388,P2863</p> </li> <li> <p>Tarjan\u5904\u7406\u94fe\u548c\u73af\u2192P2921</p> </li> <li> <p>\u5224\u65adx\u548cy\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3ak\u7684\u975e\u7b80\u5355\u8def\u5f84\uff08\u65e0\u73af\uff09\u2192\u8def\u5f84\u957f\u5ea6\u53ef\u4ee5\u662f\\(l+2k,k\\in \\N\\)\uff0cl\u4e3a\u6700\u77ed\u8ddd\u79bb\u2192P5663</p> </li> <li> <p>\u5dee\u5206\u7ea6\u675f\u2192\u5c06\u4e0d\u7b49\u5f0f\u6761\u4ef6\u8f6c\u5316\u4e3a\u56fe\uff08x_i\u2264x_j+d_k\uff0c\u5c31\u6309\u7167\u6700\u52a3\u7684\u5efa\u8fb9\uff0c\u628ax\u770b\u6210\u70b9\uff0cx\u7684\u503c\u770b\u6210dis\uff0c\u6240\u4ee5\u5c31\u5efax_i\u2192x_j,w=d_k\uff09\u6700\u540e\u8dd1\u6700\u77ed\u8def\uff0c\u5f97\u5230x\u7684\u89e3\u3002\u5982\u679c\u6709\u8d1f\u73af\uff0c\u5219\u65e0\u89e3\uff0c\u53ef\u4ee5\u8dd1\u51fa\u6765\uff0c\u5c31\u6709\u89e3\u2192P5960</p> </li> <li> <p>P5663\u2192\u8003\u8651\u5728\u4e00\u6761\u8fb9\u4e0a\u5f80\u8fd4\u5947\u5076\u6027\u4e0d\u53d8\u2192\u5bf9\u8981\u6c42\u7684\u9636\u6bb5\u5206\u5947\u5076\u8ba8\u8bba\u2192\u6c42\u51fa1\u5230\u5176\u5b83\u8282\u70b9\u7684\u6700\u77ed\u5947/\u5076\u6570\u957f\u5ea6\u8def\u5f84\uff0cO(1)\u56de\u7b54</p> </li> <li> <p>\u5bf9\u6709\u5927\u91cf\u8fb9\u6743\u76f8\u540c\uff08\u5206\u7ec4\uff09\u7684\u56fe\u5efa\u6700\u5c0f\u751f\u6210\u6811\u2192\u8003\u8651kruskal\u672c\u8d28\uff1a\u4e0d\u65ad\u53d6\u51fa\u8fb9\u6743\u6700\u5c0f\u7684\u8fb9\u4e14\u4fdd\u8bc1\u6ca1\u6709\u73af\u51fa\u73b0\u2192\u4e00\u6b21\u53d6\u591a\u6761\u8fb9</p> </li> <li> <p>\u6bcf\u6b21\u6784\u9020\u4e00\u6761\u8fb9\uff08\u635f\u574f\u6216\u8005\u5b8c\u597d\uff09\uff0c\u4f7f\u5f97\u6700\u540e\u4e00\u6761\u8fb9\u6784\u9020\u51fa\u6765\u540e\u624d\u77e5\u9053\u56fe\u662f\u5426\u88ab\u5b8c\u597d\u8fb9\u8054\u901a\u2192\u9996\u5148\u5fc5\u987b\u662f\u751f\u6210\u6811\uff0c\u5e76\u4e14\u6700\u540e\u88ab\u8be2\u95ee\u5230\u7684\u8fb9\u4e00\u5b9a\u8981\u662f\u6811\u8fb9\uff0c\u5e76\u4e14\u6700\u540e\u4e00\u6761\u8fb9\u7684\u5efa\u7acb\u8981\u5b9e\u73b0\u8fd9\u9897\u751f\u6210\u6811\u800c\u4e0d\u80fd\u4e0d\u8054\u901a\u2192\u8ba9\u6bcf\u4e2a\u70b9\u6700\u540e\u88ab\u6784\u9020\u7684\u8fde\u8fb9\u4e3a\u6811\u8fb9\u2192\u53ef\u4ee5\u8bc1\u660e\u662f\u751f\u6210\u6811\u4e14\u7b26\u5408\u8981\u6c42\u2192P5884</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_7","title":"\u7ebf\u6027\u7ed3\u6784","text":"<ul> <li>\u5355\u8c03\u961f\u5217\u4f18\u5316dp\u2192P1725</li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_8","title":"\u96c6\u5408\u4e0e\u68ee\u6797","text":"<ul> <li> <p>\u4f7f\u7528\u5e76\u67e5\u96c6\u989d\u5916\u7ef4\u62a4\u96c6\u5408\u4fe1\u606f\u2192\u5c06\u96c6\u5408\u4fe1\u606f\u7edf\u4e00\u6574\u7406\u81f3\u67d0\u4e00\u4e2a\u96c6\u5408\u7684\u4ee3\u8868\u5143\u7d20\u4e0a\u53bb\uff0c\u6ce8\u610f\u6e05\u7a7a\u8fc7\u671f\u7684\u4ee3\u8868\u5143\u7d20\u2192P1196</p> </li> <li> <p>\u65ad\u8fb9\u7ef4\u62a4\u8fde\u901a\u5757\u4e2a\u6570\u2192\u5316\u65ad\u8fb9\u4e3a\u52a0\u8fb9\u2192P1197</p> </li> <li> <p> \u6269\u5c55\u57df\u5e76\u67e5\u96c6\u2192P1525\uff0cP1892\uff0cP2024</p> </li> <li> <p>\u7b80\u5355\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u5148\u5904\u7406\u76f8\u7b49\u7684\u7ea6\u675f\u2192P1982</p> </li> <li> <p>\u3001\u5148\u89e3\u51b3\u73af\u7684\u60c5\u51b5\u2192\u7f29\u70b9\u2192\u7136\u540e\u62d3\u6251\u6392\u5e8f\u2192P1262</p> </li> <li> <p>\u533a\u95f42\u53cd\u8f6c\u6c42\u548c\u95ee\u9898\u2192\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f02\u6216tag\u2192P3870</p> </li> <li> <p>\u6811\u4e0a\u7684\u62ec\u53f7\u6808\u95ee\u9898\u2192\u62ec\u53f7\u5e8f\u5217\u8ba1\u6570\u95ee\u9898\u2192\u51fa\u73b0\u4e00\u4e2a<code>)</code>\uff0c\u5b83\u53ef\u4ee5\u548c\u4e4b\u524d\u7684\u5f62\u6210\u4e00\u4e2a<code>(..)</code>\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u8fd9\u4e2a\u5e8f\u5217\u8fd8\u53ef\u4ee5\u548c\u524d\u9762\u7684\u4e00\u4e9b\u5e8f\u5217\u5e76\u5217\uff0c\u5f62\u6210\u66f4\u591a\u5408\u6cd5\u5e8f\u5217\u2192\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6ex\u8bb0\u5f55\u4ee5\u5176\u4e3a\u7ed3\u5c3e\u7684\u62ec\u53f7\u5e8f\u5217\u4e2a\u6570c_x\uff0c\u4e0b\u4e00\u6b21\u82e5\u4ee5son(x)\u4e3a\u5f00\u5934\u5f62\u6210\u4e86\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u6709c_x+1\u4e2a\u5e8f\u5217\u88ab\u5f62\u6210\uff0c\u5e76\u4e14\u7ef4\u62a4c\u6570\u7ec4\u2192P5658</p> </li> <li> <p>\u7ed9\u51fa\u82e5\u5e72\u6761\u4ef6\uff1a[l,r]\u4e4b\u548c\u4e3a\u5947\u6570/\u5076\u6570\uff0c\u6c42\u6700\u65e9\u77db\u76fe\u2192\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u2192\u7ef4\u62a4\u5de6\u53f3\u7aef\u70b9\u5904\u524d\u7f00\u548c\u7684\u5947\u5076\u6027\u2192\u82e5\u7ed9\u51fa\u533a\u95f4[l,r]\u4e3a\u5947\u6570\uff0c\u90a3\u4e48pre_l\uff0cpre_r\u5e94\u8be5\u5728\u4e0d\u540c\u5e76\u67e5\u96c6\u5185\uff0c\u68c0\u67e5\u77db\u76fe\uff1b\u53e6\u5916\u4e00\u79cd\u7c7b\u4f3c\u3002\u2192P5937</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_9","title":"\u6811\u5f62\u7ed3\u6784","text":"<ul> <li> <p>\u7ef4\u62a4\u6811\u94fe\u4e0a\u7684\u4fe1\u606f\u2192\u6811\u4e0a\u500d\u589e\uff0c\u6811\u5256</p> </li> <li> <p>\u7ef4\u62a4\u5b50\u6811\u4fe1\u606f\u2192dfn\u7ebf\u6bb5\u6811</p> </li> <li> <p>\u4ece\u9898\u76ee\u4e2d\u6574\u7406\u51fa\u6811\u7684\u6027\u8d28\u2192\u8bbe\u8ba1\u6811\u5f62dp\u8fdb\u884c\u6700\u4f18\u65b9\u6848\u6c42\u89e3\u2192P1131</p> </li> <li> <p>\u7ed3\u5408\u6570\u636e\u8303\u56f4\uff0c\u9884\u4f30\u590d\u6742\u5ea6\u2192\u641c\u7d22\u2192\u8bbe\u8ba1\u641c\u7d22\u2192\u56e0\u4e3a\u6bcf\u4e00\u5c42\u53ea\u80fd\u5207\u65ad\u4e00\u4e2a\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\u641c\u7d22\u5176\u6700\u4f18\u7684\u5207\u65ad\u65b9\u5f0f\uff08\u4f7f\u7528\u56de\u6eaf\u7684\u6570\u636e\u6765\u8d2a\u5fc3\u9009\u62e9\uff09\u2192P1041</p> </li> <li> <p>\u7406\u6e05\u9898\u610f\u2192\u6574\u7406\u51fa\u7b54\u6848\u7684\u51e0\u79cd\u6765\u6e90/\u60c5\u51b5\u2192\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u60c5\u51b5\u72ec\u7acb\u601d\u8003\u505a\u6cd5\uff0c\u6700\u540e\u7ec4\u5408\u8d77\u6765\u2192P1099\u2190\u7b54\u6848\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u6765\u81ea\u76f4\u5f84\u4e24\u7aef\uff0c\u6765\u81ea\u6700\u957f\u7684\u4fa7\u94fe\u3002\u5e76\u4e14\u6765\u81ea\u6700\u957f\u7684\u4fa7\u94fe\u7684\u90a3\u4e2a\u7b54\u6848\u53ea\u9700\u8981\u8ba1\u7b97\u4fa7\u94fe\u7aef\u70b9\u5230\u76f4\u5f84\u7684\u8ddd\u79bb\u5373\u53ef\u3002\u4e0d\u9700\u8981\u8003\u8651\u4fa7\u94fe+\u4e00\u90e8\u5206\u76f4\u5f84\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u4f5c\u4e3a\u7b54\u6848\uff0c\u90a3\u4e48\u76f4\u5f84\u5c31\u8981\u6539\u4e86\uff01</p> </li> <li> <p>\u8003\u8651\u6bcf\u4e00\u4e2a\u8def\u7ebf\u5bf9\u90a3\u4e9b\u70b9\u6709\u8d21\u732e\u2192\u6811\u4e0a\u8def\u5f84\u52a0\u2192\u6811\u4e0a\u524d\u7f00\u548c\u2192P3128</p> </li> <li> <p>\u5224\u65ad\u6811\u4e0a\u4e24\u6761\u8def\u5f84\u662f\u5426\u6709\u4ea4\u2192\u5206\u7c7b\u8ba8\u8bba\u2192\u6c42lca\u2192P3398</p> </li> <li> <p>\u6c42\u6811\u4e0a\u6240\u6709\u4e00\u6bb5\u4e3a\u6839\u8282\u70b9\u7684\u4e32\u4e0a\u7684\u5408\u6cd5\u62ec\u53f7\u4e32\u6570\u91cf\u2192dfs\u4e2d\u7ef4\u62a4\u6808\u2192P5658</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_10","title":"\u6570\u636e\u7ed3\u6784","text":"<ul> <li> <p>\u52a8\u6001\u7ef4\u62a4\u6570\u5b57\u5e8f\u5217\u4fe1\u606f\u2192\u6743\u503c\u7ebf\u6bb5\u6811\u2192P1168</p> </li> <li> <p>\u7ebf\u6bb5\u6811\u6a21\u677f\u2192P1198\uff0cP1253,P3372,P3373</p> </li> <li> <p>\u504f\u5e8f\u95ee\u9898\uff0c\u53c8\u5e26\u6709\u4e00\u70b9dp\uff08\u4e0a\u5347\u5e8f\u5217\uff09\u2192\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316dp\u2192\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u8f6c\u79fb\u2192P1637</p> </li> <li> <p>\u5e73\u8861\u6811\u67e5\u8be2\u5bfb\u503c\u524d\u9a71\u548c\u540e\u7ee7\u2192P1110</p> </li> <li> <p>\u7ef4\u62a4\u533a\u95f4\u6781\u503c+\u6b63\u8d1f\u6027\u5206\u8ba8\u2192P8818</p> </li> <li> <p>\u6811\u72b6\u6570\u7ec4\u2192P5094 </p> </li> <li> <p>\u7edf\u8ba1\u533a\u95f4\u548c\u5728[l,r]\u7684\u533a\u95f4\u4e2a\u6570\u2192\u8003\u8651\u7c7b\u4f3c\u9006\u5e8f\u5bf9\u7684\u6811\u72b6\u6570\u7ec4\u505a\u6cd5\uff0c\u53f3\u7aef\u70b9\u626b\u53f3\u8fb9\uff0c\u5de6\u7aef\u70b9O(1)\u7edf\u8ba1\u2192\u79bb\u6563\u5316\u2192P5459</p> </li> <li> <p>\u53ef\u4ee5\u4f7f\u7528multiset\u6a21\u62df\u4e8c\u53c9\u641c\u7d22\u6811\u2192P5076</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_11","title":"\u7b97\u6cd5\u7b56\u7565","text":"<ul> <li>\u7ef4\u62a44\u6307\u94882\u533a\u95f4\u4fe1\u606f\u2192\u83ab\u961f\uff0c\u5c064\u6307\u9488\u62c6\u4e3a2\u6307\u9488\u53ca\u591a\u4e2a\u8be2\u95ee\u2192P5268</li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_12","title":"\u5b57\u7b26\u4e32\u7b97\u6cd5 \u54c8\u5e0c\u8868","text":"<ul> <li> <p> kmp\u2192P3375</p> </li> <li> <p>\u5b57\u5178\u6811\u2192\u5efa\u6811\u6280\u5de7\u4e0e\u6811\u4e0a\u5339\u914d\u2192P2922</p> </li> <li> <p>\u5b57\u7b26\u4e32ss\u7684**\u6700\u5c0f\u5faa\u73af\u5b50\u4e32**\uff0c\u5c31\u662fss\u7684**\u6700\u5927\u516c\u5171\u524d\u540e\u7f00\u2192**P4391</p> </li> <li> <p>\u6811\u54c8\u5e0c\uff08\u6811\u540c\u6784\uff09\u2192P5018</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_13","title":"\u52a8\u6001\u89c4\u5212","text":"<ul> <li> <p>\u7528\u201c\u975e\u6cd5\u60c5\u51b5\u4e00\u5b9a\u66f4\u52a3\u201d\u6765\u6d88\u53bb\u9700\u8981\u8003\u8651\u975e\u6cd5\u7684\u60c5\u51b5\u2192P1006</p> </li> <li> <p>dp\u4e0d\u5c31\u662f\u679a\u4e3e\u60c5\u51b5\u5e76\u9009\u6700\u4f18\u5417\uff1f\u2192P1040</p> </li> <li> <p>\u65ad\u73af\u4e3a\u94fe\u2192P1043\uff0cP1063</p> </li> <li> <p>\u9898\u76ee\u4e2d\u6709\u660e\u663e\u7684\u201c\u5408\u5e76\u201d\u6d41\u7a0b\uff0c\u5219\u8003\u8651\u533a\u95f4dp\u2192P1063\uff0cP1880\uff08\u4e0e\u8d2a\u5fc3\u7684\u90a3\u9053\u9898\u533a\u5206\uff09\uff0cP1220\uff0cP3146</p> </li> <li> <p>\u4f9d\u8d56\u80cc\u5305\u55ef\u53ef\u4ee5\u770b\u6210\u6811\u5f62dp\u6765\u505a\u2192P2014\uff0c\u5982\u9644\u4ef6\u6570\u91cf\u5f88\u5c11\u5219\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u4e3b\u4ef6\u548c\u9644\u4ef6\u7684\u914d\u5bf9\u60c5\u51b5\u5e76\u4f5c\u4e3a\u4e00\u4e2a\u7269\u54c1\u7684\u591a\u79cd\u60c5\u51b5\u3002\u5f53\u9047\u5230\u4e00\u4e2a\u7269\u54c1\u6709\u591a\u4e2a\u6321\u4f4d\u65f6\u7684\u80cc\u5305\u95ee\u9898\u4e5f\u53ef\u4ee5\u53c2\u8003\u672c\u9898\u2192P1064</p> </li> <li> <p>\u4ece\u9898\u76ee\u4fe1\u606f\u4e2d\u6784\u9020\u51fa\u80cc\u5305\uff08f_{i,j}\uff09\u7684\u7269\u54c1(i)\u53ca\u4e24\u4e2a\u7ef4\u5ea6\uff08\u4ef7\u503c(f)\u548c\u5bb9\u91cf(j)\uff09\u2192P1156\uff0cP1282,P5322</p> </li> <li> <p>\u8003\u8651\u6811\u5f62dp\u5e76\u8003\u8651\u590d\u6742\u5ea6\u2192P1273</p> </li> <li> <p> \u4e3b\u8981\u8003\u9a8cdp\u8f6c\u79fb\u7684\u8bbe\u8ba1\u4ee5\u53cadp\u4f18\u5316\u2192\u601d\u7ef4\u2192P1070</p> </li> <li> <p>\u4e00\u5f00\u59cb\u8003\u8651\u8d2a\u5fc3\u2192\u7ed9\u5b9a\u65b9\u6848\u8ba1\u7b97\u7b54\u6848\u5f88\u5feb\u2192\u4e0d\u597d\u5b9e\u73b0\uff0c\u6240\u4ee5\u4f7f\u7528\u641c\u7d22\uff08\u8ba1\u7b97\u6bcf\u4e00\u79cd\u53ef\u884c\u60c5\u51b5\uff09\u2192\u4f7f\u7528dp\u5b9e\u73b0\u8bb0\u5fc6\u5316\u641c\u7d22\u2192\u538b\u7ef4\u4f18\u5316\u2192P1284</p> <ul> <li>\u671f\u671bdp\u2192\u5f97\u51fa\u6982\u7387\u7684\u8ba1\u7b97\u5f0f\u2192\u4f7f\u7528dp\u6c42\u51fa\u8ba1\u7b97\u5f0f\u4e2d\u7684\u503c\u5e76\u8ba1\u7b97\u2192\u672c\u9898\uff1a\u7b2ci\u9898\u5bf9\u7684\u6982\u7387=i-1\u9898\u7b54\u6848=i\u9898\u7b54\u6848\u2192P1297\u2192\u5176\u5b83\u9898\u76ee\uff1aP2111</li> </ul> </li> <li> <p>\u6811\u5f62dp\uff0c\u6700\u5927\u6743\u72ec\u7acb\u96c6\u2192P1352</p> </li> <li> <p>\u7b80\u5355\u6811\u5f62dp\u2192P2015\uff0cP2016,P2585</p> </li> <li> <p>\u975e\u5e38\u89c4\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u2192\u8f6c\u5316\u4e3a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u2192P1439</p> </li> <li> <p>\u8bb0\u5fc6\u5316\u641c\u7d22\uff08dp\u72b6\u6001\u8bbe\u8ba1\uff09\u2192P1541</p> </li> <li> <p>\u6570\u4f4ddp\u2192\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\uff0c\u9010\u4f4d\u8003\u8651\u975e\u9650\u5236\uff0c\u9012\u5f52\u975e\u9650\u5236\u2192P1836,P2602\uff0cP4999</p> </li> <li> <p>\u5e26\u65b9\u6848\u8f93\u51fa\u7684\u7b80\u5355dp\u2192P1854</p> </li> <li> <p>\u62bd\u8c61\u51fa\u6a21\u578b\u2192\u8f6c\u5316\u4e3a\u80cc\u5305dp\u2192P1941</p> </li> <li> <p>dp\u72b6\u6001\u7684\u8bbe\u8ba1\u2192\u5728\u8bbe\u8ba1dp\u72b6\u6001\u65f6\uff0c\u8003\u8651\u5982\u4f55\u4f7f\u7528\u6700\u5c11\u7684\u72b6\u6001\u8868\u73b0\u51fa\u6211\u4eec\u6240\u6709\u9700\u8981\u7684\u4fe1\u606f\u2192f_{i,j}\u8868\u793a\u8003\u8651\u4e86\u524di\u4e2a\u4eba\uff0c1\u5176\u4e2d\u5728\u7a97\u53e31\u6253\u83dc\u7684\u603b\u65f6\u95f4\u4e3at\u65f6\u5b8c\u6210\u6240\u6709\u6d3b\u52a8\u7684\u603b\u7528\u65f6\u2192P2577</p> </li> <li> <p>\u67e5\u770b\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u53ef\u4ee5O(nmk)\u2192\u5b9a\u4e49f_{i,j,k}\u4e3aS_{1\u2192i}\u4e0eT_{1\u2192j}\u5339\u914d\u4e14\u5206\u4e3ak\u5757\u2192\u5faa\u73afi,j,k\uff0c\u8981\u6c42\u5feb\u901f\u5224\u65adS,T\u4e2d\u4e24\u4e2a\u7247\u6bb5\u80fd\u5426\u5339\u914d\u2192\u9884\u5904\u7406g_{i,j,k}\u4e3aS_i,T_j\u7ed3\u5c3e\u7684\u4e24\u4e2a\u957f\u5ea6\u4e3ak\u7684\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c\u2192P2679</p> </li> <li> <p>\u5c0f\u89c4\u6a21\u6700\u4f18\u5206\u7ec4\u95ee\u9898\u2192\u72b6\u6001\u538b\u7f29\u2192f[i]\u4ee3\u8868\u5f53\u524d\u72b6\u6001\u4e3ai\u65f6\u6700\u5c0f\u7684\u5206\u7ec4\u6570\u2192P3052</p> </li> <li> <p> \u533a\u95f4dp\u8f6c\u79fb\u5f0f\u7684\u63a8\u5bfc\u2192P3205</p> </li> <li> <p> \u6362\u6839dp\u2192P2986\uff0cP3478</p> </li> <li> <p>\u6811\u5f62dp\u2192\u8003\u8651\u5230\u6709\u4ee5\u53ca\u67d3\u8272\u7684\uff0c\u6240\u4ee5\u5728dp\u65f6\u780d\u6389\u4e0d\u7b26\u5408\u7684f\u503c\u2192P4084</p> </li> <li> <p>\u7c7b\u4f3c\u62ec\u53f7\u5339\u914d\u7684\uff08\u5982\u51b3\u7b56\u4e3a\u6269\u5c55\u4e00\u8fb9/\u540c\u65f6\u6269\u5c55\u4e24\u8fb9\uff09\u2192P4170</p> <ul> <li>f_{i,j}\u5b9a\u4e49\u4e3a\u4fdd\u7559\u7b2ci\u4e2a\u70b9\u5854\uff0c\u5dee\u503c\u4e3aj\u7684\u65b9\u6848\u6570,\u679a\u4e3e\u4e0a\u4e00\u4e2a\u4fdd\u7559\u7684\u5854\u2192P4933</li> </ul> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_14","title":"\u6570\u5b66\u4e0e\u5176\u4ed6","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_15","title":"\u521d\u7b49\u6570\u5b66","text":"<ul> <li> <p>\u603b\u7ed3\u51fa\u6027\u8d28\u6765\u4f18\u5316\u679a\u4e3e\u7684\u590d\u6742\u5ea6\u2192P1072</p> </li> <li> <p>\u8981\u52e4\u4e8e\u63a8\u5bfc\u5f0f\u5b50\u2192\u63a8\u5bfc\u540e\u5f97\u51fa\u8d2a\u5fc3\u7b97\u6cd5\u800c\u4e0d\u662f\u4e00\u5f00\u59cb\u9009\u62e9dp\u2192P1080</p> </li> <li> <p>\u56e0\u5b50\u548c\u7684\u76f8\u5173\u6027\u8d28\u2192\u56e0\u5b50\u548c=\\(\\prod_j( \\sum_{i(0~k)} p_j^i)\\)\u2192P1593</p> </li> <li> <p>\u7ed9\u51fa\u6570\u5217\u9012\u63a8\u516c\u5f0f\u5feb\u901f\u6c42\u7b2cK\u9879\u76ee\uff08K\u5f88\u5927\uff09\u2192\u77e9\u9635\u5feb\u901f\u5e42\u2192\u7279\u6b8a\u60c5\u51b5\u8fd8\u8981\u4f7f\u7528\u9f9f\u901f\u4e58\u2192P2044</p> </li> <li> <p>\u6570\u5b66\u63a8\u5bfc\u7ea6\u675f\u4f18\u5316\u679a\u4e3e\u2192\u524d\u7f00\u548c\u4f18\u5316\u65b9\u6848\u7edf\u8ba1\u2192P2119</p> </li> <li> <p>\u63a8\u5bfc\u6570\u5b66\u89c4\u5f8b\u2192\u4e24\u4e2a\u70b9\u4e00\u8d77\u5411\u4e0a\u8d70\u2192\u7531\u6570\u5b66\u63a8\u5bfc\u5feb\u901f\u5f97\u51fa\u4e00\u4e2a\u70b9\u7684\u7956\u5148\u7f16\u53f7\u2192\u6a21\u62df\u4e0a\u8df3\u2192P3938</p> </li> <li> <p> \u671f\u671bdp\u7684\u9006\u63a8\u6cd5\u2192P4316</p> </li> <li> <p>\u9012\u63a8\u9006\u5143\u5feb\u901f\u8ba1\u7b97\u2192P5431</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_16","title":"\u521d\u7b49\u6570\u8bba","text":"<ul> <li> <p> \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u53d8\u5f62\u4e0e\u7406\u89e3\u2192P1082</p> </li> <li> <p> \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u2192P5656</p> </li> <li> <p>\u77e9\u9635\u4e58\u6cd5\u2192P1349\uff0cP1962\uff0c\u6269\u5c55\u77e9\u9635\u4e58\u6cd5\u2192P1939</p> </li> <li> <p> \u540c\u4f59\u65b9\u7a0b\u7ec4\u7684\u6c42\u89e3\u2192P1516,P2613</p> </li> <li> <p>\u5148\u5199\u51faf\u7684\u9012\u63a8\u5f0f\u2192\u77e9\u9635\u4f18\u5316\u2192P5789</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_17","title":"\u79bb\u6563\u4e0e\u7ec4\u5408\u6570\u5b66","text":"<ul> <li> <p>\u8003\u8651\u5212\u5206\u95ee\u9898\u4e3a\u5b50\u95ee\u9898\u2192\u8003\u8651\u9012\u63a8\u516c\u5f0f\u2192\u5361\u7279\u5170\u6570\u2192P2532</p> </li> <li> <p>\u6570\u636e\u8303\u56f4\u5141\u8bb8\u6768\u8f89\u4e09\u89d2\u9012\u63a8\u2192\u8003\u8651\u7b54\u6848\u7684\u9012\u63a8\u5f0f\u2192\u7406\u89e3\u7ec4\u5408\u6570\u7684\u9012\u63a8\u5f0f\u2192<code>ans[i][j]=ans[i-1][j]+ans[i][j-1]-ans[i-1][j-1]; if(c[i][j]%k==0)ans[i][j]++;</code>\u2192P2822</p> </li> <li> <p>\u7b80\u5355\u7ec4\u5408\u2192\u53d1\u73b0\u6ca1\u6709\u53d6\u6a21\uff0c\u9700\u8981\u9ad8\u7cbe\u5ea6\u2192P3223</p> </li> <li> <p>Lucas \u5b9a\u7406\u2192P3807</p> </li> <li> <p>\u7c7b\u4f3c\u6570\u4f4ddp\u7684\u9010\u4f4d\u8003\u8651\u2192\u7ec4\u5408\u6570\u8ba1\u7b97\u65b9\u6848\u2192P5367</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_18","title":"\u7ebf\u6027\u4ee3\u6570","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_19","title":"\u9ad8\u7b49\u6570\u5b66","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_20","title":"\u6700\u4f18\u5316","text":"<ul> <li> <p> \u535a\u5f08\u8bba\u2192P1247\uff0cP2197</p> </li> <li> <p> \u821e\u8e48\u94fe\u53ca\u5176\u53d8\u5f62\u2192P1074</p> </li> <li> <p> \u4e00\u4e2a\u5355\u8c03\u961f\u5217\u2192P3522</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_21","title":"\u8ba1\u7b97\u51e0\u4f55","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E4%B8%80%E5%8F%A5%E8%AF%9D%E8%A7%A3%E9%A2%98/#_22","title":"\u4fe1\u606f\u8bba","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/","title":"\u7b97\u6cd5\u5feb\u95ea","text":"<p>\u7b97\u6cd5\u5feb\u95ea \u4e00\u9053\u9898\u5feb\u901f\u56de\u987e\u6a21\u677f</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_1","title":"\u7b97\u6cd5\u5feb\u95ea \u4e00\u9053\u9898\u5feb\u901f\u56de\u987e\u6a21\u677f","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#day1","title":"day1","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_2","title":"\u25bc \u5feb\u8bfb\u5feb\u5199","text":"<pre><code>std::ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_3","title":"\u25bc \u6700\u77ed\u8def\u95ee\u9898","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#dijkstra-usaco09oct-heat-wave-g","title":"dijkstra\u6a21\u677f | [USACO09OCT] Heat Wave G","text":"<p>\u6709\u4e00\u4e2a \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8bf7\u6c42\u51fa\u4ece \\(s\\) \u5230 \\(t\\) \u7684\u6700\u77ed\u8def\u957f\u5ea6\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n \\le 2500\\)\uff0c\\(1\\le m \\le 6200\\)\uff0c\\(1\\le w \\le 1000\\)\u3002</p> <p>\u3010\u6837\u4f8b\u8bf4\u660e\u3011 \\(5 \\to 6 \\to 1 \\to 4\\) \u4e3a\u6700\u77ed\u8def\uff0c\u957f\u5ea6\u4e3a \\(3+1+3 = 7\\)\u3002</p> <p>dijkstra</p> <p>\u9519\u8bef\u5199\u6cd5\uff08\u72af\u9519 \u8fd9\u91cc\uff01\uff09</p> <pre><code>void djstr(int s){\n    //\u539f\u96c6\u5408V\uff0c\u6700\u77ed\u8def\u96c6\u5408S\n    priority_queue&lt;pii&gt; pq;\n    for(int i=1;i&lt;=n;i++)dis[i]=INF;\n    dis[s]=0;\n    pq.push(mp(-dis[s],s));\n    while(pq.size()){\n        int u=pq.top().ps;\n        pq.pop();\n\n        for(auto [v,w]:e[u]){\n            if(vis[v])continue;//\u5df2\u7ecf\u5728S\u4e2d\n            if(dis[v]&gt;dis[u]+w){\n                dis[v]=dis[u]+w;\n                vis[v]=1;//&lt;-here\n                pq.push(mp(-dis[v],v));\n            }\n        }\n    }\n}\n</code></pre> <p>\u6b63\u786e</p> <p>\u6211\u4eec\u8981\u4fdd\u8bc1\u4ecepq\u4e2d\u53d6\u51fa\u7684u\u4e00\u5b9a\u4e0d\u5728S\u4e2d\uff01\u5373\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u90fd\u653e\u7f29\u4e00\u6b21\uff0cvis\u6807\u8bb0\u6709\u6ca1\u6709\u5bf9\u8fd9\u4e2a\u70b9\u653e\u7f29\u8fc7\uff01\u800c\u4e0d\u662f\u6807\u8bb0\u662f\u4e0d\u662f\u5728S\u4e2d\uff01</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\n// void solve(){\n\n//     cerr&lt;&lt;\"\\nlong longrr[][]=\";\n//     for(int i=1;i&lt;=n;i++)cerr&lt;&lt;t[i].lst&lt;&lt;' '&lt;&lt;t[i].r&lt;&lt;endl;\n// }\n\n\n\nconst int N=5e5+5;\n const int M=5e4+5;\nconst int INF=2e9+5;\nconst int MOD=2e9+7;\nbool f1;\n\nint n,m,k,s,t,cnt,ans,dis[N],vis[N];\nstruct node{\n    int v,w;\n};\nvector&lt;node&gt; e[N];\n\nvoid add(int a,int b,int c){\n    e[a].push_back({b,c});\n    e[b].push_back({a,c});\n}\n\nvoid djstr(int s){\n    //\u539f\u96c6\u5408V\uff0c\u6700\u77ed\u8def\u96c6\u5408S\n    priority_queue&lt;pii&gt; pq;\n    for(int i=1;i&lt;=n;i++)dis[i]=INF;\n    dis[s]=0;\n    pq.push(mp(-dis[s],s));\n    while(pq.size()){\n        int u=pq.top().ps;\n        pq.pop();\n        if(vis[u])continue;\n        vis[u]=1;\n        for(auto [v,w]:e[u]){\n            //if(vis[v])continue;//\u5df2\u7ecf\u5728S\u4e2d//\u4e0d\u8981\u5224\uff01\n            if(dis[v]&gt;dis[u]+w){\n                dis[v]=dis[u]+w;\n\n                pq.push(mp(-dis[v],v));\n            }\n        }\n    }\n}\n\nsigned main(){\n\n    n=rd,m=rd,s=rd,t=rd;\n    for(int i=1;i&lt;=m;i++){\n        int a=rd,b=rd,c=rd;\n        add(a,b,c);\n    }\n\n    djstr(s);\n\n    cout&lt;&lt;dis[t]&lt;&lt;endl;\n    return 0;\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#floyd-noip2012","title":"Floyd | [NOIP2012 \u666e\u53ca\u7ec4] \u6587\u5316\u4e4b\u65c5","text":"<p>\u6709\u4e00\u4f4d\u4f7f\u8005\u8981\u6e38\u5386\u5404\u56fd\uff0c\u4ed6\u6bcf\u5230\u4e00\u4e2a\u56fd\u5bb6\uff0c\u90fd\u80fd\u5b66\u5230\u4e00\u79cd\u6587\u5316\uff0c\u4f46\u4ed6\u4e0d\u613f\u610f\u5b66\u4e60\u4efb\u4f55\u4e00\u79cd\u6587\u5316\u8d85\u8fc7\u4e00\u6b21\uff08\u5373\u5982\u679c\u4ed6\u5b66\u4e60\u4e86\u67d0\u79cd\u6587\u5316\uff0c\u5219\u4ed6\u5c31\u4e0d\u80fd\u5230\u8fbe\u5176\u4ed6\u6709\u8fd9\u79cd\u6587\u5316\u7684\u56fd\u5bb6\uff09\u3002\u4e0d\u540c\u7684\u56fd\u5bb6\u53ef\u80fd\u6709\u76f8\u540c\u7684\u6587\u5316\u3002\u4e0d\u540c\u6587\u5316\u7684\u56fd\u5bb6\u5bf9\u5176\u4ed6\u6587\u5316\u7684\u770b\u6cd5\u4e0d\u540c\uff0c\u6709\u4e9b\u6587\u5316\u4f1a\u6392\u65a5\u5916\u6765\u6587\u5316\uff08\u5373\u5982\u679c\u4ed6\u5b66\u4e60\u4e86\u67d0\u79cd\u6587\u5316\uff0c\u5219\u4ed6\u4e0d\u80fd\u5230\u8fbe\u6392\u65a5\u8fd9\u79cd\u6587\u5316\u7684\u5176\u4ed6\u56fd\u5bb6\uff09\u3002</p> <p>\u73b0\u7ed9\u5b9a\u5404\u4e2a\u56fd\u5bb6\u95f4\u7684\u5730\u7406\u5173\u7cfb\uff0c\u5404\u4e2a\u56fd\u5bb6\u7684\u6587\u5316\uff0c\u6bcf\u79cd\u6587\u5316\u5bf9\u5176\u4ed6\u6587\u5316\u7684\u770b\u6cd5\uff0c\u4ee5\u53ca\u8fd9\u4f4d\u4f7f\u8005\u6e38\u5386\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff08\u5728\u8d77\u70b9\u548c\u7ec8\u70b9\u4e5f\u4f1a\u5b66\u4e60\u5f53\u5730\u7684\u6587\u5316\uff09\uff0c\u56fd\u5bb6\u95f4\u7684\u9053\u8def\u8ddd\u79bb\uff0c\u8bd5\u6c42\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u6700\u5c11\u9700\u8d70\u591a\u5c11\u8def\u3002</p> <p>\u5bf9\u4e8e 100%\u7684\u6570\u636e\uff0c\u6709$ 2\u2264N\u2264100$</p> <p>\\(1\u2264K\u2264100\\)</p> <p>\\(1\u2264M\u2264N^2\\)</p> <p>\\(1\u2264k_i\u2264K\\)</p> <p>\\(1\u2264u, v\u2264N\\)</p> <p>\\(1\u2264d\u22641000,S\u2260T,1\u2264S,T\u2264N\\)</p> <p>NOIP 2012 \u666e\u53ca\u7ec4 \u7b2c\u56db\u9898</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\n// void solve(){\n\n//     cerr&lt;&lt;\"\\nlong longrr[][]=\";\n//     for(int i=1;i&lt;=n;i++)cerr&lt;&lt;t[i].lst&lt;&lt;' '&lt;&lt;t[i].r&lt;&lt;endl;\n// }\n\n\n\nconst int N=2e2+5;\n const int M=5e4+5;\nconst int INF=2e9+5;\nconst int MOD=2e9+7;\nbool f1;\n\nint n,m,k,s,t,cnt,ans,dis[N][N],c[N],used[N][N][N],a[N][N];\nstruct node{\n    int v,w;\n};\nvector&lt;node&gt; e[N];\n\nvoid add(int u,int v,int w){\n\n    if(!a[c[v]][c[u]]&amp;&amp;c[v]!=c[u])dis[u][v]=min(dis[u][v],w);\n    if(!a[c[u]][c[v]]&amp;&amp;c[v]!=c[u])dis[v][u]=min(dis[v][u],w);//\u5e26\u7ea6\u675f\u7684\u8fde\u8fb9\n}\n\nvoid flyd(){\n    for(int k=1;k&lt;=n;k++){\n        for(int i=1;i&lt;=n;i++){\n            for(int j=1;j&lt;=n;j++){\n                if(dis[i][j]&gt;dis[i][k]/\u7406\u89e3\u4ee5\u4e0b\u6700\u540e\u4e24\u4e2a\u7ea6\u675f\u6761\u4ef6\u3002\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u7684\n                ///////////////////////////////////\u6ce8\u610f\u4ecei\u5230k\u8981\u770bc[k]\u662f\u5426\u6392\u9664c[i]\u800c\u4e0d\u662f\u53cd\u8fc7\u6765\uff01\n                    for(int c=1;c&lt;=n;c++)used[i][j][c]=used[i][k][c]|used[k][j][c];//\u4e0d\u80fd|=\n                    used[i][j][c[k]]=1;//used[i][j][c[k]]\u8868\u793ai\u5230j\u7684\u8def\u5f84\uff08\u5305\u542b\u7aef\u70b9\uff09\u4e0a\u662f\u5426\u7ecf\u8fc7\u4e86\u989c\u8272\u4e3ac[k]\u7684\u70b9\n\n                    dis[i][j]=dis[i][k]+dis[k][j];\n                }\n            }\n        }\n    }\n}\n\n\nsigned main(){\n\n    n=rd,k=rd,m=rd,s=rd,t=rd;\n\n    for(int i=1;i&lt;=n;i++){//\u521d\u59cb\u5316\n        for(int j=1;j&lt;=n;j++)dis[i][j]=INF;\n        dis[i][i]=0;\n    }\n\n    for(int i=1;i&lt;=n;i++)c[i]=rd;\n    for(int i=1;i&lt;=k;i++){\n        for(int j=1;j&lt;=k;j++){\n            a[i][j]=rd;\n        }\n    }\n\n    for(int i=1;i&lt;=m;i++){\n        int a=rd,b=rd,c=rd;\n        add(a,b,c);\n    }\n\n\n    for(int i=1;i&lt;=n;i++){//\u521d\u59cb\u5316\u7ea6\u675f\n        for(int j=1;j&lt;=n;j++)used[i][j][c[i]]=1,used[i][j][c[j]]=1;\n    }\n\n\n\n    flyd();\n    if(dis[s][t]==INF)cout&lt;&lt;-1;\n    else cout&lt;&lt;dis[s][t];\n\n\n    return 0;\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre> <p>\uff01\uff01\u6ce8\u610f\u4e0d\u8981\u628a==\u6253\u6210= </p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#spfa-noip2009","title":"SPFA\u5206\u5c42\u56fe | [NOIP2009 \u63d0\u9ad8\u7ec4] \u6700\u4f18\u8d38\u6613","text":"<p>\\(C\\) \u56fd\u6709 \\(n\\) \u4e2a\u5927\u57ce\u5e02\u548c \\(m\\) \u6761\u9053\u8def\uff0c\u6bcf\u6761\u9053\u8def\u8fde\u63a5\u8fd9 \\(n\\) \u4e2a\u57ce\u5e02\u4e2d\u7684\u67d0\u4e24\u4e2a\u57ce\u5e02\u3002\u4efb\u610f\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u6700\u591a\u53ea\u6709\u4e00\u6761\u9053\u8def\u76f4\u63a5\u76f8\u8fde\u3002\u8fd9 \\(m\\) \u6761\u9053\u8def\u4e2d\u6709\u4e00\u90e8\u5206\u4e3a\u5355\u5411\u901a\u884c\u7684\u9053\u8def\uff0c\u4e00\u90e8\u5206\u4e3a\u53cc\u5411\u901a\u884c\u7684\u9053\u8def\uff0c\u53cc\u5411\u901a\u884c\u7684\u9053\u8def\u5728\u7edf\u8ba1\u6761\u6570\u65f6\u4e5f\u8ba1\u4e3a \\(1\\) \u6761\u3002</p> <p>\\(C\\) \u56fd\u5e45\u5458\u8fbd\u9614\uff0c\u5404\u5730\u7684\u8d44\u6e90\u5206\u5e03\u60c5\u51b5\u5404\u4e0d\u76f8\u540c\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u540c\u4e00\u79cd\u5546\u54c1\u5728\u4e0d\u540c\u57ce\u5e02\u7684\u4ef7\u683c\u4e0d\u4e00\u5b9a\u76f8\u540c\u3002\u4f46\u662f\uff0c\u540c\u4e00\u79cd\u5546\u54c1\u5728\u540c\u4e00\u4e2a\u57ce\u5e02\u7684\u4e70\u5165\u4ef7\u548c\u5356\u51fa\u4ef7\u59cb\u7ec8\u662f\u76f8\u540c\u7684\u3002</p> <p>\u5546\u4eba\u963f\u9f99\u6765\u5230 \\(C\\) \u56fd\u65c5\u6e38\u3002\u5f53\u4ed6\u5f97\u77e5\u540c\u4e00\u79cd\u5546\u54c1\u5728\u4e0d\u540c\u57ce\u5e02\u7684\u4ef7\u683c\u53ef\u80fd\u4f1a\u4e0d\u540c\u8fd9\u4e00\u4fe1\u606f\u4e4b\u540e\uff0c\u4fbf\u51b3\u5b9a\u5728\u65c5\u6e38\u7684\u540c\u65f6\uff0c\u5229\u7528\u5546\u54c1\u5728\u4e0d\u540c\u57ce\u5e02\u4e2d\u7684\u5dee\u4ef7\u8d5a\u56de\u4e00\u70b9\u65c5\u8d39\u3002\u8bbe \\(C\\) \u56fd \\(n\\) \u4e2a\u57ce\u5e02\u7684\u6807\u53f7\u4ece \\(1\\sim n\\)\uff0c\u963f\u9f99\u51b3\u5b9a\u4ece \\(1\\) \u53f7\u57ce\u5e02\u51fa\u53d1\uff0c\u5e76\u6700\u7ec8\u5728 \\(n\\) \u53f7\u57ce\u5e02\u7ed3\u675f\u81ea\u5df1\u7684\u65c5\u884c\u3002\u5728\u65c5\u6e38\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4efb\u4f55\u57ce\u5e02\u53ef\u4ee5\u91cd\u590d\u7ecf\u8fc7\u591a\u6b21\uff0c\u4f46\u4e0d\u8981\u6c42\u7ecf\u8fc7\u6240\u6709 \\(n\\) \u4e2a\u57ce\u5e02\u3002\u963f\u9f99\u901a\u8fc7\u8fd9\u6837\u7684\u8d38\u6613\u65b9\u5f0f\u8d5a\u53d6\u65c5\u8d39\uff1a\u4ed6\u4f1a\u9009\u62e9\u4e00\u4e2a\u7ecf\u8fc7\u7684\u57ce\u5e02\u4e70\u5165\u4ed6\u6700\u559c\u6b22\u7684\u5546\u54c1\u2015\u2015\u6c34\u6676\u7403\uff0c\u5e76\u5728\u4e4b\u540e\u7ecf\u8fc7\u7684\u53e6\u4e00\u4e2a\u57ce\u5e02\u5356\u51fa\u8fd9\u4e2a\u6c34\u6676\u7403\uff0c\u7528\u8d5a\u53d6\u7684\u5dee\u4ef7\u5f53\u505a\u65c5\u8d39\u3002\u7531\u4e8e\u963f\u9f99\u4e3b\u8981\u662f\u6765 \\(C\\) \u56fd\u65c5\u6e38\uff0c\u4ed6\u51b3\u5b9a\u8fd9\u4e2a\u8d38\u6613\u53ea\u8fdb\u884c\u6700\u591a\u4e00\u6b21\uff0c\u5f53\u7136\uff0c\u5728\u8d5a\u4e0d\u5230\u5dee\u4ef7\u7684\u60c5\u51b5\u4e0b\u4ed6\u5c31\u65e0\u9700\u8fdb\u884c\u8d38\u6613\u3002</p> <p>\u5047\u8bbe \\(C\\) \u56fd\u6709 \\(5\\) \u4e2a\u5927\u57ce\u5e02\uff0c\u57ce\u5e02\u7684\u7f16\u53f7\u548c\u9053\u8def\u8fde\u63a5\u60c5\u51b5\u5982\u4e0b\u56fe\uff0c\u5355\u5411\u7bad\u5934\u8868\u793a\u8fd9\u6761\u9053\u8def\u4e3a\u5355\u5411\u901a\u884c\uff0c\u53cc\u5411\u7bad\u5934\u8868\u793a\u8fd9\u6761\u9053\u8def\u4e3a\u53cc\u5411\u901a\u884c\u3002</p> <p></p> <p>\u5047\u8bbe \\(1\\sim n\\) \u53f7\u57ce\u5e02\u7684\u6c34\u6676\u7403\u4ef7\u683c\u5206\u522b\u4e3a \\(4,3,5,6,1\\)\u3002</p> <p>\u963f\u9f99\u53ef\u4ee5\u9009\u62e9\u5982\u4e0b\u4e00\u6761\u7ebf\u8def\uff1a\\(1\\to2\\to3\\to5\\)\uff0c\u5e76\u5728 \\(2\\) \u53f7\u57ce\u5e02\u4ee5 \\(3\\) \u7684\u4ef7\u683c\u4e70\u5165\u6c34\u6676\u7403\uff0c\u5728 \\(3\\) \u53f7\u57ce\u5e02\u4ee5 \\(5\\) \u7684\u4ef7\u683c\u5356\u51fa\u6c34\u6676\u7403\uff0c\u8d5a\u53d6\u7684\u65c5\u8d39\u6570\u4e3a \\(2\\)\u3002</p> <p>\u963f\u9f99\u4e5f\u53ef\u4ee5\u9009\u62e9\u5982\u4e0b\u4e00\u6761\u7ebf\u8def\uff1a\\(1\\to4\\to5\\to4\\to5\\)\uff0c\u5e76\u5728\u7b2c \\(1\\) \u6b21\u5230\u8fbe \\(5\\) \u53f7\u57ce\u5e02\u65f6\u4ee5 \\(1\\) \u7684\u4ef7\u683c\u4e70\u5165\u6c34\u6676\u7403\uff0c\u5728\u7b2c \\(2\\) \u6b21\u5230\u8fbe \\(4\\) \u53f7\u57ce\u5e02\u65f6\u4ee5 \\(6\\) \u7684\u4ef7\u683c\u5356\u51fa\u6c34\u6676\u7403\uff0c\u8d5a\u53d6\u7684\u65c5\u8d39\u6570\u4e3a \\(5\\)\u3002</p> <p>\u73b0\u5728\u7ed9\u51fa \\(n\\) \u4e2a\u57ce\u5e02\u7684\u6c34\u6676\u7403\u4ef7\u683c\uff0c\\(m\\) \u6761\u9053\u8def\u7684\u4fe1\u606f\uff08\u6bcf\u6761\u9053\u8def\u6240\u8fde\u63a5\u7684\u4e24\u4e2a\u57ce\u5e02\u7684\u7f16\u53f7\u4ee5\u53ca\u8be5\u6761\u9053\u8def\u7684\u901a\u884c\u60c5\u51b5\uff09\u3002\u8bf7\u4f60\u544a\u8bc9\u963f\u9f99\uff0c\u4ed6\u6700\u591a\u80fd\u8d5a\u53d6\u591a\u5c11\u65c5\u8d39\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\leq n\\leq 100000\\)\uff0c\\(1\\leq m\\leq 500000\\)\uff0c\\(1\\leq  x,y\\leq  n\\)\uff0c\\(1\\leq  z\\leq  2\\)\uff0c$1\\leq $ \u5404\u57ce\u5e02\u7684\u7f16\u53f7 \\(\\leq  n\\)\u3002</p> <p>\u6c34\u6676\u7403\u4ef7\u683c \\(\\leq 100\\)\u3002</p> <p>NOIP 2009 \u63d0\u9ad8\u7ec4 \u7b2c\u4e09\u9898</p> <p>\u7531\u4e8e\u53ef\u4ee5\u4efb\u610f\u8d70\u52a8\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u5f20\u56fe\uff0c\u4ee4\u56fe\u4e0a\u7684\u8fb9\u5168\u90fd\u662f 0 \uff0c\u8868\u793a\u6211\u7684\u8d70\u52a8\u5bf9\u6211\u6700\u7ec8\u7684\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\u3002</p> <p>\u8003\u8651\u67d0\u4e2a\u70b9 i \uff0c\u5b83\u4e70\u5165\u6216\u8005\u5356\u51fa\u6c34\u6676\u7403\u7684\u82b1\u8d39\u662f vi\u200b \u3002</p> <p>\u90a3\u4e48\uff1a \u5f53\u6211\u4eec\u8fdb\u884c\u4e70\u5165\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u5efa\u7acb\u4e00\u6761**\u6709\u5411\u8fb9**\u8f6c\u79fb\u5230\u4e00\u5f20\u65b0\u56fe\u4e0a\uff0c\u8fb9\u7684\u5927\u5c0f\u4e3a \u2212vi\u200b \uff0c\u5b83\u4ece\u7b2c\u4e00\u5c42\u7684\u70b9 i0\u200b \u6307\u5411\u7b2c\u4e8c\u5c42\u7684\u70b9 i1\u200b \u3002\u800c\u8fd9\u5f20\u65b0\u56fe\u5c31\u662f\u6211\u4eec\u7684\u7b2c\u4e8c\u5c42\u56fe\u3002</p> <p>\u5b83\u8868\u793a\uff1a\u5047\u5982\u6211\u9009\u62e9\u8d70\u4e86\u8fd9\u6761\u8fb9\uff0c\u5c31\u662f\u6211\u5728\u8fd9\u4e2a\u70b9\u4e70\u4e86\u8fd9\u4e2a\u6c34\u6676\u7403\uff0c\u6211\u4e0d\u4f1a\u53cd\u6094\uff0c\u5e76\u4e14\u6211\u63a5\u4e0b\u6765\u8003\u8651\u5728\u67d0\u4e2a\u70b9\u5356\u5b83\u3002</p> <p>\u5f53\u6211\u4eec\u8fdb\u884c\u5356\u51fa\u64cd\u4f5c\uff0c\u6211\u4eec\u5efa\u7acb\u4e00\u6761\u6709\u5411\u8fb9\u8f6c\u79fb\u5230\u7b2c\u4e09\u5c42\u56fe\u4e0a\uff0c\u8fb9\u7684\u5927\u5c0f\u4e3a vi\u200b\uff0c\u5b83\u4ece\u7b2c\u4e8c\u5c42\u7684\u70b9 i1\u6307\u5411\u7b2c\u4e09\u5c42\u7684\u70b9 i2\u200b \u3002</p> <p>\u5b83\u8868\u793a\uff1a\u5047\u5982\u6211\u9009\u62e9\u8d70\u4e86\u8fd9\u6761\u8fb9\uff0c\u5c31\u662f\u6211\u5728\u8fd9\u4e2a\u70b9\u5356\u4e86\u8fd9\u4e2a\u6c34\u6676\u7403\uff0c\u6211\u4e0d\u4f1a\u53cd\u6094\uff0c\u5e76\u4e14\u6211\u63a5\u4e0b\u6765\u8003\u8651\u8d70\u5411\u7ec8\u70b9\u3002</p> <p>\u6ce8\uff1a\u4e0d\u80fd\u6307\u5411 i \u4e0b\u4e00\u5c42\u5230\u8fbe\u7684\u70b9\uff0c\u56e0\u4e3a\u8fd9\u6837\u610f\u601d\u5c31\u53d8\u6210\u4e86\uff1a\u6211\u5728\u8fd9\u4e2a\u70b9\u4e70\u5165\u4e86\u6c34\u6676\u7403\uff0c\u5e76\u4e14\u6211\u4e00\u5b9a\u4ece\u8fd9\u4e2a\u70b9\u8d70\u51fa\u53bb\u3002\u591a\u4e86\u4e00\u5c42\u610f\u601d\u5c31\u4e0d\u4e00\u6837\u4e86</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u4ece\u7b2c\u4e00\u5c42\u56fe\u8d70\u5230\u7b2c\u4e8c\u5c42\u56fe\u8d70\u5230\u7b2c\u4e09\u5c42\u56fe\u8d70\u5230\u7ec8\u70b9\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u51b3\u7b56\u3002</p> <p>\u5bf9\u4e8e**\u4efb\u4f55**\u4e00\u79cd\u51b3\u7b56\u90fd\u53ef\u4ee5\u62bd\u8c61\u4e3a\u6211\u4ece 1\u70b9 \u8d70\u5230\u70b9 x \u4e70\u5165\uff0c\u7136\u540e\u8d70\u5230\u70b9 y \u5356\u51fa, \u7136\u540e\u8d70\u5230\u70b9 n\u3002\u800c\u6bcf\u4e00\u79cd\u51b3\u7b56\u90fd\u5728\u56fe\u4e2d\u5bf9\u5e94\u4e86\u4e00\u6761\u4ece 10\u200b \u5230 x0\u200b \u5230 x1\u200b \u5230 y1\u200b \u5230 y2\u200b \u5230 n2\u200b \u7684\u8def\u5f84\u3002</p> <p></p> <p></p> <p>\u6240\u4ee5\u5206\u5c42\u56fe\u628a\u6240\u6709\u5408\u6cd5\u7684\u51b3\u7b56\u90fd\u8003\u8651\u5230\u4e86\u3002\u800c\u6211\u4eec\u8981\u6c42\u7684\u6700\u5927\u6536\u76ca\u5c31\u6b63\u597d\u5bf9\u5e94\u4e86\u56fe\u4e0a\u7684\u4ece 10\u200b \u5230 n2\u200b \u6700\u957f\u7684\u8def\u5f84\u3002</p> <p>\u6ce8\uff1a\u5f53\u7136\u4e5f\u53ef\u4ee5\u628a\u8fb9\u6743\u90fd\u6539\u6210\u8d1f\u7684\u6c42\u4e2a\u6700\u77ed\u8def(\u56e0\u4e3a\u4e0d\u5b58\u5728\u8d1f\u73af\u4e5f\u662f\u53ef\u4ee5\u7684)\u3002</p> <p>\u6ce8\u610f\u6709\u8d1f\u8fb9\u6743\uff0c\u8981\u7528spfa</p> <p>spfa\u7c7b\u4f3cbfs\uff0c\u4eceu\u6269\u5c55\u5230v\u5e76\u4e14\u80fd\u66f4\u65b0v\u65f6\uff0c\u66f4\u65b0\uff0c\u5982\u679cv\u4e0d\u5728\u961f\u4e2d\u5219push\uff0c\u6807\u8bb0\u5165\u961f\uff0c\u5426\u5219\u4e0dpush\u3002\u8bbf\u95eeu\u65f6\u628au\u7684\u5165\u961f\u6807\u8bb0\u64a4\u9500\u3002</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\n\nconst int N=5e5+5;\n const int M=5e4+5;\nconst int INF=2e9+5;\nconst int MOD=2e9+7;\nbool f1;\n\nint n,m,k,s,t,cnt,ans,dis[N],v[N],vis[N];\nstruct node{\n    int v,w;\n};\nvector&lt;node&gt; e[N];\n\nvoid add(int u,int v,int w){\n    e[u].push_back({v,w});\n}\n\nvoid spfa(int s){\n    queue&lt;int&gt;q;\n    q.push(s);\n    for(int i=1;i&lt;=3*n;i++)dis[i]=INF;\n    dis[s]=0;\n    while(q.size()){\n        int u=q.front();q.pop();\n        vis[u]=0;//!!\u6807\u8bb0\u51fa\u961f\n        for(auto v:e[u]){\n            if(dis[v.v]&gt;dis[u]+v.w){\n                dis[v.v]=dis[u]+v.w;\n                if(vis[v.v])continue;\n                q.push(v.v);\n                vis[v.v]=1;\n            }\n        }\n    }\n}\n\n\n\nsigned main(){\n    n=rd,m=rd;\n    for(int i=1;i&lt;=n;i++)v[i]=rd;\n    for(int i=1;i&lt;=n;i++){\n        add(i,i+n,v[i]);\n        add(i+n,i+n+n,-v[i]);\n    }\n    for(int i=1;i&lt;=m;i++){\n        int u=rd,v=rd,op=rd;\n        add(u,v,0);\n        add(u+n,v+n,0);\n        add(u+n+n,v+n+n,0);\n        if(op==2){\n            add(v,u,0);\n            add(v+n,u+n,0);\n            add(v+n+n,u+n+n,0);\n        }\n    }\n\n    spfa(1);\n\n    cout&lt;&lt;-dis[3*n];\n\n\n    return 0;\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#dp","title":"\u25bc \u80cc\u5305dp","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#noip2014","title":"\u5b8c\u5168\u80cc\u5305 | [NOIP2014 \u63d0\u9ad8\u7ec4] \u98de\u626c\u7684\u5c0f\u9e1f","text":"<p>\u6e38\u620f\u754c\u9762\u662f\u4e00\u4e2a\u957f\u4e3a \\(n\\)\uff0c\u9ad8\u4e3a \\(m\\) \u7684\u4e8c\u7ef4\u5e73\u9762\uff0c\u5176\u4e2d\u6709 \\(k\\) \u4e2a\u7ba1\u9053\uff08\u5ffd\u7565\u7ba1\u9053\u7684\u5bbd\u5ea6\uff09\u3002</p> <p>\u5c0f\u9e1f\u59cb\u7ec8\u5728\u6e38\u620f\u754c\u9762\u5185\u79fb\u52a8\u3002\u5c0f\u9e1f\u4ece\u6e38\u620f\u754c\u9762\u6700\u5de6\u8fb9\u4efb\u610f\u6574\u6570\u9ad8\u5ea6\u4f4d\u7f6e\u51fa\u53d1\uff0c\u5230\u8fbe\u6e38\u620f\u754c\u9762\u6700\u53f3\u8fb9\u65f6\uff0c\u6e38\u620f\u5b8c\u6210\u3002</p> <p>\u5c0f\u9e1f\u6bcf\u4e2a\u5355\u4f4d\u65f6\u95f4\u6cbf\u6a2a\u5750\u6807\u65b9\u5411\u53f3\u79fb\u7684\u8ddd\u79bb\u4e3a \\(1\\)\uff0c\u7ad6\u76f4\u79fb\u52a8\u7684\u8ddd\u79bb\u7531\u73a9\u5bb6\u63a7\u5236\u3002\u5982\u679c\u70b9\u51fb\u5c4f\u5e55\uff0c\u5c0f\u9e1f\u5c31\u4f1a\u4e0a\u5347\u4e00\u5b9a\u9ad8\u5ea6 \\(x\\)\uff0c\u6bcf\u4e2a\u5355\u4f4d\u65f6\u95f4\u53ef\u4ee5\u70b9\u51fb\u591a\u6b21\uff0c\u6548\u679c\u53e0\u52a0\uff1b\u5982\u679c\u4e0d\u70b9\u51fb\u5c4f\u5e55\uff0c\u5c0f\u9e1f\u5c31\u4f1a\u4e0b\u964d\u4e00\u5b9a\u9ad8\u5ea6 \\(y\\)\u3002\u5c0f\u9e1f\u4f4d\u4e8e\u6a2a\u5750\u6807\u65b9\u5411\u4e0d\u540c\u4f4d\u7f6e\u65f6\uff0c\u4e0a\u5347\u7684\u9ad8\u5ea6 \\(x_i\\) \u548c\u4e0b\u964d\u7684\u9ad8\u5ea6 \\(y_i\\) \u53ef\u80fd\u4e92\u4e0d\u76f8\u540c\u3002</p> <p>\u5c0f\u9e1f\u9ad8\u5ea6\u7b49\u4e8e \\(0\\) \u6216\u8005\u5c0f\u9e1f\u78b0\u5230\u7ba1\u9053\u65f6\uff0c\u6e38\u620f\u5931\u8d25\u3002\u5c0f\u9e1f\u9ad8\u5ea6\u4e3a \\(m\\) \u65f6\uff0c\u65e0\u6cd5\u518d\u4e0a\u5347\u3002</p> <p>\u73b0\u5728,\u8bf7\u4f60\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5b8c\u6210\u6e38\u620f\u3002\u5982\u679c\u53ef\u4ee5\uff0c\u8f93\u51fa\u6700\u5c11\u70b9\u51fb\u5c4f\u5e55\u6570\uff1b\u5426\u5219\uff0c\u8f93\u51fa\u5c0f\u9e1f\u6700\u591a\u53ef\u4ee5\u901a\u8fc7\u591a\u5c11\u4e2a\u7ba1\u9053\u7f1d\u9699\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff1a\\(5 \\leq n \\leq 10000\\)\uff0c\\(5 \\leq m \\leq 1000\\)\uff0c\\(0 \\leq k &lt; n\\)\uff0c\\(0 &lt; x,y &lt; m\\)\uff0c\\(0 &lt; p &lt; n\\)\uff0c\\(0 \\leq l &lt; h \\leq m\\)\uff0c \\(l + 1 &lt; h\\)\u3002</p> <p>\u8bb0\u5f55f_{i,j}\u4e3a\u98de\u79bb\u4f4d\u7f6ei,j\u65f6\u6700\u5c0f\u7684\u70b9\u51fb\u6570\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2af_{i,j}\u6211\u4eec\u6709\u4e24\u79cd\u8f6c\u79fb\u7684\u65b9\u5f0f</p> <ul> <li> <p>\u4ece\u4e0a\u5f80\u4e0b\uff0c\\(f_{i,j}\u2190f_{i-1,j-y_{i}}\\)</p> </li> <li> <p>\u4ece\u4e0b\u5f80\u4e0a\uff0cf_{i,j}\u2190f_{i-1,j+kx_i},k=1,2,3,\\dots</p> </li> </ul> <p>\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u7b2c\u4e00\u79cd\u60c5\u51b5\u5f88\u597d\u5904\u7406\u3002\u4f46\u662f\u7b2c\u4e8c\u7ae0\u60c5\u51b5\u7684\u8f6c\u79fb\u7684\u53cd\u6b63\u5bf9\u4e8e\u5c31\u8fc7\u9ad8\u4e86\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u4e8c\uff1a\\(f_{i,j-x_i}\u2190f_{i-1,j-x_i+kx_i},k=1,2,3,\\dots\\)</p> <p>\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u770b\u6210\\(f_{i,j}\u2190f_{i,j-x_i},f_{i-1,j-x_i}\\)\u5462\uff1f\u53ef\u4ee5\u7684\u3002</p> <p></p> <p>\u4ee3\u7801\u00b7\u00b7WA</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n// #define int long long\n#define mp make_pair\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int N=1e3+5;\n const int M=1e4+5;\nconst int INF=2e9+5;\nconst int MOD=2e9+7;\nbool f1;\nint n,t,m;\nint a[N],k;\nint ans,mx,tmx,dp[M][N],l[M],h[M],x[M],y[M];\nbool f2;\n\nint mxlst,lst;\n\nstruct node{\n    int p,l,h;\n}p[N];\n\n\nbool cmp(node a,node b){\n    return a.p&lt;b.p;\n}\n\nsigned main(){\n\n    // freopen(\"woof.in\",\"r\",stdin);\n    // freopen(\"woof.out\",\"w\",stdout);\n    n=rd;\n    m=rd;\n    k=rd;\n    for(int i=1;i&lt;=n;i++){\n        x[i]=rd,y[i]=rd;\n    }\n    for(int i=1;i&lt;=k;i++){\n        p[i].p=rd+1,p[i].l=rd,p[i].h=rd;\n    }\n\n    sort(p+1,p+k+1,cmp);\n    int cnt=1;\n    memset(dp,INF,sizeof dp);\n    for(int i=1;i&lt;=m;i++)dp[0][i]=0;\n    for(int i=1;i&lt;=n;i++){\n        if(i&gt;p[cnt].p)cnt++;\n        int tmp=INF;\n        for(int j=1;j&lt;=m;j++){\n            if(j+y[i]&lt;=m)dp[i][j]=min(dp[i][j],dp[i-1][j+y[i]]);\n            if(j-x[i]&gt;0)dp[i][j]=min(dp[i][j],1+min(dp[i][j-x[i]],dp[i-1][j-x[i]]));\n            if(i==p[cnt].p&amp;&amp;(j&gt;p[cnt].h||j&lt;p[cnt].l))dp[i][j]=INF;\n            tmp=min(tmp,dp[i][j]);\n        }\n        if(tmp==INF){\n            cout&lt;&lt;0&lt;&lt;endl;\n            if(i==p[cnt].p)cout&lt;&lt;cnt-1;\n            else cout&lt;&lt;cnt;\n            return 0;\n        }\n    }\n    ans=INF;\n    for(int i=1;i&lt;=m;i++)ans=min(ans,dp[n][i]);\n    cout&lt;&lt;1&lt;&lt;endl&lt;&lt;ans;\n\n}\n\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre> <p>std</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n// #define int long long\n#define mp make_pair\n\n#define rd read()\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\n// void solve(){\n\n//     cerr&lt;&lt;\"\\nlong longrr[][]=\";\n//     for(int i=1;i&lt;=n;i++)cerr&lt;&lt;t[i].lst&lt;&lt;' '&lt;&lt;t[i].r&lt;&lt;endl;\n// }\n\n\n\nconst int N=1e4+5;\n const int M=1e4+5;\nconst int INF=2e9+5;\nconst int MOD=2e9+7;\nbool f1;\n\nstruct node{\n    int id,h,l;\n    bool operator &lt;(const node &amp;a) const\n    {\n        return id&lt;a.id;\n    }\n}p[N];\n\nint x[N],y[N],dp[2][N],n,m,k,cnt=1,ans;\nsigned main(){\n\n\n    n=rd,m=rd,k=rd;\n    for(int i=1;i&lt;=n;i++)x[i]=rd,y[i]=rd;\n    for(int i=1;i&lt;=k;i++)p[i].id=rd,p[i].l=rd,p[i].h=rd;\n\n    sort(p+1,p+k+1);\n    for(int i=1;i&lt;=n;i++)   {\n        for(int j=0;j&lt;=m;j++)\n        dp[i%2][j]=INF;\n        for(int j=x[i]+1;j&lt;=x[i]+m;j++) dp[i%2][j]=min(dp[i%2^1][j-x[i]]+1,dp[i%2][j-x[i]]+1);\n        for(int j=m+1;j&lt;=x[i]+m;j++)dp[i%2][m]=min(dp[i%2][m],dp[i%2][j]);\n        for(int j=1;j&lt;=m-y[i];j++)dp[i%2][j]=min(dp[i%2][j],dp[i%2^1][j+y[i]]);\n\n        if(i==p[cnt].id){\n            ans=INF;\n            for(int j=0;j&lt;=p[cnt].l;j++)\n            dp[i%2][j]=INF;\n            for(int j=p[cnt].h;j&lt;=m;j++)\n            dp[i%2][j]=INF;\n            for(int j=1;j&lt;=m;j++)\n            ans=min(dp[i%2][j],ans);\n            if(ans==INF)\n            {\n                cout&lt;&lt;0&lt;&lt;endl&lt;&lt;cnt-1;return 0;\n            }\n            cnt++;\n        }\n    }\n    ans=INF;\n    for(int j=1;j&lt;=m;j++)\n    ans=min(dp[n%2][j],ans);\n    cout&lt;&lt;1&lt;&lt;endl&lt;&lt;ans;\n    return 0;\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#01-noip2006","title":"01\u80cc\u5305 | [NOIP2006 \u666e\u53ca\u7ec4] \u5f00\u5fc3\u7684\u91d1\u660e","text":"<p>\u91d1\u660e\u4eca\u5929\u5f88\u5f00\u5fc3\uff0c\u5bb6\u91cc\u8d2d\u7f6e\u7684\u65b0\u623f\u5c31\u8981\u9886\u94a5\u5319\u4e86\uff0c\u65b0\u623f\u91cc\u6709\u4e00\u95f4\u4ed6\u81ea\u5df1\u4e13\u7528\u7684\u5f88\u5bbd\u655e\u7684\u623f\u95f4\u3002\u66f4\u8ba9\u4ed6\u9ad8\u5174\u7684\u662f\uff0c\u5988\u5988\u6628\u5929\u5bf9\u4ed6\u8bf4\uff1a\u201c\u4f60\u7684\u623f\u95f4\u9700\u8981\u8d2d\u4e70\u54ea\u4e9b\u7269\u54c1\uff0c\u600e\u4e48\u5e03\u7f6e\uff0c\u4f60\u8bf4\u4e86\u7b97\uff0c\u53ea\u8981\u4e0d\u8d85\u8fc7 \\(N\\) \u5143\u94b1\u5c31\u884c\u201d\u3002\u4eca\u5929\u4e00\u65e9\u91d1\u660e\u5c31\u5f00\u59cb\u505a\u9884\u7b97\uff0c\u4f46\u662f\u4ed6\u60f3\u4e70\u7684\u4e1c\u897f\u592a\u591a\u4e86\uff0c\u80af\u5b9a\u4f1a\u8d85\u8fc7\u5988\u5988\u9650\u5b9a\u7684 \\(N\\) \u5143\u3002\u4e8e\u662f\uff0c\u4ed6\u628a\u6bcf\u4ef6\u7269\u54c1\u89c4\u5b9a\u4e86\u4e00\u4e2a\u91cd\u8981\u5ea6\uff0c\u5206\u4e3a \\(5\\) \u7b49\uff1a\u7528\u6574\u6570 \\(1-5\\) \u8868\u793a\uff0c\u7b2c \\(5\\) \u7b49\u6700\u91cd\u8981\u3002\u4ed6\u8fd8\u4ece\u56e0\u7279\u7f51\u4e0a\u67e5\u5230\u4e86\u6bcf\u4ef6\u7269\u54c1\u7684\u4ef7\u683c\uff08\u90fd\u662f\u6574\u6570\u5143\uff09\u3002\u4ed6\u5e0c\u671b\u5728\u4e0d\u8d85\u8fc7 \\(N\\) \u5143\uff08\u53ef\u4ee5\u7b49\u4e8e \\(N\\) \u5143\uff09\u7684\u524d\u63d0\u4e0b\uff0c\u4f7f\u6bcf\u4ef6\u7269\u54c1\u7684\u4ef7\u683c\u4e0e\u91cd\u8981\u5ea6\u7684\u4e58\u79ef\u7684\u603b\u548c\u6700\u5927\u3002</p> <p>\u8bbe\u7b2c\\(j\\)\u4ef6\u7269\u54c1\u7684\u4ef7\u683c\u4e3a \\(v_j\\)\uff0c\u91cd\u8981\u5ea6\u4e3a \\(w_j\\)\uff0c\u5171\u9009\u4e2d\u4e86 \\(k\\) \u4ef6\u7269\u54c1\uff0c\u7f16\u53f7\u4f9d\u6b21\u4e3a \\(j_1,j_2,\u2026,j_k\\)\uff0c\u5219\u6240\u6c42\u7684\u603b\u548c\u4e3a\uff1a</p> <p>\\(v_{j_1} \\times w_{j_1}+v_{j_2} \\times w_{j_2} \u2026+v_{j_k} \\times w_{j_k}\\)\u3002</p> <p>\u8bf7\u4f60\u5e2e\u52a9\u91d1\u660e\u8bbe\u8ba1\u4e00\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684\u8d2d\u7269\u5355\u3002</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n// #define int long long\n#define mp make_pair\n\n#define rd read()\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int N=1e5+5;\n const int M=1e4+5;\nconst int INF=2e9+5;\nconst int MOD=2e9+7;\nbool f1;\n\nint p[N],v[N],f[N],n,m,k,cnt=1,ans;\nsigned main(){\n\n    n=rd,m=rd;\n    for(int i=1;i&lt;=m;i++){\n        v[i]=rd;p[i]=rd;p[i]*=v[i];\n    }\n    for(int i=1;i&lt;=m;i++){\n        for(int j=n;j&gt;=v[i];j--){\n            f[j]=max(f[j],f[j-v[i]]+p[i]);\n        }\n    }\n\n    cout&lt;&lt;f[n]&lt;&lt;endl;\n    return 0;\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#noip2006","title":"\u4f9d\u8d56\u80cc\u5305 | [NOIP2006 \u63d0\u9ad8\u7ec4] \u91d1\u660e\u7684\u9884\u7b97\u65b9\u6848","text":"<p>\u91d1\u660e\u4eca\u5929\u5f88\u5f00\u5fc3\uff0c\u5bb6\u91cc\u8d2d\u7f6e\u7684\u65b0\u623f\u5c31\u8981\u9886\u94a5\u5319\u4e86\uff0c\u65b0\u623f\u91cc\u6709\u4e00\u95f4\u91d1\u660e\u81ea\u5df1\u4e13\u7528\u7684\u5f88\u5bbd\u655e\u7684\u623f\u95f4\u3002\u66f4\u8ba9\u4ed6\u9ad8\u5174\u7684\u662f\uff0c\u5988\u5988\u6628\u5929\u5bf9\u4ed6\u8bf4\uff1a\u201c\u4f60\u7684\u623f\u95f4\u9700\u8981\u8d2d\u4e70\u54ea\u4e9b\u7269\u54c1\uff0c\u600e\u4e48\u5e03\u7f6e\uff0c\u4f60\u8bf4\u4e86\u7b97\uff0c\u53ea\u8981\u4e0d\u8d85\u8fc7 \\(n\\) \u5143\u94b1\u5c31\u884c\u201d\u3002\u4eca\u5929\u4e00\u65e9\uff0c\u91d1\u660e\u5c31\u5f00\u59cb\u505a\u9884\u7b97\u4e86\uff0c\u4ed6\u628a\u60f3\u4e70\u7684\u7269\u54c1\u5206\u4e3a\u4e24\u7c7b\uff1a\u4e3b\u4ef6\u4e0e\u9644\u4ef6\uff0c\u9644\u4ef6\u662f\u4ece\u5c5e\u4e8e\u67d0\u4e2a\u4e3b\u4ef6\u7684\u3002</p> <p>\u5982\u679c\u8981\u4e70\u5f52\u7c7b\u4e3a\u9644\u4ef6\u7684\u7269\u54c1\uff0c\u5fc5\u987b\u5148\u4e70\u8be5\u9644\u4ef6\u6240\u5c5e\u7684\u4e3b\u4ef6\u3002\u6bcf\u4e2a\u4e3b\u4ef6\u53ef\u4ee5\u6709 \\(0\\) \u4e2a\u3001\\(1\\) \u4e2a\u6216 \\(2\\) \u4e2a\u9644\u4ef6\u3002\u6bcf\u4e2a\u9644\u4ef6\u5bf9\u5e94\u4e00\u4e2a\u4e3b\u4ef6\uff0c\u9644\u4ef6\u4e0d\u518d\u6709\u4ece\u5c5e\u4e8e\u81ea\u5df1\u7684\u9644\u4ef6\u3002\u91d1\u660e\u60f3\u4e70\u7684\u4e1c\u897f\u5f88\u591a\uff0c\u80af\u5b9a\u4f1a\u8d85\u8fc7\u5988\u5988\u9650\u5b9a\u7684 \\(n\\) \u5143\u3002\u4e8e\u662f\uff0c\u4ed6\u628a\u6bcf\u4ef6\u7269\u54c1\u89c4\u5b9a\u4e86\u4e00\u4e2a\u91cd\u8981\u5ea6\uff0c\u5206\u4e3a \\(5\\) \u7b49\uff1a\u7528\u6574\u6570 \\(1 \\sim 5\\) \u8868\u793a\uff0c\u7b2c \\(5\\) \u7b49\u6700\u91cd\u8981\u3002\u4ed6\u8fd8\u4ece\u56e0\u7279\u7f51\u4e0a\u67e5\u5230\u4e86\u6bcf\u4ef6\u7269\u54c1\u7684\u4ef7\u683c\uff08\u90fd\u662f \\(10\\) \u5143\u7684\u6574\u6570\u500d\uff09\u3002\u4ed6\u5e0c\u671b\u5728\u4e0d\u8d85\u8fc7 \\(n\\) \u5143\u7684\u524d\u63d0\u4e0b\uff0c\u4f7f\u6bcf\u4ef6\u7269\u54c1\u7684\u4ef7\u683c\u4e0e\u91cd\u8981\u5ea6\u7684\u4e58\u79ef\u7684\u603b\u548c\u6700\u5927\u3002</p> <p>\u8bbe\u7b2c \\(j\\) \u4ef6\u7269\u54c1\u7684\u4ef7\u683c\u4e3a \\(v_j\\)\uff0c\u91cd\u8981\u5ea6\u4e3a\\(w_j\\)\uff0c\u5171\u9009\u4e2d\u4e86 \\(k\\) \u4ef6\u7269\u54c1\uff0c\u7f16\u53f7\u4f9d\u6b21\u4e3a \\(j_1,j_2,\\dots,j_k\\)\uff0c\u5219\u6240\u6c42\u7684\u603b\u548c\u4e3a\uff1a</p> <p>\\(v_{j_1} \\times w_{j_1}+v_{j_2} \\times w_{j_2}+ \\dots +v_{j_k} \\times w_{j_k}\\)\u3002</p> <p>\u8bf7\u4f60\u5e2e\u52a9\u91d1\u660e\u8bbe\u8ba1\u4e00\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684\u8d2d\u7269\u5355\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(1 \\leq n \\leq 3.2 \\times 10^4\\)\uff0c\\(1 \\leq m \\leq 60\\)\uff0c\\(0 \\leq v_i \\leq 10^4\\)\uff0c\\(1 \\leq p_i \\leq 5\\)\uff0c\\(0 \\leq q_i \\leq m\\)\uff0c\u7b54\u6848\u4e0d\u8d85\u8fc7 \\(2 \\times 10^5\\)\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n\n#define rd read()\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\n\nconst int N=1e2+5;\n const int M=5e4+5;\nconst int INF=2e9+5;\nconst int MOD=2e9+7;\nbool f1;\n\nint p[N],v[N],dp[N][M],n,m,k,cnt,ans,id[N],q[N];\nvector&lt;int&gt; e[N];\n\nsigned main(){\n\n    n=rd,m=rd;\n    for(int i=1;i&lt;=m;i++){\n        v[i]=rd;p[i]=rd;q[i]=rd;\n        if(q[i])e[q[i]].push_back(i);\n        else id[++cnt]=i;\n    }\n    for(int i=1;i&lt;=cnt;i++){\n        for(int j=0;j&lt;=n;j++){\n            dp[i][j]=dp[i-1][j];//\u7ee7\u627f\n            if(j&gt;=v[id[i]])dp[i][j]=max(dp[i][j],dp[i-1][j-v[id[i]]]/\u8f6c\u79fb\n            if(e[id[i]].size()&gt;=1){//!!\u6ce8\u610f\u4e0d\u662f==\n                int vv=v[id[i]]/\u4e3b+\u9644\u4ef61\n                int ww=p[id[i]]*v[id[i]]+p[e[id[i]][0]]*v[e[id[i]][0]];\n                if(j&gt;=vv)dp[i][j]=max(dp[i][j],dp[i-1][j-vv]+ww);\n            }\n            if(e[id[i]].size()==2){\n                int vv=v[id[i]]/\u4e3b+\u9644\u4ef62\n                int ww=p[id[i]]*v[id[i]]+p[e[id[i]][1]]*v[e[id[i]][1]];\n                if(j&gt;=vv)dp[i][j]=max(dp[i][j],dp[i-1][j-vv]+ww);\n\n                vv+=v[e[id[i]][0]];//\u4e3b+\u9644\u4ef61\uff0c2\n                ww+=p[e[id[i]][0]]*v[e[id[i]][0]];\n                if(j&gt;=vv)dp[i][j]=max(dp[i][j],dp[i-1][j-vv]+ww);\n            }\n        }\n\n    }\n    for(int i=0;i&lt;=n;i++)ans=max(ans,dp[cnt][i]);\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n\n    return 0;\n}\n/*\n\n*/\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#day2","title":"day2","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_4","title":"\u25bc \u5b57\u7b26\u4e32","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#hash-coci2011-20124-kriptogram","title":"\u5b57\u7b26\u4e32hash | [COCI2011-2012#4] KRIPTOGRAM","text":"<p>\u73b0\u6709\u4e00\u6bb5\u660e\u6587\u548c\u4e00\u90e8\u5206\u5bc6\u6587\u3002\u660e\u6587\u548c\u5bc6\u6587\u90fd\u7531\u82f1\u6587\u5355\u8bcd\u7ec4\u6210\uff0c\u4e14\u5bc6\u6587\u4e2d\u7684\u4e00\u4e2a\u5355\u8bcd\u5fc5\u7136\u5bf9\u5e94\u7740\u660e\u6587\u4e2d\u7684\u4e00\u4e2a\u5355\u8bcd\u3002</p> <p>\u6c42\u7ed9\u51fa\u7684\u5bc6\u6587\u5728\u660e\u6587\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u6700\u65e9\u4f4d\u7f6e\u3002</p> <p>\u7b2c\u4e00\u884c\uff0c\u82e5\u5e72\u4e2a\u82f1\u6587\u5355\u8bcd\u548c\u4e00\u4e2a $\uff0c\u8868\u793a\u660e\u6587\u3002</p> <p>\u7b2c\u4e8c\u884c\uff0c\u82e5\u5e72\u4e2a\u82f1\u6587\u5355\u8bcd\u548c\u4e00\u4e2a $\uff0c\u8868\u793a\u5bc6\u6587\u3002</p> <p>\u6bcf\u884c\u672b\u5c3e\u7684 \\(\\texttt \\$\\) \u7528\u4e8e\u8868\u793a\u8be5\u884c\u7ed3\u675f\u3002\u6570\u636e\u4fdd\u8bc1\u6ca1\u6709\u591a\u4e2a\\(\\texttt \\$\\) \u51fa\u73b0\u5728\u540c\u4e00\u884c\u7684\u60c5\u51b5\u3002</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#3","title":"\u6837\u4f8b\u8f93\u5165 #3","text":"<pre><code>a b c x c z z a b c $\nprvi dr prvi tr tr x $\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#3_1","title":"\u6837\u4f8b\u8f93\u51fa #3","text":"<pre><code>3\n</code></pre> <ul> <li>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u660e\u6587\u548c\u5bc6\u6587\u6240\u5bf9\u5e94\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(10^6\\)\uff0c\u8f93\u5165\u7684\u5355\u8bcd\u5747\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002</li> </ul> <p>\u601d\u8def</p> <p>\u8ba9\u6211\u4eec\u5148\u770b\u61c2\u6837\u4f8b\u7684\u610f\u601d\u3002</p> <pre><code>a b c x c z z a b c $\nprvi dr prvi tr tr x $\n</code></pre> <p>\u6211\u4eec\u628a\u4e24\u4e2a\u4e32\u4e2d\u76f8\u540c\u7684\u5b50\u4e32\u6309\u7b49\u4ef7\u7c7b\u6765\u7f16\u53f7\uff0c\u5c31\u53d8\u6210\u4e86\uff1a</p> <p>```Plain Text 1 2 3 4 3 5 5 1 2 3 1 2 1 3 3 4 <pre><code>\u7136\u540e\u6211\u4eec\u5199\u6210\u5dee\u5206\u7684\u5f62\u5f0f\uff1a\n\n```C++\n(1) 1 1 1 -1 2 0 -4 1 1\n(1) 1 -1 2 0 0 1\n</code></pre></p> <p>\u597d\u50cf\u6ca1\u4ec0\u4e48\u53d1\u73b0\u2014\u2014\u90a3\u6211\u4eec\u624b\u52a8\u627e\u5230\u660e\u6587\u4e2d\u7684\u5bf9\u5e94\u5bc6\u6587\u7684\u90a3\u4e00\u4e32\u5355\u72ec\u62ce\u51fa\u6765\u5462\uff1f</p> <p>```Plain Text c x c z z a -&gt; 1 2 1 3 3 4 -&gt; 1 -1 2 0 0 1 prvi dr prvi tr tr x -&gt; 1 2 1 3 3 4 -&gt; 1 -1 2 0 0 1 <pre><code>\u6211\u4eec\u60ca\u5947\u7684\u53d1\u73b0\u5b83\u4eec\u8f6c\u5316\u4e3a\u7b49\u4ef7\u7c7b\u53ca\u5176\u5dee\u5206\u662f\u76f8\u540c\u7684\uff01\u8fd9\u91cc\u6211\u4eec\u5c31\u8981\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\u4e4b\u524d\u6211\u4eec\u6ca1\u6709\u53d1\u73b0\uff08\u6216\u8005\u8bf4\u4e3a\u5565\u4e4b\u524d\u4e0d\u76f8\u7b49\uff09\u5462\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u5728\u660e\u6587\u4e2d\u5339\u914d\u5bc6\u6587\u76f8\u5f53\u4e8e\u4e00\u4e2a**\u6ed1\u52a8\u7a97\u53e3**\uff0c\u7a97\u53e3\u5de6\u7aef\u70b9\u4e4b\u524d\u7684\u4fe1\u606f\u6211\u4eec\u662f\u4e0d\u53ef\u4ee5\u8bb0\u5f55\u7684\uff01\n\n\u5bf9\u4e8e\u5b57\u7b26\u4e32\u5339\u914d\uff0c\u6211\u4eec\u81ea\u7136\u60f3\u5f97\u5230\u5b57\u7b26\u4e32\u54c8\u5e0c\u3002\u6240\u4ee5\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u6211\u4eec\u5982\u4f55\u52a8\u6001\u7ef4\u62a4\u7a97\u53e3\u5185\u7684\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u8f83\u597d\u7684\u65b9\u6cd5\u6765\u5b9a\u4e49\u8fd9\u4e2a\u5b57\u7b26\u4e32\u54c8\u5e0c\u6765\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u7ef4\u62a4\u5b83\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8bb0\u660e\u6587\u4e2d\u7b2c $i$ \u4e2a\u5355\u8bcd\u5230\uff08\u7a97\u53e3\u5185\uff09\u4e0a\u4e00\u4e2a\u76f8\u540c\u5355\u8bcd\u7684\u8ddd\u79bb\u662f $a_i$\u200b\uff0c\u5bc6\u6587\u4e2d\u7b2c $i$ \u4e2a\u5355\u8bcd\u5230\u4e0a\u4e00\u4e2a\u76f8\u540c\u5355\u8bcd\u7684\u8ddd\u79bb\u662f $b_i$\u200b\u3002\u7279\u522b\u5730\uff0c\u5982\u679c\u524d\u9762\u6ca1\u6709\u51fa\u73b0\u8fc7\u76f8\u540c\u5355\u8bcd\uff0c\u5219\u5c06\u8ddd\u79bb\u8bb0\u4f5c $-1$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u5355\u8bcd $v$\uff0c\u5f53\u5b83\u6ed1\u51fa\u7a97\u53e3\u65f6\uff0c$v$ \u540e\u9762\u7684\u4e0e\u5b83\u76f8\u540c\u7684\u5355\u8bcd\u7684 $a$ \u503c\u5c31\u4f1a\u53d1\u751f\u6539\u53d8\u3002\u56e0\u6b64\u6211\u4eec\u9884\u5904\u7406\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u8bcd $i$\uff08$i$ \u4e3a\u4e0b\u6807\uff09\uff0c\u5b83\u540e\u9762\u7684\u548c\u5b83\u76f8\u540c\u7684\u5355\u8bcd\u7684\u4f4d\u7f6e $nxt_i$\u3002\u5f53\u6211\u4eec\u7684\u6ed1\u52a8\u7a97\u53e3\u5411\u540e\u6ed1\u52a8\u65f6\uff0c\u5bf9\u6ed1\u51fa\u7a97\u53e3\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32 $i$\uff0c\u627e\u5230 $nxt_i$\uff0c\u4fee\u6539 $a_{nxt_i}$ \u4e3a $-1$\u3002\n\n\u6211\u4eec\u7528\u7a97\u53e3\u5185\u7684 $a_i$ \u548c $b_i$ \u7684\u54c8\u5e0c\u503c\u6765\u5224\u5b9a\u7a97\u53e3\u5185\u7684\u5b57\u7b26\u4e32\u548c\u5bc6\u6587\u662f\u5426\u7b49\u4ef7\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u7a97\u53e3\u662f\u9700\u8981\u6ed1\u52a8\u7684\uff0c\u6545\u5728\u7a97\u53e3\u6ed1\u52a8\u8fc7\u7a0b\u4e2d\uff0c$a_i$ \u7684\u503c\u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u6211\u4eec\u8981\u5feb\u901f\u7ef4\u62a4\u7a97\u53e3\u5185\u7684\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\u3002\n\n\u5b9e\u9645\u4e0a\u5c31\u662f\u533a\u95f4\u54c8\u5e0c\u3002\n\n**Code**\n\n```C++\n/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=5e5+5;\nconst int M=5e4+5;\nconst int INF=2e9+5;\nconst int MOD=2e9+7;\nconst int BASE=17737;\nbool f1;\nint n,m;\nint prea[N], nxta[N], preb[N], nxtb[N];\nint a[N], b[N];\nstring s;\null has[N], hass[N];\nmap &lt;string, int&gt; mp,mp2;\nbool f2;\n\nvoid init(){\n    while(cin &gt;&gt; s){\n        if(s[0] == '$')break;\n        nxta[mp[s]] = ++ n, prea[n] = mp[s], mp[s] = n;\n    }\n    while(cin &gt;&gt; s){\n        if(s[0] == '$')break;\n        nxtb[mp2[s]] = ++ m, preb[m] = mp2[s], mp2[s] = m;\n    }\n\n    for(int i = 1;i &lt;= n;++ i) if(!nxta[i]) nxta[i] = INF;\n    for(int i = 1;i &lt;= m;++ i) if(!nxtb[i]) nxtb[i] = INF;\n\n    for(int i=1;i&lt;=n;i++)a[i]=b[i]=-1;\n    for(int i=1;i&lt;=n;i++)if(prea[i])a[i]=i-prea[i];\n    for(int i=1;i&lt;=m;i++)if(preb[i])b[i]=i-preb[i];\n\n}\nsigned main(){\n\n    init();\n\n    ull h0 = 0, h = 0; \n\n    hass[0] = 1;\n    for(int i = 1;i &lt;= m;++ i) hass[i] = hass[i - 1] * BASE;\n\n\n    for(int i = 1;i &lt;= m;++ i)\n        h0 = h0 * BASE + b[i], h  = h  * BASE + a[i];\n    if(h == h0){//\u7279\u5224\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\n        cout&lt;&lt;1&lt;&lt;endl;\n        return 0;\n    }\n    for(int i = m + 1;i &lt;= n;++ i){\n        h = h * BASE + a[i], h = h - a[i - m] * hass[m];\n\n        if(nxta[i - m] &lt;= i){\n            h = h - a[nxta[i - m]] * hass[i - nxta[i - m]];\n            a[nxta[i - m]] = -1;\n            h = h + a[nxta[i - m]] * hass[i - nxta[i - m]];\n        } else if(nxta[i - m] &lt;= n) a[nxta[i - m]] = -1;\n\n        if(h == h0){\n            cout&lt;&lt;i - m + 1;\n            return 0;\n        }\n    }\n    return 0;\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre></p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_5","title":"\u56de\u6587\u4e32 | [\u56fd\u5bb6\u96c6\u8bad\u961f] \u62c9\u62c9\u961f\u6392\u7ec3","text":"<p>\u3002\\(n\\) \u4e2a\u5973\u751f\u4ece\u5de6\u5230\u53f3\u6392\u6210\u4e00\u884c\uff0c\u6bcf\u4e2a\u4eba\u624b\u4e2d\u90fd\u4e3e\u4e86\u4e00\u4e2a\u5199\u6709 \\(26\\) \u4e2a\u5c0f\u5199\u5b57\u6bcd\u4e2d\u7684\u67d0\u4e00\u4e2a\u7684\u724c\u5b50\u3002</p> <p>\u5982\u679c\u8fde\u7eed\u7684\u4e00\u6bb5\u5973\u751f\uff0c\u6709\u5947\u6570\u4e2a\uff0c\u5e76\u4e14\u4ed6\u4eec\u624b\u4e2d\u7684\u724c\u5b50\u6240\u5199\u7684\u5b57\u6bcd\uff0c\u4ece\u5de6\u5230\u53f3\u548c\u4ece\u53f3\u5230\u5de6\u8bfb\u8d77\u6765\u4e00\u6837\uff0c\u90a3\u4e48\u8fd9\u4e00\u6bb5\u5973\u751f\u5c31\u88ab\u79f0\u4f5c\u548c\u8c10\u5c0f\u7fa4\u4f53\u3002</p> <p>\u73b0\u5728\u96e8\u8368\u60f3\u627e\u51fa\u6240\u6709\u548c\u8c10\u5c0f\u7fa4\u4f53\uff0c\u5e76\u4e14\u6309\u7167\u5973\u751f\u7684\u4e2a\u6570\u964d\u5e8f\u6392\u5e8f\u4e4b\u540e\uff0c\u524d \\(K\\) \u4e2a\u548c\u8c10\u5c0f\u7fa4\u4f53\u7684\u5973\u751f\u4e2a\u6570\u7684\u4e58\u79ef\u662f\u591a\u5c11\u3002\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u96e8\u8368\u53ea\u8981\u4f60\u544a\u8bc9\u5979\uff0c\u7b54\u6848\u9664\u4ee5 \\(19930726\\) \u7684\u4f59\u6570\u662f\u591a\u5c11\u5c31\u884c\u4e86\u3002</p> \u6d4b\u8bd5\u70b9 n K 20 1,000,000 1,000,000,000,000 <p>\u9a6c\u62c9\u8f66+\u6876\u6392\u5e8f+\u5feb\u901f\u5e42\uff0c\u7edf\u8ba1\u7b54\u6848\u7528\u7684\u5c3a\u53d6\u6cd5</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=1e6+5;\nconst int M=5e4+5;\nconst int INF=2e9+5;\nconst int MOD=19930726;\nconst int BASE=17737;\nbool f1;\nint n,m;\n\nchar s[N],str[N*2];\nint d[N*2],cnt[N];\nint len;\nint ans=1,k;\nint ksm(int x,int y) {\n    int res=1;\n    while(y) {\n        if(y&amp;1) res=(res*x)%MOD;\n        x=(x*x)%MOD;\n        y&gt;&gt;=1;\n    }\n    return res;\n}\nvoid getd() {\n    for(int i=1; i&lt;=len; i++) str[i*2-1]='#',str[i*2]=s[i];\n    str[len=len*2+1]='#';\n    int id=0,r=0;\n    for(int i=1; i&lt;=len; i++) {\n        if(i&lt;r) d[i]=min(d[id*2-i],r-i);\n        else d[i]=1;\n        while(d[i]+i&lt;=len &amp;&amp; i-d[i]&gt;=1 &amp;&amp; str[i+d[i]]==str[i-d[i]]) d[i]++;\n        if(d[i]+i&gt;r) id=i,r=i+d[i];\n        if((d[i]-1)%2) cnt[d[i]-1]++;\n    }\n}\n\n\nsigned main() {\n    int sum=0;\n    cin&gt;&gt;n&gt;&gt;k&gt;&gt;s+1;\n    len=n;\n    getd();\n    for(int i=n; i&gt;=1; i--) {\n        if(i%2==0) continue;\n        sum+=cnt[i];\n        if(k&gt;=sum) {\n            ans=(ans*ksm(i,sum))%MOD;\n            k-=sum;\n        } else {\n            ans=(ans*ksm(i,k))%MOD;\n            k-=sum;\n            break;\n        }\n    }\n    if(k&gt;0)cout&lt;&lt;-1&lt;&lt;endl;\n    else cout&lt;&lt;ans;\n    return 0;\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#kmp-noi2014","title":"KMP\u53ca\u5176\u542b\u4e49 | [NOI2014] \u52a8\u7269\u56ed","text":"<p>\u67d0\u5929\uff0c\u56ed\u957f\u7ed9\u52a8\u7269\u4eec\u8bb2\u89e3 KMP \u7b97\u6cd5\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32 \\(S\\)\uff0c\u5b83\u7684\u957f\u5ea6\u4e3a \\(L\\)\u3002\u6211\u4eec\u53ef\u4ee5\u5728 \\(O(L)\\) \u7684\u65f6\u95f4\u5185\uff0c\u6c42\u51fa \\(\\mathrm{next}\\) \u7684\u6570\u7ec4\u3002 \\(\\mathrm{next}\\) \u6570\u7ec4\u7684\u542b\u4e49\uff1a\u5bf9\u4e8e\u5b57\u7b26\u4e32 \\(S\\) \u7684\u524d \\(i\\) \u4e2a\u5b57\u7b26\u6784\u6210\u7684\u5b50\u4e32\uff0c\u65e2\u662f\u5b83\u7684\u540e\u7f00\u53c8\u662f\u5b83\u7684\u524d\u7f00\u7684\u5b57\u7b26\u4e32\u4e2d\uff08\u5b83\u672c\u8eab\u9664\u5916\uff09\uff0c\u6700\u957f\u7684\u957f\u5ea6\u8bb0\u4f5c \\(\\mathrm{next}[i]\\)\u3002\u201d</p> <p>\u4f8b \\(S\\) \u4e3a \\(\\verb!abcababc!\\)\uff0c\u5219 \\(\\mathrm{next}[5]=2\\)\u3002\u56e0\u4e3a\\(S\\)\u7684\u524d\\(5\\)\u4e2a\u5b57\u7b26\u4e3a \\(\\verb!abcab!\\)\uff0c\\(\\verb!ab!\\) \u65e2\u662f\u5b83\u7684\u540e\u7f00\u53c8\u662f\u5b83\u7684\u524d\u7f00\uff0c\u5e76\u4e14\u627e\u4e0d\u5230\u4e00\u4e2a\u66f4\u957f\u7684\u5b57\u7b26\u4e32\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\u3002</p> <p>\u4ed6\u8be6\u7ec6\u8bb2\u89e3\u4e86\u5982\u4f55\u5728 \\(O(L)\\) \u7684\u65f6\u95f4\u5185\u6c42\u51fa \\(\\mathrm{next}\\) \u6570\u7ec4\u3002</p> <p>\u4e2a\u95ee\u9898\uff1a\u201cKMP \u7b97\u6cd5\u53ea\u80fd\u6c42\u51fa \\(\\mathrm{next}\\) \u6570\u7ec4\u3002\u6211\u73b0\u5728\u5e0c\u671b\u6c42\u51fa\u4e00\u4e2a\u66f4\u5f3a\u5927 \\(\\mathrm{num}\\) \u6570\u7ec4\u4e00\u4e00\u5bf9\u4e8e\u5b57\u7b26\u4e32 \\(S\\) \u7684\u524d \\(i\\) \u4e2a\u5b57\u7b26\u6784\u6210\u7684\u5b50\u4e32\uff0c\u65e2\u662f\u5b83\u7684\u540e\u7f00\u540c\u65f6\u53c8\u662f\u5b83\u7684\u524d\u7f00\uff0c\u5e76\u4e14\u8be5\u540e\u7f00\u4e0e\u8be5\u524d\u7f00\u4e0d\u91cd\u53e0\uff0c\u5c06\u8fd9\u79cd\u5b57\u7b26\u4e32\u7684\u6570\u91cf\u8bb0\u4f5c \\(\\mathrm{num}[i]\\)\u3002\u4f8b\u5982 \\(S\\) \u4e3a \\(\\verb!aaaaa!\\)\uff0c\u5219 \\(\\mathrm{num}[4] = 2\\)\u3002\u8fd9\u662f\u56e0\u4e3a\\(S\\)\u7684\u524d \\(4\\) \u4e2a\u5b57\u7b26\u4e3a \\(\\verb!aaaa!\\)\uff0c\u5176\u4e2d \\(\\verb!a!\\) \u548c \\(\\verb!aa!\\) \u90fd\u6ee1\u8db3\u6027\u8d28\u2018\u65e2\u662f\u540e\u7f00\u53c8\u662f\u524d\u7f00\u2019\uff0c\u540c\u65f6\u4fdd\u8bc1\u8fd9\u4e2a\u540e\u7f00\u4e0e\u8fd9\u4e2a\u524d\u7f00\u4e0d\u91cd\u53e0\u3002\u800c \\(\\verb!aaa!\\) \u867d\u7136\u6ee1\u8db3\u6027\u8d28\u2018\u65e2\u662f\u540e\u7f00\u53c8\u662f\u524d\u7f00\u2019\uff0c\u4f46\u9057\u61be\u7684\u662f\u8fd9\u4e2a\u540e\u7f00\u4e0e\u8fd9\u4e2a\u524d\u7f00\u91cd\u53e0\u4e86\uff0c\u6240\u4ee5\u4e0d\u80fd\u8ba1\u7b97\u5728\u5185\u3002\u540c\u7406\uff0c\\(\\mathrm{num}[1] = 0,\\mathrm{num}[2] = \\mathrm{num}[3] = 1,\\mathrm{num}[5] = 2\\)\u3002\u201d</p> <p>\u7279\u522b\u5730\uff0c\u4e3a\u4e86\u907f\u514d\u5927\u91cf\u7684\u8f93\u51fa\uff0c\u4f60\u4e0d\u9700\u8981\u8f93\u51fa \\(\\mathrm{num}[i]\\) \u5206\u522b\u662f\u591a\u5c11\uff0c\u4f60\u53ea\u9700\u8981\u8f93\u51fa\u6240\u6709 \\((\\mathrm{num}[i]+1)\\) \u7684\u4e58\u79ef\uff0c\u5bf9 \\(10^9 + 7\\) \u53d6\u6a21\u7684\u7ed3\u679c\u5373\u53ef\u3002</p> <p>\\(n \\le 5, L \\le 1,000,000\\)</p> <p>\u5373\u6c42\u51fakmp\u7684next\u6570\u7ec4\u9664\u53bb\u524d\u7f00\u4e0e\u540e\u7f00\u91cd\u5408\u7684\u60c5\u51b5\u3002\u5373\u5bf9\u4e8e\\(nxt_i,num_i=min(\\lfloor\\frac{i}{2}\\rfloor,nxt_i)\\)\uff0c\u5bf9\u5417\uff1f</p> <p>\u660e\u663e\u4e0d\u5bf9\uff01</p> <p>nxt_i\u8bb0\u5f55\u7684\u662f\u524d\u7f00i\u4e2d\u6700\u957f\u7684s\u6ee1\u8db3s\u662f\u524d\u7f00i\u7684\u524d\u7f00\u4e5f\u662f\u5176\u540e\u7f00\u3002\u5373nxt_i\u8bb0\u5f55\u7684\u662f\u957f\u5ea6\uff01\u4f46\u662fnum\u8bb0\u5f55\u7684\u662f\u4e2a\u6570\uff01</p> <p>\u6211\u4eec\u5148\u4e0d\u8003\u8651\u4e0d\u91cd\u53e0\u8fd9\u4e2a\u6761\u4ef6\uff0c\u6c42\u51fa\u5f31\u5316\u7248\u7684num'\u3002</p> <p>\u90a3\u4e48num'\u600e\u4e48\u6c42\u5462\uff1f\u5f88\u660e\u663e\u5bf9\u4e8e\u524d\u7f00i\uff0c\u5176\u6240\u6709\u6ee1\u8db3Q(nxt)-Q(\u6700\u957f)\uff08\u8fd9\u91cc\u7684Q\u4ee3\u8868\u6027\u8d28\u95f4\u7684\u8fd0\u7b97\uff09\u7684s\u957f\u5ea6\u7684\u96c6\u5408\u5373\\(\\{nxt_i,nxt_{nxt_i},\\dots\\}\\)\u3002\u4e3a\u4ec0\u4e48\uff1f\u5982\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u6240\u4ee5\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6cd5\u662f\u6211\u4eec\u4ecenxt_i\u4e00\u76f4\u5f80\u4e0b\u9012\u63a8\u3002</p> <p>\u8003\u8651\u9650\u5236\uff0c\u6211\u4eec\u5c31\u662f\u4e00\u76f4\u5f80\u4e0b\u9012\u63a8\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u9012\u63a8\u5230\u7684\u90fd\u662f\u6709\u91cd\u53e0\u7684\u3002\u76f4\u5230nxt_{x}\u2264\\frac{i}{2}\uff0c\u6b64\u65f6\u5f00\u59cb\u6ca1\u6709\u91cd\u53e0\u4e86\uff0c\u5219\u7ee7\u7eed\u5f80\u4e0b\u53ef\u4ee5\u9012\u63a8\u51e0\u5c42\uff0c\u7b54\u6848\u5c31\u662f\u51e0\u3002</p> <p>\u4f46\u5047\u5982\u6211\u4eec\u62ff\u5230\u7684\u4e32\u662f\u4e00\u5806<code>a</code>\uff0c\u90a3\u4e48\u4e0a\u9762\u90a3\u4e2a\u7b97\u6cd5\u5c31\u4f1a\u88ab\u5361\u6210O(n^2)</p> <p>\u6545\u6211\u4eec\u8981\u653e\u5728\u6c42\u89e3nxt\u7684\u65b9\u6cd5\u6765\u6c42\u89e3num</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=1e6+5;\nconst int M=5e4+5;\nconst int INF=2e9+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint n,m;\n\nint nxt[N],nxt_[N];\nint ans;\nstring s;\n\n\nsigned main(){\n    int T=rd;\n    while(T--){\n        cin&gt;&gt;s;\n        n=s.size();\n        memset(nxt,0,sizeof nxt);\n\n        nxt_[0]=0;nxt_[1]=1;\n        for(int i=1,j=0;i&lt;=n;i++){\n            while(j&amp;&amp;s[i]!=s[j]) j=nxt[j];\n            if(s[i]==s[j]) j++;\n            nxt[i+1]=j;\n            nxt_[i+1]=nxt_[j]+1;\n\n        }\n        ans=1;\n\n        for(int i=1,j=0;i&lt;=n;i++){\n            while(j&amp;&amp;s[i]!=s[j]) j=nxt[j];\n            j+=s[i]==s[j];\n            while(j*2&gt;1+i) j=nxt[j];\n            ans=(ans*(nxt_[j]+1))%MOD;\n        }\n        cout&lt;&lt;ans&lt;&lt;endl;\n    }\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#lca-rmq","title":"\u500d\u589e LCA RMQ","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#lca-ahoi2008","title":"LCA | [AHOI2008] \u7d27\u6025\u96c6\u5408 / \u805a\u4f1a","text":"<p>\u6b22\u4e50\u5c9b\u4e0a\u6709\u4e2a\u975e\u5e38\u597d\u73a9\u7684\u6e38\u620f\uff0c\u53eb\u505a\u201c\u7d27\u6025\u96c6\u5408\u201d\u3002\u5728\u5c9b\u4e0a\u5206\u6563\u6709 \\(n\\) \u4e2a\u7b49\u5f85\u70b9\uff0c\u6709 \\(n-1\\) \u6761\u9053\u8def\u8fde\u63a5\u7740\u5b83\u4eec\uff0c\u6bcf\u4e00\u6761\u9053\u8def\u90fd\u8fde\u63a5\u67d0\u4e24\u4e2a\u7b49\u5f85\u70b9\uff0c\u4e14\u901a\u8fc7\u8fd9\u4e9b\u9053\u8def\u53ef\u4ee5\u8d70\u904d\u6240\u6709\u7684\u7b49\u5f85\u70b9\uff0c\u901a\u8fc7\u9053\u8def\u4ece\u4e00\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u8981\u82b1\u8d39\u4e00\u4e2a\u6e38\u620f\u5e01\u3002</p> <p>\u53c2\u52a0\u6e38\u620f\u7684\u4eba\u4e09\u4eba\u4e00\u7ec4\uff0c\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u6240\u6709\u4eba\u5458\u5747\u4efb\u610f\u5206\u6563\u5728\u5404\u4e2a\u7b49\u5f85\u70b9\u4e0a\uff08\u6bcf\u4e2a\u70b9\u540c\u65f6\u5141\u8bb8\u591a\u4e2a\u4eba\u7b49\u5f85\uff09\uff0c\u6bcf\u4e2a\u4eba\u5747\u5e26\u6709\u8db3\u591f\u591a\u7684\u6e38\u620f\u5e01\uff08\u7528\u4e8e\u652f\u4ed8\u4f7f\u7528\u9053\u8def\u7684\u82b1\u8d39\uff09\u3001\u5730\u56fe\uff08\u6807\u660e\u7b49\u5f85\u70b9\u4e4b\u95f4\u9053\u8def\u8fde\u63a5\u7684\u60c5\u51b5\uff09\u4ee5\u53ca\u5bf9\u8bdd\u673a\uff08\u7528\u4e8e\u548c\u540c\u7ec4\u7684\u6210\u5458\u8054\u7cfb\uff09\u3002\u5f53\u96c6\u5408\u53f7\u5439\u54cd\u540e\uff0c\u6bcf\u7ec4\u6210\u5458\u4e4b\u95f4\u8fc5\u901f\u8054\u7cfb\uff0c\u4e86\u89e3\u5230\u81ea\u5df1\u7ec4\u6240\u6709\u6210\u5458\u6240\u5728\u7684\u7b49\u5f85\u70b9\u540e\uff0c\u8fc5\u901f\u5728 \\(n\\) \u4e2a\u7b49\u5f85\u70b9\u4e2d\u786e\u5b9a\u4e00\u4e2a\u96c6\u7ed3\u70b9\uff0c\u7ec4\u5185\u6240\u6709\u6210\u5458\u5c06\u5728\u8be5\u96c6\u5408\u70b9\u96c6\u5408\uff0c\u96c6\u5408\u6240\u7528\u82b1\u8d39\u6700\u5c11\u7684\u7ec4\u5c06\u662f\u6e38\u620f\u7684\u8d62\u5bb6\u3002</p> <p>\u5c0f\u53ef\u53ef\u548c\u4ed6\u7684\u670b\u53cb\u9080\u8bf7\u4f60\u4e00\u8d77\u53c2\u52a0\u8fd9\u4e2a\u6e38\u620f\uff0c\u7531\u4f60\u6765\u9009\u62e9\u96c6\u5408\u70b9\uff0c\u806a\u660e\u7684\u4f60\u80fd\u591f\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\uff0c\u5e2e\u52a9\u5c0f\u53ef\u53ef\u8d62\u5f97\u6e38\u620f\u5417\uff1f</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\leq x,y,z\\leq n\\leq 5\\times10^5\\)\uff0c\\(1\\leq m\\leq 5\\times 10^5\\)\u3002</p> <p>\u7ed3\u8bba\uff1a\u96c6\u7ed3\u70b9\u5e94\u8be5\u5728\u4e09\u4e2a\u70b9\u7684\u4e09\u4e2a\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e2d\u6df1\u5ea6\u6700\u6df1\u7684\u90a3\u4e2a\u70b9\u4e0a\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include &lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\n#define i1n    \\\n    int i = 1; \\\n    i &lt;= n;    \\\n    i++\n#define in1    \\\n    int i = n; \\\n    i &gt;= 1;    \\\n    i--\nusing namespace std;\n\nconst int N = 5e5 + 5;\nconst int M = 1e5;\nconst int Mod = 1e5;\nconst int INF = 1e5;\nvector&lt;int&gt; e[N];\nint n, m, sum, ans1, dep[N], fa[N][22], k, tmp, ans2;\nvoid add(int a, int b) { e[a].push_back(b); }\nvoid dfs1(int u, int faa) {  //\u6c42\u6df1\u5ea6\n\n    dep[u] = dep[faa] + 1;\n    for (int i = 1; i &lt; 21; i++) fa[u][i] = fa[fa[u][i - 1]][i - 1];  // att!\n    for (int i = 0; i &lt; e[u].size(); i++) {\n        int v = e[u][i];\n        if (v == faa)\n            continue;\n        fa[v][0] = u;\n\n        dfs1(v, u);\n    }\n}\nint lca(int u, int v) {\n    if (dep[u] &lt; dep[v])\n        swap(u, v);                  //\u8ba9u\u66f4\u6df1\n    for (int i = 20; i &gt;= 0; i--) {  //\u500d\u589e\u5f80\u4e0a\u8df3 \uff0c\u4e0d\u8981\u66b4\u529b\u8df3\n        if (dep[u] - (1 &lt;&lt; i) &gt;= dep[v])\n            u = fa[u][i];\n    }\n    if (u == v)\n        return u;\n    for (int i = 20; i &gt;= 0; i--) {  //\u500d\u589e\u4e00\u8d77\u5f80\u4e0a\u8df3\n        if (fa[u][i] != fa[v][i])\n            u = fa[u][i], v = fa[v][i];\n    }\n    return fa[u][0];  //\u6ce8\u610f\u8fd4\u56de\u503c\n}\nsigned main() {\n    scanf(\"%lld%lld\", &amp;n, &amp;m);  // use scanf pls,or u'll TLE\n//  cin&gt;&gt;n&gt;&gt;m;\n    for (int i = 1; i &lt; n; i++) {\n        int a, b;\n        scanf(\"%lld%lld\", &amp;a, &amp;b);\n//      cin&gt;&gt;a&gt;&gt;b;\n        add(a, b);\n        add(b, a);\n    }\n    dfs1(1, 0);\n    int l[4],ans;\n    for (int i = 1; i &lt;= m; i++) {\n        int x,y,z;\n        scanf(\"%lld%lld%lld\", &amp;x, &amp;y,&amp;z);\n//      cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;\n        l[1]=lca(x,y),l[2]=lca(x,z),l[3]=lca(y,z);\n        int id=1;\n        for(int k=2;k&lt;=3;k++){\n            if(dep[l[k]]&gt;dep[l[id]])id=k;\n        }\n//      cout&lt;&lt;l[id]&lt;&lt;' ';\n        ans=dep[x]+dep[y]-2*dep[l[id]]+dep[z]+dep[l[id]];\n        if(id==1)ans-=2*dep[lca(x,z)];\n        if(id==2)ans-=2*dep[lca(x,y)];\n        if(id==3)ans-=2*dep[lca(x,z)];\n        printf(\"%lld %lld\\n\",l[id],ans);\n\n\n    }\n\n    return 0;\n}\n</code></pre> <p>printf\u4f18\u5316\u8fd8\u662f\u6709\u7528\u7684\uff01\uff01</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#rmq-haoi2007","title":"RMQ \u5355\u8c03\u961f\u5217 | [HAOI2007] \u7406\u60f3\u7684\u6b63\u65b9\u5f62","text":"<p>\u6709\u4e00\u4e2a \\(a \\times b\\) \u7684\u6574\u6570\u7ec4\u6210\u7684\u77e9\u9635\uff0c\u73b0\u8bf7\u4f60\u4ece\u4e2d\u627e\u51fa\u4e00\u4e2a \\(n \\times n\\) \u7684\u6b63\u65b9\u5f62\u533a\u57df\uff0c\u4f7f\u5f97\u8be5\u533a\u57df\u6240\u6709\u6570\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u6700\u5c0f\u3002</p> <p>\u77e9\u9635\u4e2d\u7684\u6240\u6709\u6570\u90fd\u4e0d\u8d85\u8fc7 \\(1,000,000,000\\)\u3002</p> <p>\\(20\\%\\) \u7684\u6570\u636e \\(2 \\le a,b \\le 100,n \\le a,n \\le b,n \\le 10\\)\u3002</p> <p>\\(100\\%\\) \u7684\u6570\u636e \\(2 \\le a,b \\le 1000,n \\le a,n \\le b,n \\le 100\\)\u3002</p> <p>\u672c\u9898\u4e5f\u53ef\u4ee5\u7528\u4e8c\u7ef4ST\u8868\u901a\u8fc7\u3002\u89c1\u4e0b\u65b9\u535a\u5ba2</p> <p>www.luogu.com.cn</p> <p>\u6211\u4eec\u7528\u4e24\u6b21\u5355\u8c03\u961f\u5217\u6765\u7ef4\u62a4\u7b54\u6848\u3002</p> <p>\u4ee5\u6700\u5927\u503c\u4e3a\u4f8b\u3002\u6211\u4eec\u5148\u5bf9\u539f\u6570\u7ec4\u7684\u7b2ci\u884c\u533a\u95f4[j,j+n-1]\u8ba1\u7b97\u51fa\u533a\u95f4\\(\\max\\)\u4e3a\\(mx_{i,j}\\)\u3002\u7136\u540e\u5bf9\\(mx\\)\u6570\u7ec4\u7684\u7b2cj\u5217[i,i+n-1]\u884c\u8ba1\u7b97\u51fa\u533a\u95f4\\(\\max\\)\u4e3a\\(qmx_{i,j}\\)\u3002\u90a3\u4e48\\(qmx_{i,j}\\)\u5b9e\u9645\u4e0a\u5c31\u662f\u77e9\u5f62\\([(i,j)(i+n-1,j+n-1)]\\)\u4e2d\u7684\\(\\max\\)</p> <p>\u4e8c\u7ef4ST\u8868std</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n// #define nl putc('\\n')\n#define ot write\n#define nl putchar('\\n')\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=1e3+5;\nconst int M=5e4+5;\nconst int INF=2e9+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint n,m;\n\nint mx[N][N],mn[N][N],qmx[N][N],qmn[N][N];\nint b;\n\n\nconst int maxlog = 10;\n\nint a, s;\nint lg;\nint c[N][N],mxx[N][N], mnn[N][N];;\nint ans = INF;\n\nint query (int x, int y){\n    int mx = 0, mn = 0;\n    mx = max(mxx[x][y], max(mxx[x+n-(1&lt;&lt;lg)][y+n-(1&lt;&lt;lg)], max(mxx[x+n-(1&lt;&lt;lg)][y], mxx[x][y+n-(1&lt;&lt;lg)])));\n    mn = min(mnn[x][y], min(mnn[x+n-(1&lt;&lt;lg)][y+n-(1&lt;&lt;lg)], min(mnn[x+n-(1&lt;&lt;lg)][y], mnn[x][y+n-(1&lt;&lt;lg)])));\n    return mx - mn;\n}\n\nsigned main (){\n    a=rd,b=rd,n=rd;\n    for (int i = 0; i &lt; a; i++)\n        for (int j = 0; j &lt; b; j++) {\n            scanf(\"%d\", &amp;c[i][j]);\n            mxx[i][j] = mnn[i][j] = c[i][j];\n        }\n\n    for (lg = 0; ((1&lt;&lt;(lg+1)) &lt;= n); lg++);\n    for (int k = 0; k &lt; lg; k++)\n        for (int i = 0; i+(1&lt;&lt;k) &lt; a; i++)\n            for (int j = 0; j+(1&lt;&lt;k) &lt; b; j++) {\n                mxx[i][j] = max(mxx[i][j], max(mxx[i+(1&lt;&lt;k)][j+(1&lt;&lt;k)], max(mxx[i+(1&lt;&lt;k)][j], mxx[i][j+(1&lt;&lt;k)])));\n                mnn[i][j] = min(mnn[i][j], min(mnn[i+(1&lt;&lt;k)][j+(1&lt;&lt;k)], min(mnn[i+(1&lt;&lt;k)][j], mnn[i][j+(1&lt;&lt;k)])));\n            }\n\n    for (int i = 0; i &lt;= a-n; i++)\n        for (int j = 0; j &lt;= b-n; j++)\n            ans = min(ans, query(i, j));\n\n    cout &lt;&lt; ans;\n    fclose(stdin);\n    return 0;\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#st-jrksj-r2-01","title":"ST\u8868 | [JRKSJ R2] 01 \u5e8f\u5217","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684 \\(01\\) \u5e8f\u5217 \\(a\\)\uff0c\\(m\\) \u6b21\u8be2\u95ee\uff0c\u652f\u6301 \\(2\\) \u79cd\u8be2\u95ee\uff1a</p> <ul> <li> <p><code>1 l r</code> \u8868\u793a\u8be2\u95ee \\(l\\) \u5230 \\(r\\) \u533a\u95f4\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p> </li> <li> <p><code>2 l r</code> \u8868\u793a\u8be2\u95ee \\(l\\) \u5230 \\(r\\) \u533a\u95f4\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p> </li> </ul> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n\\le 10^6\\)\uff0c\\(1\\le m\\le 5\\times10^6\\)\uff0c\\(0\\le a_i\\le 1\\)\u3002</p> <p>\u672c\u9898\u8f93\u5165\u8f93\u51fa\u91cf\u6781\u5927\uff0c\u8fd9\u91cc\u7ed9\u51fa\u51fa\u9898\u4eba\u4f7f\u7528\u7684\u5feb\u8bfb\u5feb\u5199\u3002\uff08\u5f53\u7136\uff0c\u4f7f\u7528\u60a8\u81ea\u5df1\u7f16\u5199\u7684\u5927\u6982\u7387\u4e5f\u80fd\u901a\u8fc7\uff09</p> <pre><code>namespace IO{//by cyffff\n    int len=0;\n    char ibuf[(1&lt;&lt;20)+1],*iS,*iT,out[(1&lt;&lt;26)+1];\n    #define gh() (iS==iT?iT=(iS=ibuf)+fread(ibuf,1,(1&lt;&lt;20)+1,stdin),(iS==iT?EOF:*iS++):*iS++)\n    #define reg register\n    inline int read(){\n        reg char ch=gh();\n        reg int x=0;\n        reg char t=0;\n        while(ch&lt;'0'||ch&gt;'9')   t|=ch=='-',ch=gh();\n        while(ch&gt;='0'&amp;&amp;ch&lt;='9') x=x*10+(ch^48),ch=gh();\n        return t?-x:x;\n    }\n    inline void putc(char ch){\n        out[len++]=ch;\n    }\n    template&lt;class T&gt;\n    inline void write(T x){\n        if(x&lt;0)putc('-'),x=-x;\n        if(x&gt;9)write(x/10);\n        out[len++]=x%10+48;\n    }\n    inline void flush(){\n        fwrite(out,1,len,stdout);\n        len=0;\n    }\n}\nusing IO::read;\nusing IO::write;\nusing IO::flush;\nusing IO::putc;\n</code></pre> <p>\u4f7f\u7528\u8fd9\u79cd\u5feb\u8bfb\u5feb\u5199\u8bfb\u5165\u4e00\u4e2a\u6570 \\(x\\) \u65f6\u8bf7\u4f7f\u7528\u8bed\u53e5 <code>x=read();</code>\uff0c\u8f93\u51fa\u65f6\u4f7f\u7528\u8bed\u53e5 <code>write(x);</code>\u3002\u6ce8\u610f\uff0c\u6362\u884c\u65f6\u9700\u4f7f\u7528\u8bed\u53e5 <code>putc('\\n');</code>\uff0c\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f\u65f6\u4f7f\u7528\u8bed\u53e5 <code>flush();</code>\u3002</p> <p>\u5728\u4f7f\u7528\u6b64\u5feb\u8bfb\u65f6\u8bf7\u52a0\u4e0a <code>#include&lt;bits/stdc++.h&gt;</code>\u3002</p> <p>\u5982\u679c\u672c\u5730\u65e0\u6cd5\u8f93\u5165\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 \u8fd9\u91cc\u7684\u5feb\u8bfb\u5feb\u5199\u3002</p> <p>\u82e5\u4ecd\u770b\u4e0d\u61c2\uff0c\u8bf7\u5728\u8d5b\u65f6\u7b54\u7591\u5e16\u56de\u590d/\u79c1\u4fe1\u51fa\u9898\u4eba\u3002</p> <p>\u7531\u4e8e\u51fa\u9898\u4eba\u53ea\u4f1a <code>C++</code>\uff0c\u672c\u5904\u65e0\u6cd5\u7ed9\u51fa\u5176\u4ed6\u8bed\u8a00\u7684\u5feb\u8bfb\u5feb\u5199\uff0c\u6df1\u611f\u6b49\u610f\u3002</p> <p>\u8bbe \\(pre_{x,i}=\\sum_{j=1}^i[a_i=x]\\)\uff0c\uff08\\(0\\le x\\le1\\)\uff0c\\(1\\le i\\le n\\)\uff09\u3002</p> <p>\u7b2c\u4e00\u95ee\uff1a</p> <p>\u5176\u5b9e\u672c\u8d28\u662f\u6c42 \\(\\max_{i=l}^r( pre_{0,i}-pre_{0,l-1}+pre_{1,r}-pre_{1,i})\\)\u3002</p> <p>\u600e\u4e48\u7406\u89e3\u8fd9\u4e2a\u67ff\u5b50\u5462\uff1f\u663e\u7136 \\(pre\\) \u662f\u524d\u7f00\u548c\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5 \\(pre_{0,i}-pre_{0,l-1}\\) \u5373 \\(\\sum_{j=l}^i[a_i=0]\\)\uff0c\\(pre_{1,r}-pre_{1,i}\\) \u5373 \\(\\sum_{j=i+1}^r[a_i=1]\\)\u3002\u6211\u4eec\u53ef\u4ee5\u7406\u89e3 \\(i\\) \u4e3a\u5206\u754c\u7ebf\uff0c\u5206\u754c\u7ebf\u524d\u9009 \\(0\\)\uff0c\u5206\u754c\u7ebf\u540e\u9009 \\(1\\)\uff0c\u679a\u4e3e\u6240\u6709 \\(l\\le i\\le r\\)\uff0c\u663e\u7136\u53ef\u4ee5\u53d6\u5230\u6700\u5927\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(mn)\\)\u3002</p> <p>\u8fd8\u9700\u8981\u7279\u5224\u53ea\u9009 \\(1\\) \u7684\u60c5\u51b5\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u770b\u4e3a\u6c42 \\(\\displaystyle\\max_{i=l-1}^rpre_{0,i}-pre_{0,l-1}+pre_{1,r}-pre_{1,i}\\)\u3002</p> <p>\u4e0a\u9762\u90a3\u4e2a\u4e1c\u897f\u53ef\u4ee5\u5957\u8defST\u8868\u5904\u7406\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n\\log n+m)\\)\uff0c\u671f\u671b\u5f97\u5206 \\(100\\text{pts}\\)\u3002</p> <p>\u5f53\u7136\u5f00 \\(2\\) \u4e2aST\u8868\u5e38\u6570\u8f83\u5927\u3002</p> <p>\u7528 <code>+1-1RMQ</code> \u53ef\u4ee5\u505a\u5230\u4e25\u683c \\(O(n+m)\\)\uff0c\u5e38\u6570\u8f83\u5927\uff0c\u4e0d\u505a\u4e3a\u672c\u9898\u6700\u4f18\u505a\u6cd5\u3002</p> <p>\u4e00\u4e2a\u51cf\u5c0f\u5e38\u6570\u65b9\u6cd5\uff1a</p> <p>\u53d1\u73b0\u7b2c\u4e8c\u95ee\u53ea\u6709 \\(1\\) \u548c \\(2\\) \u4e24\u79cd\u7b54\u6848\uff0c\u8981\u6709 \\(2\\) \u5219\u533a\u95f4\u4e2d\u5fc5\u987b\u51fa\u73b0\u8fde\u7eed\u7684 \\(0-1\\)\uff0c\u4e8e\u662f\u6211\u4eec\u7ef4\u62a4 \\(0-1\\) \u51fa\u73b0\u6b21\u6570\u7684\u524d\u7f00\u548c\uff0c\u5982\u679c\u5de6\u7aef\u70b9\u524d\u7f00\u548c\u7b49\u4e8e\u53f3\u7aef\u70b9\u524d\u7f00\u548c\uff0c\u5219\u7b54\u6848\u4e3a \\(1\\)\uff0c\u5426\u5219\u4e3a \\(2\\)\u3002\u53ef\u4ee5\u5927\u5927\u51cf\u5c0f\u5e38\u6570\uff0c\u5982\u679c\u5b9e\u73b0\u4f18\u79c0\uff0c\u5219\u53ef\u4ee5\u6240\u6709\u70b9\u8fdb 1s\u3002</p> <p>\u4e0d\u5199fread\u4f1aTLE1\u70b9\uff0c\u7528\u5feb\u8bfb\u4e5f\u4e0d\u884c\u3002</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define nl putc('\\n')\n#define ot write\n// #define nl putchar('\\n')\n// inline int rd\n// {\n//  int xx=0,ff=1;\n//  char ch=getchar();\n//  while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n//  while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n//  return xx*ff;\n// }\n// inline void write(int out)\n// {\n//  if(out&lt;0) putchar('-'),out=-out;\n//  if(out&gt;9) write(out/10);\n//  putchar(out%10+'0');\n// }\n\nnamespace IO{//by cyffff\n    int len=0;\n    char ibuf[(1&lt;&lt;20)+1],*iS,*iT,out[(1&lt;&lt;26)+1];\n    #define gh() (iS==iT?iT=(iS=ibuf)+fread(ibuf,1,(1&lt;&lt;20)+1,stdin),(iS==iT?EOF:*iS++):*iS++)\n    #define reg register\n    inline int read(){\n        reg char ch=gh();\n        reg int x=0;\n        reg char t=0;\n        while(ch&lt;'0'||ch&gt;'9')   t|=ch=='-',ch=gh();\n        while(ch&gt;='0'&amp;&amp;ch&lt;='9') x=x*10+(ch^48),ch=gh();\n        return t?-x:x;\n    }\n    inline void putc(char ch){\n        out[len++]=ch;\n    }\n    template&lt;class T&gt;\n    inline void write(T x){\n        if(x&lt;0)putc('-'),x=-x;\n        if(x&gt;9)write(x/10);\n        out[len++]=x%10+48;\n    }\n    inline void flush(){\n        fwrite(out,1,len,stdout);\n        len=0;\n    }\n}\nusing IO::read;\nusing IO::write;\nusing IO::flush;\nusing IO::putc;\n\nconst int N=1e6+5;\nconst int M=5e4+5;\nconst int INF=2e9+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint n,m;\n\nint pre0[N],pre1[N],qz[N];\nint lg[N],st[N][20];\nint a[N],b[N];\nint ans;\nstring s;\n\nvoid init(){\n    for(int i=2;i&lt;=n;i++){\n        lg[i]=lg[i&gt;&gt;1]+1;\n        st[i][0]=b[i];\n    }\n    for(int i=1;i&lt;=19;i++){\n        for(int j=1;j+(1&lt;&lt;i)-1&lt;=n;j++){\n            st[j][i]=max(st[j][i-1],st[j+(1&lt;&lt;(i-1))][i-1]);\n        }\n    }\n\n}\n\n\nsigned main(){\n    n=rd;m=rd;\n\n    for(int i=1;i&lt;=n;i++)a[i]=rd;\n    for(int i=1;i&lt;=n;i++)pre0[i]=pre0[i-1]+(a[i]==0);\n    for(int i=1;i&lt;=n;i++)pre1[i]=pre1[i-1]+(a[i]==1);\n    for(int i=1;i&lt;=n;i++)b[i]=pre0[i]-pre1[i];\n    for(int i=2;i&lt;=n;i++){\n        qz[i]=qz[i-1];\n        if(a[i]==1&amp;&amp;a[i-1]==0)qz[i]++;\n    }\n\n    init();\n\n    while(m--){\n        int op=rd,l=rd,r=rd;\n        if(op==1){\n            int k=lg[r-l+1];\n            ot(max(pre1[r]-pre1[l-1],max(st[l][k],st[r-(1&lt;&lt;k)+1][k])-pre0[l-1]+pre1[r]));\n          //\u8bb0\u5f97\u8fd8\u6709\u53ea\u90091\u7684\u60c5\u51b5\uff01\uff01\n            nl;\n        }else{\n            if(qz[r]-qz[l])ot(2);\n            else ot(1);\n            nl;\n        }\n\n    }\n    flush();\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#day3","title":"day3","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_6","title":"\u25bc \u641c\u7d22","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#noip2011-mayan","title":"\u66b4\u529b\u641c\u7d22&amp;\u7801\u529b\u5de8\u641c | [NOIP2011 \u63d0\u9ad8\u7ec4] Mayan \u6e38\u620f","text":"<p>Mayan puzzle \u662f\u6700\u8fd1\u6d41\u884c\u8d77\u6765\u7684\u4e00\u4e2a\u6e38\u620f\u3002\u6e38\u620f\u754c\u9762\u662f\u4e00\u4e2a\\(7\\) \u884c \\(\\times5\\) \u5217\u7684\u68cb\u76d8\uff0c\u4e0a\u9762\u5806\u653e\u7740\u4e00\u4e9b\u65b9\u5757\uff0c\u65b9\u5757\u4e0d\u80fd\u60ac\u7a7a\u5806\u653e\uff0c\u5373\u65b9\u5757\u5fc5\u987b\u653e\u5728\u6700\u4e0b\u9762\u4e00\u884c\uff0c\u6216\u8005\u653e\u5728\u5176\u4ed6\u65b9\u5757\u4e4b\u4e0a\u3002\u6e38\u620f\u901a\u5173\u662f\u6307\u5728\u89c4\u5b9a\u7684\u6b65\u6570\u5185\u6d88\u9664\u6240\u6709\u7684\u65b9\u5757\uff0c\u6d88\u9664\u65b9\u5757\u7684\u89c4\u5219\u5982\u4e0b\uff1a</p> <ol> <li>\u6bcf\u6b65\u79fb\u52a8\u53ef\u4ee5\u4e14\u4ec5\u53ef\u4ee5\u6cbf\u6a2a\u5411\uff08\u5373\u5411\u5de6\u6216\u5411\u53f3\uff09\u62d6\u52a8\u67d0\u4e00\u65b9\u5757\u4e00\u683c\uff1a\u5f53\u62d6\u52a8\u8fd9\u4e00\u65b9\u5757\u65f6\uff0c\u5982\u679c\u62d6\u52a8\u540e\u5230\u8fbe\u7684\u4f4d\u7f6e\uff08\u4ee5\u4e0b\u79f0\u76ee\u6807\u4f4d\u7f6e\uff09\u4e5f\u6709\u65b9\u5757\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u65b9\u5757\u5c06\u4ea4\u6362\u4f4d\u7f6e\uff08\u53c2\u89c1\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\u8bf4\u660e\u4e2d\u7684\u56fe \\(6\\) \u5230\u56fe \\(7\\)\uff09\uff1b\u5982\u679c\u76ee\u6807\u4f4d\u7f6e\u4e0a\u6ca1\u6709\u65b9\u5757\uff0c\u90a3\u4e48\u88ab\u62d6\u52a8\u7684\u65b9\u5757\u5c06\u4ece\u539f\u6765\u7684\u7ad6\u5217\u4e2d\u62bd\u51fa\uff0c\u5e76\u4ece\u76ee\u6807\u4f4d\u7f6e\u4e0a\u6389\u843d\uff08\u76f4\u5230\u4e0d\u60ac\u7a7a\uff0c\u53c2\u89c1\u4e0b\u9762\u56fe \\(1\\) \u548c\u56fe \\(2\\)\uff09\uff1b</li> </ol> <p></p> <ol> <li>\u4efb\u4e00\u65f6\u523b\uff0c\u5982\u679c\u5728\u4e00\u6a2a\u884c\u6216\u8005\u7ad6\u5217\u4e0a\u6709\u8fde\u7eed\u4e09\u4e2a\u6216\u8005\u4e09\u4e2a\u4ee5\u4e0a\u76f8\u540c\u989c\u8272\u7684\u65b9\u5757\uff0c\u5219\u5b83\u4eec\u5c06\u7acb\u5373\u88ab\u6d88\u9664\uff08\u53c2\u89c1\u56fe1 \u5230\u56fe3\uff09\u3002</li> </ol> <p></p> <p>\u6ce8\u610f\uff1a</p> <p>a) \u5982\u679c\u540c\u65f6\u6709\u591a\u7ec4\u65b9\u5757\u6ee1\u8db3\u6d88\u9664\u6761\u4ef6\uff0c\u51e0\u7ec4\u65b9\u5757\u4f1a\u540c\u65f6\u88ab\u6d88\u9664\uff08\u4f8b\u5982\u4e0b\u9762\u56fe \\(4\\)\uff0c\u4e09\u4e2a\u989c\u8272\u4e3a \\(1\\) \u7684\u65b9\u5757\u548c\u4e09\u4e2a\u989c\u8272\u4e3a \\(2\\) \u7684\u65b9\u5757\u4f1a\u540c\u65f6\u88ab\u6d88\u9664\uff0c\u6700\u540e\u5269\u4e0b\u4e00\u4e2a\u989c\u8272\u4e3a \\(2\\) \u7684\u65b9\u5757\uff09\u3002</p> <p>b) \u5f53\u51fa\u73b0\u884c\u548c\u5217\u90fd\u6ee1\u8db3\u6d88\u9664\u6761\u4ef6\u4e14\u884c\u5217\u5171\u4eab\u67d0\u4e2a\u65b9\u5757\u65f6\uff0c\u884c\u548c\u5217\u4e0a\u6ee1\u8db3\u6d88\u9664\u6761\u4ef6\u7684\u6240\u6709\u65b9\u5757\u4f1a\u88ab\u540c\u65f6\u6d88\u9664\uff08\u4f8b\u5982\u4e0b\u9762\u56fe5 \u6240\u793a\u7684\u60c5\u5f62\uff0c\\(5\\) \u4e2a\u65b9\u5757\u4f1a\u540c\u65f6\u88ab\u6d88\u9664\uff09\u3002</p> <ol> <li>\u65b9\u5757\u6d88\u9664\u4e4b\u540e\uff0c\u6d88\u9664\u4f4d\u7f6e\u4e4b\u4e0a\u7684\u65b9\u5757\u5c06\u6389\u843d\uff0c\u6389\u843d\u540e\u53ef\u80fd\u4f1a\u5f15\u8d77\u65b0\u7684\u65b9\u5757\u6d88\u9664\u3002\u6ce8\u610f\uff1a\u6389\u843d\u7684\u8fc7\u7a0b\u4e2d\u5c06\u4e0d\u4f1a\u6709\u65b9\u5757\u7684\u6d88\u9664\u3002</li> </ol> <p>\u4e0a\u9762\u56fe \\(1\\) \u5230\u56fe \\(3\\) \u7ed9\u51fa\u4e86\u5728\u68cb\u76d8\u4e0a\u79fb\u52a8\u4e00\u5757\u65b9\u5757\u4e4b\u540e\u68cb\u76d8\u7684\u53d8\u5316\u3002\u68cb\u76d8\u7684\u5de6\u4e0b\u89d2\u65b9\u5757\u7684\u5750\u6807\u4e3a \\((0,0)\\)\uff0c\u5c06\u4f4d\u4e8e \\((3,3)\\) \u7684\u65b9\u5757\u5411\u5de6\u79fb\u52a8\u4e4b\u540e\uff0c\u6e38\u620f\u754c\u9762\u4ece\u56fe \\(1\\) \u53d8\u6210\u56fe \\(2\\) \u6240\u793a\u7684\u72b6\u6001\uff0c\u6b64\u65f6\u5728\u4e00\u7ad6\u5217\u4e0a\u6709\u8fde\u7eed\u4e09\u5757\u989c\u8272\u4e3a \\(4\\) \u7684\u65b9\u5757\uff0c\u6ee1\u8db3\u6d88\u9664\u6761\u4ef6\uff0c\u6d88\u9664\u8fde\u7eed \\(3\\) \u5757\u989c\u8272\u4e3a \\(4\\) \u7684\u65b9\u5757\u540e\uff0c\u4e0a\u65b9\u7684\u989c\u8272\u4e3a \\(3\\) \u7684\u65b9\u5757\u6389\u843d\uff0c\u5f62\u6210\u56fe \\(3\\) \u6240\u793a\u7684\u5c40\u9762\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(0&lt;n \\le 5\\)\u3002</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#poi2008-sta-station","title":"\u904d\u5386\u6811 | [POI2008] STA-Station","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(n\\) \u4e2a\u70b9\u7684\u6811\uff0c\u8bf7\u6c42\u51fa\u4e00\u4e2a\u7ed3\u70b9\uff0c\u4f7f\u5f97\u4ee5\u8fd9\u4e2a\u7ed3\u70b9\u4e3a\u6839\u65f6\uff0c\u6240\u6709\u7ed3\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\u6700\u5927\u3002</p> <p>\u4e00\u4e2a\u7ed3\u70b9\u7684\u6df1\u5ea6\u4e4b\u5b9a\u4e49\u4e3a\u8be5\u8282\u70b9\u5230\u6839\u7684\u7b80\u5355\u8def\u5f84\u4e0a\u8fb9\u7684\u6570\u91cf\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(1 \\leq n \\leq 10^6\\)\uff0c\\(1 \\leq u, v \\leq n\\)\uff0c\u7ed9\u51fa\u7684\u662f\u4e00\u68f5\u6811\u3002</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#bfs-usaco07oct-obstacle-course-s","title":"BFS | [USACO07OCT] Obstacle Course S","text":"<p>\\(N\\times N\\ (1\\le N\\le 100)\\) \u65b9\u683c\u4e2d\uff0c\\(\\verb!x!\\) \u8868\u793a\u4e0d\u80fd\u884c\u8d70\u7684\u683c\u5b50\uff0c\\(\\verb!.!\\) \u8868\u793a\u53ef\u4ee5\u884c\u8d70\u7684\u683c\u5b50\u3002\u5361\u95e8\u5f88\u80d6\uff0c\u6545\u800c\u4e0d\u597d\u8f6c\u5f2f\u3002\u73b0\u5728\u8981\u4ece \\(A\\) \u70b9\u8d70\u5230 \\(B\\) \u70b9\uff0c\u8bf7\u95ee\u6700\u5c11\u8981\u8f6c \\(90\\) \u5ea6\u5f2f\u591a\u5c11\u6b21\uff1f</p> <pre><code>. . B x . \n. x x A . \n. . . x . \n. x . . . \n. . x . . \n</code></pre> <p>\u5bf9\u4e8e\u5168\u90e8\u6570\u636e\uff0c\u4fdd\u8bc1 \\(2\\le N\\le 100\\)\u3002</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#bfsdfs-noi2013","title":"BFS\u4e0eDFS\u6027\u8d28\u63a2\u7a76 | [NOI2013] \u6811\u7684\u8ba1\u6570","text":"<p>\u6211\u4eec\u77e5\u9053\u4e00\u68f5\u6709\u6839\u6811\u53ef\u4ee5\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff08DFS\uff09\u4ee5\u53ca\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff08BFS\uff09\u6765\u751f\u6210\u8fd9\u68f5\u6811\u7684 DFS \u5e8f\u4ee5\u53ca BFS \u5e8f\u3002\u4e24\u68f5\u4e0d\u540c\u7684\u6811\u7684 DFS \u5e8f\u6709\u53ef\u80fd\u76f8\u540c\uff0c\u5e76\u4e14\u5b83\u4eec\u7684 BFS \u5e8f\u4e5f\u6709\u53ef\u80fd\u76f8\u540c\uff0c\u4f8b\u5982\u4e0b\u9762\u4e24\u68f5\u6811\u7684 DFS \u5e8f\u90fd\u662f <code>1 2 4 5 3</code>\uff0cBFS \u5e8f\u90fd\u662f <code>1 2 3 4 5</code>\u3002</p> <p></p> <p>\u73b0\u7ed9\u5b9a\u4e00\u4e2a DFS \u5e8f\u548c BFS \u5e8f\uff0c\u6211\u4eec\u60f3\u8981\u77e5\u9053\uff0c\u7b26\u5408\u6761\u4ef6\u7684\u6709\u6839\u6811\u4e2d\uff0c\u6811\u7684\u9ad8\u5ea6\u7684\u5e73\u5747\u503c\u3002\u5373\uff0c\u5047\u5982\u5171\u6709 \\(K\\) \u68f5\u4e0d\u540c\u7684\u6709\u6839\u6811\u5177\u6709\u8fd9\u7ec4 DFS \u5e8f\u548c BFS \u5e8f\uff0c\u4e14\u4ed6\u4eec\u7684\u9ad8\u5ea6\u5206\u522b\u662f \\(h_1, h_2, \\ldots, h_K\\)\uff0c\u90a3\u4e48\u8bf7\u4f60\u8f93\u51fa\uff1a</p> <p>\\(\\frac{h_1+h_2+\\ldots+h_K}K\\)</p> <ul> <li>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u6ee1\u8db3\uff1a\\(2 \\le n \\le 2 \\times 10^5\\)\u3002</li> </ul> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include &lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\n\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n\nconst int N = 2e5+5;\nconst int M = 1e5;\nconst int MOD = 1e9+7;\nconst int INF = 1e9+5;\n\nint n, m, t;\nint cf[N],dfn[N],bfn[N],res,  cnt;\ndb ans;\n\nvoid vis(int l,int r){\n    cf[l]++,cf[r+1]--;\n}\n\nsigned main() {\n    n=rd;\n    for(int i=1;i&lt;=n;i++)dfn[rd]=i;\n    for(int i=1;i&lt;=n;i++)bfn[dfn[rd]]=i;\n\n    for(int i=1;i&lt;=n;i++)dfn[bfn[i]]=i;\n\n    ans=1;vis(1,1);\n\n    for(int i=1;i&lt;n;i++){\n        if(dfn[i]&gt;dfn[i+1])ans+=1,vis(i,i);\n        if(bfn[i]&lt;bfn[i+1]-1)vis(bfn[i],bfn[i+1]-1);\n    }\n    for(int i=1;i&lt;n;i++){\n        res+=cf[i]; \n        if(!res)ans+=0.5;\n    }\n\n    printf(\"%.3lf\",ans+1);\n\n}\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#day4","title":"day4","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_7","title":"\u25bc \u5206\u6cbb","text":"<p>\u5206\u6cbb\u5206\u7c7b\u6cdb\u6cdb\u800c\u8c08\uff0c\u53ea\u8981\u6c42\u5b8c\u6210\u9006\u5e8f\u5bf9\u7684\u7ec3\u4e60\u5373\u53ef\u3002</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#cdq-cqoi2011","title":"CDQ\u5206\u6cbb | [CQOI2011] \u52a8\u6001\u9006\u5e8f\u5bf9","text":"<p>\u5bf9\u4e8e\u5e8f\u5217 \\(a\\)\uff0c\u5b83\u7684\u9006\u5e8f\u5bf9\u6570\u5b9a\u4e49\u4e3a\u96c6\u5408 \\(\\{(i,j)| i&lt;j \\wedge a_i &gt; a_j \\}\\) \u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u3002</p> <p>\u73b0\u5728\u7ed9\u51fa \\(1\\sim n\\) \u7684\u4e00\u4e2a\u6392\u5217\uff0c\u6309\u7167\u67d0\u79cd\u987a\u5e8f\u4f9d\u6b21\u5220\u9664 \\(m\\) \u4e2a\u5143\u7d20\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u5728\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u5143\u7d20**\u4e4b\u524d**\u7edf\u8ba1\u6574\u4e2a\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n \\le 10^5\\)\uff0c\\(1\\le m \\le 50000\\)\u3002</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#-","title":"\ud83d\ude0a\u7ecf\u5178\u5206\u6cbb-\u5f52\u5e76\u6392\u5e8f | \u6c42\u9006\u5e8f\u5bf9","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nlong long a[10000001],n,b[10000001],ans;\nvoid msort(int l,int r){\n    if(l==r)return;\n    int mid=(l/2,i=l,j=mid+1,k=l;\n    msort(l,mid);msort(mid+1,r);\n    while(i&lt;=mid&amp;&amp;j&lt;=r){\n        if(a[i]&lt;=a[j])b[k++]=a[i++];\n        else {b[k++]=a[j++];ans+=mid-i+1;}\n    }\n    while(i&lt;=mid)b[k++]=a[i++];\n    while(j&lt;=r)b[k++]=a[j++];\n    for(int i=l;i&lt;=r;i++)a[i]=b[i];\n}\nint main() {\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++)scanf(\"%lld\",&amp;a[i]);\n    msort(1,n);\n    printf(\"%lld\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_8","title":"\u5206\u6cbb\u5e94\u7528 | \u7535\u963b\u7f51\u7edc","text":"<p>\u4ec0\u4e48\u662f\u7535\u963b?\u8fd9\u4e2a\u5927\u5bb6\u5e94\u8be5\u90fd\u77e5\u9053\u3002\u4ec0\u4e48\u662f\u7535\u8def?\u5927\u5bb6\u4e5f\u5e94\u8be5\u77e5\u9053\u3002\u4f46\u662f\u672c\u9898\u5f53\u4e2d\uff0c\u7535\u8def\u7684\u5b9a\u4e49\u6216\u8bb8\u6709\u70b9\u4e0d\u540c\uff1a</p> <p>\u7535\u8def\u90fd\u5e26\u6709\u6b63\u3001\u8d1f\u6781\u63a5\u70b9\uff0c\u6b63\u6781\u5728\u5de6\uff0c\u8d1f\u6781\u5728\u53f3\u3002\u5177\u4f53\u5730\uff1a\u7535\u8def\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a</p> <p>\u5355\u72ec\u7684\u4e00\u4e2a1\u03a9\u7535\u963b(\u53ca\u5176\u4e24\u7aef\u7684\u63a5\u70b9)\u662f\u7535\u8def(\u867d\u7136\u5bfc\u7ebf\u4e5f\u53ef\u4ee5\u88ab\u89c6\u4e3a0\u03a9\u7684\u7535\u963b\uff0c\u4f46\u662f\u5355\u72ec\u7684\u5bfc\u7ebf\u4e0d\u662f\u7535\u8def)</p> <p>\u5982\u679cA\u548cB\u90fd\u662f\u7535\u8def\uff0c\u8bbe1,2,3\u662f\u4ece\u5de6\u5230\u53f3\u7684\u4e09\u4e2a\u63a5\u70b9\uff0c\u90a3\u4e48\u5c06A\u7684\u6b63\u8d1f\u6781\u5206\u522b\u63a5\u57281\u4e0e2\u4e0a\uff0c\u5c06B\u7684\u6b63\u8d1f\u6781\u5206\u522b\u63a5\u57282\u4e0e3\u4e0a\uff0c\u90a3\u4e481\u52303\u7684\u90e8\u5206\u662f\u7535\u8def\uff0c\u5176\u4e2d1\u4e3a\u6b63\u6781\uff0c3\u4e3a\u8d1f\u6781\u3002</p> <p>\u5982\u679cA\u548cB\u90fd\u662f\u7535\u8def,\u8bbe1,2,3,2',3',1\u2019\u662f\u516d\u4e2a\u63a5\u70b9\uff0c\u5176\u4e2d1\u57282\u548c3\u7684\u5de6\u4fa7\uff0c2\u57282\u2019\u7684\u5de6\u4fa7\uff0c3\u57283\u2019\u7684\u5de6\u4fa7\uff0c2,\u548c3,\u57281\u2019\u7684\u5de6\u4fa7\uff0c\u5e76\u4e141\u4e0e2\uff0c1\u4e0e3\uff0c2\u2019\u4e0e1\u2019\uff0c3\u2019\u4e0e1\u2019\u95f4\u5747\u8fde\u6709\u5bfc\u7ebf, \u90a3\u4e48\u5c06A\u7684\u6b63\u8d1f\u6781\u5206\u522b\u63a5\u57282\u4e0e2\u2019\u4e0a\uff0c\u5c06B\u7684\u6b63\u8d1f\u6781\u5206\u522b\u63a5\u57283\u4e0e3\u2019\u4e0a\uff0c\u90a3\u4e481\u52301'\u7684\u90e8\u5206\u662f\u7535\u8def\uff0c\u5176\u4e2d1\u4e3a\u6b63\u6781\uff0c1\u2019\u4e3a\u8d1f\u6781\u3002</p> <p>\u73b0\u5728\u7ed9\u51fa\u4e00\u4e2a\u7535\u8def\uff0c\u6c42\u5b83\u6b63\u8d1f\u6781\u4e4b\u95f4\u7684\u7535\u963b\u3002</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>Cjwssb\u6700\u8fd1\u5728\u7269\u7406\u5b66\u79d1\u4e0a\u9047\u5230\u4e86\u96be\u9898\uff0c\u4ed6\u4e0d\u4f1a\u8ba1\u7b97\u4e00\u4e2a\u7535\u8def\u4e2d\u7684\u603b\u7535\u963b\uff0c\u73b0\u5728\u4ed6\u627e\u5230\u4e86\u4f60\uff0c\u5e0c\u671b\u4f60\u80fd\u5e2e\u52a9\u4ed6\u3002</p> <p>\u8fd9\u4e2a\u7535\u8def\u6709\u5982\u4e0b\u9650\u5b9a</p> <p>1\u3001    \u7535\u8def\u53ea\u7531\u5bfc\u7ebf\u4ee5\u53ca\u7535\u963b\u4e3a\u4e00\u6b27\u7684\u7535\u963b\u7ec4\u6210</p> <p>2\u3001    \u4fdd\u8bc1\u7535\u8def\u4ece\u5de6\u5230\u53f3\u8fde\u63a5\uff0c\u5373\u6bcf\u4e2a\u7535\u963b\u6216\u5bfc\u7ebf\u7684\u4e24\u4e2a\u8fde\u63a5\u70b9xy\u4fdd\u8bc1x&lt;y</p> <p>3\u3001    \u4fdd\u8bc1\u63a5\u7ebf\u67f11\u4e3a\u7535\u6e90\u6b63\u6781\uff0c\u63a5\u7ebf\u67f1n\u4e3a\u7535\u6e90\u8d1f\u6781</p> <p>4\u3001    \u4fdd\u8bc1\u6bcf\u4e2a\u63a5\u7ebf\u67f1\u53ea\u4f1a\u88ab\u4e32\u8054\u6216\u8005\u5e76\u8054\u4e24\u4e2a\u5206\u652f\u7535\u8def\u6216\u8005\u4e0d\u63a5\u4efb\u4f55\u7535\u7ebf\u6216\u7535\u963b</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e3a\u4e24\u4e2a\u6b63\u6574\u6570n,m,\u5206\u522b\u4ee3\u8868\u63a5\u70b9\u6570\u548c\u7535\u963b\u6570\u3002\u4fdd\u8bc1\u7f16\u53f7\u5c0f\u7684\u63a5\u70b9\u5728\u7f16\u53f7\u5927\u7684\u63a5\u70b9\u7684\u5de6\u4fa7\u3002</p> <p>\u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570ai,bi,ci\uff0c\u4ee3\u8868\u8fd9\u4e2a\u7535\u963b\u8fde\u63a5\u4e86ai\u4e0ebi\u63a5\u70b9\uff0c\u5176\u963b\u503c\u4e3aci \uff0c\u5176\u4e2dci\u53ea\u53ef\u80fd\u662f0\u62161\uff0c\u4e14\u5bf9\u4e8e\u4efb\u610f\u7684i\uff0c\u4fdd\u8bc1ai&lt;bi\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u4e00\u4e2a\u5b9e\u6570\uff0c\u8868\u793a\u603b\u7684\u7535\u963b\u503c\uff0c\u4fdd\u7559\u4e09\u4f4d\u5c0f\u6570\u8f93\u51fa\u3002</p> <p>\u5bf9\u4e8e100%\u7684\u6570\u636en\u2264100,000,m\u2264120000</p> <p>\u6570\u636e\u662f\u5728\u4eba\u5de5\u6307\u5b9a\u7684n\u4e0b\u968f\u673a\u751f\u6210\u7684\uff0c\u4fdd\u8bc1\u7b54\u6848\u4e0d\u4f1a\u8d85\u8fc710.000\u3002</p> <p>By\uff1asaffah</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#dp_1","title":"\u25bc \u5176\u4ed6dp","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#dp-2020-c","title":"\u72b6\u6001\u538b\u7f29dp | [\u84dd\u6865\u676f 2020 \u56fd C] \u8865\u7ed9","text":"<p>\u5c0f\u84dd\u662f\u4e00\u4e2a\u76f4\u5347\u98de\u673a\u9a7e\u9a76\u5458\uff0c\u4ed6\u8d1f\u8d23\u7ed9\u5c71\u533a\u7684 \\(n\\) \u4e2a\u6751\u5e84\u8fd0\u9001\u7269\u8d44\u3002</p> <p>\u6bcf\u4e2a\u6708\uff0c\u4ed6\u90fd\u8981\u5230\u6bcf\u4e2a\u6751\u5e84\u81f3\u5c11\u4e00\u6b21\uff0c\u53ef\u4ee5\u591a\u4e8e\u4e00\u6b21\uff0c\u5c06\u6751\u5e84\u9700\u8981\u7684\u7269\u8d44\u8fd0\u9001\u8fc7\u53bb\u3002</p> <p>\u6bcf\u4e2a\u6751\u5e84\u90fd\u6b63\u597d\u6709\u4e00\u4e2a\u76f4\u5347\u673a\u573a\uff0c\u6bcf\u4e24\u4e2a\u6751\u5e84\u4e4b\u95f4\u7684\u8def\u7a0b\u90fd\u6b63\u597d\u662f\u6751\u5e84\u4e4b\u95f4\u7684\u76f4\u7ebf\u8ddd\u79bb\u3002</p> <p>\u7531\u4e8e\u76f4\u5347\u673a\u7684\u6cb9\u7bb1\u5927\u5c0f\u6709\u9650\uff0c\u5c0f\u84dd\u5355\u6b21\u98de\u884c\u7684\u8ddd\u79bb\u4e0d\u80fd\u8d85\u8fc7 \\(D\\)\u3002\u6bcf\u4e2a\u76f4\u5347\u673a\u573a\u90fd\u6709\u52a0\u6cb9\u7ad9\uff0c\u53ef\u4ee5\u7ed9\u76f4\u5347\u673a\u52a0\u6ee1\u6cb9\u3002</p> <p>\u6bcf\u4e2a\u6708\uff0c\u5c0f\u84dd\u90fd\u662f\u4ece\u603b\u90e8\u51fa\u53d1\uff0c\u7ed9\u5404\u4e2a\u6751\u5e84\u8fd0\u9001\u5b8c\u7269\u8d44\u540e\u56de\u5230\u603b\u90e8\u3002\u5982\u679c\u65b9\u4fbf\uff0c\u5c0f\u84dd\u4e2d\u9014\u4e5f\u53ef\u4ee5\u7ecf\u8fc7\u603b\u90e8\u6765\u52a0\u6cb9\u3002</p> <p>\u603b\u90e8\u4f4d\u4e8e\u7f16\u53f7\u4e3a \\(1\\) \u7684\u6751\u5e84\u3002</p> <p>\u8bf7\u95ee\uff0c\u8981\u5b8c\u6210\u4e00\u4e2a\u6708\u7684\u4efb\u52a1\uff0c\u5c0f\u84dd\u81f3\u5c11\u8981\u98de\u884c\u591a\u957f\u8ddd\u79bb\uff1f</p> <p>\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 \\(n\\)\uff0c\\(D\\)\uff0c\u5206\u522b\u8868\u793a\u6751\u5e84\u7684\u6570\u91cf\u548c\u5355\u6b21\u98de\u884c\u7684\u8ddd\u79bb\u3002</p> <p>\u63a5\u4e0b\u6765 \\(n\\) \u884c\u63cf\u8ff0\u6751\u5e84\u7684\u4f4d\u7f6e\uff0c\u5176\u4e2d\u7b2c \\(i\\) \u884c\u4e24\u4e2a\u6574\u6570 \\(x_i\\)\uff0c\\(y_i\\) \u5206\u522b\u8868\u793a\u7f16\u53f7\u4e3a \\(i\\) \u7684\u6751\u5e84\u7684\u5750\u6807\u3002\u6751\u5e84 \\(i\\) \u548c\u6751\u5e84 \\(j\\) \u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a \\(\\sqrt{(x_i-x_j)^2+(y_i-y_j)^2}\\)\u3002</p> <p>\u5bf9\u4e8e\u6240\u6709\u6570\u636e\uff0c\u4fdd\u8bc1\uff0c\\(1\\le n\\le20,1\\le x_i,y_i\\le10^4,1\\le D\\le10^5\\)\u3002</p> <p>\u84dd\u6865\u676f 2020 \u5e74\u56fd\u8d5b C \u7ec4 I \u9898\u3002</p> <p>\u9996\u5148\u4e24\u4e2a\u6751\u5e84\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e0d\u662f\\(\\sqrt{(x_i-x_j)^2+(y_i-y_j)^2}\\)\uff0c\u56e0\u4e3a\u6211\u4eec\u6709D\u9650\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u662f\u60f3\u8981\u7ecf\u8fc7\u82e5\u5e72\u4e2a\u6751\u5e84\u4e2d\u8f6c\u7684\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5148\u4e00\u8fb9floyd\u6c42\u5404\u4e2a\u6751\u5e84\u4e4b\u95f4\u7684\u6700\u77ed\u8def\uff0c\u7136\u540e\u8dd1\u72b6\u6001\u538b\u7f29dp\u3002</p> <p>\u7136\u540e f[s][i] \u8868\u793a\u7ecf\u8fc7\u6751\u5e84\u72b6\u6001\u4e3a s\uff0c\u5f53\u524d\u70b9\u4e3a i \u65f6\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u7b54\u6848\u4e3a\uff1a\\(\\min_{i=1}^n \u200b(f[2n\u22121][i]+dis[i][0])\\)\u3002</p> <p>\u6ce8\u610f\u5584\u4e8e\u8ba1\u7b97\u7a7a\u95f4\uff0c\u672c\u9898\u5361\u7a7a\u95f4\u6b7b\u6b7b\u7684\uff0c\u4e5f\u8981\u6ce8\u610f\u70b9\u7f16\u53f7\u4ece0\u5f00\u59cb\uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\uff08\u88ab\u538b\u7f29\u7684\u72b6\u6001\uff09\u4ece0\u4f4d\u5f00\u59cb\u3002</p> <p>dp\u5206\u6790</p> <p>\u5f85\u7eed</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include &lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\n\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n\nconst int N = 20;\nconst int M = 1e5;\nconst int MOD = 1e9+7;\nconst int INF = 1e9+5;\n\nint n, m,D;\ndb x[N],y[N];\ndouble dis[N][N], f[1&lt;&lt;N][N], ans=INF;\n\n\ndb cal(db a,db b,db x,db y){\n    return sqrt(1.00*(a-x)*(a-x)+1.00*(b-y)*(b-y));\n}\n\nsigned main() {\n//    freopen(\"tree.in\", \"r\", stdin);\n//    freopen(\"tree.out\", \"w\", stdout);\n    n=rd,D=rd;\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;x[i]&gt;&gt;y[i];\n    }\n    for(int i=0;i&lt;n;i++){\n        for(int j=0;j&lt;n;j++){\n            dis[i][j]=cal(x[i],y[i],x[j],y[j]);\n//          cerr&lt;&lt;dis[i][j]&lt;&lt;endl;\n            if(dis[i][j]&gt;D)dis[i][j]=INF;\n        }\n    }\n    for(int k=0;k&lt;n;k++){\n        for(int i=0;i&lt;n;i++){\n            for(int j=0;j&lt;n;j++){\n                dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n            }\n        }\n    }\n\n    memset(f,0x7f,sizeof f);\n//  cerr&lt;&lt;f[1][0]&lt;&lt;endl;\n    f[1][0]=0;\n    for(int i=1;i&lt;1&lt;&lt;n;i++){\n        for(int j=0;j&lt;n;j++){\n            if(!(i&gt;&gt;j&amp;1))continue;\n            for(int k=0;k&lt;n;k++){\n                if((i^1&lt;&lt;j)&gt;&gt;k&amp;1)f[i][j]=min(f[i][j],f[i^1&lt;&lt;j][k]+dis[k][j]);\n            }\n        }\n    }\n    for(int i=0;i&lt;n;i++)ans=min(ans,f[(1&lt;&lt;n)-1][i]+dis[i][0]);\n//  cout&lt;&lt;ans&lt;&lt;endl;\n    printf(\"%.2lf\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#-dp-xygoi-round1","title":"\u9009\u4fee-\u6362\u6839dp |\u300eXYGOI round1\u300f\u4e00\u68f5\u6811","text":"<p>\u4e8e\u662f MX \u6709\u4e00\u68f5 \\(n\\) \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u70b9\u4e0a\u6709\u4e00\u4e2a\u6570\u5b57 \\(a_i\\)\u3002</p> <p>\u5b9a\u4e49\u4e00\u6761\u8def\u5f84 \\((x,y)\\) \u7684\u6743\u503c \\(w(x,y)\\) \u4e3a\uff0c\u4ece \\(x\\) \u8d70\u5230 \\(y\\) \u7684\u6700\u77ed\u8def\u5f84\u4e0a\uff0c\u6240\u6709\u8282\u70b9\u4e0a\u7684\u6570\u5b57\u987a\u6b21\u5199\u4e0b\u540e\u5f97\u5230\u7684\u6570\u3002\u5982\uff0c\u987a\u6b21\u7ecf\u8fc7\u5199\u6709\u6570\u5b57 \\(3,21,0,5\\) \u7684\u56db\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8def\u5f84\u7684\u6743\u503c\u4e3a \\(32105\\)\u3002</p> <p>MX \u60f3\u77e5\u9053\u8fd9\u68f5\u6811\u6240\u6709\u8def\u5f84\u7684\u6743\u503c\u4e4b\u548c\uff0c\u5373 \\(\\sum\\limits_{x=1}^n\\sum\\limits_{y=1}^nw(x,y)\\) \u4e3a\u591a\u5c11\u3002</p> <p>\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u5bf9 \\(998244353\\) \u53d6\u6a21\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n\\le 10^6\\)\uff0c\\(0\\le a_i&lt;10^9\\)\u3002</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#dp_2","title":"\u6811\u5f62dp |\u201c\u8bbf\u95ee\u201d\u7f8e\u672f\u9986","text":"<p>\u7ecf\u8fc7\u6570\u6708\u7684\u7cbe\u5fc3\u51c6\u5907\uff0cPeer Brelstet\uff0c\u4e00\u4e2a\u51fa\u4e86\u540d\u7684\u76d7\u753b\u8005\uff0c\u51c6\u5907\u5f00\u59cb\u4ed6\u7684\u4e0b\u4e00\u4e2a\u884c\u52a8\u3002\u827a\u672f\u9986\u7684\u7ed3\u6784\uff0c\u6bcf\u6761\u8d70\u5eca\u8981\u4e48\u5206\u53c9\u4e3a\u4e24\u6761\u8d70\u5eca\uff0c\u8981\u4e48\u901a\u5411\u4e00\u4e2a\u5c55\u89c8\u5ba4\u3002Peer\u77e5\u9053\u6bcf\u4e2a\u5c55\u5ba4\u91cc\u85cf\u753b\u7684\u6570\u91cf\uff0c\u5e76\u4e14\u4ed6\u7cbe\u786e\u6d4b\u91cf\u4e86\u901a\u8fc7\u6bcf\u6761\u8d70\u5eca\u7684\u65f6\u95f4\u3002\u7531\u4e8e\u7ecf\u9a8c\u8001\u5230\uff0c\u4ed6\u62ff\u4e0b\u4e00\u5e45\u753b\u9700\u89815\u79d2\u7684\u65f6\u95f4\u3002\u4f60\u7684\u4efb\u52a1\u662f\u7f16\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8ba1\u7b97\u5728\u8b66\u5bdf\u8d76\u6765\u4e4b\u524d\uff0c\u4ed6\u6700\u591a\u80fd\u5077\u5230\u591a\u5c11\u5e45\u753b\u3002</p> <p></p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include &lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\n\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n\nconst int N = 6e3+5;\nconst int M = 1e5;\nconst int MOD = 1e9+7;\nconst int INF = 1e9+5;\n\nint n, m, t;\nint dp[N][N], ans, cnt;\n\nstruct nopde{\n    int t,p,l,r;\n}e[N];\n\n\nvoid dfs(int x){//\u4ee5dfs\u5f62\u5f0f\u8bfb\u5165\n    e[x].t=rd*2;//\u6ce8\u610f\u8d70\u5eca\u8fdb\u51fa\u4e00\u5171\u4e24\u6b21\n    e[x].p=rd;\n    if(!e[x].p){\n        e[x].l=++cnt;\n        e[x].r=++cnt;\n        dfs(e[x].l);\n        dfs(e[x].r);    \n    }\n}\n\nvoid dfs2(int x,int t){\n    if(t&lt;=0||dp[x][t])return ;//\u8bb0\u5fc6\u5316\n    if(e[x].p){\n        dp[x][t]=min(e[x].p,(t-e[x].t)/5);\n        return ;\n    }\n    for(int i=0;i&lt;=t-e[x].t;i++){\n        dfs2(e[x].l,i);dfs2(e[x].r,t-e[x].t-i);\n        dp[x][t]=max(dp[x][t],dp[e[x].l][i]+dp[e[x].r][t-e[x].t-i]);\n    }\n}\n\nsigned main() {\n    t=rd-1;\n    cnt=1;\n    dfs(1);\n    dfs2(1,t);\n    cout&lt;&lt;dp[1][t]&lt;&lt;endl;\n}\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_9","title":"\u25bc \u6570\u8bba","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#gcd-unusual-sequences","title":"GCD | Unusual Sequences","text":"<p>\u8f93\u5165x,y\uff0c\u6c42\u6709\u591a\u5c11\u4e2a**\u6570\u5217**\u6ee1\u8db3\u5176gcd\u4e3ax\uff0c\u548c\u4e3ay\u3002</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int N=5e5+5;\nconst int INF=1e9+5;\nconst int MOD=1e9+7;\nbool f1;\nint m,k,n,qzh;\n\nint q;\nint ans,cnt;\nint x,y;\nmap&lt;int,int&gt; f;\nint l,r;\n\n\nbool f2;\n\n\nint ksm(int a,int b){\n    int res=1;\n    while(b){\n        if(b&amp;1)res=(res*a)%MOD;\n        b&gt;&gt;=1;\n        a=(a*a)%MOD;\n    }\n    return res;\n}\n\nint dfs(int s){\n    if(s==1)return 1;\n    if(f.count(s))return f[s];\n    int res=ksm(2,s-1);\n    for(int i=2;i*i&lt;=s;i++){\n        if(s%i)continue;\n        if(i*i==s)res=((res-dfs(i))+MOD)%MOD;\n        else res=((res-dfs(s/i)-dfs(i))%MOD+MOD)%MOD;\n    }\n    f[s]=((res-1)/-1???\n    return f[s];\n\n}\n\nsigned main(){\n    x=rd,y=rd;\n    if(y%x){\n        cout&lt;&lt;0&lt;&lt;endl;\n        return 0;\n    }\n    dfs(y/x);\n    cout&lt;&lt;f[y/x]&lt;&lt;endl;\n}\n\n/*\n2\n3 2 3 6\n*/\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_10","title":"\u25bc \u5176\u4ed6","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_11","title":"\ud83d\ude0a\u62d3\u6251\u6392\u5e8f\uff08\u677f\u5b50\uff09","text":"<p>\u2192\u4e00\u79cd\u904d\u5386\u4fdd\u8bc1\u7956\u5148\u6bd4\u540e\u7ee7\u5148\u8bbf\u95ee\u3002\u4e0d\u4fdd\u8bc1\u53ea\u6709\u4e00\u4e2a\u70b9\u6ca1\u6709\u7956\u5148\u3002</p> <p>\u4e0d\u65ad\u5220\u9664\u5165\u5ea6\u4e3a1\u7684\u70b9\uff0c\u5e76\u4e14\u66f4\u65b0\u90bb\u70b9\uff01\uff08\u6ce8\u610f\u62d3\u6251\u6392\u5e8f\u4e0d\u662f\u7528\u53ea\u80fd\u4e00\u6761\u94fe\uff0c\u800c\u53ef\u80fd\u662f\u591a\u6761\u94fe\uff01\uff09</p> <pre><code>void topo(){\n    for(int i=1;i&lt;=n;i++)if(!in[i])q.push(i);//\u627e\u5230\u6ca1\u6709\u5165\u5ea6\u7684\n    while(q.size()){\n        int x=q.front();\n        q.pop();//md\u8bb0\u5f97\u5f39\u51fa\uff01\uff01\n        cout&lt;&lt;x&lt;&lt;endl;\n        vis[x]=1;//\u6807\u8bb0\u5df2\u7ecf\u88ab\u5220\u9664\uff01\uff01\n        for(auto v:e[x]){\n            if(vis[x])continue;\n            in[v]--;\n            if(!in[v])q.push(v);\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#lca","title":"\ud83d\ude0a\u6811\u94fe\uff08lca\uff09","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_12","title":"\ud83d\ude0a\u9ad8\u7cbe\u5ea6\uff08\u4e58\uff0c\u52a0\uff09","text":"<p>\u9ad8\u7cbe\u5ea6</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#gcd","title":"\u6570\u5b66\uff08gcd\uff0c\u8d28\u6570\u7b5b\uff0c\u7ec4\u5408\u6570\uff09","text":"<p>exgcd \u7b5b\u4efb\u610f\u6781\u6027\u51fd\u6570 bsgs \u9ad8\u65af\u540c\u4f59 \u89e3\u540c\u4f59\u65b9\u7a0b \u9ad8\u6d88 \u7ec4\u5408\u6570 \u5361\u7279\u5170\u6570 \u5bb9\u65a5 \u6982\u7387\uff0c\u671f\u671b \u535a\u5f08\u8bba \u5224\u8d28\u6570</p> <ul> <li> <p>shihcufa\uff1a l,r\\in 1e18 r-l&lt;1e6 \u5148\u7b5b\\sqrt(1e6)\u4e4b\u5185\u7684\u8d28\u6570\uff0c\u7136\u540eshichu\u9010\u4e2a\u8d28\u6570</p> </li> <li> <p>aishishai n\\loh\\log n</p> </li> </ul> <p>\u8c03\u548c\u7ea7\u6570</p> <p>\\(\\sum \\frac{1}{i}=O(\\log n)\\)</p> <ul> <li>\u6b27\u62c9\u7b5b</li> </ul> <p>\u6574\u9664\u5206\u5757</p> <p>\\(|{\\lfloor \\frac{n}{x}\\rfloor,x\\in [1,n]}|=O(\\sqrt{n})\\)</p> <ul> <li> <p>1\\sim n\u4e2d\u4e0e\u4f60\u3001\u4e92\u8d28\u7684\u4e2a\u6570\\phi(n)=n\\prod(1-\\frac{1}{p_i})\u662f\u6781\u6027\u51fd\u6570</p> </li> <li> <p>\u8d39\u9a6c\u5c0f\u5b9a\u7406</p> </li> </ul> <p>\\(a^{p-1}==1 \\pmod p\\)</p> <ul> <li> <p>\u9006\u5143</p> </li> <li> <p>\\(a^{p-2}\\)\uff0c\u5bf9\u5e94\u5feb\u901f\u5e42\u5199\u6cd5O(log p)\u3002\u7ebf\u6027\u6c42\u6cd51\\sim n\u2192O(n+\\log n)\u3002\u7ebf\u6027\u6c42\u9636\u4e58\u9006\u5143\uff08\u5927\u63a8\u5c0f\uff09</p> </li> <li> <p>\u611f\u6027\u7406\u89e3\\(\\log( _2)\\)</p> </li> </ul> <p>\u6b27\u62c9\u5b9a\u7406\uff1aa^{\\phi(p)}==1\\pmod p</p> <p>exgcd</p> <p>beizu\u5b9a\u7406</p> <p>ax+by=d</p> <p>\u2190bx_0+(a \\mod b)y_0=d</p> <p>\u628a\\mod\u53d8\u6210a-\\lfloor x\\rfloor\u5373\u53ef\u3002</p> <p>\u6c42\u89e3ax==b\\pmod m\uff08m\u4e3a\u8d28\u6570/\u975e\u8d28\u6570\uff09</p> <ul> <li>BSGS</li> </ul> <p>a^x==b\\pmod p</p> <ul> <li>CRT</li> </ul> <p>\u628an\u4e2a\u540c\u4f59\u65b9\u7a0b\u5408\u5e76\u4e3a\u4e00\u4e2a</p> <ul> <li> <p>\u77e9\u9635\u5feb\u901f\u5e42</p> </li> <li> <p>\u9ad8\u65af\u6d88\u5143</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#tarjan","title":"\ud83d\ude0aTarjan\uff08\u7f29\u70b9\uff09","text":"<p>tarjan \u7b97\u6cd5\u76f8\u5173</p> <pre><code>void tarjan(int x){\n    dfs[x]=low[x]=+/\u7b2c\u4e00\u6b21\u8bbf\u95ee\u5230\u6539\u8282\u70b9\u7684\u6b21\u5e8f\u8bb0\u4e3adfn\uff0c\u8be5\u8282\u70b9\u901a\u8fc7\u5b50\u6811\u4e2d\u7684\u8fb9\u548c\u975e\u6811\u8fb9\u53ef\u4ee5\u8bbf\u95ee\u5230\u7684\u6700\u5c0fdfn\u8bb0\u4e3alow\u3002low\u521d\u59cb\u503c\u4e3a\u81ea\u5df1\u7684dfn\u5373\u8bbf\u95ee\u81ea\u5df1\n    stk[+/\u5165\u6808\uff0c\u8868\u793a\u5728\u540c\u4e00\u4e2a\u5206\u91cf\u4e2d\n    for(auto v:e[x]){\n        if(!dfn){//\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff01\u4e3a\u4e86\u4ee5\u6811\u7684\u5f62\u5f0f\u8bbf\u95ee\u6b64\u56fe\uff0c\u6240\u4ee5\u8bbf\u95ee\u8fc7\u7684\u70b9\u4e0d\u80fd\u518d\u901a\u8fc7\u53e6\u5916\u7684\u8fb9\u8bbf\u95ee\u4e86\u3002\n            tarjan(v);//\u5148\u5f80\u4e0b\u8d70\u4e3a\u4e86\u5904\u7406low\n            low[x]=min(low[x],low[v]);\n        }else if(dfn[v]&amp;&amp;instk[v]){\n            low[x]=min(low[x],dfn[v]);//\u8bbf\u95ee\u8fc7\u4e86\uff0c\u4f46\u662f\u8fd8\u5728\u6808\u4e2d\uff0c\u8bf4\u660e\u662f\u53cd\u5411\u8fb9(\u975e\u6811\u8fb9\uff0c\u56de\u6eaf\u8fb9\uff0c\u5411\u4e0a\u8bbf\u95ee)\uff0c\u66f4\u65b0low\n        }\n    }\n    if(dfn[x]==low[x]){\n        //\u8bf4\u660e\u662f\u5206\u91cf\u7684\u6839\uff0c\u5df2\u7ecf\u56de\u6eaf\u5b8c\u4e86\uff0c\u8be5\u5206\u91cf\u4e2d\u7684\u70b9\u90fd\u5728\u6808\u4e2d\n        ++scc;int v;\n        do{\n            v=stk[top--];\n            instk[v]=-0l;//\u6807\u8bb0\u51fa\u6808\n            bel[v]=scc;//\u6807\u8bb0\u5206\u91cf\u4ece\u5c5e\u5173\u7cfb\n            sz[scc]++;\n            val[scc]+=w[v];//\u7f29\u70b9\u540e\u7684\u70b9\u6743\u548c\n        }while(v!=x);\n    }\n}\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%97%AA/#_13","title":"\ud83d\ude0a\u6700\u5c0f\u751f\u6210\u6811\uff08\u677f\u5b50\uff09","text":"<p>\u751f\u6210\u6811</p> <p>prim\uff1a\u4e0d\u65ad\u627e\u79bb\u5df2\u9009\u70b9\u96c6\u6700\u8fd1\u7684\u70b9\u52a0\u5165\uff01</p> <pre><code>bool prim(){\n    for(int i=1;i&lt;=n;i++)dis[i]=INF;//\u521d\u59cb\u5316\n    dis[1]=0;//\u521d\u503c\n    for(int i=1;i=n;i++){\n        int mx=INF,u=1;\n        if(!vis[j]&amp;&amp;dis[j]&lt;mx)u=j,mx=dis[j];//\u627e\u79bb\u5f53\u524d\u751f\u6210\u6811\u6700\u8fd1\u7684\u70b9\n        vis[u]=1;\n        ans=max(ans,dis[u]);\n        if(dis[u]!=INF)cnt++;//\u6ce8\u610f\u5224\u662f\u5426\u8054\u901a\n        for(auto v:e[u]){\n            if(dis[v.v]&gt;v.w){//\u6ce8\u610f\u4e0d\u662fdis[u]+v.w\uff0c\u4e0d\u662f\u6700\u77ed\u8def\uff01\n                dis[v.v]=v.w;\n            }\n        }\n    }\n    return cnt==n;//\u5224\u662f\u5426\u53ef\u4ee5\u6784\u6210\u751f\u6210\u6811\uff0c\u6ce8\u610f\u4e0d\u662fcnt==n-1\uff01\uff01\u8fd9\u91cc\u8bb0\u5f55\u7684\u662f\u70b9\uff01\uff01\n}\n</code></pre> <p>krskl\uff1a\u6392\u5e8f\u8fb9\uff0c\u5224uv\u662f\u5426\u8054\u901a\uff08\u5e76\u67e5\u96c6\uff08\u8bb0\u5f97\u521d\u59cb\u5316\uff01\uff09\uff09\uff0c\u4e0d\u8054\u901a\u5c31\u8d2a\u5fc3\u5730\u8fde\u4e0a\uff01</p> <pre><code>struct node{\n    int u,v,w;\n};\n\nvoid add(int a,int b,int w){\n    e[++idx]={a,b,w};\n}\n\nbool cmp(node a,node b){\n    return a.w&lt;b.w;\n}\n\nint find(int x){\n    if(fa[x]==x)return x;\n    return fa[x]=find(fa[x]);\n}\n\nbool krskl(){\n    sort(e+1,e+idx+1,cmp);\n    for(int i=1;i&lt;=n;i++)fa[i]=i;//\u521d\u59cb\u5316\u5e76\u67e5\u96c6\uff01\uff01\u7262\u8bb0\uff01\uff01\n    for(int i=1;i&lt;=idx;i++){\n        int u=e[i].u,v=e[i].v;\n        int a=find(u),b=find(v);\n        if(a==b)continue;\n        fa[a]=b;//\u4e0d\u662fa=b\n        ans=max(ans,e[i].w);\n        cnt++;\n\n    }\n    return cnt==n-1;\n}\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/","title":"\u8003\u524d\u6ce8\u610f","text":"<p>\u8003\u524d\u78a7\u6708\uff0c\u8003\u540e\u7f9e\u82b1</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#_2","title":"\u94ed\u8bb0","text":"<p>\u8bb0\u5f55\u81ea\u5df1\u72af\u8fc7\u7684\u9519\uff01</p> <ul> <li> <p><code>#define int long long</code>\u662f\u628a<code>int</code>\u66ff\u6362\u4e3a<code>long long</code>,\u4e0d\u8981\u5199\u53cd</p> </li> <li> <p>\u8bf7\u6ce8\u610f\u4e0d\u8981\u66b4\u7a7a\u95f4! \\(5000\\times5000\\) \u6700\u5927\u4e86!!</p> </li> <li> <p>\u591a\u7ec4\u6570\u636e\u4e00\u5b9a\u8981init\uff01\uff01\u68c0\u67e5STL\u548c\u6570\u7ec4\uff0c\u53d8\u91cf\u662f\u5426\u6e05\u7a7a\uff01\uff01eg.https://www.luogu.com.cn/problem/B3614</p> </li> <li> <p>\u4e0d\u80fd\u5199<code>!a%3</code>\uff01\uff0c\u53d6\u53cd\u4f18\u5148\u7ea7\u5927\u4e8e\u53d6\u4f59\uff01\uff08\u5907\u6ce8\uff1a<code>!a</code>\u5f53a=0\u6216false\u65f6\u503c\u4e3a1\uff0c\u5176\u4f59\u65f6\u503c\u4e3a0\uff09</p> </li> <li> <p><code>size()</code>\u8fd4\u56deunsigned\uff0c\u5982\u679csize\u4e3a0\u90a3\u4e48\\(size-1=2\\times INT_{MAX}\\)\uff0c\u8bbf\u95ee\u8d8a\u754c\u6240\u4ee5RE</p> </li> </ul> <p></p> <ul> <li> <p>\u4e00\u5b9a\u8981\u628a<code>cerr</code>\u6ce8\u91ca\u6389\uff01\u4e0d\u4f1aWA\u4f46\u662f\u4f1aTLE\uff01\uff01\uff01</p> </li> <li> <p>\u4e0d\u8981\u7528<code>if(sqrt(j)*sqrt(j)==j)cout&lt;&lt;'!';</code>\u5224\u5b9a\u5b8c\u5168\u5e73\u65b9\u6570</p> </li> <li> <p>\u5f00\u6808\uff01\u4e0d\u7136\u4e00\u4e0b\u4ee3\u7801\u5728\u8dd1\u7684\u65f6\u5019\u80fd\u8fc7\u7f16\uff0c\u4f46\u76f4\u63a5\u6b7b\u5faa\u73af\u4e0d\u8ba9\u8f93\u5165\uff0c\u539f\u56e0\u662f\u5728\u8fdb\u5165out()\u51fd\u6570\u65f6\u5f00\u7684node a\u7206\u6808\u4e86\u3002\u4f46\u662f\u5b83\u4e0d\u4f1a\u8ba9\u4f60\u8dd1\u5230\u8fd9\u4e2a\u51fd\u6570\u518dre\uff0c\u800c\u662f\u4e00\u5f00\u59cb\u76f4\u63a5\u5c31re</p> </li> </ul> <pre><code>string sa,sb;\nstruct node{\n    int res[N];//define\u4e3all \uff0c\u538b8\u4f4d \n    int len;\n};\nnode init(string s){\n    //..\n}\ninline void out(node a){\n    cerr&lt;&lt;a.len&lt;&lt;endl;\n    printf(\"%lld\",a.res[a.len]);\n    for(int i=a.len-1;i;i--)printf(\"%08lld\",a.res[i]);\n}\nsigned main(){\n    cin&gt;&gt;sa;\n\n    node a=init(sa);\n\n    out(a);\n\n    return 0;\n}\n</code></pre> <ul> <li> <p>https://www.luogu.com.cn/problem/solution/B3656</p> </li> <li> <p>\u68c0\u67e5\u7a7a\u95f4\u5927\u5c0f\u7684\u4ee3\u7801</p> </li> </ul> <pre><code>bool f1;\nint ans,a[N&lt;&lt;2];\nbool f2;\n\nsigned main(){\n    printf(\"the size of your code is %lf MiB\",1.00*((&amp;f2)-(&amp;f1))/1024/1024);\n    return 0;\n} \n</code></pre> <ul> <li> <p>\u6d1b\u8c37\u8bc4\u6d4b\u673a\u8dd1\u7ebf\u6bb5\u6811\u7c7b\u578b\u9898\u76ee\u53ef\u4ee5\u8dd1\\(O(2e7)~700ms\\)</p> </li> <li> <p>\u6ce8\u610f\u6570\u7ec4\u8d8a\u754c\uff01\u5c3d\u91cf\u5f00\u5927\uff0c\u4f46\u4e5f\u4e0d\u8981\u7206\u7a7a\u95f4</p> </li> <li> <p>2^n\u53ef\u4ee5\u75281&lt;&lt;n\u4ee3\u66ff</p> </li> <li> <p>\u4ea4\u9898\u4e0d\u8981\u4ea4\u9519\uff01\uff01</p> </li> <li> <p>\u8f93\u51fa\u4f7f\u7528\u65f6\u95f4\u7684\u4ee3\u7801</p> </li> </ul> <pre><code>auto start = chrono::high_resolution_clock::now();\nwork();\nauto end = chrono::high_resolution_clock::now();\ncerr &lt;&lt; \"time: \" &lt;&lt; chrono::duration&lt;double, milli&gt;(end - start).count() &lt;&lt; \"ms\" &lt;&lt; endl;\n</code></pre> <ul> <li> <p>\u68c0\u67e5**inf\uff08\u5982\u6c42min\u65f6ans\u7684\u521d\u59cb\u503cinf\uff09\u662f\u5426\u591f\u5927**\uff0c\u9700\u4e0d\u9700\u89811e18</p> </li> <li> <p>\u6ce8\u610f\u81ea\u5df1\u662f\u8f93\u51fa\uff01\u4e0d\u8981\u6700\u672b\u5c3e\u53c8\u591a\u8f93\u51fa\u4e86\u4e00\u4e2a\u7a7a\u7684ans\uff01\uff01\u5220\u4ee3\u7801\u8981\u5220\u5e72\u51c0\uff01\uff01</p> </li> <li> <p>\u6a21\u5757\u5316\u5199\u4ee3\u7801\u540e\u6ce8\u610f\u4e0d\u540c\u533a\u57df\u7684\u53d8\u91cf/\u6570\u7ec4\u4f1a\u4e0d\u4f1a\u91cd\u540d\uff01\uff01</p> </li> <li> <p>/* \u543e\u65e5\u4e09\u7701\u543e\u8eab\uff1a \u4f60\u6392\u5e8f\u4e86\u5417\uff1f \u4f60\u53d6\u6a21\u4e86\u5417\uff1f \u4f60\u7528%lld\u8f93\u51falong long \u4e86\u5417\uff1f 1LL&lt;&lt;x\u5199\u5bf9\u4e86\u5417\uff1f \u5224\u65ad=0\u7528\u4e86abs()\u5417\uff1f \u7b97\u7ec4\u5408\u6570\u5224\u4e86a&lt;b\u5417\uff1f \u7ebf\u6bb5\u6811build()\u4e86\u5417\uff1f .size()\u52a0\u4e86(signed)\u5417\uff1f \u6811\u94fe\u5256\u5206\u7684DFS\u5e8f\u662f\u5728\u7b2c\u4e8c\u6b21\u66f4\u65b0\u7684\u5417\uff1f NTT\u9006\u53d8\u6362\u9664\u4e86\u9879\u6570\u5417\uff1f */</p> </li> <li> <p>\u6ce8\u610f\u4e0d\u8981\u7206\u7a7a\u95f4\uff01\u7565\u8d85\u7a7a\u95f4\u4e0d\u4f1a\u5bfc\u81f4MLE\u4f46\u4f1aTLE\uff08\u57fa\u672c\u4f1a\u8ba9\u8fd0\u884c\u65f6\u95f4\\(\\times 1.5\\)\uff09</p> </li> <li> <p>\u6620\u5c04\u8bf7\u4f7f\u7528<code>unordered_map</code>\u800c\u4e0d\u8981\u4f7f\u7528<code>map</code>\uff01\uff01\u65f6\u95f4\u53ef\u80fd\u4f1a\\(\\times 10\\)</p> </li> <li> <p>\u770b\u6e05\u695a\u6570\u636e\u5927\u5c0f\uff01\u522b\u628a3e5\u5199\u62102e5</p> </li> <li> <p>\u5e76\u67e5\u96c6\u8981\u8bb0\u5f97\u521d\u59cb\u5316</p> </li> <li> <p>\u591a\u6d4b\u6e05\u7a7a\u4e0d\u8981\u7528memset\uff0c\u53ef\u4ee5\u7528\u6808\u8bb0\u5f55\u4fee\u6539\u7684\u4f4d\u7f6e\u3002</p> </li> <li> <p>\u4e0d\u8981memset(a,-INF,sizeof a)\uff0c\u5982\u679c\u4e0d\u786e\u5b9a\u8bf7\u8f93\u51fa\u91cc\u9762\u503c\u770b\u770b\uff01\uff01\uff01</p> </li> <li> <p>\u770b\u6e05\u695aMOD\u7684\u503c\uff01\uff01\u5728\u590d\u6742\u5ea6\u5141\u8bb8\u4e0b\u591a\u53d6\u6a21\uff08\u53d6\u6a21\u590d\u6742\u5ea6\u8f83\u5927\uff0c\u4f46\u4e0d\u5361\u5e38\u5c31\u4e0d\u6015\uff09</p> </li> <li> <p>floating point exception\u7684\u95ee\u9898\u539f\u56e0\uff1a\u53ef\u80fd\u662f\u96640\u6216\u8005%0</p> </li> <li> <p>\uff01\uff01\u5982\u679c\u6015\u53d6\u6a21\u51fa\u95ee\u9898\uff0c\u90a3\u4e48\u5c31\u5728\u8f93\u51fa\u65f6\u628a(ans%MOD+MOD)%MOD\uff08\u63a8\u8350\uff09</p> </li> <li> <p>\u6ce8\u610f\u4e0d\u540c\u7684\u6570\u7ec4\u5f00\u7684\u7a7a\u95f4\u4e0d\u4e00\u6837\uff01\u6bd4\u5982**\u5b58\u8fb9\u7684\u548c\u5b58\u70b9\u7684\u6570\u7ec4**\u5927\u5c0f\u5c31\u4e0d\u4e00\u6837\u3002</p> </li> <li> <p>\u8003\u573a\u4e0a\u7b2c\u4e00\u4ef6\u4e8b\u628a\u7f16\u8bd1\u5668\u7684O2\u6253\u5f00\uff01\uff01\uff01\u4e0d\u7136\u6709\u4e00\u4e9b\u65f6\u5019RE\u68c0\u67e5\u4e0d\u51fa\u6765\uff01\uff01\uff01</p> </li> <li> <p>\u6ce8\u610ffor\u662f\u5148\u52a0\u518d\u68c0\u67e5\u3002\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4ec0\u4e48\u95ee\u9898\uff1f</p> </li> </ul> <pre><code>for(int i=1;i&lt;=40&amp;&amp;x[i]&lt;=INF&amp;&amp;y[i]&lt;=INF;i++){\n        x[i]=2*x[i-1]+bx,y[i]=2*y[i-1]+by;cnt++;\n    }\n\n//\u7b54\u6848\uff1ax[i],y[i]\u4e00\u76f4\u662f0\uff01\uff01\u56e0\u4e3a\u5148\u52a0\uff0c\u518d\u5224\u65ad\uff0c\u518d\u4fee\u6539\uff01\n</code></pre> <ul> <li> <p>\u6ce8\u610f\u679a\u4e3e\u6a21\u62df\u65f6\u8fd8\u539f\u521d\u59cb\u72b6\u6001\uff01\uff01\uff01</p> </li> <li> <p>\u5982\u679c\u53d1\u73b0\u770b\u9519\u4e86\u9898\u76ee\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u5728\u6539\u4ee3\u7801\u65f6\u4e0d\u8981\u6f0f\u6389\u6ca1\u6539</p> </li> <li> <p>\u4e0d\u8981\u61d2\uff01\u6709\u65f6\u95f4\u5c31\u6d4b\u5927\u6837\u4f8b\uff01\u6709\u591a\u5c11\u6d4b\u591a\u5c11</p> </li> <li> <p>\u7f16\u8bd1\u9632\u6570\u7ec4\u8d8a\u754c\u548c\u6574\u578b\u8d8a\u754c\uff1a\u7f16\u8bd1\u9009\u9879https://zhuanlan.zhihu.com/p/578225802</p> </li> <li> <p>\u6ce8\u610f\u7ed3\u6784\u4f53\u91cd\u8f7d\u8fd0\u7b97\u7b26</p> </li> </ul> <pre><code>struct node{\n    int w;\n    bool operator &lt; (const node &amp;b) const{//\u5982\u679c\u662fb[1]&lt;b[2]\uff0c\u76f8\u5f53\u4e8e\u8c03\u7528\u4e86b[1]\u7684&lt;\uff0c\u628ab[2]\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002\u90a3\u4e48\u62ec\u53f7\u5185\u7684\u5c31\u662fb[2]\uff0c\u62ec\u53f7\u5916\u7684\u5c31\u662fb[1]\n        return w &lt; b.w;\n    }\n}b[N];\n\nmain(){\n    b[1].w=1;b[2].w=2;\n    if(b[1]&lt;b[2])cout&lt;&lt;\"OK\";\n    else cout&lt;&lt;\"NO\";\n}\n//output: OK\n</code></pre> <ul> <li> <p>\u5224 UB: <code>-fsanitize=address,leak,undefined,signed-integer-overflow</code>\uff01</p> </li> <li> <p>\u522bmemset INF\uff01\uff01\u4e00\u5b9a\u4f1aWA\uff01\uff01\u9664\u975e\u75280x3f</p> </li> <li> <p>\u5199\u53e6\u5916\u7684\u9898\u76ee\u65f6\u8bb0\u5f97\u4fee\u6539\u6a21\u6570\uff01\u522b\u5fd8\u4e86\uff01</p> </li> <li> <p>\u6ce8\u610f\u5373\u65f6\u8bbf\u95eemap\u7a7a\u8282\u70b9\u4e5f\u4f1a\u4ea7\u751f\u65b0\u5185\u5b58\u5360\u7528\uff01\u56e0\u6b64\u5373\u4f7fmap\u4e3a\u7a7a\uff0c\u4ece1\u5230inf\u626b\u4e00\u8fb9\u8fd8\u662f\u4f1aMLE\u3002\u89e3\u51b3\u65b9\u6cd5\uff1a\u8bbf\u95ee\u540e\u5982\u679c\u662f0\uff0c\u5219\u5148<code>erase</code>\u6e05\u7a7a\uff0c\u7136\u540e\u4e0d\u65f6<code>shink_to_fit</code>\u538b\u7f29\u5185\u5b58 \u65e0\u6b64\u51fd\u6570\uff01</p> </li> <li> <p>\u4e0d\u80fd\u6839\u636e\u5ea6\u6570\u4e3a1\u6765\u786e\u5b9a\u53f6\u5b50\u8282\u70b9\uff01\uff01\u5ea6\u6570\u4e3a1\u4e0d\u4ee3\u8868\u53f6\u5b50\u8282\u70b9\uff01\uff01</p> </li> <li> <p>\u6ce8\u610f\u5bf9double\u6570\u7ec4memset\u4e0d\u80fd\u4e3aINF=0x3f\uff01\u800c\u5e94\u8be5\u662f0x7f\u3002\u4e07\u91d1\u6cb9\u5c31\u662f\u8f93\u51fa\u770b\u770b\uff01\uff01</p> </li> <li> <p>\u6ce8\u610fdouble\u00d7double\u53ef\u80fd\u4f1a\u5192\u51fa\u79d1\u5b66\u8ba1\u6570\u6cd5\uff01\u8981\u6574\u4f53\u5f3a\u5236\u8f6c\u6362\u4e3aint\u624d\u884c\uff0c\u9519\u8bef\u5199\u6cd5<code>(int)ceil(1.00*n/a)*ceil(1.00*m/a)</code>\uff0c\u6b63\u786e\u5199\u6cd5<code>(int)(ceil(1.00*n/a)*ceil(1.00*m/a))</code></p> </li> <li> <p>\u591a\u6d4b\u8bb0\u5f97\u6e05\u7a7a\uff0c\u7279\u522b\u662fvector\u5b58\u56fe\u65f6\u8981\u6e05\u7a7avector\uff0c\u4f1aMLE\uff0cWA</p> </li> <li> <p>\u4e0d\u8981\u628a\u5feb\u8bfb\u548c\u540c\u6b65\u6d41cin\u4e00\u8d77\u7528\uff01\u4f1aWA\uff01</p> </li> <li> <p>\u6ce8\u610f\u4e0d\u8981\u5bf9double\u4f7f\u7528\u5feb\u8bfb\uff01\uff01</p> </li> <li> <p>\u6ce8\u610f\u7384\u5b66\uff01</p> </li> </ul> <p></p> <p>\u4e09\u4e2ard\u5e76\u6392\uff0c\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684\u6570\u5b57\u5374\u4f5c\u4e3a\u7b2c3\u4e2a\u53c2\u6570\u4f20\u5165\uff01</p> <p></p> <ul> <li> <p>\u6ce8\u610f\u8282\u70b9\u5f00\u59cb\u7684\u7f16\u53f7\uff01</p> </li> <li> <p>\u4e00\u79cd\u5947\u602a\u7684MLE\u65b9\u6cd5\uff1adfs\u6b7b\u5faa\u73af\u5bfc\u81f4\u7206\u6808MLE</p> </li> <li> <p>\u518d\u6b21\u63d0\u9192\u522b\u96640\uff01\u68c0\u67e5\u6bcf\u4e00\u4e2a\u9664\u6cd5\u662f\u5426\u6709\u96640\u7684\u53ef\u80fd\u3002\u6bcf\u4e00\u6b21\u5199\u4ee3\u7801\u90fd\u8981\u68c0\u67e5\u7279\u522b\u662f\u6253\u6bd4\u8d5b\uff01</p> </li> <li> <p>\u5728\u8fdb\u884c\u6570\u7ec4\u590d\u7528\u65f6\uff0c\u6ce8\u610f\u8fd9\u4e2a\u6570\u7ec4\u5f53\u524d\u662f\u5426\u88ab\u5360\u7528\u4e86\uff01\uff08\u7ec3\u4e60 | \u8fd9\u4eba\u600e\u4e48\u5929\u5929\u5237\u9898\u554a'\u57ce\u5e02\u73af\u8def\uff09</p> </li> <li> <p>\u6ce8\u610f\uff0c\u867d\u7136\u4f1a\u5ffd\u7565\u884c\u672b\u7a7a\u683c\u548c\u6587\u4ef6\u672b\u5c3e\u6362\u884c\uff0c\u4f46\u662f\u4e2d\u95f4\u7684\u6362\u884c\u4e0d\u4f1a\u5ffd\u7565\uff01\u522b\u591a\u8f93\u51fa\u4e86\uff01\u4f1aWA</p> </li> <li> <p>\u5f53\u8981\u6f58\u5224\u65ad\u4e24\u6570\u5927\u5c0f\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u6570\u5b57\u53ef\u80fd\u8d85\u8fc7LL\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3adouble</p> </li> <li> <p>\u9012\u5f52\u5230\u4e00\u534a\u505c\u4e86\uff1f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48dfs\u8d85\u65f6\u4e86\uff1f\uff08\u590d\u6742\u5ea6\u6b63\u786e\uff09\u2014\u2014\u68c0\u67e5\u7206\u6808\u5427\uff01\uff08P2152\uff09\u6ce8\u610fdfs\u65f6\u65b0\u5efa\u7684\u6808\u5360\u7528\uff01</p> </li> <li> <p>\u79bb\u6563\u5316\u6ce8\u610f\u524d\u9762\u7684\u8981-a-1\uff0c\u4e8c\u5206\u65f6\u4e0d\u9700\u8981-1.\u5927\u591a\u6570\u60c5\u51b5\u90fd\u4e0d-1\u6ca1\u6bdb\u75c5\uff0c\u4f46\u603b\u6709\u6302\u7684\u65f6\u5019\u3002\uff08AT_joisc2014_c\uff09</p> </li> <li> <p>\u65e0\u8bba\u770b\u4e0a\u53bb\u6709\u6ca1\u6709\u5f71\u54cd\uff0c\u4e0d\u8981\u8ba9\u7ebf\u6bb5\u6811\u8d8a\u754c\uff01\uff08\u5357\u5916 -600pts\uff09</p> </li> <li> </li> <li> <p>\u7ed3\u6784\u4f53\u5185\u5b9a\u4e49\u7684\u6570\u7ec4\u521d\u59cb\u503c\u975e0</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#define-int-long-long-30","title":"define int long long \u5bf9\u8fd0\u884c\u65f6\u95f4\u6709\u8f83\u5927\u5f71\u54cd\uff0830%\uff09","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#_3","title":"\u672a\u9a8c\u8bc1\u7684\u94ed\u8bb0","text":"<p>\u628a\u770b\u89c1\u7684\u522b\u4eba\u72af\u8fc7\u7684\u9519\u90fd\u8bb0\u5f55\u4e0b\u6765\uff01\uff01</p> <ul> <li>\u5b57\u7b26\u578b\u6570\u7ec4\u6570\u4e0d\u53ef\u4ee5\u901a\u8fc7memset\u51fd\u6570\u6e050\u7684\uff0c \u56e0\u4e3a\u5373\u4f7f\u53ea\u662f\u628a\u5185\u5b58\u6e05\u7a7a\uff0c\u4e5f\u4f1a\u5f15\u8d77\u7ffb\u8f66</li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#_4","title":"\u4ea4\u9898\u524d\u5fc5\u67e5","text":"<ul> <li> <p>\u518d\u6b21\u63d0\u9192\u522b\u96640\uff01\u68c0\u67e5\u6bcf\u4e00\u4e2a\u9664\u6cd5\u662f\u5426\u6709\u96640\u7684\u53ef\u80fd\u3002\u6bcf\u4e00\u6b21\u5199\u4ee3\u7801\u90fd\u8981\u68c0\u67e5\u7279\u522b\u662f\u6253\u6bd4\u8d5b\uff01</p> </li> <li> <p>INF\u8303\u56f4\uff0c\u6ca1\u6709\u52a0\u6cd5\u5c31\u5f00\u5927</p> </li> <li> <p>\u6570\u7ec4\u5927\u5c0f\uff0c\u4e0d\u8981\u5c0f\u4e86\u6216\u8005\u5927\u4e86\u3002\u91cd\u70b9\u68c0\u67e5\u4f1a\u4e0d\u4f1a\u5c0f\u4e86\uff01</p> </li> <li> <p>\u68c0\u67e5\u8fd4\u56de\u503c\u4e0e\u51fd\u6570\u7c7b\u578b\u7684\u5173\u7cfb\u3002</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#_5","title":"\u8003\u524d\u53e3\u8bc0","text":"<p>\u4e8c\u5206\u6709\u7b49\u6709\u52a0\u51cf\u3002ans\u53d6mid\u5728l\u66f4\u3002</p> <p>\u7a7a\u95f4\u4e0d\u5927\u4e5f\u522b\u5c0f\uff0cfre open\u522b\u5199\u9519\u3002</p> <p>\u6d4b\u8bd5\u7528\u5efa\u8bae\u7f16\u8bd1\u547d\u4ee4\uff1a</p> <pre><code>g++ -Wall -O2 -std=c++14 -fsanitize=address,leak,undefined,signed-integer-overflow -o  \"%e\" \"%f\"\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#_6","title":"\u7f16\u8bd1\u547d\u4ee4","text":"<p>-static</p> <p>\u6b64\u9009\u9879\u5c06\u7981\u6b62\u4f7f\u7528\u52a8\u6001\u5e93\uff0c\u6240\u4ee5\uff0c\u7f16\u8bd1\u51fa\u6765\u7684\u4e1c\u897f\uff0c\u4e00\u822c\u90fd\u5f88\u5927\uff0c\u4e5f\u4e0d\u9700\u8981\u4ec0\u4e48\u52a8\u6001\u8fde\u63a5\u5e93\uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u3002</p> <p>-fsanitize=address,leak,undefined,signed-integer-overflow</p> <p>\u5fc5\u5907\u7684\u597d\u5427\uff0c\u4f46\u662f\u4f1a\u548cstatic\u51b2\u7a81\uff0c\u6240\u4ee5\u4e0d\u80fd\u4e00\u8d77\u7528\u3002\u6700\u540e\u6d4b\u8bd5\u65f6\u8bb0\u5f97\u5148\u7528-fsanitize\u68c0\u67e5\uff0c\u540e\u7528-static\u6d4b\u8bd5\u3002</p> <p>\u2010O2 \u2010std=c++14 \u2010static</p> <p>\u6d4b\u8bd5\u6807\u51c6\u547d\u4ee4</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#windows","title":"Windows\u7f16\u8bd1\u5e38\u89c1\u95ee\u9898","text":"<ul> <li> <p>\u6570\u7ec4\u5f00\u592a\u5927\u4f1a\u5bfc\u81f4\u5728\u7ebfide\u53d1\u751fRE\u9519\u8bef</p> </li> <li> <p>\u5982\u679c\u5728\u8fdb\u5165main()\u4e4b\u524d\u5c31\u53d1\u751f\u4e86\u6b7b\u5faa\u73af\uff0c\u8bf7\u8003\u5bdf\u662f\u5426\u7206\u6808</p> </li> </ul> <p>DevC++\u4e2d</p> <p>\u5de5\u5177\u2192\u7f16\u8bd1\u9009\u9879\uff0c\u5728\u7f16\u8bd1\u65f6\u52a0\u5165\u4ee5\u4e0b\u6307\u4ee4\u5904\u6253\u4e0a\u52fe\uff0c\u540c\u65f6\u52a0\u5165\u4ee5\u4e0b\u4ee3\u7801</p> <pre><code>-Wl,-stack=134217728\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#_7","title":"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7","text":"<p>\u4f18\u5148\u7ea7\u503c\u8d8a\u5927\uff0c\u8868\u793a\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002</p> \u4f18\u5148\u7ea7 \u5206\u7c7b \u8fd0\u7b97\u7b26 \u7ed3\u5408\u6027 1 \u9017\u53f7\u8fd0\u7b97\u7b26 , \u4ece\u5de6\u5230\u53f3 2 \u8d4b\u503c\u8fd0\u7b97\u7b26 =\u3001+=\u3001-=\u3001*=\u3001/=\u3001 %=\u3001 &gt;=\u3001 &lt;&lt;=\u3001&amp;=\u3001^=\u3001 = 3 \u903b\u8f91\u6216 4 \u903b\u8f91\u4e0e &amp;&amp; \u4ece\u5de6\u5230\u53f3 5 \u6309\u4f4d\u6216 6 \u6309\u4f4d\u5f02\u6216 ^ \u4ece\u5de6\u5230\u53f3 7 \u6309\u4f4d\u4e0e &amp; \u4ece\u5de6\u5230\u53f3 8 \u76f8\u7b49/\u4e0d\u7b49 ==\u3001!= \u4ece\u5de6\u5230\u53f3 9 \u5173\u7cfb\u8fd0\u7b97\u7b26 &lt;\u3001&lt;=\u3001&gt;\u3001&gt;= \u4ece\u5de6\u5230\u53f3 10 \u4f4d\u79fb\u8fd0\u7b97\u7b26 &lt;&lt;\u3001&gt;&gt; \u4ece\u5de6\u5230\u53f3 11 \u52a0\u6cd5/\u51cf\u6cd5 +\u3001- \u4ece\u5de6\u5230\u53f3 12 \u4e58\u6cd5/\u9664\u6cd5/\u53d6\u4f59 *\uff08\u4e58\u53f7\uff09\u3001/\u3001% \u4ece\u5de6\u5230\u53f3 13 \u5355\u76ee\u8fd0\u7b97\u7b26 !\u3001*\uff08\u6307\u9488\uff09\u3001&amp; \u3001++\u3001\u2013\u3001+\uff08\u6b63\u53f7\uff09\u3001-\uff08\u8d1f\u53f7\uff09 \u4ece\u53f3\u5230\u5de6 14 \u540e\u7f00\u8fd0\u7b97\u7b26 ( )\u3001[ ]\u3001-&gt; \u4ece\u5de6\u5230\u53f3"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#define","title":"define\u7528\u6cd5","text":"<p>\u5efa\u8bae\u521d\u671f\u5199\u7b2c\u4e00\u79cd</p> <pre><code>//\u7b2c\u4e00\u79cd\u5199\u6cd5,\u5efa\u8bae\u7528\u4e8e\u5199\u51fd\u6570,\u5fc5\u987b\u5199\u6210\u51fd\u6570\u7c7b\u578b\n#define add(x,y) (x+y)\n#define rp(1,a,b) for(int i=1;i&lt;=(a),i+=(b))\n//\u7b2c2\u79cd\u5199\u6cd5,\"#n\"\u53ef\u4ee5\u5c06n\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5d4c\u5165\n#define PXN(n) printf(\" x\"#n\" \\n\")\n//\u7b2c3,##n\u53ef\u4ee5\u5c06n\u4e0e\u524d\u9762\u7684\u90e8\u5206\u8054\u5408\u8d77\u6765\n#define PXN(n) printf(\"%d\\n\",b##n)\n</code></pre> <p>\u6ce8\u610f\uff0c\u4ee5\u4e0b\u5199\u6cd5\u4e0d\u53ef\u53d6</p> <pre><code>#define PXN(n) printf(\"##n\\n\",b2)//\u671f\u671bPXN(abc)&gt;&gt;\u8f93\u51fa\u5b57\u7b26\u4e32abc\n#define PXN(n) printf(\"%d \\n\",b\"#n\")//\u671f\u671bPXN(2)&gt;&gt;\u8f93\u51fab2\u7684\u503c\n</code></pre>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#notice","title":"Notice","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#printf","title":"\u5173\u4e8e<code>printf</code>\u89c4\u5b9a\u7b26","text":"<ul> <li> <p>%d \u5341\u8fdb\u5236\u6709\u7b26\u53f7\u6574\u6570</p> </li> <li> <p>%u \u5341\u8fdb\u5236\u65e0\u7b26\u53f7\u6574\u6570</p> </li> <li> <p>%f \u6d6e\u70b9\u6570</p> </li> <li> <p>%s \u5b57\u7b26\u4e32</p> </li> <li> <p>%c \u5355\u4e2a\u5b57\u7b26</p> </li> <li> <p>%p \u6307\u9488\u7684\u503c</p> </li> <li> <p>%e \u6307\u6570\u5f62\u5f0f\u7684\u6d6e\u70b9\u6570</p> </li> <li> <p>%x, %X \u65e0\u7b26\u53f7\u4ee5\u5341\u516d\u8fdb\u5236\u8868\u793a\u7684\u6574\u6570</p> </li> <li> <p>%o \u65e0\u7b26\u53f7\u4ee5\u516b\u8fdb\u5236\u8868\u793a\u7684\u6574\u6570</p> </li> <li> <p>%g \u628a\u8f93\u51fa\u7684\u503c\u6309\u7167 %e \u6216\u8005 %f \u7c7b\u578b\u4e2d\u8f93\u51fa\u957f\u5ea6\u8f83\u5c0f\u7684\u65b9\u5f0f\u8f93\u51fa</p> </li> <li> <p>%p \u8f93\u51fa\u5730\u5740\u7b26</p> </li> <li> <p>%lu 32\u4f4d\u65e0\u7b26\u53f7\u6574\u6570</p> </li> <li> <p>%llu 64\u4f4d\u65e0\u7b26\u53f7\u6574\u6570</p> </li> <li> <p>%% \u8f93\u51fa\u767e\u5206\u53f7\u5b57\u7b26\u672c\u8eab\u3002</p> </li> </ul> <p>\u9664\u4e86\u683c\u5f0f\u5316\u8bf4\u660e\u7b26\u4e4b\u5916\uff0cprintf() \u51fd\u6570\u8fd8\u652f\u6301\u4e00\u4e9b\u6807\u5fd7\u548c\u9009\u9879\uff0c\u7528\u4e8e\u63a7\u5236\u8f93\u51fa\u7684\u7cbe\u5ea6\u3001\u5bbd\u5ea6\u3001\u586b\u5145\u5b57\u7b26\u548c\u5bf9\u9f50\u65b9\u5f0f\u7b49\u3002\u4f8b\u5982\uff1a</p> <ul> <li> <p>%-10s\uff1a\u5de6\u5bf9\u9f50\u5e76\u5360\u7528\u5bbd\u5ea6\u4e3a 10 \u7684\u5b57\u7b26\u4e32\uff1b</p> </li> <li> <p>%5.2f\uff1a\u53f3\u5bf9\u9f50\u5e76\u5360\u7528\u5bbd\u5ea6\u4e3a 5\uff0c\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\u7684\u6d6e\u70b9\u6570\uff1b</p> </li> <li> <p>%#x\uff1a\u8f93\u51fa\u5e26\u6709 0x \u524d\u7f00\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002</p> </li> </ul>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#_8","title":"\u7f16\u8bd1\u6280\u5de7","text":"<p>\u6ca1\u6709Dev-c++\uff0c\u4ec5\u6709 Sublime\u600e\u4e48\u7f16\u8bd1\u8fd0\u884c\uff1f</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#1dev-c","title":"\u65b9\u6cd51\uff1a\u518d\u627e\u4e00\u904dDev-c++","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#2","title":"\u65b9\u6cd52\uff1a\u4f7f\u7528\u547d\u4ee4\u884c\u8fdb\u884c\u7f16\u8bd1","text":"<p>\u7f16\u8f91\u4e00\u4e2a  <code>run.bat</code> \u5185\u5bb9\u5982\u4e0b</p> <p>```Plain Text g++ a.cpp -o out.exe out.exe <pre><code>\u5176\u4e2d`a.cpp`\u4e3a\u6e90\u6587\u4ef6\u540d\u79f0\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u91cc\u8f93\u5165\u5566\n\n\u90a3\u4e48\u600e\u4e48\u6837\u67e5\u770b\u8f93\u51fa\u5462\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u4e00\u79cd\u662f\u5728\u4ee3\u7801\u91cc\u52a0\u5165\u6682\u505c\u7684\u4ee3\u7801\uff08\u5177\u4f53\u7684\u81ea\u884c\u767e\u5ea6\uff09\n\n```C++\nsystem(\"pause\");//\u4ec5\u9650Windows\n</code></pre></p> <p>//\u6216\u8005\u5728\u7a0b\u5e8f\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u8f93\u5165\u3002</p> <p></p> <p>\u8fd8\u6709\u4e00\u79cd\u662f**\u8f93\u51fa\u5230\u6587\u4ef6** \u7528<code>freopen</code>\u5373\u53ef</p>"},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#_9","title":"\u5b57\u7b26\u4e32\u4e0e\u6570\u5b57\u8f6c\u6362","text":""},{"location":"%E6%89%A9%E5%B1%95%E8%B5%84%E6%96%99/%E8%80%83%E5%89%8D%E6%B3%A8%E6%84%8F/#debug","title":"DEBUG\u4ee3\u7801","text":"<pre><code>const bool OPEN_DEBUG = true;\n\ntemplate &lt;typename T,typename... Args&gt;\nvoid DEBUG(bool flg,T s,Args... args) {\n    if constexpr (OPEN_DEBUG){\n        cout &lt;&lt; s;\n        if constexpr (sizeof...(Args))\n            DEBUG(flg,args...);\n    }\n}\n</code></pre> <pre><code>#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/BSGS/","title":"BSGS","text":"<p>BSGS</p>"},{"location":"%E6%95%B0%E5%AD%A6/BSGS/#bsgs-bushi","title":"BSGS \u5317\u4e0a\u5e7f\u6df1\u7b97\u6cd5\uff08bushi","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u8d28\u6570 \\(p\\)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6574\u6570 \\(b\\)\uff0c\u4e00\u4e2a\u6574\u6570 \\(n\\)\uff0c\u73b0\u5728\u8981\u6c42\u4f60\u8ba1\u7b97\u4e00\u4e2a\u6700\u5c0f\u7684\u975e\u8d1f\u6574\u6570 \\(l\\)\uff0c\u6ee1\u8db3 \\(b^l \\equiv n \\pmod p\\)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/BSGS/#_1","title":"\u6269\u5c55\u6b27\u62c9\u5b9a\u7406","text":"<p>\u5b9a\u4e49 \\(a^b \\equiv \\begin{cases} a^{b \\bmod \\varphi(m)},                &amp;\\gcd(a,m) =  1,                   \\\\ a^b,                                   &amp;\\gcd(a,m)\\ne 1, b &lt;   \\varphi(m), \\\\ a^{(b \\bmod \\varphi(m)) + \\varphi(m)}, &amp;\\gcd(a,m)\\ne 1, b \\ge \\varphi(m). \\end{cases} \\pmod m\\)</p> <p>\u6b27\u62c9\u5b9a\u7406\uff1a\u82e5 \\(\\gcd(a, m) = 1\\)\uff0c\u5219 \\(a^{\\varphi(m)} \\equiv 1 \\pmod{m}\\)\u3002</p> <p>\u6211\u4eec\u628aex\u6b27\u62c9\u7684\u7b2c\u4e00\u4e2a\u6027\u8d28\u62ff\u51fa\u6765\uff0c\u5373\\(a^b \\equiv a^{b \\bmod \\varphi(m)}   \\pmod m,   \\gcd(a,m) =  1\\)\uff0c\u90a3\u4e48\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\\(a^b \\pmod m\\)\u7684\u5faa\u73af\u8282\u5c31\u5e94\u8be5\u662f\\(\\varphi(m)\\)\u3002\u6240\u4ee5\u4e00\u4e2a\u65b9\u6cd5\u5c31\u662f\u6211\u4eec\u66b4\u529b\u679a\u4e3e\\(b=0\\sim \\varphi(m)\\)\u5373\u53ef\u3002\u590d\u6742\u5ea6\u4e3a O(m)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/BSGS/#_2","title":"\u6269\u5c55\u6b27\u62c9\u5b9a\u7406\u7684\u5e94\u7528","text":"<p>\u7ed9\u4f60\u4e09\u4e2a\u6b63\u6574\u6570\uff0c\\(a,m,b\\)\uff0c\u4f60\u9700\u8981\u6c42\uff1a\\(a^b \\bmod m\\)</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le a \\le 10^9\\)\uff0c\\(1\\le b \\le 10^{20000000}\uff0c1\\le m \\le 10^8\\)\u3002</p> <p>\u6211\u4eec\u9996\u5148\u6c42\u51fa \\(\\varphi (m)\\)\u3002\u5bf9\u4e8e\u6c42\u4e00\u4e2a\u6570\u5b57\u7684phi\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6839\u636e\u5b9a\u4e49\u6765\u6c42\u89e3\u3002</p> <p>\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u8f93\u5165b\u65f6\u987a\u4fbf\u5bf9b\u53d6\u6a21\u4e86\u3002\u6ce8\u610f\u6b21\u6570\u5728\u5bf9phi\u53d6\u6a21\u540e\u8fd8\u8981\u52a0\u4e0a\u4e00\u4e2aphi\u3002\u4e0d\u662f\u5bf92\\times phi\u53d6\u6a21\uff01\uff01</p> <pre><code>int getphi(int x)\n{\n    int ans=1,num=1;\n    for(int i=2;i*i&lt;=x;i++)\n    {\n        if(!(x%i))\n        {\n            num=i-1,x/=i;\n            while(!(x%i)) num=num*i,x/=i;\n            ans=num*ans;\n        }\n    }\n    if(x!=1) ans=ans*(x-1);\n    return ans;\n}\n\nint cal(string s,int MOD){\n    int res=0,f=0;\n    for(auto c:s){\n        // dbg(c);\n        res=(res*10+c-'0');\n        if(res&gt;=MOD)res%=MOD,f=1;\n    }\n    if(!f)return res;\n    return res+MOD;\n}\nstring s;\nvoid solve(){\n    a=rd,MOD=rd;\n    cin&gt;&gt;s;\n    int b=cal(s,getphi(MOD));\n\n    cout&lt;&lt;ksm(a,b)&lt;&lt;endl;\n}\n\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/BSGS/#bsgs","title":"BSGS","text":"<p>\u6211\u4eec\u73b0\u5728\u6765\u8003\u8651\u4f18\u5316\u3002\u4ee4\\(b=ip-j,p=\\lceil\\sqrt m\\rceil,i\\in [1,p],j\\in[0,p-1]\\)\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eecb\u7684\u53d6\u503c\u6070\u597d\u4e3a\\(b\\in[1,m]\\)\uff0c\u5bf9\u4e8eb=0\u6211\u4eec\u7279\u5224\u5373\u53ef\u3002</p> <p>\u90a3\u4e48\u8fd9\u6837\u7684\u610f\u4e49\u4f55\u5728\uff1f</p> <p>\u6211\u4eec\u5c06 \\(b^l \\equiv n \\pmod m\\)\u8868\u793a\u4e3a\\(b^{ip-j}\\equiv n \\pmod m\\)\uff0c\u53d8\u5f62\\((b^i)^p\\equiv nb^j \\pmod m\\)\u5176\u4e2dp\u662f\u5b9a\u503c\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u679a\u4e3ei\uff0c\u7528map\u8bb0\u5f55\u4e8c\u5143\u7ec4\\((i,(b^i)^p\\mod m)\\)\uff0c\u7136\u540e\u679a\u4e3ej\uff08\u72ec\u7acb\uff09\uff0c\u8bb0\u5f55\u4e8c\u5143\u7ec4\\((j,nb^j\\mod m)\\)\u3002\u5f53\u6211\u4eec\u7b2c\u4e00\u6b21\u53d1\u73b0\u4e24\u4e2a\u4e8c\u5143\u7ec4\\((i,(b^i)^p\\mod m)(j,nb^j\\mod m)\\)\u4e2d\u7b2c\u4e8c\u5143\u76f8\u540c\u65f6\uff0c\u6b64\u65f6\u7684i,j\u5373\u7b54\u6848\u3002</p> <p>\u8fd9\u5c31\u76f8\u5f53\u4e8e\\(i,j\\in [1,n]\\)\uff0c\u6c42\\(f(i)=g(j)\\)\u65f6\u7684i,j\uff0c\u6211\u4eec\u4e0d\u9700\u8981n^2\u679a\u4e3e\uff0c\u53ea\u9700\u8981\u5efa\u7acb\u6620\u5c04\uff0c\u770b\u6709\u6ca1\u6709i,j\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u503c\u662f\u5373\u53ef\u3002</p> <p>\u72ec\u7acb\u5206\u5f00\u679a\u4e3e\\(i,j\\)\u90fd\u662f\\(O(\\sqrt m)\\)\u7684\u590d\u6742\u5ea6\u3002</p> <p></p> <pre><code>/*\nCode bnxt Ntsc_Hodaka\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int unsigned long long\n#define mp make_pair\n#define pii pair&lt;int,int&gt;\n\n///----///\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n///----///\nconst int N = 2e6 + 5;\nconst int M = 1e7 + 5;\nconst int INF = 1e9 + 5;\nint MOD=1e9+7;\nconst double eps=1e-7;\n\nbool f1;\n///----///\nint n,a[N],b[N],x,ans;\nbool f2;\n\nint ksm(int a,int b){\n    int res=1;\n    while(b){\n        if(b&amp;1) (res*=a)%=MOD;\n        (a*=a)%=MOD;\n        b&gt;&gt;=1;\n    }\n    return res;\n}\n\nint bsgs(int a,int b,int p){\n    a%=p;b%=p;\n    if(b==1)return 0;\n    int m=ceil(sqrt(p)),t=b;\n    unordered_map&lt;int,int&gt; mp;\n    mp[b]=0;\n    for(int i=1;i&lt;m;i++){\n        t=t*a%p;\n        mp[t]=i;\n    }\n    int res=ksm(a,m);\n    t=1;\n    for(int i=1;i&lt;=m;i++){\n        t=t*res%p;\n        if(mp.count(t))return i*m-mp[t];\n    }\n    return -1;\n}\n\nsigned main(){\n    int p=rd,a=rd,b=rd;\n    MOD=p;\n    ans=bsgs(a,b,p);\n    if(~ans)cout&lt;&lt;ans;\n    else cout&lt;&lt;\"no solution\";\n    return 0;\n}\n\n\n/*\n\n*/\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/CRT%E4%B8%8EexCRT/","title":"CRT\u4e0eexCRT","text":"<p>CRT</p> <p>\u8865\u5145\u8d44\u6599</p> <p>https://www.cnblogs.com/ailanxier/p/13370753.html</p>"},{"location":"%E6%95%B0%E5%AD%A6/CRT%E4%B8%8EexCRT/#crt","title":"CRT","text":"<p>\u5b59\u5b50\u5b9a\u7406\u662f\u4e2d\u56fd\u53e4\u4ee3\u6c42\u89e3\u4e00\u6b21\u540c\u4f59\u5f0f\u7ec4\uff08\u89c1\u540c\u4f59\uff09\u7684\u65b9\u6cd5\u3002\u662f\u6570\u8bba\u4e2d\u4e00\u4e2a\u91cd\u8981\u5b9a\u7406\u3002\u53c8\u79f0\u4e2d\u56fd\u4f59\u6570\u5b9a\u7406\u3002</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/CRT%E4%B8%8EexCRT/#excrt","title":"exCRT","text":"<p>ex-CRT\uff0c\u5176\u5b9e\u5c31\u662f\u8003\u8651\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u6a21\u6570\u4e24\u4e24\u4e0d\u4e00\u5b9a\u4e92\u8d28\u7684\u60c5\u51b5\uff0c\u4e0d\u77e5\u9053\u8c01\u7ed9\u5b83\u53d6\u4e86\u4e00\u4e2a\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7684\u540d\u5b57\u3002\u6a21\u6570\u4e0d\u4e92\u8d28\uff0c\u5c31\u4e0d\u80fd\u7528\u501f\u52a9\u9006\u5143\u7684\u65b9\u6cd5\u4e86\uff0c\u9700\u8981\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/CRT%E4%B8%8EexCRT/#exgcd","title":"\u6211\u4eec\u5148\u590d\u4e60\u4e00\u4e0bexgcd","text":"<p>\\(ax+by=c\\)</p> <p>\u88f4\u8700\u5b9a\u7406</p> <p>\u5bf9\u4e8e\u4efb\u610f\u6574\u6570a,b\uff0c\u5f53a\uff0cb\u4e92\u8d28,\u4e0b\u9762\u4e0d\u5b9a\u65b9\u7a0b\u5b58\u5728\u6574\u6570\u89e3</p> <p>\u53ef\u4ee5\u5f97\u5230\u9012\u63a8\u5f0f\uff1a\\(x=y',y=x'-y'*[a/b]\\)</p> <p>\u6b64\u65f6\u6211\u4eec\u77e5\u9053\u4e86x,y,a,b,\u5c31\u53ef\u4ee5\u5c06x'=0,y'=1,a=0,b=b\u4ee3\u5165\\(x=y',y=(x'-y'*[a/b])\\)</p> <p>\u9012\u5f52\u56de\u53bb\uff0c\u9012\u5f52\u5230a,b\u4e3a\u539f\u59cb\u503c\u65f6x\uff0cy\u5c31\u662f\u4e00\u7ec4\u7279\u89e3\u4e86\u3002</p> <pre><code>ll exgcd(ll a,ll b,ll &amp;x,ll &amp;y){\n    if(b==0){\n        x=1,y=0;return a;//\u8f97\u8f6c\u76f8\u9664\u6cd5\u7ed3\u675f\uff0ca\u5c31\u662fgcd(\u539fa,\u539fb)\n    }\n    int nowgcd=exgcd(b,a%b,x,y)\n   int tmpx=x,tmpy=y;   //\u6b64\u65f6x,y\u8fd8\u662fx',y',\u5b58\u4e0b\u6765\u540e\u9762\u8981\u7528\n    //\u53cd\u4ee3\u56de\u53bb\uff0c\u6c42\u4e0a\u4e00\u5c42\u7684x,y\n    x=tmpy;\n    y=tmpx-(a/b)*tmpy;\n    return nowgcd;\n}\n</code></pre> <p>\u901a\u89e3</p> <p>\\(a*x + b*y = gcd(a,b)\\)\u7684\u901a\u89e3\u4e3a</p> <ul> <li> <p>\\(x = x' - b/gcd(a,b)*t\\)</p> </li> <li> <p>$y = y' + a/gcd(a,b)*t  $t\u4e3a\u4efb\u610f\u6574\u6570\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/CRT%E4%B8%8EexCRT/#excrt_1","title":"\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5b9e\u73b0excrt","text":"<p>\u8463\u6653\u7b97\u6cd5 - \u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406</p> <p>\u5bf9\u4e8e\u540c\u4f59\u65b9\u7a0b\u7ec4\uff1a</p> <ul> <li> <p>\\(x\u2261a1(\\mod m_1)\\)</p> </li> <li> <p>\\(x\u2261a2(\\mod m_2)\\)</p> </li> </ul> <p>\u8f6c\u5316\u4e3a\u4e0d\u5b9a\u65b9\u7a0b\u7ec4</p> <ul> <li> <p>\\(x=m_1p+a_1\\)</p> </li> <li> <p>\\(x=m_2q+a_2\\)</p> </li> </ul> <p>\u8054\u7acb2\u65b9\u7a0b \\(m_1p+a_1=m_2q+a_2\\) \\(m_1p-m_2q=a_2-a_1\\)</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u6b63\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u4e0d\u5b9a\u65b9\u7a0b\uff0c\u6211\u4eec\u4e5f\u8bb8\u53ef\u4ee5\u7528exgcd\u8fdb\u884c\u6c42\u89e3</p> <p>\u4f46\u6ce8\u610fexgcd\u7684\u6761\u4ef6\uff1a</p> <p>\\(ax+by=c\\),c\u5fc5\u987b\u662fgcd(a,b)\u7684\u500d\u6570</p> <p>\u56e0\u6b64\u4ec5\u5f53\\(gcd(m1,m2)|(a2-a1)\\)\u65f6\u4e0d\u5b9a\u65b9\u7a0b\u6709\u89e3\uff0c\u8d1f\u8d23\u65e0\u89e3</p> <p>\u5982\u679c\u6709\u89e3\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u4f7f\u7528exgcd\u6c42\u51fa\u65b9\u7a0b\u7684\u4e00\u7ec4\u7279\u89e3</p> <ul> <li> <p>\\(p=p'*(a_2-a_1)/gcd\\)</p> </li> <li> <p>\\(q=q'*(a_2-a_1)/gcd\\)</p> </li> </ul> <p>\u4e3a\u4ec0\u4e48\u8981\\(*(a2-a1)/gcd\\) \uff1f\\(p'\\)\u4e0d\u5c31\u662f\u4e00\u7ec4\u7279\u89e3\u5417\uff1f</p> <p>=&gt; \u6ce8\u610f\uff01\u6211\u4eec\u8fd9\u91cc\u7684  \\(m_1p-m_2q=a_2-a_1\\) \uff0c\u5e76\u4e0d\u662f\\(ax+by=gcd(a,b)\\)!!! \u5728\\(ax+by=gcd(a,b)\\)\u4e2d\uff0ca,b\u4e92\u8d28\uff0c\u76f8\u5f53\u4e8e\\(ax+by=1\\)\uff0c\u5373\u4e0a\u5f0f\u4e2d\\(a2-a1=1\\) \u6b64\u65f6 \\(p=p'*(a_2-a_1)/gcd=p'*1\\)</p> <p>\u800c \\(m_1p-m_2q=a_2-a_1\\) \u4e2d \\(a_2-a_1\\) \u4ec5\u6ee1\u8db3 \\(a_2-a_1=k*gcd(a,b)\\) \uff0c\u56e0\u6b64\u8981 \\(*(a2-a1)/gcd\\)</p> <p>\u5176\u901a\u89e3\u4e3a</p> <p>\\(P=p/gcd\\) \\(Q=q-k*m2/gcd\\)</p> <p>\u4ee3\u56de \\(x=m_1p+a_1\\)</p> <p>\\(x=m_1(p/gcd+a_1=m_1p+k*lcm(m_1,m_2)+a_1\\)</p> <p>\u6211\u4eec\u53c8\u53ef\u4ee5\u628a\u8fd9\u4e2a\u65b9\u7a0b\u8f6c\u5316\u4e3a\u4e00\u4e2a\u540c\u4f59\u65b9\u7a0b</p> <p>\\(x\u2261m_1p+a_1(\\mod lcm(m_1,m_2))\\)</p> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u6210\u529f\u7684\u628a2\u4e2a\u540c\u4f59\u65b9\u7a0b\u8f6c\u5316\u4e3a\u4e861\u4e2a\u540c\u4f59\u65b9\u7a0b\u3002\u5982\u679c\u6709n\u4e2a\u540c\u4f59\u65b9\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u65ad\u5408\u5e76\u4e0b\u53bb\uff0c\u76f4\u5230\u53ea\u5269\u4e0b\u4e00\u4e2a\u540c\u4f59\u65b9\u7a0b\uff0cexgcd\u6c42\u89e3\u5373\u53ef\u3002</p> <p>\u5728\u5408\u5e76\u65b9\u7a0b\u65f6\u8981\u6839\u636e\u88f4\u8700\u5b9a\u7406\u5224\u5b9a\u662f\u5426\u6709\u89e3\uff01</p> <p>\u4ee3\u7801\u5982\u4e0b</p> <pre><code>ll exgcd(ll a,ll b,ll &amp;x,ll &amp;y){\n    if(b==0){\n        x=1,y=0;return a;//\u8f97\u8f6c\u76f8\u9664\u6cd5\u7ed3\u675f\uff0ca\u5c31\u662fgcd(\u539fa,\u539fb)\n    }\n    ll nowgcd=exgcd(b,a%b,x,y)\n   ll tmpx=x,tmpy=y;    //\u6b64\u65f6x,y\u8fd8\u662fx',y',\u5b58\u4e0b\u6765\u540e\u9762\u8981\u7528\n    //\u53cd\u4ee3\u56de\u53bb\uff0c\u6c42\u4e0a\u4e00\u5c42\u7684x,y\n    x=tmpy;\n    y=tmpx-(a/b)*tmpy;\n    return nowgcd;\n}\n\nll excrt(ll m[],ll a[]){\n    ll p,q,m1,m2,a1,a2;\n    m1=m[1],a1=a[1];\n    //\u5408\u5e76\u601d\u8def\uff1a\u4e0d\u65ad\u628a\u5f0fA2...An\u4e0e\u5f0fA1\u5408\u5e76\n    for(int i=1;i&lt;=n;i++){\n        m2=m[i],a2=a[i];\n        ll d=exgcd(m1,m2,a1,a2);\n        if((a2-a1)%d){\n            return -1;\n        }\n        p=p*(a2-a1)/d;\n        p=(p%(m2/d)/p\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u8981\u5904\u7406\u4e3a\u6700\u5c0f\u7684\u6b63\u6574\u6570\uff08\u539f\u7406\u662f\u901a\u89e3\u516c\u5f0f\uff09\n        a1=m1*p+a1;\n        m1=m1*m2/d;\n    }\n    return (a1%m1+m1)%m1;\n}\n</code></pre> <pre><code>inv[1]=1;printf(\"%d\\n\",inv[1]);\n    for(int i=2;i&lt;=n;i++){\n        inv[i]=(p-p/i)*inv[p%i]%p;\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/GCD%E4%B8%8ELCM/","title":"GCD\u4e0eLCM","text":""},{"location":"%E6%95%B0%E5%AD%A6/GCD%E4%B8%8ELCM/#_1","title":"\u6700\u5927\u516c\u56e0\u6570","text":""},{"location":"%E6%95%B0%E5%AD%A6/GCD%E4%B8%8ELCM/#_2","title":"\u6700\u5c0f\u516c\u500d\u6570","text":"<p>\u4e24\u4e2a\u6216\u591a\u4e2a\u6574\u6570\u516c\u6709\u7684\u500d\u6570\u53eb\u505a\u5b83\u4eec\u7684\u516c\u500d\u6570\uff0c\u5176\u4e2d\u96640\u4ee5\u5916\u6700\u5c0f\u7684\u4e00\u4e2a\u516c\u500d\u6570\u5c31\u53eb\u505a\u8fd9\u51e0\u4e2a\u6574\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u3002\u6574\u6570a\uff0cb\u7684\u6700\u5c0f\u516c\u500d\u6570\u8bb0\u4e3a \\([a,b] \\(\uff0c\u540c\u6837\u7684\uff0ca\uff0cb\uff0cc\u7684\u6700\u5c0f\u516c\u500d\u6570\u8bb0\u4e3a\\)[a,b,c]\\)\uff0c\u591a\u4e2a\u6574\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u4e5f\u6709\u540c\u6837\u7684\u8bb0\u53f7\u3002</p> <p>\u4e0e\u6700\u5c0f\u516c\u500d\u6570\u76f8\u5bf9\u5e94\u7684\u6982\u5ff5\u662f\u6700\u5927\u516c\u7ea6\u6570\uff0ca\uff0cb\u7684\u6700\u5927\u516c\u7ea6\u6570\u8bb0\u4e3a \\((a,b)\\) \u3002\u5173\u4e8e\u6700\u5c0f\u516c\u500d\u6570\u4e0e\u6700\u5927\u516c\u7ea6\u6570\uff0c\u6211\u4eec\u6709\u8fd9\u6837\u7684\u5b9a\u7406\uff1a \\((a,b)\\times[a,b]=ab\\) (\\(a,b\\)\u5747\u4e3a\u6574\u6570)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/GCD%E4%B8%8ELCM/#_3","title":"\u6b27\u62c9\u51fd\u6570","text":"<p>\u5373 \\(\\varphi(n)\\)\uff0c\u8868\u793a\u7684\u662f\u5c0f\u4e8e\u7b49\u4e8e n \u548c n \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570\u3002 \u6bd4\u5982\u8bf4 \\(\\varphi(1) = 1\\)\u3002</p> <p>\u82e5 m \u662f\u7d20\u6570\uff0c\u5219\\(\\varphi(m)=m-1\\)</p> <p>\u82e5m=pq\uff0c\u5176\u4e2dp,q\u662f\u8d28\u6570\u4e14p\u2260q\uff0c\u5219\\varphi(m)=(p-1)(q-1)</p> <p>\u82e5\\(m=\\prod p_i^{l_i}\\)\uff0c\u5373\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u90a3\u4e48\\(\\varphi(m)=m\\times \\prod (1-\\frac{1}{p_i})\\)</p> <p>\u6c42\u5355\u70b9\u6b27\u62c9\u51fd\u6570</p> <pre><code>int getphi(int x){\n    int res=x;\n    for(int i=2;i*i&lt;=x;i++){\n        if(x%i==0){\n            res=res/i*(i-1);\n            while(x%i==0)x/=i;\n        }\n    }\n    if(x&gt;1)res=res/x*(x-1);\n    return res;\n}\n</code></pre> <p>\u7b5b\u6cd5\u6c42\u6b27\u62c9\u51fd\u6570</p> <pre><code>int prime[N],notprime[N];\nint cnt;\nint phi[N];\n\n\nvoid init(){\n  phi[1]=1;\n  for(int i=2;i&lt;N;i++){\n    if(!notprime[i]){\n        prime[++cnt]=i;\n        phi[i]=i-1;\n    }\n    for(int j=1;j&lt;=cnt;j++){\n        if(i*prime[j]&gt;=N)break;\n        notprime[i*prime[j]]=1;\n        if(i%prime[j]==0){\n            phi[i*prime[j]]=phi[i]*prime[j];break;\n        }\n        phi[i*prime[j]]=phi[i]*phi[prime[j]];\n    }\n  }\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/GCD%E4%B8%8ELCM/#_4","title":"\u6b27\u62c9\u5b9a\u7406","text":"<p>\u82e5 \\(\\gcd(a, m) = 1\\)\uff0c\u5219 \\(a^{\\varphi(m)} \\equiv 1 \\pmod{m}\\)\u3002</p> <p>\u662f\u4e0d\u662f\u770b\u7740\u975e\u5e38\u62bd\u8c61\uff1f</p>"},{"location":"%E6%95%B0%E5%AD%A6/GCD%E4%B8%8ELCM/#_5","title":"\u8f97\u8f6c\u76f8\u9664\u6cd5","text":"<p>\u8f97\u8f6c\u76f8\u9664\u6cd5\u6c42<code>gcd(a,b)</code>\u7b97\u6cd5\u5b9e\u73b0</p> <pre><code>int gcd(int a, int b) {\n    if (b == 0)\n        return a;\n    return gcd(b, a % b);\n}\n</code></pre> <p>\u538b\u884c\u540e\uff08\u4e0d\u77e5\u9053\u5bf9\u4e0d\u5bf9\uff09</p> <pre><code>int gcd(int a, int b) {return b?gcd(b, a % b):a;}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/GCD%E4%B8%8ELCM/#_6","title":"\u66f4\u76f8\u51cf\u635f\u672f","text":"<p>gcd(a,b)=gcd(a-b,b)\uff0c\u9012\u5f52\u6761\u4ef6\u4f60\u4e3aa-b=0\u65f6\u8fd4\u56deb\u3002</p> <pre><code>int gcd(int a,int b){\n    if(a&lt;b)swap(a,b);\n    if(!b)return a;\n    if((a&amp;1)==0||(b&amp;1)==0)return gcd(a&gt;&gt;1,b&gt;&gt;1)&lt;&lt;1;\n    if((a&amp;1)==0){a&gt;&gt;=1;return gcd(a,b);}\n    if((b&amp;1)==0){b&gt;&gt;=1;return gcd(a,b);}\n    return gcd(a-b,b);\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/GCD%E4%B8%8ELCM/#stl","title":"STL","text":"<pre><code>__gcd(int a,int b)\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/exGCD/","title":"exGCD","text":""},{"location":"%E6%95%B0%E5%AD%A6/exGCD/#exgcd_1","title":"exGCD\u7406\u8bba","text":""},{"location":"%E6%95%B0%E5%AD%A6/exGCD/#_1","title":"\u88f4\u8700\u5b9a\u7406","text":"<p>\u5728\u6570\u8bba\u4e2d\uff0c\u88f4\u8700\u5b9a\u7406\u662f\u4e00\u4e2a\u5173\u4e8e\u6700\u5927\u516c\u7ea6\u6570\uff08\u6216\u6700\u5927\u516c\u7ea6\u5f0f\uff09\u7684\u5b9a\u7406\uff0c\u88f4\u8700\u5b9a\u7406\u5f97\u540d\u4e8e\u6cd5\u56fd\u6570\u5b66\u5bb6\u827e\u8482\u5b89\u00b7\u88f4\u8700\u3002 \u88f4\u8700\u5b9a\u7406\u8bf4\u660e\u4e86\u5bf9\u4efb\u4f55\u6574\u6570 a\u3001b\u548c\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570 d \uff0c\u5173\u4e8e\u672a\u77e5\u6570 x\u4ee5\u53ca y \u7684\u7ebf\u6027\u7684\u4e22\u756a\u56fe\u65b9\u7a0b\uff08\u79f0\u4e3a\u88f4\u8700\u7b49\u5f0f\uff09\u3002</p> <p>\u5b83\u7684\u4e00\u4e2a\u91cd\u8981\u63a8\u8bba\u662f\uff1aa,b\u4e92\u8d28\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\u5b58\u5728\u6574\u6570x,y\u4f7fax+by=1.</p>"},{"location":"%E6%95%B0%E5%AD%A6/exGCD/#_2","title":"\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","text":"<p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u662f\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff08\u53c8\u53eb\u8f97\u8f6c\u76f8\u9664\u6cd5\uff09\u7684\u6269\u5c55\u3002\u9664\u4e86\u8ba1\u7b97a\u3001b\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u6b64\u7b97\u6cd5\u8fd8\u80fd\u627e\u5230\u6574\u6570x\u3001y\uff08\u5176\u4e2d\u4e00\u4e2a\u5f88\u53ef\u80fd\u662f\u8d1f\u6570\uff09\u3002\u901a\u5e38\u8c08\u5230\u6700\u5927\u516c\u56e0\u5b50\u65f6, \u6211\u4eec\u90fd\u4f1a\u63d0\u5230\u4e00\u4e2a\u975e\u5e38\u57fa\u672c\u7684\u4e8b\u5b9e: \u7ed9\u4e88\u4e8c\u6574\u6570 a \u4e0e b, \u5fc5\u5b58\u5728\u6709\u6574\u6570 x \u4e0e y \u4f7f\u5f97\\(ax + by = gcd(a,b)\\)\u3002\u6709\u4e24\u4e2a\u6570a,b\uff0c\u5bf9\u5b83\u4eec\u8fdb\u884c\u8f97\u8f6c\u76f8\u9664\u6cd5\uff0c\u53ef\u5f97\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\u2014\u2014\u8fd9\u662f\u4f17\u6240\u5468\u77e5\u7684\u3002\u7136\u540e\uff0c\u6536\u96c6\u8f97\u8f6c\u76f8\u9664\u6cd5\u4e2d\u4ea7\u751f\u7684\u5f0f\u5b50\uff0c\u5012\u56de\u53bb\uff0c\u53ef\u4ee5\u5f97\u5230\\(ax+by=gcd(a,b)\\)\u7684\u6574\u6570\u89e3\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/exGCD/#exgcd_2","title":"exGCD\u5b9e\u73b0","text":"<p>\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u5f0f\u5b50</p> <p>\\(ax+by=c\\)</p> <p>\u6ca1\u9519\u8fd9\u662f\u6211\u4eec\u76ee\u524d\u7684\u4e00\u9053\u95ee\u9898\u2014\u2014\u6c42\u89e3\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u3002</p> <p>\u88f4\u8700\u5b9a\u7406</p> <p>\u5bf9\u4e8e\u4efb\u610f\u6574\u6570a,b\uff0c\u5f53a\uff0cb\u4e92\u8d28,\u4e0b\u9762\u4e0d\u5b9a\u65b9\u7a0b\u5b58\u5728\u6574\u6570\u89e3</p> <p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5</p> <p>\u5f85\u89e3\u65b9\u7a0b\uff1a\\(ax+by=gcd(a,b)\\)</p> <p>\u6839\u636e\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 \\(gcd(a,b)=gcd(b,a\\%b)\\) \u5f97\u5230</p> <p>\u4ee4\\(a'=b,b'=a\\%b\\)</p> <p>=&gt; \\(x'a'+y'b'=gcd(a',b')=gcd(a,b)\\)</p> <p>\\(gcd(a,b)\\)\u4e0d\u65ad\u5411\u4e0b\uff0c\u4f1a\u51fa\u73b0\\(a=0\\)</p> <p>\\(ax+by=gcd(a,b)\\)</p> <p>=&gt; \\(x*0+y*b=gcd(0,b)=b\\)</p> <p>=&gt; \\(0*0+1*b=b\\)</p> <p>=&gt; \u6211\u4eec\u5c31\u89c4\u5b9a\\(x=0,y=1\\)</p> <p>\u6b64\u65f6\u6211\u4eec\u5f97\u5230\u4e86\u5f53\u524d\u4e0d\u5b9a\u65b9\u7a0b(a=0)\u7684x,y</p> <p>\u6211\u4eec\u56de\u5230\u4e0a\u9762</p> <p>\\(a'=b\\) , \\(b'=a\\%b\\)</p> <p>\\(x'a'+y'b'=gcd(a',b')=gcd(a,b)\\)</p> <p>=&gt; \\(b'=a\\%b =a-[a/b]*b,a'=b\\)   \u4ee3\u5165</p> <p>=&gt; \\(x'b/b]*b)=gcd(a,b)\\)</p> <p>=&gt; \\((x'-y'*[a/b])b+y'a=gcd(a,b)=xa+yb\\)</p> <p>\u56e0\u6b64\u53ef\u4ee5\u5f97\u5230\u9012\u63a8\u5f0f\uff1a\\(x=y',y=x'-y'*[a/b]\\)</p> <p>\u56de\u5230\u4e0a\u9762\u7684\u7279\u89e3</p> <p>\\(0*0+1*b=b\\)</p> <p>\\(x=0,y=1\\)</p> <p>\u6b64\u65f6\u6211\u4eec\u77e5\u9053\u4e86x,y,a,b,\u5c31\u53ef\u4ee5\u5c06x'=0,y'=1,a=0,b=b\u4ee3\u5165\\(x=y',y=(x'-y'*[a/b])\\)</p> <p>\u9012\u5f52\u56de\u53bb\uff0c\u9012\u5f52\u5230a,b\u4e3a\u539f\u59cb\u503c\u65f6x\uff0cy\u5c31\u662f\u4e00\u7ec4\u7279\u89e3\u4e86\u3002</p> <pre><code>ll exgcd(ll a,ll b,ll &amp;x,ll &amp;y){\n    if(b==0){\n        x=1,y=0;return a;//\u8f97\u8f6c\u76f8\u9664\u6cd5\u7ed3\u675f\uff0ca\u5c31\u662fgcd(\u539fa,\u539fb)\n    }\n    int nowgcd=exgcd(b,a%b,x,y)\n   int tmpx=x,tmpy=y;   //\u6b64\u65f6x,y\u8fd8\u662fx',y',\u5b58\u4e0b\u6765\u540e\u9762\u8981\u7528\n    //\u53cd\u4ee3\u56de\u53bb\uff0c\u6c42\u4e0a\u4e00\u5c42\u7684x,y\n    x=tmpy;\n    y=tmpx-(a/b)*tmpy;\n    return nowgcd;\n}\n</code></pre> <p>\u76f4\u63a5\u770b\u4ee3\u7801\u5427</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nll T,a,b,c,d,x,y,k,p,q;\n\nll exgcd(ll a,ll b,ll &amp;x,ll &amp;y){\n    ll tmp=a;\n    if(!b)x=1,y=0;\n    else {\n        tmp=exgcd(b,a%b,y,x);\n        y-=a/b*x;\n    }\n    return tmp;\n}\nsigned main() {\n    cin&gt;&gt;T;\n    while(T--){\n        scanf(\"%lld%lld%lld\",&amp;a,&amp;b,&amp;c);\n        x=y=0;\n        d=exgcd(a,b,x,y);\n\n        ////AC////\n        if(c%d)printf(\"-1\\n\");\n        else{\n            x*=c/d,y*=c/d;\n            p=b/d,q=a/d;\n            if(x&lt;0)k=ceil((1.00-x)/p),x+=p*k,y-=q*k;\n            else k=(x-1)/p,x-=p*k,y+=q*k;\n            if(y&gt;0){\n                printf(\"%lld %lld %lld %lld %lld\\n\",(y-1)/q/q*p,y);\n\n            }else{\n                printf(\"%lld %lld\\n\",x,y/q));\n            }\n        }\n\n    }\n\n\n    return 0;\n}\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0cexgcd()\u7684\u8fd4\u56de\u503cd\u662fgcd(a,b)\u7684\u503c</p> <p>\u540c\u65f6\uff0c\u6211\u4eec\u5728\u63a8\u7b97\u7684\u8fc7\u7a0b\u4e2d\u66f4\u6539\u4e86x\uff0cy\u7684\u503c\uff0c\u5728\u51fd\u6570\u7ed3\u675f\u65f6x\uff0cy\u5c31\u662f\u4e0d\u5b9a\u65b9\u7a0b\u7684\u4e00\u7ec4\u7279\u89e3</p> <p>e.g.</p> <p>\u8f93\u5165\uff1a</p> <pre><code>1\n64 36 4\n</code></pre> <p>\u5f53\u4ee3\u7801\u8fd0\u884c\u5230////AC/////\u5904\u65f6\uff1a</p> <pre><code>d=4,x=4,y=-7\n</code></pre> <p>\u88f4\u8700\u5b9a\u7406\u5e94\u7528</p> <p>\u6211\u4eec\u56de\u5230\u5f00\u59cb\u7684\u4e0d\u7b49\u5f0f\u4e0e\u9898\u76ee\u4e2d\u7684\u4e0d\u7b49\u5f0f</p> <p>\\(ax+by=gcd(a,b)\\)</p> <p>\\(ax+by=c\\)</p> <p>\u5982\u679c\u4e00\u4e2a\u6570m\u6ee1\u8db3\uff1aax+by=m\uff0c\u90a3\u4e48\u8fd9\u4e2am\u4e00\u5b9a\u662fgcd(a,b)\u7684\u500d\u6570</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u6709c%gcd(a,b)=0\u65f6\uff0c\u624d\u4f1a\u6709\u6574\u6570\u89e3\uff0c\u56e0\u6b64\u8981\u7279\u5224</p> <pre><code>    if(c%d)printf(\"-1\\n\");\n</code></pre> <p>\u6c42\u901a\u89e3</p> <p>\u90a3\u4e48\u6211\u4eec\u77e5\u9053\u4e86\u4e00\u7ec4\u7279\u89e3x',y'\u540e\uff0c\u901a\u89e3\u7684\u8868\u8fbe\u5f0f\u662f\u4ec0\u4e48\u5462\uff1f</p> <p>\\(ax'+by'=gcd(a,b)\\)</p> <p>\\(a(x'+b)+b(y'-a)=gcd(a,b)\\)</p> <p>\\(a(x'/d)=gcd(a,b)\\)</p> <p>$a(x'/d)=gcd(a,b) $</p> <p>t\u4e3a\u4efb\u610f\u6574\u6570\u3002</p> <p>\u6545\\(a(x'/d)=gcd(a,b)\\)\u4ecd\u7136\u6709\u6574\u6570\u89e3</p> <p>\u6240\u4ee5\\(a*x + b*y = gcd(a,b)\\)\u7684\u901a\u89e3\u4e3a</p> <ul> <li> <p>\\(x = x' - b/gcd(a,b)*t\\)</p> </li> <li> <p>$y = y' + a/gcd(a,b)*t  $t\u4e3a\u4efb\u610f\u6574\u6570\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/exGCD/#_3","title":"\u5b9e\u9645\u64cd\u4f5c","text":"<p>\u3010\u6a21\u677f\u3011\u4e8c\u5143\u4e00\u6b21\u4e0d\u5b9a\u65b9\u7a0b (exgcd)</p>"},{"location":"%E6%95%B0%E5%AD%A6/exGCD/#1","title":"\u4f8b\u9898 #1","text":"<p>\u7ed9\u5b9a\u4e0d\u5b9a\u65b9\u7a0b</p> <p>\\(ax+by=c\\)</p> <p>\u82e5\u8be5\u65b9\u7a0b\u65e0\u6574\u6570\u89e3\uff0c\u8f93\u51fa \\(-1\\)\u3002 \u82e5\u8be5\u65b9\u7a0b\u6709\u6574\u6570\u89e3\uff0c\u4e14\u6709\u6b63\u6574\u6570\u89e3\uff0c\u5219\u8f93\u51fa\u5176**\u6b63\u6574\u6570**\u89e3\u7684\u6570\u91cf\uff0c\u6240\u6709**\u6b63\u6574\u6570**\u89e3\u4e2d \\(x\\) \u7684\u6700\u5c0f\u503c\uff0c\u6240\u6709**\u6b63\u6574\u6570**\u89e3\u4e2d \\(y\\) \u7684\u6700\u5c0f\u503c\uff0c\u6240\u6709**\u6b63\u6574\u6570**\u89e3\u4e2d \\(x\\) \u7684\u6700\u5927\u503c\uff0c\u4ee5\u53ca\u6240\u6709**\u6b63\u6574\u6570**\u89e3\u4e2d \\(y\\) \u7684\u6700\u5927\u503c\u3002 \u82e5\u65b9\u7a0b\u6709\u6574\u6570\u89e3\uff0c\u4f46\u6ca1\u6709\u6b63\u6574\u6570\u89e3\uff0c\u4f60\u9700\u8981\u8f93\u51fa\u6240\u6709**\u6574\u6570\u89e3**\u4e2d \\(x\\) \u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\uff0c \\(y\\) \u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\u3002</p> <p>\u6b63\u6574\u6570\u89e3\u5373\u4e3a \\(x, y\\) \u5747\u4e3a\u6b63\u6574\u6570\u7684\u89e3\uff0c\\(\\boldsymbol{0}\\) \u4e0d\u662f\u6b63\u6574\u6570\u3002 \u6574\u6570\u89e3\u5373\u4e3a \\(x,y\\) \u5747\u4e3a\u6574\u6570\u7684\u89e3\u3002 \\(x\\) \u7684\u6700\u5c0f\u6b63\u6574\u6570\u503c\u5373\u6240\u6709 \\(x\\) \u4e3a\u6b63\u6574\u6570\u7684\u6574\u6570\u89e3\u4e2d \\(x\\) \u7684\u6700\u5c0f\u503c\uff0c\\(y\\) \u540c\u7406\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\le T \\le 2 \\times {10}^5\\)\uff0c\\(1 \\le a, b, c \\le {10}^9\\)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/exGCD/#gcd","title":"\u9884\u5907\u77e5\u8bc6\uff1a\u8ba1\u7b97gcd","text":"<p>\u65b9\u6cd5 \u8f97\u8f6c\u76f8\u9664\u6cd5 \u4ee3\u7801</p> <pre><code>int gcd(int a, int b) {\n    if (b == 0)\n        return a;\n    return gcd(b, a % b);\n}\n</code></pre> <p>exgcd</p> <pre><code>ll exgcd(ll a,ll b,ll &amp;x,ll &amp;y){\n    ll tmp=a;\n    if(!b)x=1,y=0;\n    else {\n        tmp=exgcd(b,a%b,y,x);\n        y-=a/b*x;\n    }\n    return tmp;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/exGCD/#_4","title":"\u89e3\u9898\u65b9\u6cd5","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nll T,a,b,c,d,x,y,k,p,q;\n\nll exgcd(ll a,ll b,ll &amp;x,ll &amp;y){    //\u6ce8\u610f\u540e\u97622\u4e2a\u6709\u53d6\u5730\u5740\u7b26\uff01\uff01\uff01\n    ll tmp=a;\n    if(!b)x=1,y=0;\n    else {\n        tmp=exgcd(b,a%b,y,x);\n        y-=a/b*x;\n    }\n    return tmp;\n}\nsigned main() {\n    cin&gt;&gt;T;\n    while(T--){\n        scanf(\"%lld%lld%lld\",&amp;a,&amp;b,&amp;c);\n        x=y=0;\n        d=exgcd(a,b,x,y);\n        if(c%d)printf(\"-1\\n\");\n        else{\n            x*=c/d,y*=c/d;\n            p=b/d,q=a/d;\n            if(x&lt;0)k=ceil((1.00-x)/p),x+=p*k,y-=q*k;\n            else k=(x-1)/p,x-=p*k,y+=q*k;\n            if(y&gt;0){\n                printf(\"%lld %lld %lld %lld %lld\\n\",(y-1)/q/q*p,y);\n\n            }else{\n                printf(\"%lld %lld\\n\",x,y/q));\n            }\n        }\n\n    }\n\n\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/","title":"\u5206\u6570\u89c4\u5212","text":"<p>A07 \u5206\u6570\u89c4\u5212 \u4e8c\u5206\u6cd5_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#_1","title":"\u5206\u6570\u89c4\u5212","text":"<p>\u4e0b\u56fe\u4e2d\u5212\u7ea2\u7ebf\u7684\u4e0d\u7b49\u5f0f\u91cd\u8981!!</p> <p></p> <p>\u5206\u6570\u89c4\u5212\u591a\u548c\u5176\u4ed6\u77e5\u8bc6\u70b9\u7ed3\u5408\u8003\u5bdf\u3002\u4ee5\u4e0b\u9009\u4e3e\u4f8b\u9898\u8bb2\u89e3</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#1-usaco18open-talent-show-g","title":"\u4f8b\u9898 #1 [USACO18OPEN] Talent Show G","text":"<p>Farmer John \u8981\u5e26\u7740\u4ed6\u7684 \\(n\\) \u5934\u5976\u725b\uff0c\u65b9\u4fbf\u8d77\u89c1\u7f16\u53f7\u4e3a \\(1\\ldots n\\)\uff0c\u5230\u519c\u4e1a\u5c55\u89c8\u4f1a\u4e0a\u53bb\uff0c\u53c2\u52a0\u6bcf\u5e74\u7684\u8fbe\u725b\u79c0\uff01\u4ed6\u7684\u7b2c \\(i\\) \u5934\u5976\u725b\u91cd\u91cf\u4e3a \\(w_i\\)\uff0c\u624d\u827a\u6c34\u5e73\u4e3a \\(t_i\\)\uff0c\u4e24\u8005\u90fd\u662f\u6574\u6570\u3002</p> <p>\u5728\u5230\u8fbe\u65f6\uff0cFarmer John \u5c31\u88ab\u4eca\u5e74\u8fbe\u725b\u79c0\u7684\u65b0\u89c4\u5219\u5413\u5230\u4e86\uff1a</p> <p>\uff08\u4e00\uff09\u53c2\u52a0\u6bd4\u8d5b\u7684\u4e00\u7ec4\u5976\u725b\u5fc5\u987b\u603b\u91cd\u91cf\u81f3\u5c11\u4e3a \\(W\\)\uff08\u8fd9\u662f\u4e3a\u4e86\u786e\u4fdd\u662f\u5f3a\u5927\u7684\u961f\u4f0d\u5728\u6bd4\u8d5b\uff0c\u800c\u4e0d\u4ec5\u662f\u5f3a\u5927\u7684\u67d0\u5934\u5976\u725b\uff09\uff0c\u5e76\u4e14\u3002</p> <p>\uff08\u4e8c\uff09\u603b\u624d\u827a\u503c\u4e0e\u603b\u91cd\u91cf\u7684\u6bd4\u503c\u6700\u5927\u7684\u4e00\u7ec4\u83b7\u5f97\u80dc\u5229\u3002</p> <p>FJ \u6ce8\u610f\u5230\u4ed6\u7684\u6240\u6709\u5976\u725b\u7684\u603b\u91cd\u91cf\u4e0d\u5c0f\u4e8e \\(W\\)\uff0c\u6240\u4ee5\u4ed6\u80fd\u591f\u6d3e\u51fa\u7b26\u5408\u89c4\u5219\uff08\u4e00\uff09\u7684\u961f\u4f0d\u3002\u5e2e\u52a9\u4ed6\u786e\u5b9a\u8fd9\u6837\u7684\u961f\u4f0d\u4e2d\u80fd\u591f\u8fbe\u5230\u7684\u6700\u4f73\u7684\u624d\u827a\u4e0e\u91cd\u91cf\u7684\u6bd4\u503c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u662f\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u725b\u7684\u4e2a\u6570 \\(n\\) \u548c\u603b\u91cd\u91cf\u9650\u5236 \\(W\\)\u3002</p> <p>\u7b2c \\(2\\) \u5230 \\((n+1)\\) \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570\uff0c\u7b2c \\((i + 1)\\) \u884c\u7684\u6574\u6570\u8868\u793a\u7b2c \\(i\\) \u5934\u5976\u725b\u7684\u91cd\u91cf \\(w_i\\) \u548c\u624d\u827a\u6c34\u5e73 \\(t_i\\)\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8bf7\u6c42\u51fa Farmer \u7528\u4e00\u7ec4\u603b\u91cd\u91cf\u6700\u5c11\u4e3a \\(W\\) \u7684\u5976\u725b\u6700\u5927\u53ef\u80fd\u8fbe\u5230\u7684\u603b\u624d\u827a\u503c\u4e0e\u603b\u91cd\u91cf\u7684\u6bd4\u503c\u3002</p> <p>\u5982\u679c\u4f60\u7684\u7b54\u6848\u662f \\(A\\)\uff0c\u8f93\u51fa \\(1000A\\) \u5411\u4e0b\u53d6\u6574\u7684\u503c\uff0c\u4ee5\u4f7f\u5f97\u8f93\u51fa\u662f\u6574\u6570\uff08\u5f53\u95ee\u9898\u4e2d\u7684\u6570\u4e0d\u662f\u4e00\u4e2a\u6574\u6570\u7684\u65f6\u5019\uff0c\u5411\u4e0b\u53d6\u6574\u64cd\u4f5c\u5728\u5411\u4e0b\u820d\u5165\u5230\u6574\u6570\u7684\u65f6\u5019\u53bb\u9664\u6240\u6709\u5c0f\u6570\u90e8\u5206\uff09\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(1 \\leq n \\leq 250\\)\uff0c\\(1 \\leq W \\leq 1000\\)\uff0c\\(1 \\leq w_i \\leq 10^6\\)\uff0c\\(1 \\leq t_i \\leq 10^3\\)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#solu","title":"Solu","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#1","title":"\u6ce8\u610f1:\u4e8c\u5206\u4e0a\u4e0b\u754c","text":"<p>\u56e0\u4e3a\\(1 \\leq w_i \\leq 10^6\\)\uff0c\\(1 \\leq t_i \\leq 10^3\\),\u6545 \\(t_i\\) \u6700\u5927\u53d6\\(1000\\) ,\\(w_i\\) \u6700\u5c0f\u53d6\\(1\\) ,\u5f97\u5230\u4e8c\u5206\u4e0a\u754c\\(r=1000/1=1000\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#2r-l","title":"\u6ce8\u610f2:r-l\u7684\u7cbe\u5ea6","text":"<p>\u56e0\u4e3a\u672c\u9898\u8981\u6c42\u7ed3\u679c\u4e58\u4ee51000\u5411\u4e0b\u53d6\u6574,\u56e0\u6b64\u81f3\u5c11\u8981\u7cbe\u786e\u5230\\(10^{-4}\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#3sumrl","title":"\u6ce8\u610f3:sum\u51fd\u6570\u8fd4\u56der\u800c\u4e0d\u662fl","text":"<p>\u8fd9\u4e0e\u9898\u76ee\u8981\u6c42\u6709\u5173.\u5982\u679c\u9898\u76ee\u8981\u6c42\u7b54\u6848\u56db\u820d\u4e94\u5165,\u90a3\u4e48\u4e24\u4e2a\u5747\u53ef.\u4f46\u672c\u9898\u8981\u6c42*1000\u540e\u5411\u4e0b\u53d6\u6574,\u5c31\u4f1a\u51fa\u95ee\u9898</p> <p></p> <p>\u56e0\u6b64\u7edf\u4e00\u8fd4\u56de r \u5373\u53ef.\u7cbe\u5ea6\u8d8a\u9ad8\u8d8a\u597d,\u4f46\u8003\u8651\u590d\u6742\u5ea6.\u4e58\u4ee51000\u540e\u53d6\u6574,\u7cbe\u5ea6\u53ef\u4ee5\u53d6\\(10^{-5}\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#code","title":"Code","text":"<pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int N=1e3;\n\nint n,k,W;\nint m,f[N],ans;\ndouble tt[N];\nint t[N],w[N];\ndouble sum(double x){\n    for(int i=1;i&lt;=W;i++)tt[i]=-1e9;\n    for(int i=1;i&lt;=n;i++){\n        for(int j=W;j&gt;=0;j--){//\u5012\u5e8f\u679a\u4e3e\u7b2c2\u4f4d\uff0c\u53ef\u4ee5\u4f18\u5316\u6389\u7b2c2\u7ef4\uff08\u6eda\u52a8\u6570\u7ec4\uff09\n            int k=min(W,j/\u82e5w[i]+j(\u5373\u539f\u6709\u603b\u91cd\u91cf+\u76ee\u524d\u8981\u52a0\u4e0a\u7684\u91cd\u91cf)\u8d85\u8fc7W\uff0c\u6211\u4eec\u4e5f\u628a\u5b83\u770b\u4f5cW\n            tt[k]=max(tt[k],tt[j]+t[i]-x*w[i]);\n        }\n    }\n    return tt[W];\n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;W;\n    for(int i=1;i&lt;=n;i++)cin&gt;&gt;w[i]&gt;&gt;t[i];\n\n    double l=0,r=1000,mid;\n    while(r-l&gt;=0.00001){\n        mid=(l/2;\n        if(sum(mid)&gt;=0)l=mid;\n        else r=mid;\n    }\n    printf(\"%d\",int(r*1000));\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#2-dropping-tests","title":"\u4f8b\u9898 #2 Dropping tests","text":"<p>\u7ed9n\u7ec4\u6570\u636e \\(a_i\\) ,\\(b_i\\)\uff0c\u5b9a\u4e49\u7d2f\u8ba1\u5e73\u5747\u503c\u4e3a\uff1a</p> <p></p> <p>\u73b0\u7ed9\u51fa\u4e00\u4e2a\u6574\u6570 \\(k\\)\uff0c\u8981\u6c42\u4ece\u8fd9 \\(n\\) \u4e2a\u6570\u4e2d\u53bb\u6389 \\(k\\) \u4e2a\u6570\u540e\uff0c\u6700\u5927\u7d2f\u8ba1\u5e73\u5747\u503c\u80fd\u6709\u591a\u5927\uff1f(\u56db\u820d\u4e94\u5165\u5230\u6574\u6570)</p> <p>Description</p> <p>In a certain course, you take n tests. If you get ai out of bi questions correct on test i, your cumulative average is defined to be</p> <p></p> <p>Given your test scores and a positive integer k, determine how high you can make your cumulative average if you are allowed to drop any k of your test scores.</p> <p></p> <p>Input</p> <p>The input test file will contain multiple test cases, each containing exactly three lines. The first line contains two integers, 1 \u2264 n \u2264 1000 and 0 \u2264 k &lt; n. The second line contains n integers indicating ai for all i. The third line contains n positive integers indicating bi for all i. It is guaranteed that 0 \u2264 ai \u2264 bi \u2264 1, 000, 000, 000. The end-of-file is marked by a test case with n = k = 0 and should not be processed.</p> <p>Output</p> <p>For each test case, write a single line with the highest cumulative average possible after dropping k of the given test scores. The average should be rounded to the nearest integer.</p> <p>Sample Input</p> <pre><code>3 1\n5 0 2\n5 1 6\n4 2\n1 2 7 9\n5 6 7 9\n0 0\n</code></pre> <p>Sample Output</p> <pre><code>83\n100\n</code></pre> <p>Hint</p> <p>To avoid ambiguities due to rounding errors, the judge tests have been constructed so that all answers are at least 0.001 away from a decision boundary (i.e., you can assume that the average is never 83.4997).</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#code_1","title":"Code","text":"<pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int N=1e5;\n\nint n,k;\ndouble m,b[N],ans,a[N],w[N];\ndouble sum(double x){\n    for(int i=1;i&lt;=n;i++)w[i]=1.0*a[i]-x*b[i];\n    sort(w+1,w+n+1);\n    double tmp=0;\n    for(int i=n;i&gt;=k+1;i--){\n        tmp+=w[i];\n    }\n//  for(int i=k+1;i&lt;=n;i++){\n//      tmp+=w[i];\n//  }\n    return tmp;\n}\nsigned main(){\n    while(1){\n        cin&gt;&gt;n&gt;&gt;k;\n        if(!n&amp;&amp;!k)return 0;\n        for(int i=1;i&lt;=n;i++)cin&gt;&gt;a[i];\n        for(int i=1;i&lt;=n;i++)cin&gt;&gt;b[i];\n\n\n        double l=0,r=1,mid;\n        while(r-l&gt;0.0001){\n            mid=(l/2;\n            if(sum(mid)&gt;=0)l=mid;\n            else r=mid;\n        }\n        printf(\"%.0lf\\n\",100*l);\n    }\n    return 0;\n}\n</code></pre> <p>\u6ce8\u610f</p> <p>1.\u5faa\u73af\u522b\u5199\u9519\u4e86</p> <pre><code>//  for(int i=n;i&gt;=n-k;i--){\n//      tmp+=w[i];\n//  }\n    for(int i=k+1;i&lt;=n;i++){\n        tmp+=w[i];\n    }\n</code></pre> <p>2.\u7531\u53d6\u503c\u8303\u56f4\u51b3\u5b9a\u4e8c\u5206\u4e0a\u4e0b\u754c</p> <p>\\(0 \u2264 ai \u2264 bi \u2264 1, 000, 000, 000\\)\uff0c\u56e0\u4e3a*$ a_i \u2264 b_i$\uff0c\u6545\u548c\u7684\u6700\u5927\u503c\u4e3a*1</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#3-desert-king","title":"\u4f8b\u9898 #3 Desert King","text":"<p>\u9898\u610f\uff1a\u7ed9n\u4e2a (n\u226410000) \u4f4d\u7f6e\u7684\u4e8c\u7ef4\u5750\u6807(x,y)  \u548c\u6d77\u62d4 h \uff0c\u5b9a\u4e49\u4e24\u70b9\u901a\u9053\u957f\u5ea6\u4e3a\u4e8c\u7ef4\u5750\u6807\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff0c\u4e24\u70b9\u4fee\u901a\u9053\u7684\u82b1\u8d39\u662f\u4e24\u70b9\u7684\u6d77\u62d4\u4e4b\u5dee\uff0c\u8981\u6c42\u4feen-1\u6761\u6c34\u7ba1\u5f62\u6210\u4e00\u4e2a**\u751f\u6210\u6811**\uff0c\u4f7f\u5f97\u901a\u9053\u603b\u82b1\u8d39\u4e0e\u901a\u9053\u603b\u957f\u5ea6\u7684\u6bd4\u7387\u6700\u5c0f\u3002</p> <p>\u8fd9\u9053\u9898\u662f\u7ecf\u5178\u7684\u6700\u4f18\u6bd4\u7387\u751f\u6210\u6811\u95ee\u9898</p> <p>David the Great has just become the king of a desert country. To win the respect of his people, he decided to build channels all over his country to bring water to every village. Villages which are connected to his capital village will be watered. As the dominate ruler and the symbol of wisdom in the country, he needs to build the channels in a most elegant way.</p> <p>After days of study, he finally figured his plan out. He wanted the average cost of each mile of the channels to be minimized. In other words, the ratio of the overall cost of the channels to the total length must be minimized. He just needs to build the necessary channels to bring water to all the villages, which means there will be only one way to connect each village to the capital.</p> <p>His engineers surveyed the country and recorded the position and altitude of each village. All the channels must go straight between two villages and be built horizontally. Since every two villages are at different altitudes, they concluded that each channel between two villages needed a vertical water lifter, which can lift water up or let water flow down. The length of the channel is the horizontal distance between the two villages. The cost of the channel is the height of the lifter. You should notice that each village is at a different altitude, and different channels can't share a lifter. Channels can intersect safely and no three villages are on the same line.</p> <p>As King David's prime scientist and programmer, you are asked to find out the best solution to build the channels.</p> <p>Input</p> <p>There are several test cases. Each test case starts with a line containing a number N (2 &lt;= N &lt;= 1000), which is the number of villages. Each of the following N lines contains three integers, x, y and z (0 &lt;= x, y &lt; 10000, 0 &lt;= z &lt; 10000000). (x, y) is the position of the village and z is the altitude. The first village is the capital. A test case with N = 0 ends the input, and should not be processed.</p> <p>Output</p> <p>For each test case, output one line containing a decimal number, which is the minimum ratio of overall cost of the channels to the total length. This number should be rounded three digits after the decimal point.</p> <p>Sample Input</p> <pre><code>4\n0 0 0\n0 1 1\n1 1 2\n1 0 3\n0\n</code></pre> <p>Sample Output</p> <pre><code>1.000\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#solution","title":"solution","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#_2","title":"\u8865\u5145\u77e5\u8bc6\uff1a\u6700\u5c0f\u751f\u6210\u6811","text":"<p>\u7b97\u6cd5prim</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#code_2","title":"code","text":"<p>\u9519\u8bef\u7684\u4ee3\u7801<code>WA</code></p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code by Ntsc .\n       . Love by Liye .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e4+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e9;\n\nint n,m,ans;\ndouble a[N][N],b[N][N];//\u5b58\u9ad8\u5ea6\u5dee\u548c\u6c34\u5e73\u8ddd\u79bb \nint z[N],x[N],y[N],vis[N],d[N];\n\ndb getb(int u,int v){//\u8ba1\u7b97\u8ddd\u79bb(\u6c34\u5e73\u8ddd\u79bb) \n    return sqrt(1.0*(x[u]-x[v])*(x[u]-x[v])+(y[u]-y[v])*(y[u]-y[v]));\n}\nint geta(int u,int v){\n    return abs(z[u]-z[v]);\n}\nbool prim(db x){\n    memset(vis ,0,sizeof vis);\n    for(int i=0;i&lt;=n;i++){\n        d[i]=INF;\n    }\n    d[1]=0;\n    db sum=0;\n    for(int i=1;i&lt;=n;i++){\n        int t=0;\n        for(int j=1;j&lt;=n;j++){\n            if(!vis[j]&amp;&amp;d[j]&lt;d[t])t=j;  \n        }\n        sum+=d[t];vis[t]=1;\n        for(int j=1;j&lt;=n;j++)if(!vis[j]&amp;&amp;a[t][j]-x*b[t][j]&lt;d[j])d[j]=a[t][j]-x*b[t][j];\n    }\n    return sum&lt;=0;\n}\ndb find(){\n    db l=0,r=1e7,mid;\n    while(l-r&gt;1e-6){\n        mid=(l/2;\n        if(prim(mid))r=mid;//\u53ef\u4ee5\u66f4\u5c0f \n        else l=mid;//\u4e0d\u53ef\u4ee5\u66f4\u5c0f \n    }\n    return r;\n}\nsigned main(){\n    while(1){\n        cin&gt;&gt;n;\n        if(!n)return 0;\n        for(int i=1;i&lt;=n;i++)cin&gt;&gt;x[i]&gt;&gt;y[i]&gt;&gt;z[i];\n        for(int i=1;i&lt;=n;i++){\n            for(int j=1;j&lt;=n;j++)a[i][j]=geta(i,j),b[i][j]=getb(i,j);\n        }\n        printf(\"%.3lf\\n\",find());\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#4-hnoi2009","title":"\u4f8b\u9898 #4 [HNOI2009]\u6700\u5c0f\u5708","text":"<p>\u8003\u8651\u5e26\u6743\u7684\u6709\u5411\u56fe\\(G=(V,E)\\)\u4ee5\u53ca\\(w:E\\rightarrow R\\),\u6bcf\u6761\u8fb9\\(e=(i,j)(i\\neq j,i\\in V,j\\in V)\\)\u7684\u6743\u503c\u5b9a\u4e49\u4e3a\\(w_{i,j}\\)\uff0c\u4ee4\\(n=|V|\\)\u3002\\(c=(c_1,c_2,\\cdots,c_k)(c_i\\in V)\\)\u662f\\(G\\)\u4e2d\u7684\u4e00\u4e2a\u5708\u5f53\u4e14\u4ec5\u5f53\\((c_i,c_{i/k\\)\uff0c\u5373\\(c\\)\u4e0a\u6240\u6709\u8fb9\u7684\u6743\u503c\u7684\u5e73\u5747\u503c\u3002\u4ee4\\(\\mu'(c)=Min(\\mu(c))\\)\u4e3a\\(G\\)\u4e2d\u6240\u6709\u5708\\(c\\)\u7684\u5e73\u5747\u503c\u7684\u6700\u5c0f\u503c\u3002\u73b0\u5728\u7684\u76ee\u6807\u662f\uff1a\u5728\u7ed9\u5b9a\u4e86\u4e00\u4e2a\u56fe\\(G=(V,E)\\)\u4ee5\u53ca\\(w:E\\rightarrow R\\)\u4e4b\u540e\uff0c\u8bf7\u6c42\u51fa\\(G\\)\u4e2d\u6240\u6709\u5708\\(c\\)\u7684\u5e73\u5747\u503c\u7684\u6700\u5c0f\u503c\\(\\mu'(c)=Min(\\mu(c))\\)\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c2\u4e2a\u6b63\u6574\u6570\uff0c\u5206\u522b\u4e3a\\(n\\)\u548c\\(m\\)\uff0c\u5e76\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u53ea\u7528\\(n=|V|,m=|E|\\)\u5206\u522b\u8868\u793a\u56fe\u4e2d\u6709\\(n\\)\u4e2a\u70b9\\(m\\)\u6761\u8fb9\u3002 \u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c3\u4e2a\u6570\\(i,j,w_{i,j}\\)\uff0c\u8868\u793a\u6709\u4e00\u6761\u8fb9\\((i,j)\\)\u4e14\u8be5\u8fb9\u7684\u6743\u503c\u4e3a\\(w_{i,j}\\)\u3002\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u56fe\\(G=(V,E)\\)\u8fde\u901a\uff0c\u5b58\u5728\u5708\u4e14\u6709\u4e00\u4e2a\u70b9\u80fd\u5230\u8fbe\u5176\u4ed6\u6240\u6709\u70b9\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8bf7\u8f93\u51fa\u4e00\u4e2a\u5b9e\u6570\\(\\mu'(c)=Min(\\mu(c))\\)\uff0c\u8981\u6c42\u8f93\u51fa\u5230\u5c0f\u6570\u70b9\u540e8\u4f4d\u3002</p> <p>\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c\\(n\\le 3000,m\\le 10000,|w_{i,j}| \\le 10^7\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#_3","title":"\u9898\u610f","text":"<p>\u6709\u5411\u56fe\u4e2d\u627e\u5708\u3002\u5b9a\u4e49c\u4e3a\u6539\u5708\u7684\u8fb9\u6743\u548c/\u8fb9\u6570\uff0c\u5728\u6240\u6709c\u4e2d\u6c42\u51fa\u6700\u5c0f\u7684\u90a3\u4e2ac</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#code-ac","title":"code <code>AC</code>","text":"<p>\u8bf7\u6ce8\u610f\u8fb9\u6743\u8bf7\u4f7f\u7528double\u5b58\uff0c\u5305\u62ec \u90bb\u63a5\u8868\u4e2d \u548c<code>d[]</code>\u6570\u7ec4</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code by Ntsc .\n       . Love by Liye .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e4+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e9;\n\nint n,m,ans;\ndouble a[N][N],b[N][N];//\u5b58\u9ad8\u5ea6\u5dee\u548c\u6c34\u5e73\u8ddd\u79bb \nint x[N],y[N],vis[N];\ndb d[N];\nint u,v;\n\n\nstruct edge{\n    int v;\n    db c;\n    int nxt;\n}e[N];\nint h[N],idx;\nvoid add(int a,int b,db w){\n    e[++idx]={b,w,h[a]};\n    h[a]=idx;\n}\nbool spfa(int u,db x){\n    vis[u]=1;\n    for(int i=h[u];i;i=e[i].nxt){\n        int v=e[i].v;\n        if(d[v]&gt;d[u]+e[i].c-x){\n            d[v]=d[u]+e[i].c-x;\n            if(vis[v]||spfa(v,x))return 1;//vis[]\u4e3atrue\u8868\u793a\u8d70\u5230\u4e86\u4e4b\u524d\u8d70\u8fc7\u7684\u70b9,\u8bf4\u660e\u6709\u8d1f\u73af spfa\u8868\u793a\u7ee7\u7eed\u5f80\u4e0b\u8d70 \n        }\n    }\n    vis[u]=0;\n    return 0;\n}\nbool check(db x){\n    memset(d,0x3f,sizeof d);\n    memset (vis,0,sizeof vis);\n    for(int i=1;i&lt;=n;i++){//\u4e0d\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u90fd\u80fd\u5230\u8fbe\u5176\u4ed6\u6240\u6709\u70b9(\u539f\u53e5\"\u5b58\u5728\u5708\u4e14\u6709\u4e00\u4e2a\u70b9\u80fd\u5230\u8fbe\u5176\u4ed6\u6240\u6709\u70b9\",\u6240\u4ee5\u9700\u8981\u6bcf\u4e2a\u70b9\u90fd\u627e\u4e00\u904dspfa \n        if(spfa(i,x))return 1;\n    }\n    return 0;\n}\ndb find(){\n    db l=-1e7,r=1e7,mid;\n    while(r-l&gt;1e-9){\n        mid=(l/2;\n        if(check(mid))r=mid;\n        else l=mid;\n    }\n    return r;\n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    int u,v;\n    db w;\n    for(int i=1;i&lt;=m;i++){\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;\n        add(u,v,w);\n    }\n    printf(\"%.8lf\",find());\n    return 0;\n}\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p>\u4f60\u5df2\u7ecf\u957f\u5927\u4e86\uff0c\u5565\u65f6\u5019\u624d\u80fd\u81ea\u5df1\u8ba1\u7b97\u590d\u6742\u5ea6\u5440\uff1f</p> <p>\\(O(nm\\times log(1e16))\\)</p> <p>nm\u5c31\u662f\u4e00\u6b21check\u7684\u590d\u6742\u5ea6\uff0c\u5176\u4e2dm\u662f\u4e00\u6b21spfa\u7684\u590d\u6742\u5ea6</p> <p>log(1e17)\u662f\u4e8c\u5206\u7b54\u6848\u7684\u590d\u6742\u5ea6\uff08\u7b97\u6cd5\uff1a\u5bf9\u4e0a\u4e0b\u754c\u7684\u5dee\u9664\u4ee5\u7cbe\u5ea6\u6240\u5f97\u7684\u5546\u8fdb\u884clog\uff09</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/#_4","title":"\u5206\u6570\u89c4\u5212&amp;\u4f9d\u8d56\u80cc\u5305","text":"<p>\u53c2\u8003\u7ec3\u4e60 | \u8fd9\u4eba\u600e\u4e48\u5929\u5929\u5237\u9898\u554a'[JSOI2016] \u6700\u4f73\u56e2\u4f53</p> <p>www.luogu.com.cn</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/","title":"\u535a\u5f08\u8bba","text":"<p>\u5a01\u4f50\u592b\u535a\u5f08</p> <p>Nim\u6e38\u620f</p> <p>SG\u51fd\u6570</p> <p>\u6469\u5c14\u6295\u7968\u6cd5</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8E%9F%E6%A0%B9/","title":"\u539f\u6839","text":"<p>\u539f\u6839\uff0c\u662f\u4e00\u4e2a\u6570\u5b66\u7b26\u53f7\u3002\u8bbem\u662f\u6b63\u6574\u6570\uff0ca\u662f\u6574\u6570\uff0c\u82e5a\u6a21m\u7684\u9636\u7b49\u4e8e\u03c6(m)\uff0c\u5219\u79f0a\u4e3a\u6a21m\u7684\u4e00\u4e2a\u539f\u6839\u3002</p> <p>\u4e00\u4e2a\u6570m\u5982\u679c\u6709\u539f\u6839\uff0c\u5219\u5176\u539f\u6839\u4e2a\u6570\u4e3aphi(phi(m))\u3002\u7279\u522b\u5730\uff0c\u5bf9\u7d20\u6570\u6709phi(p)=p-1\u3002</p> <p>\u5047\u8bbeg\u662f\u5947\u7d20\u6570p\u7684\u4e00\u4e2a\u539f\u6839\uff0c\u5219\\(g^1,g^2,...,g^{p-1}\\)\u5728\u6a21p\u610f\u4e49\u4e0b\u4e24\u4e24\u4e0d\u540c\uff0c\u4e14\u7ed3\u679c\u6070\u597d\u4e3a1~p-1\uff0c\u7531\u6b64\u53ef\u4ee5\u5b9a\u4e49\u201c\u79bb\u6563\u5bf9\u6570\u201d\uff0c\u4e0e\u8fde\u7eed\u6570\u5b66\u4e2d\u7684\u5bf9\u6570\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u3002</p> <p>\u79bb\u6563\u5bf9\u6570\u53c8\u53eb\u505a\u201c\u6307\u6807\u201d\uff0c\u6709\u6307\u6807\u6cd5\u5219\uff1aI(ab)\u2261I(a)+I(b) (mod p-1)\uff1bI(a^k)\u2261k*I(a) (mod p-1)\uff0c\u7531\u6b64\u53ef\u4ee5\u628a\u4e58\u6cd5\u8f6c\u5316\u4e3a\u52a0\u6cd5\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/","title":"\u5bb9\u65a5\u539f\u7406","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/#_2","title":"\u96c6\u5408\u7684\u5e76","text":"<p>\u5c06\u4e09\u4e2a\u96c6\u5408\u5185\u5bb9\u76f8\u52a0\uff0c\u53bb\u91cd</p> <p></p> <p>\u6ce8\u610f1</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\u4ee5\u4e0a\u7279\u70b9\uff0c\u800c\u4e0d\u9700\u8981\u4f7f\u7528\u8bd5\u9664\u6cd5</p> <p>\u6ce8\u610f2</p> <p></p> <p>\u4ee3\u7801</p> <pre><code>hole\n</code></pre> <p></p> <p>\u91cd\u70b9</p> <p>\u91cd\u70b9\u7406\u89e3</p> <ul> <li> <p><code>sign</code>\u7684\u542b\u4e49</p> </li> <li> <p><code>if((LL)t*prim[j]&gt;n)</code>\u7684\u542b\u4e49</p> </li> <li> <p>\u4f4d\u8fd0\u7b97</p> </li> </ul> <p>\u590d\u6742\u5ea6 $ O(m\\times 2^m)$</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/#_3","title":"\u96c6\u5408\u7684\u4ea4","text":"<p>e.g.</p> <p></p> <p>\u4ea4\u96c6\u4e3a{2,5}</p> <p>\u6ce8\uff1a\u7eff\u6846\u4e0d\u662f\u96c6\u5408</p> <p>\u4f8b\u9898</p> <p>547 \u5bb9\u65a5\u539f\u7406 \u96c6\u5408\u7684\u4ea4_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>https://luogu.com.cn/problem/P1450</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/","title":"\u5eb7\u6258\u5c55\u5f00","text":"<p>\u5eb7\u6258\u5c55\u5f00\uff08Cantor expansion\uff09\u662f\u4e00\u79cd\u5c06\u81ea\u7136\u6570\u6620\u5c04\u5230\u81ea\u7136\u6570\u5e8f\u5217\u7684\u6570\u5b66\u65b9\u6cd5\uff0c\u901a\u5e38\u7528\u4e8e\u7ec4\u5408\u6570\u5b66\u4e2d\u5904\u7406\u6392\u5217\u7684\u95ee\u9898\u3002\u5eb7\u6258\u5c55\u5f00\u80fd\u591f\u4e3a\u7ed9\u5b9a\u7684\u6392\u5217\uff08\u5373\u4e00\u4e2a\u6570\u5217\uff0c\u5176\u4e2d\u6bcf\u4e2a\u6570\u90fd\u662f\u4e0d\u540c\u7684\uff09\u751f\u6210\u4e00\u4e2a\u552f\u4e00\u7684\u81ea\u7136\u6570\uff0c\u8fd9\u4e2a\u6570\u79f0\u4e3a\u5eb7\u6258\u6570\uff08Cantor number\uff09\u6216\u5eb7\u6258\u6307\u6570\u3002\u540c\u65f6\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5c06\u4e00\u4e2a\u81ea\u7136\u6570\u5c55\u5f00\u4e3a\u7279\u5b9a\u7684\u6392\u5217\u3002 \u5eb7\u6258\u5c55\u5f00\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a \u5047\u8bbe\u6709\u4e00\u4e2a\u7531 \\(n\\) \u4e2a\u4e0d\u540c\u6570\u5b57\u7ec4\u6210\u7684\u6392\u5217 \\(P = [a_1, a_2, ..., a_n]\\)\uff0c\u6392\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57 \\(a_i\\) \u90fd\u662f\u4ece 1 \u5230 \\(n\\) \u7684\u4e00\u4e2a\u6574\u6570\uff0c\u4e14\u6bcf\u4e2a\u6570\u5b57\u5728\u6392\u5217\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\u3002 \u5eb7\u6258\u5c55\u5f00\u7684\u6b65\u9aa4\u662f\uff1a</p> <ol> <li> <p>\u5bf9\u4e8e\u6392\u5217\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e \\(i\\)\uff08\u4ece 1 \u5230 \\(n\\)\uff09\uff0c\u8ba1\u7b97\u5728\u8be5\u4f4d\u7f6e\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u6570\u5b57\u5c0f\u4e8e \\(a_i\\)\u3002</p> </li> <li> <p>\u5c06\u8fd9\u4e9b\u5c0f\u4e8e \\(a_i\\) \u7684\u6570\u5b57\u7684\u6570\u91cf\u4e58\u4ee5 \\((n - i)!\\)\uff08\u5373\u4ece \\(n - i + 1\\) \u5230 \\(n\\) \u7684\u6240\u6709\u6574\u6570\u7684\u9636\u4e58\uff09\uff0c\u5e76\u5c06\u6240\u6709\u7684\u7ed3\u679c\u76f8\u52a0\u3002</p> </li> </ol> <p>\u7528\u6570\u5b66\u516c\u5f0f\u8868\u793a\uff0c\u6392\u5217 \\(P\\) \u7684\u5eb7\u6258\u6570 \\(C(P)\\) \u53ef\u4ee5\u8fd9\u6837\u8ba1\u7b97\uff1a $C(P) = \\sum_{i=1}^{n} (m_i \\times (n - i)!) $ \u5176\u4e2d \\(m_i\\) \u662f\u5728\u4f4d\u7f6e \\(i\\) \u4e4b\u524d\u5c0f\u4e8e \\(a_i\\) \u7684\u6570\u5b57\u7684\u6570\u91cf\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u6392\u5217 \\(P = [3, 1, 2]\\)\uff0c\u5eb7\u6258\u6570 \\(C(P)\\) \u7684\u8ba1\u7b97\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u5bf9\u4e8e \\(a_1 = 3\\)\uff0c\u5728\u5b83\u4e4b\u524d\u6ca1\u6709\u6bd4\u5b83\u5c0f\u7684\u6570\u5b57\uff0c\u6240\u4ee5 \\(m_1 = 0\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(a_2 = 1\\)\uff0c\u5728\u5b83\u4e4b\u524d\u6709\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u6570\u5b57\uff083\uff09\uff0c\u6240\u4ee5 \\(m_2 = 0\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(a_3 = 2\\)\uff0c\u5728\u5b83\u4e4b\u524d\u6709\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u6570\u5b57\uff081\uff09\uff0c\u6240\u4ee5 \\(m_3 = 1\\)\u3002</p> </li> </ul> <p>\u56e0\u6b64\uff0c$ C(P) = 0 \\times 2! + 0 \\times 1! + 1 \\times 0! = 0 + 0 + 1 = 1 $</p> <p>\u5eb7\u6258\u5c55\u5f00\u7684\u4e00\u4e2a\u5e94\u7528\u662f\u5728\u8ba1\u7b97\u6392\u5217\u7684\u5b57\u5178\u5e8f\u4e2d\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c\u6392\u5217 \\([3, 1, 2]\\) \u5728\u6240\u67093\u4e2a\u6570\u5b57\u7684\u6392\u5217\u4e2d\u662f\u7b2c\u4e8c\u4e2a\uff08\u6309\u7167\u5b57\u5178\u5e8f\uff09\u3002\u5eb7\u6258\u5c55\u5f00\u8fd8\u53ef\u4ee5\u7528\u4e8e\u8bc1\u660e\u67d0\u4e9b\u7ec4\u5408\u6052\u7b49\u5f0f\uff0c\u4ee5\u53ca\u89e3\u51b3\u4e0e\u6392\u5217\u76f8\u5173\u7684\u8ba1\u6570\u95ee\u9898\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/#_2","title":"\u9006\u5eb7\u6258\u5c55\u5f00","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\\(k\\) \uff0c\u6c42\u5c06\u81ea\u7136\u6570\\(1\\) ~\\(k\\) \u6240\u6709\u7684\u6392\u5217\u6309\u7167\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u4f4d\u4e8e\u7b2c\\(n\\) \u7684\u6392\u5217\u3002\u6392\u5e8f\u4ece\\(0\\) \u5f00\u59cb\u7f16\u53f7\u3002</p> <p>\u7531\u4e8e\\(n\\) \u6709\u53ef\u80fd\u5f88\u5927\uff0c\u6240\u4ee5\u73b0\u5728\u5c06\u7ed9\u4f60\\(k\\) \u4e2a\u6570\uff0c\u5206\u522b\u4e3a\\(S_1\\) \uff0c\\(S_2\\) \uff0c\u2026\u2026\uff0c\\(S_k\\) \uff0c\u89c4\u5b9a\\(n\\) \u7684\u8ba1\u7b97\u65b9\u5f0f\u4e3a</p> <p>\\(n=\\sum_{i=1}^k S_i \\times (k-i)!\\)</p> <p>\u63a5\u4e0b\u6765\\(T\\) \u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u7684\u7b2c\u4e00\u884c\u5305\u542b\\(1\\) \u4e2a\u6570\\(k\\) \uff08\\(1 \\leq k \\leq 500000\\) \uff09\uff0c\u7b2c\u4e8c\u884c\u5305\u542b\\(k\\) \u4e2a\u6574\u6570\uff0c\u7b2c\\(i\\) \u4e2a\u6574\u6570\u8868\u793a\\(S_i\\) \uff08\\(0 \\leq S_i \\leq k-i\\) \uff09\u3002</p> <p>\u5bf9\u4e8e\u8f93\u5165\u6587\u4ef6\u7684\u6bcf\u7ec4\u6570\u636e\uff0c\u8f93\u51fa\u4e00\u884c\uff0c\u5305\u542b\\(k\\) \u4e2a\u6570\uff0c\u4e3a\u5bf9\u5e94\u7684\\(1\\) ~\\(n\\) \u7684\u6392\u5217\u3002</p> <p>\u6211\u4eec\u8003\u8651\u7ed9\u51fa\u7684\u4fe1\u606f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e\uff0c\u4ece\u524d\u5f80\u540e\u8003\u8651\u6bcf\u4e00\u4e2aS_i\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u6211\u4eec\u8f93\u51fa\u5f53\u524d\u8fd8\u5b58\u5728\u7684\u6570\u5b57\u4e2d\u7b2cS_i\u6253\u7684\u6570\u5b57\u3002\u6743\u503c\u7ebf\u6bb5\u6811\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%BF%AB%E9%80%9F%E5%B9%82/","title":"\u5feb\u901f\u5e42","text":"<p>\u539f\u7406\uff1a</p> <p>\\(a^{13}=a^8\\times a^4\\times a^1\\)</p> <p>\u5c06b\u4e0d\u65ad&gt;&gt;1 \u540c\u65f6a\u4e0d\u65ad\u81ea\u6211^2 \u4f7f\u7528<code>b&amp;1</code>\u5224\u65ad<code>b\u7684\u4e8c\u8fdb\u5236</code> \u6700\u540e\u4e00\u4f4d\u662f\u5426\u4e3a1</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%BF%AB%E9%80%9F%E5%B9%82/#_2","title":"\u5feb\u901f\u5e42","text":"<p>\u7ed9\u4f60\u4e09\u4e2a\u6574\u6570 \\(a,b,p\\)\uff0c\u6c42 \\(a^b \\bmod p\\)\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(0\\le a,b &lt; 2^{31}\\)\uff0c\\(a+b&gt;0\\)\uff0c\\(2 \\leq p \\lt 2^{31}\\)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%BF%AB%E9%80%9F%E5%B9%82/#_3","title":"\u6a21\u677f","text":"<pre><code>int ksm(int c,int k,int p) {    //c^k %p\n    int res=1;\n    while(k) {\n        if(k&amp;1)res=res*c%p; //\u6ce8\u610f\u53ea\u67091\u53e5\u5728\u91cc\u9762\uff01\n        k&gt;&gt;=1;  //\u4e0d\u8981\u5199\u53cd\u4e86\uff01\n        c=c*c%p;\n    }\n    return res;\n}\n</code></pre> <p>\u53e6\u5916\u4e00\u79cd\u5199\u6cd5\uff1f(\u6709\u8bef\uff01)</p> <pre><code>int ksm(int a,int b,int p){\n    if(!b)return 1;\n    if(b%2)return (a*ksm(a*a%p,b/2,p)%p)%p;\n    return (ksm(a*a%p,b/2,p)%p);\n} \n</code></pre> <p>\u53e6\u4e00\u79cd\u5199\u6cd5\u662fstd</p> <pre><code>int ksm(int a,int b){\n    if(b==0) return 1;\n    if(b==1) return a%MOD;\n    int res=ksm(a,b/2);\n    res=(res*res)%MOD;\n    if(b%2==1) res=(res*a)%MOD;\n    return res;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%BF%AB%E9%80%9F%E5%B9%82/#_4","title":"\u5149\u901f\u5e42","text":"<p>\u5149\u901f\u5e42\u548c\u77e9\u9635\u5149\u901f\u5e42 - Lovaer - \u535a\u5ba2\u56ed</p> <p>\u5feb\u901f\u5e42\u66f4\u901a\u7528\uff0c\u800c\u5149\u901f\u5e42\u53ea\u80fd\u7528\u4e8e\u540c\u5e95\u540c\u6a21\u65f6\u7684\u591a\u6b21\u8be2\u95ee\u3002\u2014\u2014\u5206\u5757\u5927\u6cd5\u597d\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%BF%AB%E9%80%9F%E5%B9%82/#_5","title":"\u9f9f\u901f\u4e58","text":"<p>\u5982\u679c\u6211\u4eec\u8981\u4e24\u4e2a1e18\u7684\u6570\u76f8\u4e58\uff0c\u5fc5\u7136\u4f1a\u7206long long\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u95ee\u9898\uff0c\u6211\u4eec\u7684\u89e3\u6cd5\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u662f\u9ad8\u7cbe\u5ea6\uff0c\u53e6\u4e00\u4e2a\u5c31\u662f\u9f9f\u901f\u4e58\u3002</p> <p>\u7b97\u6cd5\u4ecb\u7ecd</p> <p>\u5148\u8bf4\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u601d\u8def\uff0c\u6211\u4eec\u8ba9\u7ed3\u679c\u52a0\u4e0a b \u4e2a a\uff0c\u8fd9\u6837\u6bcf\u6b21\u6211\u4eec\u518d\u52a0\u7684\u540c\u65f6\u6765mod\u4e0ap\uff0c\u90a3\u5fc5\u7136\u53ef\u4ee5\u7b97\u51fa\u7ed3\u679c\u3002\u4f46\u662fb\u7684\u8303\u56f4\u4f1a\u5f88\u5927\uff0c10e18\u7684\u6570\u636e\u91cf\u662f\u80af\u5b9a\u4f1a\u8d85\u65f6\u7684\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u9f9f\u901f\u4e58\u7b97\u6cd5\u3002</p> <p>\u9f9f\u901f\u4e58\u5c31\u662f\u6765\u4f18\u5316\u6211\u4eec\u7684\u52a0\u6cd5\uff0c\u6bcf\u6b21\u6211\u4eec\u4e0d\u662f\u4e00\u6b21\u52a0\u4e00\u4e2aa\uff0c\u800c\u662f\u6bcf\u6b21\u52a0\u4e0a 2 * a \u4e2a a\uff0c\u6bd4\u5982\uff1a\\(a ,2a,4a,8a\u2026 2^na\\).</p> <p>\u6211\u4eec\u5728\u6765\u770bb\uff0c\u4eceb\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u6765\u8bf4\uff0cb\u4ece\u4e8c\u8fdb\u5236\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\uff0c\u5c31\u662f\u548c\u9f9f\u901f\u4e58\u7c7b\u4f3c\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u6bd4\u5982b\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a(10110)\u5219\uff0cb = 24 + 22 + 21, \u56e0\u6b64\u6211\u4eec\u7ed3\u679c\u5c31\u662f a * (24 + 22 + 21),\u800cb\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\u6700\u591a\u53ea\u670964\u4f4d\uff0c\u56e0\u6b64\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ea\u6709\u4e3aO(64)\uff0c\u5b8c\u7f8e\u89e3\u51b3\u8d85\u65f6\u7684\u60c5\u51b5\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%BF%AB%E9%80%9F%E5%B9%82/#_6","title":"\u6269\u6b27\u5b9a\u7406\u6c42\u5feb\u901f\u5e42","text":"<p>\u7ed9\u4f60\u4e09\u4e2a\u6b63\u6574\u6570\uff0c\\(a,m,b\\)\uff0c\u4f60\u9700\u8981\u6c42\uff1a\\(a^b \\bmod m\\)</p> <p>\\(1\\le a \\le 10^9\\)\uff0c\\(1\\le b \\le 10^{20000000}\uff0c1\\le m \\le 10^8\\)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/","title":"\u62c9\u683c\u6717\u65e5\u63d2\u503c","text":"<p>\u4e13\u9898 | \u6570\u5b663\uff08NOI\u7ea7\uff09</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/#_1","title":"\u62c9\u683c\u6717\u65e5\u63d2\u503c","text":"<p>\u901a\u9879\u516c\u5f0f</p> <p>\\(f(x)=\\sum\\limits_{i=1}^n[a_i\\times (\\prod\\limits_{j=1,j\u2260i}^n \\frac{(x-x_j)}{(x_i-x_j)})]\\)</p> <p>\u8fd9\u4e2a\u516c\u5f0f\u7531n\u4e2a\u51fd\u6570\u62df\u5408\uff08\u5373\u76f8\u52a0\uff09\u5f97\u5230\uff0c\u8fd9n\u4e2a\u51fd\u6570\u5206\u522b\u662f\\(f_i(x)=a_i\\times (\\prod\\limits_{j=1,j\u2260i}^n \\frac{(x-x_j)}{(x_i-x_j)})\\)\uff0c\u8fd9n\u4e2a\u51fd\u6570\u5747\u6ee1\u8db3\uff1a\u6b21\u6570\\(&lt;n\\)\uff0c\u5728\\(x=x_i\\)\u65f6\\(y=y_i\\)\uff0c\u5176\u4f59\\(x=x_j(j\u2260i)\\)\u65f6\\(y=0\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/#_2","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7531\u5c0f\u5b66\u77e5\u8bc6\u53ef\u77e5 \\(n\\) \u4e2a\u70b9 \\((x_i,y_i)\\) \u53ef\u4ee5\u552f\u4e00\u5730\u786e\u5b9a\u4e00\u4e2a\u591a\u9879\u5f0f \\(y = f(x)\\)\u3002</p> <p>\u73b0\u5728\uff0c\u7ed9\u5b9a\u8fd9 \\(n\\) \u4e2a\u70b9\uff0c\u8bf7\u4f60\u786e\u5b9a\u8fd9\u4e2a\u591a\u9879\u5f0f\uff0c\u5e76\u6c42\u51fa \\(f(k) \\bmod 998244353\\) \u7684\u503c\u3002</p> <p>\u3010\u62c9\u683c\u6717\u65e5\u63d2\u503c\u3011\uff1a\u601d\u60f3\u3001\u8ba1\u7b97\u4e0e\u8bef\u5dee_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E5%AE%9A%E7%90%86%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/","title":"\u6570\u5b66\u5b9a\u7406\u4e0e\u7ebf\u6027\u4ee3\u6570","text":"<p>\u4e13\u9898 | \u6570\u5b66\u5b9a\u7406&amp;\u7ebf\u6027\u4ee3\u6570</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E5%AE%9A%E7%90%86%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_1","title":"\u8d39\u9a6c\u5c0f\u5b9a\u7406","text":"<p>\u5047\u5982 a \u662f\u4e00\u4e2a\u6574\u6570\uff0c p \u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u90a3\u4e48 \\(a^ {p}-a\\) \u662f p \u7684\u500d\u6570\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u4e3a \\(a^ {p} \\equiv a (\\mod p)\\) \u3002</p> <p>\u5982\u679c a \u4e0d\u662f p \u7684\u500d\u6570\u7684\u8bdd\uff0c\u5219 \\(a^ {p-1} \\equiv 1 (\\mod p)\\) \u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E5%AE%9A%E7%90%86%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_2","title":"\u5a01\u5c14\u900a\u5b9a\u7406","text":"<p>\\((p-1)! \\equiv -1\\pmod  p\\) \u662f p \u4e3a\u7d20\u6570 \u7684 \u5145\u5206\u5fc5\u8981\u6761\u4ef6\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E5%AE%9A%E7%90%86%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_3","title":"\u88f4\u8700\u5b9a\u7406","text":"<p>\u5bf9\u4e8e\u4e0d\u5b9a\u65b9\u7a0b $ ax+by=m\\(, \u5176\u6709\u89e3\u7684\u5145\u8981\u6761\u4ef6\u4e3a\\)\\gcd(a,b)|m$</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E5%AE%9A%E7%90%86%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_4","title":"\u5411\u91cf\u7684\u8fd0\u7b97","text":"<p>\u4ee5\u4e0b\u662f\u5411\u91cf\u8fd0\u7b97\u7684\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5\uff1a</p> <ol> <li> <p>\u5411\u91cf\u7684\u52a0\u6cd5\u548c\u51cf\u6cd5\uff1a</p> <ul> <li> <p>\u52a0\u6cd5\uff1a\u4e24\u4e2a\u5411\u91cf\u76f8\u52a0\uff0c\u5c31\u662f\u5c06\u5b83\u4eec\u5bf9\u5e94\u7684\u5750\u6807\u76f8\u52a0\u3002\u5982\u679c\u5411\u91cfa\u548c\u5411\u91cfb\u90fd\u662fn\u7ef4\u5411\u91cf\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u548c\u5411\u91cfc\u7684\u7b2ci\u4e2a\u5206\u91cf\u662fa\u7684\u7b2ci\u4e2a\u5206\u91cf\u52a0\u4e0ab\u7684\u7b2ci\u4e2a\u5206\u91cf\u3002</p> </li> <li> <p>\u51cf\u6cd5\uff1a\u5411\u91cf\u51cf\u6cd5\u53ef\u4ee5\u770b\u4f5c\u662f\u5411\u91cf\u52a0\u6cd5\u7684\u9006\u8fd0\u7b97\uff0c\u5373\u5411\u91cfa\u51cf\u53bb\u5411\u91cfb\u7b49\u4e8e\u5411\u91cfa\u52a0\u4e0a\u5411\u91cfb\u7684\u76f8\u53cd\u5411\u91cf\u3002</p> </li> </ul> </li> <li> <p>\u5411\u91cf\u7684\u6570\u4e58\uff1a</p> <ul> <li> <p>\u6807\u91cf\u4e58\u6cd5\uff1a\u4e00\u4e2a\u6807\u91cf\u4e0e\u4e00\u4e2a\u5411\u91cf\u76f8\u4e58\uff0c\u5c31\u662f\u5c06\u8fd9\u4e2a\u6807\u91cf\u4e58\u4ee5\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf\u3002</p> </li> <li> <p>\u5411\u91cf\u6570\u4e58\uff1a\u4e00\u4e2a\u5411\u91cf\u4e0e\u4e00\u4e2a\u6807\u91cf\u76f8\u4e58\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u65b0\u5411\u91cf\uff0c\u65b0\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf\u90fd\u662f\u539f\u5411\u91cf\u5bf9\u5e94\u5206\u91cf\u7684\u6807\u91cf\u4e58\u79ef\u3002</p> </li> </ul> </li> <li> <p>\u5411\u91cf\u7684\u70b9\u4e58\uff1a</p> <ul> <li>\u70b9\u4e58\uff1a\u4e24\u4e2a\u5411\u91cfa\u548cb\u7684\u70b9\u4e58\uff0c\u5176\u7ed3\u679c\u662f\u4e00\u4e2a\u6807\u91cf\uff0c\u7b49\u4e8e\u8fd9\u4e24\u4e2a\u5411\u91cf\u7684\u5bf9\u5e94\u5206\u91cf\u76f8\u4e58</li> </ul> </li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E5%AE%9A%E7%90%86%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_5","title":"\u77e9\u9635\u7684\u8fd0\u7b97","text":"<p>\u77e9\u9635\u8fd0\u7b97\u662f\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff0c\u6d89\u53ca\u5230\u77e9\u9635\u7684\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u6570\u4e58\u3001\u4e58\u6cd5\u3001\u8f6c\u7f6e\u3001\u9006\u77e9\u9635\u7b49\u57fa\u672c\u64cd\u4f5c\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u77e9\u9635\u8fd0\u7b97\u6cd5\u5219\uff1a</p> <ol> <li> <p>\u77e9\u9635\u52a0\u6cd5\u548c\u51cf\u6cd5\uff1a</p> <ul> <li> <p>\u4e24\u4e2a\u76f8\u540c\u5927\u5c0f\u7684\u77e9\u9635A\u548cB\u76f8\u52a0\uff0c\u7ed3\u679c\u77e9\u9635C\u7684\u6bcf\u4e2a\u5143\u7d20\u662fA\u548cB\u5bf9\u5e94\u5143\u7d20\u7684\u548c\u7684\u77e9\u9635\u3002</p> </li> <li> <p>\u4e24\u4e2a\u76f8\u540c\u5927\u5c0f\u7684\u77e9\u9635A\u548cB\u76f8\u51cf\uff0c\u7ed3\u679c\u77e9\u9635C\u7684\u6bcf\u4e2a\u5143\u7d20\u662fA\u548cB\u5bf9\u5e94\u5143\u7d20\u7684\u5dee\u7684\u77e9\u9635\u3002</p> </li> </ul> </li> <li> <p>\u77e9\u9635\u6570\u4e58\uff1a</p> <ul> <li>\u4e00\u4e2a\u6807\u91cf\u4e0e\u4e00\u4e2a\u77e9\u9635\u76f8\u4e58\uff0c\u7ed3\u679c\u77e9\u9635\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u6807\u91cf\u4e0e\u77e9\u9635\u5bf9\u5e94\u5143\u7d20\u7684\u4e58\u79ef\u3002</li> </ul> </li> <li> <p>\u77e9\u9635\u4e58\u6cd5\uff1a</p> <ul> <li>\u77e9\u9635A\u4e58\u4ee5\u77e9\u9635B\uff0c\u8981\u6c42A\u7684\u5217\u6570\u7b49\u4e8eB\u7684\u884c\u6570\u3002\u7ed3\u679c\u77e9\u9635C\u7684\u6bcf\u4e2a\u5143\u7d20\u662fA\u7684\u5217\u5411\u91cf\u4e0eB\u7684\u884c\u5411\u91cf\u7684\u6807\u91cf\u79ef\u7684\u548c\u3002</li> </ul> </li> <li> <p>\u77e9\u9635\u8f6c\u7f6e\uff1a</p> <ul> <li>\u77e9\u9635A\u7684\u8f6c\u7f6e\u77e9\u9635\u8bb0\u4e3aA^T\uff0c\u662f\u5c06A\u7684\u884c\u5411\u91cf\u8f6c\u6362\u4e3a\u5217\u5411\u91cf\u7684\u77e9\u9635\u3002</li> </ul> </li> <li> <p>\u9006\u77e9\u9635\uff1a</p> <ul> <li>\u5982\u679c\u77e9\u9635A\u662f\u53ef\u9006\u7684\uff0c\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a\u77e9\u9635A<sup>-1\uff0c\u4f7f\u5f97A\u4e58\u4ee5A</sup>-1\u7b49\u4e8eA^-1\u4e58\u4ee5A\u7b49\u4e8e\u5355\u4f4d\u77e9\u9635I\u3002</li> </ul> </li> <li> <p>\u77e9\u9635\u7684\u5e42\uff1a</p> <ul> <li>\u77e9\u9635A\u7684\u5e42\u662f\u6307A\u8fde\u4e58\u81ea\u8eab\u591a\u6b21\uff0c\u4f8b\u5982A^n\uff0c\u5176\u4e2dn\u662f\u6b63\u6574\u6570\u3002</li> </ul> </li> <li> <p>\u5206\u5757\u77e9\u9635\uff1a</p> <ul> <li>\u5206\u5757\u77e9\u9635\u662f\u5c06\u77e9\u9635\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u77e9\u9635\uff0c\u6bcf\u4e2a\u5b50\u77e9\u9635\u4fdd\u6301\u539f\u6765\u7684\u6b21\u5e8f\u548c\u4f4d\u7f6e\u3002</li> </ul> </li> <li> <p>\u5217\u5411\u91cf\u4e0e\u77e9\u9635\u7684\u4e58\u6cd5\uff1a</p> <ul> <li>\u5217\u5411\u91cf\u4e0e\u77e9\u9635\u76f8\u4e58\uff0c\u7ed3\u679c\u662f\u4e00\u4e2a\u884c\u5411\u91cf\uff0c\u6bcf\u4e2a\u5143\u7d20\u662f\u5217\u5411\u91cf\u4e0e\u77e9\u9635\u5bf9\u5e94\u5217\u5411\u91cf\u7684\u6807\u91cf\u79ef\u3002</li> </ul> </li> <li> <p>\u884c\u5411\u91cf\u4e0e\u77e9\u9635\u7684\u4e58\u6cd5\uff1a</p> <ul> <li>\u884c\u5411\u91cf\u4e0e\u77e9\u9635\u76f8\u4e58\uff0c\u7ed3\u679c\u662f\u4e00\u4e2a\u5217\u5411\u91cf\uff0c\u6bcf\u4e2a\u5143\u7d20\u662f\u884c\u5411\u91cf\u4e0e\u77e9\u9635\u5bf9\u5e94\u884c\u5411\u91cf\u7684\u6807\u91cf\u79ef\u3002</li> </ul> </li> <li> <p>\u77e9\u9635\u7684\u8ff9\uff1a</p> <ul> <li>\u77e9\u9635A\u7684\u8ff9\u662f\u6307\u77e9\u9635\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u7684\u5143\u7d20\u4e4b\u548c\uff0c\u8bb0\u4e3atr(A)\u3002</li> </ul> </li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E5%AE%9A%E7%90%86%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_6","title":"\u9ad8\u65af\u6d88\u5143","text":"<p>\u9ad8\u65af\u6d88\u5143\u6cd5\uff08Gaussian Elimination\uff09\u662f\u4e00\u79cd\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u6c42\u89e3\u53d8\u91cf\u6570\u91cf\u4e0e\u65b9\u7a0b\u6570\u91cf\u76f8\u7b49\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\u3002\u5b83\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u4ee3\u6570\u8fd0\u7b97\uff0c\u5c06\u65b9\u7a0b\u7ec4\u8f6c\u6362\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u7a0b\uff0c\u7136\u540e\u6c42\u89e3\u8fd9\u4e2a\u7b80\u5355\u7684\u65b9\u7a0b\u6765\u5f97\u5230\u539f\u59cb\u65b9\u7a0b\u7ec4\u7684\u89e3\u3002</p> <p>\u9ad8\u65af\u6d88\u5143\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u5c06\u65b9\u7a0b\u7ec4\u5199\u6210\u589e\u5e7f\u77e9\u9635\uff08\u53c8\u79f0\u6269\u589e\u77e9\u9635\uff09\uff0c\u5373\u5728\u539f\u65b9\u7a0b\u7ec4\u7684\u53f3\u8fb9\u6dfb\u4e0a\u4e00\u5217\uff0c\u8fd9\u4e00\u5217\u662f\u6bcf\u4e2a\u65b9\u7a0b\u53f3\u8fb9\u7684\u548c\u3002</p> </li> <li> <p>\u4ece\u5de6\u5230\u53f3\uff0c\u4ece\u4e0a\u5230\u4e0b\uff0c\u4f9d\u6b21\u6d88\u53bb\u589e\u5e7f\u77e9\u9635\u4e2d\u7684\u6bcf\u4e00\u5217\uff0c\u4f7f\u5f97\u6700\u4e0b\u9762\u7684\u884c\u6210\u4e3a\u4ec5\u542b\u6709\u4e00\u4e2a\u672a\u77e5\u6570\u7684\u65b9\u7a0b\u3002</p> </li> <li> <p>\u91cd\u590d\u7b2c\u4e8c\u6b65\u7684\u64cd\u4f5c\uff0c\u76f4\u5230\u6240\u6709\u7684\u672a\u77e5\u6570\u90fd\u51fa\u73b0\u5728\u6700\u4e0b\u9762\u7684\u884c\u4e2d\u3002</p> </li> <li> <p>\u6700\u540e\uff0c\u5c06\u6700\u4e0b\u9762\u7684\u884c\u4e2d\u7684\u7cfb\u6570\u9664\u4ee5-1\uff0c\u4ee5\u6c42\u5f97\u6700\u540e\u4e00\u4e2a\u672a\u77e5\u6570\u7684\u503c\u3002</p> </li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/","title":"\u6570\u5b66\u671f\u671b","text":"<p>\u6458\u6284 \u5b66\u4e60\u7b14\u8bb0 | \u671f\u671b</p> <p>\u671f\u671b\u901a\u5e38\u548cdp\u76f8\u7ed3\u5408\uff0c\u56e0\u6b64\u5c5e\u4e8edp\u7684\u4e00\u79cd\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#dag","title":"\u3010\u5178\u4f8b\u3011DAG\u4e0a\u62b5\u8fbe\u7ec8\u70b9\u671f\u671b\u8def\u5f84 | \u7eff\u8c46\u86d9\u7684\u5f52\u5bbf","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>\u968f\u7740\u65b0\u7248\u767e\u5ea6\u7a7a\u95f4\u7684\u4e0a\u7ebf\uff0cBlog \u5ba0\u7269\u7eff\u8c46\u86d9\u5b8c\u6210\u4e86\u5b83\u7684\u4f7f\u547d\uff0c\u53bb\u5bfb\u627e\u5b83\u65b0\u7684\u5f52\u5bbf\u3002</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u51fa\u5f20 \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u7684\u6709\u5411\u65e0\u73af\u56fe\uff0c\u8d77\u70b9\u4e3a \\(1\\)\uff0c\u7ec8\u70b9\u4e3a \\(n\\)\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u957f\u5ea6\uff0c\u5e76\u4e14\u4ece\u8d77\u70b9\u51fa\u53d1\u80fd\u591f\u5230\u8fbe\u6240\u6709\u7684\u70b9\uff0c\u6240\u6709\u7684\u70b9\u4e5f\u90fd\u80fd\u591f\u5230\u8fbe\u7ec8\u70b9\u3002</p> <p>\u7eff\u8c46\u86d9\u4ece\u8d77\u70b9\u51fa\u53d1\uff0c\u8d70\u5411\u7ec8\u70b9\u3002 \u5230\u8fbe\u6bcf\u4e00\u4e2a\u9876\u70b9\u65f6\uff0c\u5982\u679c\u8be5\u8282\u70b9\u6709 \\(k\\) \u6761\u51fa\u8fb9\uff0c\u7eff\u8c46\u86d9\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u4e00\u6761\u8fb9\u79bb\u5f00\u8be5\u70b9\uff0c\u5e76\u4e14\u8d70\u5411\u6bcf\u6761\u8fb9\u7684\u6982\u7387\u4e3a \\(\\frac{1}{k}\\) \u3002\u73b0\u5728\u7eff\u8c46\u86d9\u60f3\u77e5\u9053\uff0c\u4ece\u8d77\u70b9\u8d70\u5230\u7ec8\u70b9\u7684\u6240\u7ecf\u8fc7\u7684\u8def\u5f84\u603b\u957f\u5ea6\u671f\u671b\u662f\u591a\u5c11\uff1f</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#_2","title":"\u601d\u8def","text":"<p>\u6211\u4eec\u9996\u5148\u8bbe\u5b9a\u671f\u671b\u72b6\u6001\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u671f\u671b\uff0c\u6211\u4eec\u65e0\u975e\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\u3002</p> <ul> <li> <p>\u5b9a\u4e49f_{i}\u4e3a\u4ece\u8d77\u70b9\u5230\u8fbei\u7684\u671f\u671b\u6b65\u6570</p> </li> <li> <p>\u5b9a\u4e49f_i\u4e3a\u4ecei\u62b5\u8fbe\u7ec8\u70b9\u7684\u671f\u671b\u6b65\u6570\u3002</p> </li> </ul> <p>\u90a3\u4e48\u6211\u4eec\u9996\u5148\u770b\u6211\u4eec\u77e5\u9053\u4ec0\u4e48\u3002\u5982\u679c\u6211\u4eec\u9009\u62e9\u4e0b\u9762\u90a3\u79cd\u5b9a\u4e49\uff0c\u90a3\u4e48\u6211\u4eec\u5373\u77e5\u9053f_n=0\uff0c\u6b64\u65f6\u6211\u4eec\u7684f_1\u5c31\u662f\u7b54\u6848\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u5c31\u662f\u8981\u6c42\u51faf_1\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5012\u8fc7\u6765dp\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u77e5\u9053\u4e86\u521d\u59cb\u72b6\u6001\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u521d\u59cb\u72b6\u6001\u786e\u5b9a\u65f6\u53ef\u7528\u987a\u63a8\uff0c\u7ec8\u6b62\u72b6\u6001\u786e\u5b9a\u65f6\u53ef\u7528\u9006\u63a8\u3002</p> <p>\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u8003\u8651\u70b9x\uff0c\u5176\u53ef\u4ee5\u8f6c\u79fb\u5230v\uff0c\u6b64\u65f6\u6211\u4eec\u7684v\u7684\u72b6\u6001\u5047\u5b9a\u662f\u5df2\u77e5\u7684\uff0c\u5c31\u6709</p> <p>\\(f_x=\\frac{1}{out_x}\\times  \\sum_v(f_v+w_{x,v})\\)</p> <p>\u5341\u5206\u91cd\u8981\u7684\u4e00\u70b9\u662f\u8fd9\u4e2a\u8f6c\u79fb\u5f0f\u6ee1\u8db3\u53ef\u62c6\u5206\u6027\uff0c\u8fd9\u91cc\u9700\u8981\u8fdb\u4e00\u6b65\u601d\u8003\u3002</p> <p>\u90a3\u4e48\u56e0\u4e3a\u6211\u4eec\u7684dp\u662f\u53cd\u7740\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5efa\u7acb\u53cd\u5411\u56fe\uff0c\u7136\u540e\u6211\u4eec\u5c31\u9700\u8981\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u4eec\u552f\u4e00\u53ef\u4ee5\u60f3\u5230\u5f88\u597d\u904d\u5386DAG\u7684\u65b9\u6cd5\u4e86\u3002</p> <p>\u5e76\u4e14\u62d3\u6251\u6392\u5e8f\u8fd8\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u5c31\u662f\u6211\u4eec\u6bcf\u4e00\u6b21\u90fd\u662f\u6cbf\u7740\u4e00\u6761\u94fe\u904d\u5386\u7684\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#_3","title":"\u4ee3\u7801","text":"<pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s &lt;&lt; ' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nstruct node{\n    int v,w;\n};\nvector&lt;node&gt; e[N];\n\nint in[N],out[N];\nint n,m;\n\nint ksm(int a,int b){\n    int res=1;\n    while(b){\n        if(b&amp;1)res=(res*a)%MOD;\n        a=(a*a)%MOD;\n        b&gt;&gt;=1;\n    }\n    return res;\n}\n\nvoid add(int a,int b,int c){\n    e[a].push_back({b,c});\n    out[b]++;//\u6ce8\u610f\u8fd9\u91cc\u7684in\u662f\u53cd\u56fe\u610f\u4e49\u4e0a\u7684\uff0cout\u662f\u539f\u56fe\u610f\u4e49\u4e0a\u7684\uff0c\u6240\u4ee5\u6811\u4e0a\u4e00\u6837\u7684\n    in[b]++;\n}\n\ndouble f[N];\n\nvoid solve(){\n    n=rd,m=rd;\n    for(int i=1;i&lt;=m;i++){\n        int a=rd,b=rd,c=rd;\n        add(b,a,c);//\u53cd\u5411\u5efa\u56fe\n    }\n    queue&lt;int&gt; q;\n    // for(int i=n;i;i--){\n    //     if(!in[i])q.push(i);\n    // }\n    q.push(n);\n    while(q.size()){\n        int x=q.front();\n        q.pop();\n        for(auto v:e[x]){\n            f[v.v]=(f[v.v]/out[v.v])*(f[x]+v.w));\n            in[v.v]--;\n            if(!in[v.v])q.push(v.v);\n        }\n    }\n    printf(\"%.2lf\",f[1]);\n\n\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#_4","title":"\u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a","text":"<ul> <li> <p>\u5bf9\u4e8e \\(20\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(n \\leq 10^2\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(40\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(n \\leq 10^3\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(60\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(n \\leq 10^4\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(1 \\leq n \\leq 10^5\\)\uff0c\\(1 \\leq m \\leq 2 \\times n\\)\uff0c\\(1 \\leq u, v \\leq n\\)\uff0c\\(1 \\leq w \\leq 10^9\\)\uff0c\u7ed9\u51fa\u7684\u56fe\u65e0\u91cd\u8fb9\u548c\u81ea\u73af\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#cnoi2020","title":"\u56fe\u4e0a\u968f\u673a\u6e38\u8d70\u7c7b | [Cnoi2020] \u7ebf\u5f62\u751f\u7269","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>\u4e3a\u4e86\u80fd\u591f\u5728\u51a5\u754c\u8fc7\u4e0a\u8fd9\u79cd\u6109\u5feb\u7684\u751f\u6d3b\u800c\u4e0d\u662f\u88ab\u5224\u5165\u5730\u72f1\uff0c\u4eba\u7c7b\u4eec\u6452\u5f03\u4e86\u81ea\u884c\u7ed3\u675f\u751f\u547d\u7684\u505a\u6cd5\uff0c\u62fc\u5c3d\u5168\u529b\u5730\u751f\u6d3b\u7740\u3002\u5982\u6b64\u770b\u6765\uff0c\u4eba\u7c7b\u4f3c\u4e4e\u4e5f\u663e\u5f97\u6709\u4e9b\u79ef\u6781\u4e0e\u53ef\u7231\u4e86\u5462\u3002  \uff08\u5c04\u547d\u4e38 \u6587\uff09</p> <p>\u7ebf\u5f62\u751f\u7269\u6cbf\u7740\u4e00\u7ef4\u7684\u9636\u68af\u5411\u7740\u51a5\u754c\u5355\u5411\u5730\u524d\u884c\u7740\u3002</p> <p>\u7167\u8fd9\u6837\u7684\u8bdd\uff0c\u5b83\u53ea\u9700\u8981\u4e00\u7ea7\u4e00\u7ea7\u5730\uff0c\u8d70 \\(n\\) \u6b65\u5c31\u80fd\u591f\u5230\u8fbe\u767d\u7389\u697c\u3002</p> <p>\u4f46 Cirno \u89c9\u5f97\u8fd9\u6837\u592a\u5355\u8c03\u4e86\uff0c\u4e8e\u662f\uff0c\u4e00\u7ef4\u7684\u58c1\u5792\u88ab\u6253\u7834\uff0c\u94fe\u72b6\u7684\u9053\u8def\u751f\u51fa\u4e86\u82b1\u6930\u83dc\u72b6\u7684\u679d\u6860\u3002</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ebf\u5f62\u751f\u7269\u8981\u4ece \\(1\\) \u53f7\u53f0\u9636\u8d70\u5230 \\(n+1\\) \u53f7\u53f0\u9636\u3002</p> <p>\u6700\u5f00\u59cb\uff0c\\(1,2,3,\\ldots,n\\) \u53f7\u53f0\u9636\u90fd\u6709\u4e00\u6761\u8fde\u5411\u4e0b\u4e00\u53f0\u9636\u7684\u6709\u5411\u8fb9 \\(i\\rightarrow i+1\\)\u3002</p> <p>\u4e4b\u540e Cirno \u52a0\u5165\u4e86 \\(m\\) \u6761**\u8fd4\u7956\u8fb9** \\(u_i \\rightarrow v_i (u_i \\ge v_i)\\)\uff0c\u5b83\u4eec\u6784\u6210\u4e86\u4e00\u4e2a**\u8fd4\u7956\u56fe**\u3002</p> <p>\u7ebf\u5f62\u751f\u7269\u6bcf\u6b65\u4f1a \u7b49\u6982\u7387\u5730 \u9009\u53d6\u5f53\u524d\u53f0\u9636\u7684\u4e00\u6761\u51fa\u8fb9\u5e76\u8d70\u5411\u5bf9\u5e94\u7684\u53f0\u9636\u3002</p> <p>\u5f53\u8d70\u5230 \\(n+1\\) \u53f7\u53f0\u9636\u65f6\uff0c\u7ebf\u5f62\u751f\u7269\u5c31\u4f1a\u505c\u6b62\u884c\u8d70\u3002</p> <p>\u540c\u65f6\uff0cCirno \u4f1a\u7edf\u8ba1\u7ebf\u6027\u751f\u7269\u603b\u5171\u8d70\u7684\u6b65\u6570\uff0c\u8bb0\u4f5c \\(\\delta\\)\u3002</p> <p>Cirno \u60f3\u77e5\u9053 \\(E(\\delta)\\)\uff08\u5373 \\(\\delta\\) \u7684**\u6570\u5b66\u671f\u671b**\uff09\u5bf9 \\(998244353\\) \u53d6\u6a21\u540e\u7684\u7ed3\u679c\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#_5","title":"\u601d\u8def","text":"<p>\u8003\u8651\u7b80\u5355\u7684dp</p> <p>\u671f\u671b\u7684\u7ebf\u6027\u6027\u8d28\uff1a\u5728\u672c\u9898\u4e2d\u4f53\u73b0\u4e3a\u4ece x \u70b9\u5230 y \u70b9\u7684\u671f\u671b\u6b65\u6570 \\(E_{x\\to y}=E_{x\\to x+1}+\u2026+E_{y-1 \\to y}=\\sum\\limits_{i=x}^{y-1}E_{i\\to i+1}\\)\u3002\\(E_{y\\to x+1}=\\sum\\limits_{i=y}^{x}E_{i\\to i+1}\\)</p> <p>\u5bf9\u4e8e\u8fd9\u7c7b\u5728**\u56fe\u4e0a\u968f\u673a\u6e38\u8d70**\u7684\u95ee\u9898\uff0c\u8bbe \\(E_{x\\to x+1}\\) \u8868\u793a\u4ece x \u70b9\u5230 x+1 \u70b9\u7684\u671f\u671b\u6b65\u6570\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f \\(\\sum\\limits_{x=0}^n E_{x\\to x+1}\\) \u3002</p> <p>\\(du_x\\) \u8868\u793a x \u7684**\u8fd4\u7956\u8fb9**\u7684\u6761\u6570\uff0c\u800c g(x) \u8868\u793a x \u7684**\u8fd4\u7956\u8fb9**\u7684\u8fb9\u96c6\uff0c\u5217\u51fa \\(E_{x\\to x+1}\\) \u7684\u8f6c\u79fb\u5f0f:</p> <p>\\(E_{x\\to x+1}=\\frac{1}{du_x+1}\\times1+\\frac{1}{du_x+1}\\sum_{(x,y)\\in g(x)} (E_{y\\to x+1}+1)\\)</p> <p>\u5bf9\u4e0a\u5f0f\u5316\u7b80\u5373\u53ef\u3002\u7528\u5230\u4e86\u524d\u7f00\u548c\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n#define ps second\n#define pf first\n\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int N=2e6+5;\nconst int M=5e5+5;\nconst int INF=1e9+5;\nconst int MOD=998244353;\nbool f1;\nint m,k,n,qzh;\n\nint T,mn=INF,ans;\nint f[N],du[N],q[N];\n\nvector&lt;int&gt; e[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n    du[a]++;\n}\n\nsigned main() {\n    int id=rd,n=rd,m=rd;\n    for(int i=1;i&lt;=m;i++){\n        int a=rd,b=rd;\n        add(a,b);\n    }\n\n    for(int x=1;x&lt;=n;x++){\n        f[x]=du[x]+1;\n        for(auto v:e[x]){\n            f[x]=((f[x]+(q[x-1]-q[v-1])%MOD)%MOD+MOD)%MOD;\n        }\n        q[x]=(q[x-1]+f[x])%MOD;\n    }\n\n    cout&lt;&lt;q[n]&lt;&lt;endl;\n}\n/*\n2\n3 2 3 6\n*/\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#_6","title":"\u540e\u7f6e\u6570\u5b66\u77e5\u8bc6","text":"<ul> <li> <p>\u53ef\u80fd\u7528\u5230\u7684\u5e42\u7ea7\u6570\u6c42\u548c : \u82e5 \\(x&gt;1\\)\uff0c\u5219\u6709 \\(\\sum\\limits_{i=1}^{\\infty}\\big(\\frac{1}{x}\\big)^i=\\frac{1}{x}+\\frac{1}{x^2}+\\frac{1}{x^3}+\\cdots=\\frac{1}{x-1}\\)\u3002</p> </li> <li> <p>\u6570\u5b66\u671f\u671b : \u968f\u673a\u8bd5\u9a8c\u4e2d\u6bcf\u6b21\u53ef\u80fd\u7ed3\u679c\u7684\u6982\u7387\u4e58\u4ee5\u5176\u7ed3\u679c\u7684\u603b\u548c\uff0c\u53cd\u6620\u968f\u673a\u53d8\u91cf\u5e73\u5747\u53d6\u503c\u7684\u5927\u5c0f\u3002</p> </li> <li> <p>\u79bb\u6563\u671f\u671b\u516c\u5f0f : \\(E(x)=\\sum\\limits_{k=1}^{\\infty}x_kp_k\\)\u3002</p> </li> </ul> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1\uff1a\\(id \\in \\{1,2,3,4,5\\}\\)\uff0c\\(0 &lt; n,m \\le 10^6\\)\uff0c\\(1 \\le v_i \\le u_i \\le n\\)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#_7","title":"\u5b50\u4efb\u52a1\u300c\u672c\u9898\u91c7\u7528\u6346\u7ed1\u6d4b\u8bd5\u300d","text":"<ul> <li> <p>Subtask4\uff08\\(10\\%\\)\uff09: \\(n \\le 100\\)\uff0c\\(m \\le 1000\\)\u3002</p> </li> <li> <p>Subtask5\uff08\\(60\\%\\)\uff09: \u65e0\u7279\u6b8a\u9650\u5236\u3002</p> </li> </ul> <p>\u540e\u8bb0</p> <p>\u9898\u76ee\u540d\u79f0\u51fa\u81ea th17 \u4e1c\u65b9\u9b3c\u5f62\u517d 6 Boss \u57f4\u5b89\u795e\u88bf\u59ec Hard / Lunatic \u96be\u5ea6\u7b26\u5361 \u7dda\u5f62\u300c\u30ea\u30cb\u30a2\u30af\u30ea\u30fc\u30c1\u30e3\u30fc\u300d\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#noi2005","title":"\u56fe\u4e0a\u968f\u673a\u6e38\u8d70\u7c7b | [NOI2005] \u806a\u806a\u4e0e\u53ef\u53ef","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5728\u4e00\u4e2a\u9b54\u6cd5\u68ee\u6797\u91cc\uff0c\u4f4f\u7740\u4e00\u53ea\u806a\u660e\u7684\u5c0f\u732b\u806a\u806a\u548c\u4e00\u53ea\u53ef\u7231\u7684\u5c0f\u8001\u9f20\u53ef\u53ef\u3002\u867d\u7136\u7070\u59d1\u5a18\u975e\u5e38\u559c\u6b22\u5979\u4eec\u4fe9\uff0c\u4f46\u662f\uff0c\u806a\u806a\u7ec8\u7a76\u662f\u4e00\u53ea\u732b\uff0c\u800c\u53ef\u53ef\u7ec8\u7a76\u662f\u4e00\u53ea\u8001\u9f20\uff0c\u540c\u6837\u4e0d\u53d8\u7684\u662f\uff0c\u806a\u806a\u6210\u5929\u60f3\u7740\u8981\u5403\u6389\u53ef\u53ef\u3002</p> <p>\u4e00\u5929\uff0c\u806a\u806a\u610f\u5916\u5f97\u5230\u4e86\u4e00\u53f0\u975e\u5e38\u6709\u7528\u7684\u673a\u5668\uff0c\u636e\u8bf4\u662f\u53eb GPS\uff0c\u5bf9\u53ef\u53ef\u80fd\u51c6\u786e\u7684\u5b9a\u4f4d\u3002\u6709\u4e86\u8fd9\u53f0\u673a\u5668\uff0c\u806a\u806a\u8981\u5403\u53ef\u53ef\u5c31\u6613\u5982\u53cd\u638c\u4e86\u3002\u4e8e\u662f\uff0c\u806a\u806a\u51c6\u5907\u9a6c\u4e0a\u51fa\u53d1\uff0c\u53bb\u627e\u53ef\u53ef\u3002\u800c\u53ef\u601c\u7684\u53ef\u53ef\u8fd8\u4e0d\u77e5\u9053\u5927\u96be\u5373\u5c06\u4e34\u5934\uff0c\u4ecd\u5728\u68ee\u6797\u91cc\u65e0\u5fe7\u65e0\u8651\u7684\u73a9\u800d\u3002\u5c0f\u5154\u5b50\u4e56\u4e56\u542c\u5230\u8fd9\u4ef6\u4e8b\uff0c\u9a6c\u4e0a\u5411\u7070\u59d1\u5a18\u62a5\u544a\u3002\u7070\u59d1\u5a18\u51b3\u5b9a\u5c3d\u5feb\u963b\u6b62\u806a\u806a\uff0c\u62ef\u6551\u53ef\u53ef\uff0c\u53ef\u5979\u4e0d\u77e5\u9053\u8fd8\u6709\u6ca1\u6709\u8db3\u591f\u7684\u65f6\u95f4\u3002</p> <p>\u6574\u4e2a\u68ee\u6797\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u56fe\u4e2d\u6709 \\(N\\) \u4e2a\u7f8e\u4e3d\u7684\u666f\u70b9\uff0c\u666f\u70b9\u4ece \\(1\\) \u81f3 \\(N\\) \u7f16\u53f7\u3002\u5c0f\u52a8\u7269\u4eec\u90fd\u53ea\u5728\u666f\u70b9\u4f11\u606f\u3001\u73a9\u800d\u3002\u5728\u666f\u70b9\u4e4b\u95f4\u6709\u4e00\u4e9b\u8def\u8fde\u63a5\u3002</p> <p>\u5f53\u806a\u806a\u5f97\u5230 GPS \u65f6\uff0c\u53ef\u53ef\u6b63\u5728\u666f\u70b9 \\(M\\)\uff08\\(M \\le N\\)\uff09\u5904\u3002\u4ee5\u540e\u7684\u6bcf\u4e2a\u65f6\u95f4\u5355\u4f4d\uff0c\u53ef\u53ef\u90fd\u4f1a\u9009\u62e9\u53bb\u76f8\u90bb\u7684\u666f\u70b9\uff08\u53ef\u80fd\u6709\u591a\u4e2a\uff09\u4e2d\u7684\u4e00\u4e2a\u6216\u505c\u7559\u5728\u539f\u666f\u70b9\u4e0d\u52a8\u3002\u800c\u53bb\u8fd9\u4e9b\u5730\u65b9\u6240\u53d1\u751f\u7684\u6982\u7387\u662f\u76f8\u7b49\u7684\u3002\u5047\u8bbe\u6709 \\(P\\) \u4e2a\u666f\u70b9\u4e0e\u666f\u70b9 \\(M\\) \u76f8\u90bb\uff0c\u5b83\u4eec\u5206\u522b\u662f\u666f\u70b9 \\(R\\)\u3001\u666f\u70b9 \\(S\\)\u3001\u2026\u2026\u3001\u666f\u70b9 \\(Q\\)\uff0c\u5728\u65f6\u523b \\(T\\) \u53ef\u53ef\u5904\u5728\u666f\u70b9 \\(M\\)\uff0c\u5219\u5728 \\((T/(1 +P)\\)\u7684\u53ef\u80fd\u505c\u5728\u666f\u70b9 \\(M\\)\u3002</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\u806a\u806a\u662f\u5f88\u806a\u660e\u7684\uff0c\u6240\u4ee5\uff0c\u5f53\u5979\u5728\u666f\u70b9 \\(C\\) \u65f6\uff0c\u5979\u4f1a\u9009\u4e00\u4e2a\u66f4\u9760\u8fd1\u53ef\u53ef\u7684\u666f\u70b9\uff0c\u5982\u679c\u8fd9\u6837\u7684\u666f\u70b9\u6709\u591a\u4e2a\uff0c\u5979\u4f1a\u9009\u4e00\u4e2a\u6807\u53f7\u6700\u5c0f\u7684\u666f\u70b9\u3002\u7531\u4e8e\u806a\u806a\u592a\u60f3\u5403\u6389\u53ef\u53ef\u4e86\uff0c\u5982\u679c\u8d70\u5b8c\u7b2c\u4e00\u6b65\u4ee5\u540e\u4ecd\u7136\u6ca1\u5403\u5230\u53ef\u53ef\uff0c\u5979\u8fd8\u53ef\u4ee5\u5728\u672c\u6bb5\u65f6\u95f4\u5185\u518d\u5411\u53ef\u53ef\u8d70\u8fd1\u4e00\u6b65\u3002</p> <p>\u5728\u6bcf\u4e2a\u65f6\u95f4\u5355\u4f4d\uff0c\u5047\u8bbe\u806a\u806a\u5148\u8d70\uff0c\u53ef\u53ef\u540e\u8d70\u3002\u5728\u67d0\u4e00\u65f6\u523b\uff0c\u82e5\u806a\u806a\u548c\u53ef\u53ef\u4f4d\u4e8e\u540c\u4e00\u4e2a\u666f\u70b9\uff0c\u5219\u53ef\u601c\u7684\u53ef\u53ef\u5c31\u88ab\u5403\u6389\u4e86\u3002</p> <p>\u7070\u59d1\u5a18\u60f3\u77e5\u9053\uff0c\u5e73\u5747\u60c5\u51b5\u4e0b\uff0c\u806a\u806a\u51e0\u6b65\u5c31\u53ef\u80fd\u5403\u5230\u53ef\u53ef\u3002\u800c\u4f60\u9700\u8981\u5e2e\u52a9\u7070\u59d1\u5a18\u5c3d\u5feb\u7684\u627e\u5230\u7b54\u6848\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#_8","title":"\u601d\u8def","text":"<p>\u7cbe\u7b80\u9898\u610f\uff1a\u65e0\u5411\u56feG\u4e2d\u6709\u4e24\u4e2a\u52a8\u70b9P,Q\uff0c\u6bcf\u8f6e\u6267\u884c</p> <ul> <li> <p>P\u6cbf\u5230Q\u7684\u6700\u77ed\u8def\u8d70\u4e24\u6b65</p> </li> <li> <p>Q\u968f\u673a\u5728\u5f53\u524d\u70b9u\u7684\u8054\u901a\u70b9\uff08\u5373u\u7684\u90bb\u70b9\u548cu\u672c\u8eab\uff09\u4e2d\u7b49\u6982\u7387\u9009\u62e9\u4e00\u4e2av\u524d\u5f80\u3002</p> </li> </ul> <p>\u6c42P\u4e0eQ\u76f8\u9047\u7684\u671f\u671b\u8f6e\u6570\u3002</p> <p>\u9884\u5904\u7406\u51fa\u732b\u5728\u70b9i\uff0c\u8001\u9f20\u5728\u70b9j\uff0c\u732b\u7684\u4e0b\u4e00\u4e2a\u8d70\u4f4d\\(nxt[i][j]\\)\u3002</p> <p>\u7136\u800c\u9700\u8981\u9884\u5904\u7406\u51fa\u8fd9\u4e2a\u5c31\u8fd8\u9700\u8981\u4f7f\u7528\\(SPFA\\)\u9884\u5904\u7406\u51fa\u732b\u5728\u70b9i\u5230\u8fbe\u6240\u6709\u70b9\u6700\u77ed\u8def\u5f84\\(dis[i][j]\\)\uff0c\u63a5\u4e0b\u6765\u624d\u80fd\u9884\u5904\u7406\u51fa\u732b\u7684\u8d70\u4f4d\u3002 \u8003\u8651\u4f7f\u7528dp\uff0c\\(f[i][j]\\)\u8868\u793a\u732b\u5728\u70b9i\uff0c\u8001\u9f20\u5728\u70b9j\uff0c\u732b\u6293\u5230\u8001\u9f20\u7684\u671f\u671b\u6b65\u6570\u662f\u591a\u5c11\u3002 \u5bf9\u4e8e\\(f[i][j]\\)\uff0c\u6211\u4eec\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a</p> <ul> <li> <p>\u5982\u679c\u732b\u548c\u8001\u9f20\u540c\u70b9\uff0c\u5373\\(i=j\\)\uff0c\u5219\\(f[i][j]=0\\)\uff1b</p> </li> <li> <p>\u5982\u679c\u732b\u8d70\u4e00\u6b65\u6216\u4e24\u6b65\u53ef\u4ee5\u5230\u8fbej\uff0c\\(f[i][j]=1\\)\uff1b</p> </li> <li> <p>\u5426\u5219\\(f[i][j]=\\sum\\limits_{k\\in near(j)}(\\frac{f[sec][k]}{in[j]+1})+1\\)\uff08\u5176\u4e2d\uff0csec\u8868\u793a\u732b\u8d70\u4e24\u6b65\u6240\u5230\u8fbe\u7684\u4f4d\u7f6e\uff0ck\u8868\u793a\u8001\u9f20\u53ef\u5230\u8fbe\u7684\u4f4d\u7f6e\uff08\u542b\u539f\u5730\uff09\uff0cin[j]\u8868\u793a\u70b9j\u7684\u51fa\u5ea6\u6570\uff08\u5373\u4e0d\u5305\u542b\u539f\u5730\uff09\uff09\u3002</p> </li> </ul> <p>\u8bb0\u5fc6\u5316\u641c\u7d22</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n#define ps second\n#define pf first\n\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=1e3+5;\nconst int INF=1e9+5;\n\n int cur,n,m,s,t;\nint head[N],in[N];\nint dis[N][N],nxt[N][N];\nbool vis[N],used[N][N];\ndouble f[N][N];\nvector&lt;int&gt; e[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n    dis[a][b]=dis[b][a]=1;\n}\n\nvoid flyd(){\n    for(int k=1;k&lt;=n;k++){\n        for(int i=1;i&lt;=n;i++){\n            for(int j=1;j&lt;=n;j++){\n                dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n            }\n        }\n    }\n}\n\n\ndouble dfs(int u,int v){\n    if (used[u][v]) return f[u][v];\n    if (u==v) return 0;\n    int p1=nxt[u][v];\n    int p2=nxt[p1][v];\n    if (p1==v||p2==v) return 1;\n    f[u][v]=1;\n    for (auto w:e[v]){\n        f[u][v]+=dfs(p2,w)/(in[v]+1);\n    }\n    f[u][v]+=dfs(p2,v)/(in[v]+1);\n    used[u][v]=1;\n    return f[u][v];\n}\nsigned main(){\n    n=rd,m=rd,s=rd,t=rd;\n\n    for (int i=1;i&lt;=n;i++){\n        for (int j=1;j&lt;=n;j++){\n            dis[i][j]=nxt[i][j]=INF;\n        }\n    }\n\n    for (int i=1;i&lt;=m;i++){\n        int a=rd,b=rd;\n        add(a,b);add(b,a);\n        in[a]++;in[b]++;\n    }\n\n    flyd();\n\n    for(int i=1;i&lt;=n;i++)dis[i][i]=0;\n\n    // for(int i=1;i&lt;=n;i++){\n    //     for(int j=1;j&lt;=n;j++)cerr&lt;&lt;dis[i][j]&lt;&lt;' ';\n    //     cerr&lt;&lt;endl;\n    // }\n    for (int i=1;i&lt;=n;i++){\n        for (auto t:e[i]){\n            for (int j=1;j&lt;=n;j++){\n                if(dis[i][j]-1!=dis[t][j])continue;\n                nxt[i][j]=min(nxt[i][j],t);\n            }\n        }\n    }\n\n    printf(\"%.3lf\",dfs(s,t));\n    return 0;\n} \n</code></pre> <p>\u5bf9\u4e8e 50%\u7684\u6570\u636e\uff0c\\(1\u2264N\u226450\\)\u3002 \u5bf9\u4e8e\u6240\u6709\u7684\u6570\u636e\uff0c\\(1\u2264N,E\u22641000\\)\u3002</p> <p>\u9488\u9488\u64cd\u7eb5\u5047\u9762\u7684\u6c34\u5e73\u4e00\u822c\uff0c\u56e0\u6b64\u4ed6\u51b3\u5b9a\u52e4\u52a0\u7ec3\u4e60\u3002\u73b0\u5728\u6709 \\(n\\) \u4e2a\u654c\u65b9\u5355\u4f4d\uff08\u7f16\u53f7\u4ece \\(1\\) \u81f3 \\(n\\)\uff09\uff0c\u7f16\u53f7\u4e3a \\(i\\) \u7684\u654c\u65b9\u5355\u4f4d\u6709 \\(h_i\\) \u70b9\u751f\u547d\u503c\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#noip2016","title":"\u60c5\u51b5\u6982\u7387\u9009\u62e9\u7c7b | [NOIP2016 \u63d0\u9ad8\u7ec4] \u6362\u6559\u5ba4","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>NOIP2016 \u63d0\u9ad8\u7ec4 D1T3</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5bf9\u4e8e\u521a\u4e0a\u5927\u5b66\u7684\u725b\u725b\u6765\u8bf4\uff0c\u4ed6\u9762\u4e34\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\u5982\u4f55\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u7533\u8bf7\u5408\u9002\u7684\u8bfe\u7a0b\u3002</p> <p>\u5728\u53ef\u4ee5\u9009\u62e9\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6709 \\(2n\\) \u8282\u8bfe\u7a0b\u5b89\u6392\u5728 \\(n\\) \u4e2a\u65f6\u95f4\u6bb5\u4e0a\u3002\u5728\u7b2c \\(i\\)\uff08\\(1 \\leq i \\leq n\\)\uff09\u4e2a\u65f6\u95f4\u6bb5\u4e0a\uff0c\u4e24\u8282\u5185\u5bb9\u76f8\u540c\u7684\u8bfe\u7a0b\u540c\u65f6\u5728\u4e0d\u540c\u7684\u5730\u70b9\u8fdb\u884c\uff0c\u5176\u4e2d\uff0c\u725b\u725b\u9884\u5148\u88ab\u5b89\u6392\u5728\u6559\u5ba4 \\(c_i\\) \u4e0a\u8bfe\uff0c\u800c\u53e6\u4e00\u8282\u8bfe\u7a0b\u5728\u6559\u5ba4 \\(d_i\\) \u8fdb\u884c\u3002</p> <p>\u5728\u4e0d\u63d0\u4ea4\u4efb\u4f55\u7533\u8bf7\u7684\u60c5\u51b5\u4e0b\uff0c\u5b66\u751f\u4eec\u9700\u8981\u6309\u65f6\u95f4\u6bb5\u7684\u987a\u5e8f\u4f9d\u6b21\u5b8c\u6210\u6240\u6709\u7684 \\(n\\) \u8282\u5b89\u6392\u597d\u7684\u8bfe\u7a0b\u3002\u5982\u679c\u5b66\u751f\u60f3\u66f4\u6362\u7b2c \\(i\\) \u8282\u8bfe\u7a0b\u7684\u6559\u5ba4\uff0c\u5219\u9700\u8981\u63d0\u51fa\u7533\u8bf7\u3002\u82e5\u7533\u8bf7\u901a\u8fc7\uff0c\u5b66\u751f\u5c31\u53ef\u4ee5\u5728\u7b2c \\(i\\) \u4e2a\u65f6\u95f4\u6bb5\u53bb\u6559\u5ba4 \\(d_i\\) \u4e0a\u8bfe\uff0c\u5426\u5219\u4ecd\u7136\u5728\u6559\u5ba4 \\(c_i\\) \u4e0a\u8bfe\u3002</p> <p>\u7531\u4e8e\u66f4\u6362\u6559\u5ba4\u7684\u9700\u6c42\u592a\u591a\uff0c\u7533\u8bf7\u4e0d\u4e00\u5b9a\u80fd\u83b7\u5f97\u901a\u8fc7\u3002\u901a\u8fc7\u8ba1\u7b97\uff0c\u725b\u725b\u53d1\u73b0\u7533\u8bf7\u66f4\u6362\u7b2c \\(i\\) \u8282\u8bfe\u7a0b\u7684\u6559\u5ba4\u65f6\uff0c\u7533\u8bf7\u88ab\u901a\u8fc7\u7684\u6982\u7387\u662f\u4e00\u4e2a\u5df2\u77e5\u7684\u5b9e\u6570 \\(k_i\\)\uff0c\u5e76\u4e14\u5bf9\u4e8e\u4e0d\u540c\u8bfe\u7a0b\u7684\u7533\u8bf7\uff0c\u88ab\u901a\u8fc7\u7684\u6982\u7387\u662f\u4e92\u76f8\u72ec\u7acb\u7684\u3002</p> <p>\u5b66\u6821\u89c4\u5b9a\uff0c\u6240\u6709\u7684\u7533\u8bf7\u53ea\u80fd\u5728\u5b66\u671f\u5f00\u59cb\u524d\u4e00\u6b21\u6027\u63d0\u4ea4\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4eba\u53ea\u80fd\u9009\u62e9\u81f3\u591a \\(m\\) \u8282\u8bfe\u7a0b\u8fdb\u884c\u7533\u8bf7\u3002\u8fd9\u610f\u5473\u7740\u725b\u725b\u5fc5\u987b\u4e00\u6b21\u6027\u51b3\u5b9a\u662f\u5426\u7533\u8bf7\u66f4\u6362\u6bcf\u8282\u8bfe\u7684\u6559\u5ba4\uff0c\u800c\u4e0d\u80fd\u6839\u636e\u67d0\u4e9b\u8bfe\u7a0b\u7684\u7533\u8bf7\u7ed3\u679c\u6765\u51b3\u5b9a\u5176\u4ed6\u8bfe\u7a0b\u662f\u5426\u7533\u8bf7\uff1b\u725b\u725b\u53ef\u4ee5\u7533\u8bf7\u81ea\u5df1\u6700\u5e0c\u671b\u66f4\u6362\u6559\u5ba4\u7684 \\(m\\) \u95e8\u8bfe\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5b8c\u8fd9 \\(m\\) \u4e2a\u7533\u8bf7\u7684\u673a\u4f1a\uff0c\u751a\u81f3\u53ef\u4ee5\u4e00\u95e8\u8bfe\u7a0b\u90fd\u4e0d\u7533\u8bf7\u3002</p> <p>\u56e0\u4e3a\u4e0d\u540c\u7684\u8bfe\u7a0b\u53ef\u80fd\u4f1a\u88ab\u5b89\u6392\u5728\u4e0d\u540c\u7684\u6559\u5ba4\u8fdb\u884c\uff0c\u6240\u4ee5\u725b\u725b\u9700\u8981\u5229\u7528\u8bfe\u95f4\u65f6\u95f4\u4ece\u4e00\u95f4\u6559\u5ba4\u8d76\u5230\u53e6\u4e00\u95f4\u6559\u5ba4\u3002</p> <p>\u725b\u725b\u6240\u5728\u7684\u5927\u5b66\u6709 \\(v\\) \u4e2a\u6559\u5ba4\uff0c\u6709 \\(e\\) \u6761\u9053\u8def\u3002\u6bcf\u6761\u9053\u8def\u8fde\u63a5\u4e24\u95f4\u6559\u5ba4\uff0c\u5e76\u4e14\u662f\u53ef\u4ee5\u53cc\u5411\u901a\u884c\u7684\u3002\u7531\u4e8e\u9053\u8def\u7684\u957f\u5ea6\u548c\u62e5\u5835\u7a0b\u5ea6\u4e0d\u540c\uff0c\u901a\u8fc7\u4e0d\u540c\u7684\u9053\u8def\u8017\u8d39\u7684\u4f53\u529b\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002 \u5f53\u7b2c \\(i\\)\uff08\\(1 \\leq i \\leq n-1\\)\uff09\u8282\u8bfe\u7ed3\u675f\u540e\uff0c\u725b\u725b\u5c31\u4f1a\u4ece\u8fd9\u8282\u8bfe\u7684\u6559\u5ba4\u51fa\u53d1\uff0c\u9009\u62e9\u4e00\u6761\u8017\u8d39\u4f53\u529b\u6700\u5c11\u7684\u8def\u5f84\u524d\u5f80\u4e0b\u4e00\u8282\u8bfe\u7684\u6559\u5ba4\u3002</p> <p>\u73b0\u5728\u725b\u725b\u60f3\u77e5\u9053\uff0c\u7533\u8bf7\u54ea\u51e0\u95e8\u8bfe\u7a0b\u53ef\u4ee5\u4f7f\u4ed6\u56e0\u5728\u6559\u5ba4\u95f4\u79fb\u52a8\u8017\u8d39\u7684\u4f53\u529b\u503c\u7684\u603b\u548c\u7684\u671f\u671b\u503c\u6700\u5c0f\uff0c\u8bf7\u4f60\u5e2e\u4ed6\u6c42\u51fa\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#_9","title":"\u601d\u8def","text":"<p>\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u9898\u610f\u5c31\u662f\u7ed9\u5b9a\u5e8f\u5217c_i,d_i\uff0c\u4e00\u5e45\u65e0\u5411\u56feG\uff0c\u6709\u8fb9\u6743\uff0c\u5b9a\u4e49\u82b1\u8d39w\u4e3a\u6309</p> <p>c_i\u4f9d\u6b21\u8d70\u6700\u77ed\u8def\u7684\u82b1\u8d39\u3002</p> <p>\u53ef\u4ee5\u9009\u62e9\u81f3\u591am\u4e2ai\uff0c\u5e76\u4e14\u6709k_i\u7684\u6982\u7387\u4ea4\u6362c_i,d_i\uff0c\u6c42w\u7684\u671f\u671b\u503c\u3002</p> <p>\u9996\u5148\u9884\u5904\u7406\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n#define ps second\n#define pf first\n\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int N=2e3+5;\nconst int M=5e5+5;\nconst int INF=1e9+5;\nconst int MOD=998244353;\nbool f1;\nint m,n,qzh;\n\nint T,mn=INF,v,e;\nint mp[N][N],q[N];\nint c[N],d[N];\ndouble ans=INF,f[N][N][2],k[N];\n\nvoid add(int a,int b,int c){\n    mp[a][b]=mp[b][a]=min(mp[a][b],c);\n}\n\nvoid flyd(){\n    int n=v;\n    for(int k=1;k&lt;=n;k++){\n        for(int i=1;i&lt;=n;i++){\n            for(int j=1;j&lt;=n;j++){\n                // if(i==j||j==k||k==i)continue;\n                mp[i][j]=min(mp[i][j],mp[i][k]+mp[k][j]);\n            }\n        }\n    }\n    for(int i=1;i&lt;=n;i++){\n        mp[i][i]=mp[i][0]=mp[0][i]=0;\n    }\n}\n\nsigned main() {\n    n=rd,m=rd,v=rd,e=rd;\n    for(int i=1;i&lt;=n;i++)c[i]=rd;\n    for(int i=1;i&lt;=n;i++)d[i]=rd;\n    for(int i=1;i&lt;=n;i++)cin&gt;&gt;k[i];\n    memset(mp,0x3f,sizeof mp);\n    // cerr&lt;&lt;mp[1][1]&lt;&lt;endl;\n    while(e--){\n        int a=rd,b=rd,w=rd;\n        add(a,b,w);\n    }\n\n    flyd();\n\n    for(int i=0;i&lt;=n;i++){\n        for(int j=0;j&lt;=m;j++){\n            f[i][j][0]=f[i][j][1]=INF;\n        }\n    }\n    f[1][0][0]=f[1][1][1]=0;\n    for(int i=2;i&lt;=n;i++){\n        f[i][0][0]=f[i-1][0][0]+mp[c[i-1]][c[i]];\n        for(int j=1;j&lt;=min(i,m);j++){\n\n            int c1=c[i-1],c2=d[i-1],c3=c[i],c4=d[i];\n            f[i][j][0] = min(f[i][j][0], min(f[i - 1][j][0] + mp[c1][c3], f[i - 1][j][1] + mp[c1][c3] * (1 - k[i - 1]) + mp[c2][c3] * k[i - 1]));\n            f[i][j][1] = min(f[i][j][1], min(f[i - 1][j - 1][0] + mp[c1][c3] * (1 - k[i]) + mp[c1][c4] * k[i], f[i - 1][j - 1][1] + mp[c2][c4] * k[i] * k[i - 1] + mp[c2][c3] * k[i - 1] * (1 - k[i]) + mp[c1][c4] * (1 - k[i - 1]) * k[i] + mp[c1][c3] * (1 - k[i - 1]) * (1 - k[i])));\n       }\n    }\n    // cerr&lt;&lt;\"ans=\"&lt;&lt;ans&lt;&lt;endl;\n\n    for(int i=0;i&lt;=m;i++){\n        ans=min(ans,min(f[n][i][0],f[n][i][1]));\n    }\n    // cout&lt;&lt;ans&lt;&lt;endl;\n    printf(\"%.2lf\", ans);\n\n}\n/*\n2\n3 2 3 6\n*/\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#ctsc2018","title":"\u6307\u4ee4\u6982\u7387\u6267\u884c\u7c7b | [CTSC2018] \u5047\u9762","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>\u9488\u9488\u662f\u7eff\u7eff\u7684\u597d\u670b\u53cb\u3002</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u9488\u9488\u559c\u6b22\u73a9\u4e00\u6b3e\u53eb\u505a DotA (**D**efense **o**f **t**he **A**lgorithm) \u7684\u6e38\u620f\uff0c\u5728\u8fd9\u4e2a\u6e38\u620f\u4e2d\uff0c\u9488\u9488\u4f1a\u64cd\u7eb5\u81ea\u5df1\u7684\u82f1\u96c4\u4e0e\u961f\u53cb\u4e00\u8d77\u5bf9\u6297\u53e6\u4e00\u652f\u961f\u4f0d\u3002 \u9488\u9488\u5728 DotA \u4e2d\u6700\u559c\u6b22\u4f7f\u7528\u7684\u82f1\u96c4\u53eb\u505a\u5047\u9762\uff08Faceless\uff09\uff0c\u8be5\u82f1\u96c4\u6709 \\(2\\) \u4e2a\u6280\u80fd\uff1a</p> <ul> <li> <p>\u9501\u5b9a\uff1a\u5bf9\u4e00\u540d\u6307\u5b9a\u7684\u654c\u65b9\u5355\u4f4d\u4f7f\u7528\uff0c\u4ee5 \\(p\\) \u7684\u6982\u7387\u5bf9\u8be5\u5355\u4f4d\u9020\u6210 \\(1\\) \u70b9\u4f24\u5bb3\uff08\u4f7f\u5176\u51cf\u5c11 \\(1\\) \u70b9\u751f\u547d\u503c\uff09\u3002</p> </li> <li> <p>\u7ed3\u754c\uff1a\u5728\u4e00\u7247\u533a\u57df\u65bd\u653e\u7ed3\u754c\uff0c\u8ba9\u8be5\u533a\u57df\u5185\u7684\u6240\u6709\u5176\u4ed6\u5355\u4f4d\u65e0\u6cd5\u52a8\u5f39\u3002 \u5728\u6e38\u620f\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u5355\u4f4d\u7684\u751f\u547d\u503c\u964d\u81f3 \\(0\\) \u6216 \\(0\\) \u4ee5\u4e0b\uff0c\u90a3\u4e48\u8be5\u5355\u4f4d\u5c31\u4f1a\u6b7b\u4ea1\u3002</p> </li> </ul> <p>\u9488\u9488\u5df2\u7ecf\u5b89\u6392\u597d\u4e86\u7ec3\u4e60\u7684\u8ba1\u5212\uff0c\u4ed6\u4f1a\u6309\u987a\u5e8f\u65bd\u653e \\(Q\\) \u4e2a\u6280\u80fd\uff1a</p> <ul> <li> <p>\u5bf9\u4e8e\u9501\u5b9a\u6280\u80fd\uff1a\u9488\u9488\u4f1a\u6307\u5b9a\u4e00\u4e2a\u654c\u65b9\u5355\u4f4d \\(id\\) \uff0c\u5e76\u5bf9\u5b83\u65bd\u653e\u3002\u7531\u4e8e\u51b3\u5b9a\u6982\u7387\u7cfb\u6570 \\(p\\) \u7684\u56e0\u7d20\u5f88\u591a\uff0c\u56e0\u6b64\u6bcf\u6b21\u7684 \\(p\\) \u90fd\u4e0d\u4e00\u5b9a\u76f8\u540c\u3002 \u7279\u522b\u5730\uff0c\u5982\u679c\u8be5\u654c\u65b9\u5355\u4f4d\u5df2\u7ecf\u6b7b\u4ea1\uff0c\u90a3\u4e48\u8be5\u6280\u80fd\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u6548\u679c\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u7ed3\u754c\u6280\u80fd\uff1a\u9488\u9488\u4f1a\u5e0c\u671b\u5bf9 \\(k\\) \u4e2a\u6307\u5b9a\u7684\u654c\u65b9\u5355\u4f4d\u65bd\u653e\uff0c\u4f46\u7531\u4e8e\u9488\u9488\u5e76\u4e0d\u64c5\u957f\u65bd\u653e\u8be5\u6280\u80fd\uff0c\u56e0\u6b64\u4ed6\u53ea\u80fd\u547d\u4e2d\u6070\u597d \\(1\\) \u4e2a\u654c\u65b9\u5355\u4f4d\u3002\u547d\u4e2d\u6bcf\u4e2a\u5b58\u6d3b\u7684\u654c\u65b9\u5355\u4f4d\u7684\u6982\u7387\u662f\u76f8\u7b49\u7684\uff08\u4e5f\u5c31\u662f\u8bf4\u5df2\u7ecf\u6b7b\u4ea1\u7684\u654c\u65b9\u5355\u4f4d\u4e0d\u4f1a\u6709\u4efb\u4f55\u5f71\u54cd\uff09\u3002 \u7279\u522b\u5730\uff0c\u5982\u679c\u8fd9 \\(k\\) \u4e2a\u654c\u65b9\u5355\u4f4d\u5747\u5df2\u6b7b\u4ea1\uff0c\u90a3\u4e48\u8be5\u6280\u80fd\u540c\u6837\u4e0d\u4f1a\u547d\u4e2d\u4efb\u4f55\u654c\u65b9\u5355\u4f4d\u3002</p> </li> </ul> <p>\u73b0\u5728\uff0c\u56f4\u89c2\u9488\u9488\u8fdb\u884c\u7ec3\u4e60\u7684\u7eff\u7eff\u60f3\u77e5\u9053\uff1a</p> <ol> <li> <p>\u5bf9\u4e8e\u9488\u9488\u65bd\u653e\u7684\u6bcf\u4e2a\u7ed3\u754c\u6280\u80fd\uff0c\u5b83\u547d\u4e2d\u5404\u654c\u4eba\u7684\u6982\u7387\u5206\u522b\u662f\u591a\u5c11\u3002</p> </li> <li> <p>\u5728\u9488\u9488\u7684\u6240\u6709\u6280\u80fd\u65bd\u653e\u5b8c\u6bd5\u540e\uff0c\u6240\u6709\u654c\u65b9\u5355\u4f4d\u5269\u4f59\u751f\u547d\u503c\u7684\u671f\u671b\u5206\u522b\u662f\u591a\u5c11\u3002</p> </li> </ol> <p>\u7531\u4e8e\u7eff\u7eff\u8fd8\u8981\u56f4\u89c2\u9488\u9488\u8bad\u7ec3\uff0c\u6240\u4ee5\u8bf7\u4f60\u5e2e\u4ed6\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\u3002</p> <p>\u4e3a\u4e86\u9632\u6b62\u7cbe\u5ea6\u8bef\u5dee\uff0c\u5bf9\u4e8e\u6240\u6709\u9700\u8981\u8f93\u51fa\u7684\u6570\u503c\uff0c\u8bf7\u8f93\u51fa\u5176\u5728\u6a21 \\(998244353\\) \u610f\u4e49\u4e0b\u7684\u503c\u3002</p> <p>\u7531\u4e8e\u7ed3\u754c\u4e3a\u5047\u9762\u7684\u7ec8\u6781\u6280\u80fd\uff0c\u56e0\u6b64\u9488\u9488\u65bd\u653e\u8be5\u6280\u80fd\u7684\u6b21\u6570\u4e0d\u4f1a\u592a\u591a\u3002\u5177\u4f53\u8bf7\u89c1\u201d\u5b50\u4efb\u52a1\u201c\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#_10","title":"\u601d\u8def","text":"<p>\u5176\u5b9e\u662f\u4e24\u4e2a\u5b50\u95ee\u9898\uff0c\u53ef\u4ee5\u5206\u5f00\u5355\u72ec\u5904\u7406\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n#define ps second\n#define pf first\n\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int INF=1e9+5;\nconst int MOD=998244353;\nconst int N=1e3+5;\nint n,Q;\nint m[N],dp[N][N],id[N];\nint g[N],f[N][N];\nint inv[N];\n\nint ksm(int a,int p){\n    int res=1;\n    while(p){\n        if(p&amp;1) res=res*a%MOD;\n        a=a*a%MOD; \n        p&gt;&gt;=1;\n    }\n    return res;\n}\nint getinv(int x){\n    if(x&lt;=200){\n        if(inv[x]) return inv[x];\n        else return inv[x]=ksm(x,MOD-2);\n    }return ksm(x,MOD-2);\n}\n\n\nsigned main(){\n    n=rd;\n    for(int i=1;i&lt;=n;i++) m[i]=rd,dp[i][m[i]]=1;\n    Q=rd;\n    while(Q--){\n        int op=rd;\n        if(op==0){\n            int k=rd,u=rd,v=rd;\n            int p=u*getinv(v)%MOD,q=(1+MOD-p)%MOD;\n            for(int i=0;i&lt;=m[k];i++)\n                if(i) dp[k][i]=(dp[k][i+1]*p%MOD+dp[k][i]*q%MOD)%MOD;\n                else dp[k][i]=(dp[k][i+1]*p%MOD+dp[k][i])%MOD;\n        }\n        else{\n            int k=rd;\n            for(int i=1;i&lt;=k;i++) id[i]=rd;\n            memset(g,0,sizeof(g));\n            memset(f,0,sizeof(f));\n            g[0]=1;\n            for(int i=1;i&lt;=k;i++) for(int j=i;~j;j--){\n                g[j]=g[j]*dp[id[i]][0]%MOD;\n                if(j)(g[j]+=g[j-1]*(1+MOD-dp[id[i]][0])%MOD)%=MOD;\n            }\n            for(int i=1;i&lt;=k;i++){\n                int q=(1+MOD-dp[id[i]][0])%MOD;\n                int p=dp[id[i]][0];\n                q=getinv(q);\n                if(!q)continue;\n                f[i][k]=g[k];\n                for(int j=k-1;j&gt;0;j--){\n                    f[i][j]=(g[j]+MOD-f[i][j+1]*q%MOD*p%MOD)%MOD;\n                }\n            }\n            for(int i=1;i&lt;=k;i++){\n                int cur=0;\n                for(int j=1;j&lt;=k;j++)cur=(cur+f[i][j]*getinv(j)%MOD)%MOD;\n                cout&lt;&lt;cur&lt;&lt;' ';\n            }\n            cout&lt;&lt;endl;\n        }\n    }\n    for(int i=1;i&lt;=n;i++){\n        int cur=0;\n        for(int j=1;j&lt;=m[i];j++) cur=(cur+j*dp[i][j]%MOD)%MOD;\n        cout&lt;&lt;cur&lt;&lt;' ';\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#b-sn-t2-","title":"B. [S+N\u56db\u8fde\u6d4b\u7b2c\u4e8c\u5957]--T2--\u8349\u579b","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/#_11","title":"\u601d\u8def","text":"<p>\u6211\u4eec\u8bbe \\(f_i\\) \u4e3a\u5230\u8fbe\u70b9i\u7684\u671f\u671b\u6b65\u6570\u3002\u90a3\u4e48\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li> <p>\u4ecei-1\u5904\u6765</p> <p>\u90a3\u4e48\u6b64\u65f6\u4ecei-1\u5230i\u7684\u6982\u7387\u662f\\(\\frac{out_{i-1}-b_{i-1}}{out_{i-1}}\\)\uff0cout\u8868\u793a\u51fa\u5ea6\uff0cb\u8868\u793ai-1\u5230\u975ei\u8282\u70b9\u7684\u8fb9\u6570\u3002</p> <p>\u6b64\u65f6\u5bf9 \\(f_i\\) \u7684\u8d21\u732e\u5c31\u662f\\((f_{i-1}+1)\\times \\frac{out_{i-1}-b_{i-1}}{out_{i-1}}\\)</p> </li> <li> <p>\u4ece\u524d\u9762\u7684\u67d0\u4e2a\u70b9\u6765\uff0c\u6982\u7387\u662f\\(\\frac{b_{j,j\\in [to: i]}}{out_{j}}\\)</p> <p>\u6b64\u65f6\u5bf9 \\(f_i\\) \u7684\u8d21\u732e\u5c31\u662f\\((f_{j}+1)\\times \\frac{b_{j,j\\in [to: i]}}{out_{j}}\\)</p> </li> </ul> <p>\u6700\u540e\u6211\u4eec\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u4ee5\u4fbf\u4e8e\u6211\u4eec\u4f7f\u7528\u4ee3\u7801\u6765\u8868\u793a\uff0c\u4ee5\u53ca\u6211\u4eec\u9700\u8981\u628a\u5206\u6bcd\u63d0\u53d6\u51fa\u6765\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/","title":"\u77e9\u9635\u5feb\u901f\u5e42","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#_2","title":"\u77e9\u9635\u4e58\u6cd5","text":"<p>\u56fe\u7247\u662f\u5f15\u7528\u7684</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#_3","title":"\u77e9\u9635\u5feb\u901f\u5e42","text":"<p>\u539f\u7406</p> <p>\u56e0\u4e3a\u77e9\u9635\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b(\u81ea\u884c\u641c\u7d22),\u6240\u4ee5\u77e9\u9635\u5feb\u901f\u5e42\u548c\u5feb\u901f\u5e42\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u5feb\u901f\u5e42\u4e2d\u7684\u6570\u4e58\uff08res*=a\uff0ca*=a\u53d8\u6210\u4e86\u4e24\u4e2a\u77e9\u9635\u76f8\u4e58\uff09</p> <p>\u5b58\u77e9\u9635</p> <p>\u6211\u4eec\u4f7f\u7528\u7ed3\u6784\u4f53\u5b58,\u8fd9\u6837\u5728\u4f20\u53c2\u65f6\u65b9\u4fbf\u8bb8\u591a</p> <pre><code>struct node {\n    int a[N][N];\n    node() {\n        memset(a,0,sizeof a); //\u4e00\u5b9a\u8981\u5199\uff01\n    }\n}c;\n</code></pre> <p>\u5728\u6e05\u7a7a\u7ed3\u6784\u4f53\u65f6\u53ef\u4ee5\u4f7f\u7528</p> <pre><code>memset(c.a,0,sizeof c.a);\n</code></pre> <p>\u6216\u8005\u518d\u7ed3\u6784\u4f53\u4e2d\u624b\u52a8\u5199\u5165</p> <pre><code>node() {\n        memset(a,0,sizeof a); //\u4e00\u5b9a\u8981\u5199\uff01\n    }\n</code></pre> <p>\u8fd9\u6837\u53ef\u4ee5\u5728\u521b\u5efa\u7ed3\u6784\u4f53\u65f6\u81ea\u52a8\u6e05\u7a7a.</p> <p>\u4e0e\u5feb\u901f\u5e42\u7684\u533a\u522b</p> <p>\u5728\u5feb\u901f\u5e42\u4e2d,\u6211\u4eec\u6709\u4e00\u4e2a\u521d\u59cb\u503c,\u5373<code>res=1</code> \u5728<code>ksm</code>\u51fd\u6570\u4e2d,\u6211\u4eec\u4e0d\u65ad<code>res=res*c%p;</code>\u66f4\u65b0<code>res</code>,\u5f97\u5230\u7ed3\u679c</p> <p>\u5728\u77e9\u9635\u5feb\u901f\u5e42\u4e2d,\u6211\u4eec\u7684\u64cd\u4f5c\u5bf9\u8c61\u662f\u4e00\u4e2a\u77e9\u9635,\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8fd9\u4e48\u4e00\u4e2a\u521d\u59cb\u77e9\u9635.</p> <p>\u5176\u5b9e\u5c31\u662f</p> <pre><code>for(int i=1; i&lt;=n; i++)res.a[i][i]=1;\n</code></pre> <p>\u5373</p> <pre><code>n=5\u65f6\n1 0 0 0 0  \n0 1 0 0 0  \n0 0 1 0 0  \n0 0 0 1 0  \n0 0 0 0 1  \n</code></pre> <p>\u5728\u5feb\u901f\u5e42\u4e2d,\u6211\u4eec\u7684\u51fd\u6570\u662f</p> <pre><code>int ksm(int c,int k,int p) {    //c^k %p\n    int res=1;\n    ...\n    return res;\n}\n</code></pre> <p>\u6211\u4eec\u628a<code>c</code>\u66ff\u6362\u4e3a\u9700\u8981\u88ab\u5feb\u901f\u5e42\u7684\u77e9\u9635,<code>res</code>\u521d\u59cb\u5316\u4e3a\u521d\u59cb\u77e9\u9635,\u91cd\u8f7d\u4e00\u4e0b<code>*</code>\u8fd0\u7b97\u7b26,\u5c31\u5b8c\u5de5\u5566!(<code>c</code>,<code>res</code>\u8bf7\u4f7f\u7528\u7ed3\u6784\u4f53\u7c7b\u578b) \u6216\u8005\u5199\u4e00\u4e2a\u77e9\u9635\u4e58\u7684\u51fd\u6570(\u5982\u4ee3\u78012)</p> <p>\u91cd\u5b9a\u4e49\u8fd0\u7b97\u7b26,\u987a\u4fbf\u5c06\u53d6\u6a21\u653e\u8fdb\u53bb</p> <pre><code>struct node{\n    int a[N][N];\n}node c;\n\nnode operator *(const node &amp;x,const node &amp;y){     //\u91cd\u8f7d\u8fd0\u7b97\u7b26\n    for(int k=1;k&lt;=n;++k)\n        for(int i=1;i&lt;=n;++i)\n            for(int j=1;j&lt;=n;++j)\n                z.a[i][j]=(z.a[i][j]+x.a[i][k]*y.a[k][j]%mod)%mod;\n    return z;\n}\n</code></pre> <p>\u4ee3\u7801:</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=105,Mod=1e9+7;\nint n,k;\nstruct node {\n    int a[N][N];\n    node(){\n        memset(a,0,sizeof a); //\u4e00\u5b9a\u8981\u5199\uff01\n    }\n}c,res;\n\n\nvoid ksm() {\n\n    while(k) {\n        if(k&amp;1) {\n            node x;\n            for(int k=1; k&lt;=n; k++)\n                for(int i=1; i&lt;=n; i++) {\n                    for(int j=1; j&lt;=n; j++)x.a[i][j]=(x.a[i][j]+res.a[i][k]*c.a[k][j]%Mod)%Mod;\n                }\n            res=x;\n        }\n        {\n            node x;\n            for(int k=1; k&lt;=n; k++)\n                for(int i=1; i&lt;=n; i++) {\n                    for(int j=1; j&lt;=n; j++)x.a[i][j]=(x.a[i][j]+c.a[i][k]*c.a[k][j]%Mod)%Mod;\n                }\n            c=x;\n        }\n        k&gt;&gt;=1;\n    }\n\n}\n\nsigned main() {\n    cin&gt;&gt;n&gt;&gt;k;\n    for(int i=1; i&lt;=n; i++)for(int j=1; j&lt;=n; j++) {\n            cin&gt;&gt;c.a[i][j];\n        }\n\n    for(int i=1; i&lt;=n; i++)res.a[i][i]=1;\n    ksm();\n\n    for(int i=1; i&lt;=n; i++) {\n        for(int j=1; j&lt;=n; j++)cout&lt;&lt;res.a[i][j]&lt;&lt;' ';\n        cout&lt;&lt;'\\n';\n    }\n    return 0;\n}\n</code></pre> <p>\u5199\u6cd52</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=105,Mod=1e9+7;\nint n,k;\nstruct node {\n    int a[N][N];\n    node() {\n        memset(a,0,sizeof a); //\u4e00\u5b9a\u8981\u5199\uff01\n    }\n}c;\n\nnode f(node a,node b) { //\u77e9\u9635\u4e58\u77e9\u9635,\u8fd4\u56de\u77e9\u9635.\u8fd9\u4e2a\u53ea\u80fd\u66b4\u529b,\u6ca1\u6709\u5176\u4ed6\u529e\u6cd5\n    node x;\n    for(int k=1; k&lt;=n; k++)\n        for(int i=1; i&lt;=n; i++) {\n            for(int j=1; j&lt;=n; j++)x.a[i][j]=(x.a[i][j]+a.a[i][k]*b.a[k][j]%Mod)%Mod;\n        }\n    return x;\n}\nnode ksm() {\n    node res;\n    for(int i=1; i&lt;=n; i++)res.a[i][i]=1;\n    while(k) {\n        if(k&amp;1) {\n            res=f(res,c);\n        }\n        c=f(c,c);\n        k&gt;&gt;=1;\n    }\n    return res;\n}\n\n\nsigned main() {\n    cin&gt;&gt;n&gt;&gt;k;\n    for(int i=1; i&lt;=n; i++)for(int j=1; j&lt;=n; j++) {\n            cin&gt;&gt;c.a[i][j];\n        }\n\n\n    node res=ksm();\n\n    for(int i=1; i&lt;=n; i++) {\n        for(int j=1; j&lt;=n; j++)cout&lt;&lt;res.a[i][j]&lt;&lt;' ';\n        cout&lt;&lt;'\\n';\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#1","title":"\u4f8b\u9898 #1 \u77e9\u9635\u52a0\u901f\uff08\u6570\u5217\uff09","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5df2\u77e5\u4e00\u4e2a\u6570\u5217 \\(a\\)\uff0c\u5b83\u6ee1\u8db3\uff1a</p> <p>\\(a_x= \\begin{cases}  1 &amp; x \\in\\{1,2,3\\}\\\\   a_{x-1}+a_{x-3} &amp; x \\geq 4 \\end{cases}\\)</p> <p>\u6c42 \\(a\\) \u6570\u5217\u7684\u7b2c \\(n\\) \u9879\u5bf9 \\(10^9+7\\) \u53d6\u4f59\u7684\u503c\u3002</p> <ul> <li>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e \\(1 \\leq T \\leq 100\\)\uff0c\\(1 \\leq n \\leq 2 \\times 10^9\\)\u3002</li> </ul> <p>\u6b65\u9aa4</p> <ul> <li>\u603b\u7ed3\u9012\u63a8\u77e9\u9635</li> </ul> <p>\u8fd9\u4e00\u6b65\u662f\u6700\u96be\u7684\u5730\u65b9\u4e5f\u662f\u6700\u4e0d\u5bb9\u6613\u7406\u89e3\u7684\u5730\u65b9\u3002\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5c31\u6765\u63a8\u5bfc\u4e00\u4e0b\u8fd9\u4e2a\u5730\u65b9\u3002</p> <p>\u5bf9\u4e8e\\(a_x=a_{x-1}+a_{x-3}\\)</p> <p>\\([a_{x-3},a_{x-2},a_{x-1}]\\times [?]=[a_{x-2},a_{x-1},a_{x}]\\)</p> <p>\u73b0\u5728\u6211\u4eec\u8981\u6c42\u51fa[?]\u5c31\u4e07\u4e8b\u5927\u5409\u4e86\u3002\u90a3\u4e48\u7ed3\u5408\u77e9\u9635\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u5148\u8bbe\\([?]=\\begin{bmatrix}a1 &amp; b1&amp; c1 \\\\a2 &amp; b2&amp;c2 \\\\a3&amp;b3&amp;c3\\end{bmatrix}\\)</p> <p>\u90a3\u4e48\\([a_{x-3},a_{x-2},a_{x-1}]\\times \\begin{bmatrix}a1 &amp; b1&amp; c1 \\\\a2 &amp; b2&amp;c2 \\\\a3&amp;b3&amp;c3\\end{bmatrix}= [a_{x-2},a_{x-1},a_{x}]\\)</p> <p>\u8bb0\u4f4f\u53e3\u8bc0\uff1a\u884c\u540cA\uff0c\u5217\u540cB</p> <p></p> <p></p> <p>\u6240\u4ee5</p> <p>\\(a_{x-2}=a_{x-3}a1+a_{x-2}a2+a_{x-1}a3\\)</p> <p>\\(a_{x-1}=a_{x-3}b1+a_{x-2}b2+a_{x-1}b3\\)</p> <p>\\(a_{x}=a_{x-3}c1+a_{x-2}c2+a_{x-1}c3\\)</p> <p>\u90a3\u4e48\u73b0\u5728\u7ed3\u5408\u9898\u76ee\uff0c\u5c31\u5f88\u5bb9\u6613\u63a8\u51fa\\([?]\\)\u662f\u4ec0\u4e48\u4e86\u3002</p> <p>\\(a_{x-2}=a_{x-3}(a1=0)+a_{x-2}(a2=1)+a_{x-1}(a3=0)\\)</p> <p>\\(a_{x-1}=a_{x-3}(b1=0)+a_{x-2}(b2=0)+a_{x-1}(b3=1)\\)</p> <p>\\(a_{x}=a_{x-3}(c1=1)+a_{x-2}(c2=0)+a_{x-1}(c3=1)\\)</p> <p>\u6240\u4ee5\uff01\uff01\\([?]=\\begin{bmatrix}0 &amp; 0&amp; 1 \\\\1 &amp; 0&amp;0 \\\\0&amp;1&amp;1\\end{bmatrix}\\)</p> <p>\u6ce8\u610f\u8fd9\u91cc\u4e0e\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u5bf9\u5e94\u4e3a\\([?]=\\begin{bmatrix}3,3 &amp; 2,3&amp; 1,3 \\\\3,2 &amp; 2,2&amp;1,2 \\\\3,1&amp;2,1&amp;1,1\\end{bmatrix}\\)</p> <p>\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f\u56e0\u4e3a\u6570\u7ec4\u7684\u7b2c\u4e00\u7ef4\u662f\u884c\uff01\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5199\u6210</p> <p>\\(\\begin{bmatrix}a_{x-3}\\\\a_{x-2}\\\\a_{x-1}\\end{bmatrix}\\times \\begin{bmatrix}0 &amp; 1&amp; 0 \\\\1 &amp; 0&amp;0 \\\\1&amp;0&amp;1\\end{bmatrix}=\\begin{bmatrix}a_{x-2}\\\\a_{x-1}\\\\a_{x}\\end{bmatrix}\\)</p> <p>\u8fd9\u6837\u5c31\u6ca1\u95ee\u9898\u4e86\u5427\uff1f\u563f\u563f\u3002</p> <ul> <li> <p>\u5e94\u7528\u77e9\u9635\u7ed3\u5408\u5f8b,\u5c06 \\(S\\times A\\times A\\times ...\\) \u8f6c\u5316\u4e3a \\(S\\times A^n\\)</p> </li> <li> <p>\u4f7f\u7528\u77e9\u9635\u5feb\u901f\u5e42</p> </li> <li> <p>\u5728\u8fd0\u884c\u5f97\u5230\u7684\u6700\u540e\u77e9\u9635\u4e2d\u627e\u5230\u9700\u8981\u7684\u503c,(\u7279\u5224),\u8f93\u51fa</p> </li> </ul> <p>\u4ee3\u7801</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=105,Mod=1e9+7;\nint n,k;\nstruct node {\n    int a[5][5];\n    node() {\n        memset(a,0,sizeof a); //\u4e00\u5b9a\u8981\u5199\uff01\n    }\n};\n\nnode f(node a,node b) {\n    node x;\n    for(int k=1; k&lt;=3; k++)\n        for(int i=1; i&lt;=3; i++) {\n            for(int j=1; j&lt;=3; j++)x.a[i][j]=(x.a[i][j]+a.a[i][k]*b.a[k][j]%Mod)%Mod;\n        }\n    return x;\n}\nnode ksm() {\n    node res,c;\n    for(int i=1; i&lt;=3; i++)res.a[i][i]=1;\n    c.a[1][1]=c.a[1][3]=c.a[2][1]=c.a[3][2]=1;\n    while(k) {\n        if(k&amp;1) {\n            res=f(res,c);\n        }\n        c=f(c,c);\n        k&gt;&gt;=1;\n    }\n    return res;\n}\n\nsigned main() {\n    int T;\n    cin&gt;&gt;T;\n    while(T--) {\n        cin&gt;&gt;k;\n        if(k&lt;=3){\n            cout&lt;&lt;1&lt;&lt;endl;\n            continue;\n        }\n        node res;\n        res=ksm();\n\n        cout&lt;&lt;res.a[2][1]&lt;&lt;endl;\n    }\n\n\n    return 0;\n}\n</code></pre> <p>\u6ce8\u610f:</p> <p>\u4ece\u77e9\u9635\u5feb\u901f\u5e42\u6a21\u677fcopy\u65f6,\u8bb0\u5f97\u4fee\u6539\u77e9\u9635\u5927\u5c0fn,\u603b\u7ed3\u51fa\u9012\u63a8\u77e9\u9635</p> <p>\u5982\u672c\u9898\u7684\u9012\u63a8\u77e9\u9635\u4e3a</p> <pre><code>c.a[1][1]=c.a[1][3]=c.a[2][1]=c.a[3][2]=1;\u5176\u4f59\u4e3a0;\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#2","title":"\u4f8b\u9898 #2 \u6590\u6ce2\u90a3\u5951\u6570\u5217","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u662f\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28\u7684\u4e00\u4e2a\u6570\u5217\uff1a</p> <p>\\(F_n = \\left\\{\\begin{aligned} 1 \\space (n \\le 2) \\\\ F_{n-1}+F_{n-2} \\space (n\\ge 3) \\end{aligned}\\right.\\)</p> <p>\u8bf7\u4f60\u6c42\u51fa \\(F_n \\bmod 10^9 + 7\\) \u7684\u503c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570 \\(n\\)</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u7b54\u6848\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(60\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n \\le 92\\)\uff1b \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n &lt; 2^{63}\\)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#_4","title":"\u601d\u8def","text":"<p>\u6709\u4e86\u4e0a\u9762\u4e00\u9053\u9898\u7684\u7ecf\u5386,\u8fd9\u9053\u9898\u662f\u4e0d\u662f\u6b65\u9aa4<sub>~\u4e00\u6a21\u4e00\u6837</sub>~?</p> <p>\u590d\u5236\u4e00\u4efd\u6c34\u4e00\u6c34\u5b57\u6570\u634f~</p> <ul> <li>\u603b\u7ed3\u9012\u63a8\u77e9\u9635</li> </ul> <p>\u8fd9\u4e00\u6b65\u662f\u6700\u96be\u7684\u5730\u65b9\u4e5f\u662f\u6700\u4e0d\u5bb9\u6613\u7406\u89e3\u7684\u5730\u65b9\u3002\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5c31\u6765\u63a8\u5bfc\u4e00\u4e0b\u8fd9\u4e2a\u5730\u65b9\u3002</p> <p>\u5bf9\u4e8e\\(a_x=a_{x-1}+a_{x-2}\\)</p> <p>\\([a_{x-2},a_{x-1}]\\times [?]=[a_{x-1},a_{x}]\\)</p> <p>\u73b0\u5728\u6211\u4eec\u8981\u6c42\u51fa[?]\u5c31\u4e07\u4e8b\u5927\u5409\u4e86\u3002\u90a3\u4e48\u7ed3\u5408\u77e9\u9635\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u5148\u8bbe\\([?]=\\begin{bmatrix}a1 &amp; b1 \\\\a2 &amp; b2\\end{bmatrix}\\)</p> <p>\u90a3\u4e48\\([a_{x-2},a_{x-1}]\\times \\begin{bmatrix}a1 &amp; b1 \\\\a2 &amp; b2\\end{bmatrix}= [a_{x-1},a_{x}]\\)</p> <p>\u8bb0\u4f4f\u53e3\u8bc0\uff1a\u884c\u540cA\uff0c\u5217\u540cB</p> <p></p> <p>\u6240\u4ee5</p> <p>\\(a_{x-1}=a_{x-2}a1+a_{x-1}a2\\)</p> <p>\\(a_{x}=a_{x-2}b1+a_{x-1}b2\\)</p> <p>\u90a3\u4e48\u73b0\u5728\u7ed3\u5408\u9898\u76ee\uff0c\u5c31\u5f88\u5bb9\u6613\u63a8\u51fa\\([?]\\)\u662f\u4ec0\u4e48\u4e86\u3002</p> <p>\\(a_{x-1}=a_{x-2}(a1=0)+a_{x-1}(a2=1)\\)</p> <p>\\(a_{x}=a_{x-2}(b1=1)+a_{x-1}(b2=1)\\)</p> <p>\u6240\u4ee5\uff01\uff01\\([?]=\\begin{bmatrix}0 &amp; 1 \\\\1 &amp; 1\\end{bmatrix}\\)</p> <p>\u6ce8\u610f\u8fd9\u91cc\u4e0e\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u5bf9\u5e94\u4e3a\\([?]=\\begin{bmatrix}3,3 &amp; 2,3&amp; 1,3 \\\\3,2 &amp; 2,2&amp;1,2 \\\\3,1&amp;2,1&amp;1,1\\end{bmatrix}\\)</p> <p>\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f\u56e0\u4e3a\u6570\u7ec4\u7684\u7b2c\u4e00\u7ef4\u662f\u884c\uff01\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5199\u6210</p> <p>\\(\\begin{bmatrix}a_{x-2}\\\\a_{x-1}\\end{bmatrix}\\times \\begin{bmatrix}1&amp; 0 \\\\1 &amp; 1\\end{bmatrix}=\\begin{bmatrix}a_{x-1}\\\\a_{x}\\end{bmatrix}\\)</p> <p>\u8fd9\u6837\u5c31\u6ca1\u95ee\u9898\u4e86\u5427\uff1f\u563f\u563f\u3002</p> <p>\u4ee3\u7801</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=105,MOD=1e9+7;\nint n,k;\nstruct node {\n    int a[5][5];\n    node() {\n        memset(a,0,sizeof a); //\u4e00\u5b9a\u8981\u5199\uff01\n    }\n};\n\nnode f(node a,node b) {\n    node x;\n    for(int k=1; k&lt;=2; k++)\n        for(int i=1; i&lt;=2; i++) {\n            for(int j=1; j&lt;=2; j++)x.a[i][j]=(x.a[i][j]+a.a[i][k]*b.a[k][j]%MOD)%MOD;\n        }\n    return x;\n}\nnode ksm() {\n    node res,c;\n    for(int i=1; i&lt;=2; i++)res.a[i][i]=1;\n    c.a[1][1]=c.a[1][2]=c.a[2][1]=1;\n    while(k) {\n        if(k&amp;1) {\n            res=f(res,c);\n        }\n        c=f(c,c);\n        k&gt;&gt;=1;\n    }\n    return res;\n}\n\nsigned main() {\n\n    cin&gt;&gt;k;\n    if(k&lt;=2){\n        cout&lt;&lt;1&lt;&lt;endl;\n        return 0;\n    }\n    node res;\n    res=ksm();\n    cout&lt;&lt;res.a[2][1]&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#3","title":"\u4f8b\u9898 #3 \u6590\u6ce2\u90a3\u5951\u516c\u7ea6\u6570","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5bf9\u4e8e Fibonacci \u6570\u5217\uff1a \\(f_i = \\begin{cases} [i = 1]               &amp; i \\leq 1 \\\\ f_{i - 1} + f_{i - 2} &amp; i \\gt 1 \\end{cases}\\)</p> <p>\u8bf7\u6c42\u51fa \\(f_n\\) \u4e0e \\(f_m\\) \u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u5373 \\(\\gcd(f_n, f_m)\\)\u3002</p> <ul> <li>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(1 \\leq n, m \\leq 10^9\\)\u3002</li> </ul> <p>\u91cd\u8981\u7ed3\u8bba\uff1agcd(F[n],F[m])=F[gcd(n,m)]</p> <p>\u63a8\u5bfc\uff1a</p> <p>www.luogu.com.cn</p> <p>\u4ee3\u7801</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=105,MOD=1e8;\nint n,K;\nstruct node {\n    int a[5][5];\n    node() {\n        memset(a,0,sizeof a); //\u4e00\u5b9a\u8981\u5199\uff01\n    }\n};\n\nnode f(node a,node b) {\n    node x;\n    for(int K=1; K&lt;=2; K++)\n        for(int i=1; i&lt;=2; i++) {\n            for(int j=1; j&lt;=2; j++)x.a[i][j]=(x.a[i][j]+a.a[i][K]*b.a[K][j]%MOD)%MOD;\n        }\n    return x;\n}\nnode ksm() {\n    node res,c;\n    for(int i=1; i&lt;=2; i++)res.a[i][i]=1;\n    c.a[1][1]=c.a[1][2]=c.a[2][1]=1;\n    while(K) {\n        if(K&amp;1) {\n            res=f(res,c);\n        }\n        c=f(c,c);\n        K&gt;&gt;=1;\n    }\n    return res;\n}\n\nsigned main() {\n\n    int n,m;\n    cin&gt;&gt;n&gt;&gt;m;\n\n    K=__gcd(n,m);\n    if(K&lt;=2){\n        cout&lt;&lt;1&lt;&lt;endl;\n        return 0;\n    }\n    node res;\n    res=ksm();\n    cout&lt;&lt;res.a[2][1]&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#4","title":"\u4f8b\u9898 #4 \u5e7f\u4e49\u6590\u6ce2\u90a3\u5951\uff08\u77e9\u9635\u5feb\u901f\u5e42\u7684\u901a\u7528\u9012\u63a8\u5f0f\u63a8\u5bfc|\u5bf9\u4e8e\u6709\u521d\u59cb\u503c\u53ca\u7c7b\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u53d8\u79cd\uff09","text":"<p>www.luogu.com.cn</p> <p>P1349 \u5e7f\u4e49\u6590\u6ce2\u90a3\u5951\u6570\u5217</p> <p>\u5e7f\u4e49\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\u662f\u6307\u5f62\u5982 \\(a_n=p\\times a_{n-1}+q\\times a_{n-2}\\) \u7684\u6570\u5217\u3002</p> <p>\u4eca\u7ed9\u5b9a\u6570\u5217\u7684\u4e24\u7cfb\u6570 \\(p\\) \u548c \\(q\\)\uff0c\u4ee5\u53ca\u6570\u5217\u7684\u6700\u524d\u4e24\u9879 \\(a_1\\) \u548c $ a_2$\uff0c\u53e6\u7ed9\u51fa\u4e24\u4e2a\u6574\u6570 \\(n\\) \u548c \\(m\\)\uff0c\u8bd5\u6c42\u6570\u5217\u7684\u7b2c \\(n\\) \u9879 \\(a_n\\) \u5bf9 \\(m\\) \u53d6\u6a21\u540e\u7684\u7ed3\u679c\u3002</p> <p>\u8f93\u5165\u5305\u542b\u4e00\u884c\u516d\u4e2a\u6574\u6570\uff0c\\(p,q,a_1,a_2,n,m\\)\u3002</p> <p>\u8f93\u51fa\u5305\u542b\u4e00\u884c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u7b54\u6848\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(p,q,a_1,a_2 \\in [0,2^{31}-1]\\)\uff0c\\(1\\le n,m \\le 2^{31}-1\\)\u3002</p> <pre><code>/*\nCode by Ntsc_Hodaka\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define pii pair&lt;int, int&gt;\n\n///----///\n#define rd read()\ninline int read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\ninline void write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\n///----///\nconst int N = 2e2 + 5;\nconst int M = 1e7 + 5;\nconst int INF = 1e12 + 5;\nint MOD = 998244353;\nconst double eps = 1e-7;\n\nint n, p, q, a1, a2;\nstruct node {\n  int m[10][10];\n} ans, base;\ninline void init() {\n  ans.m[1][1] = a2, ans.m[1][2] = a1;\n  base.m[1][1] = p, base.m[2][1] = q, base.m[1][2] = 1;\n}\ninline node mul(node a, node b) {\n  node res;\n  memset(res.m, 0, sizeof(res.m));\n  for (int i = 1; i &lt;= 2; i++) {\n    for (int j = 1; j &lt;= 2; j++) {\n      for (int k = 1; k &lt;= 2; k++) {\n        res.m[i][j] += (a.m[i][k] % MOD) * (b.m[k][j] % MOD);\n        res.m[i][j] %= MOD;\n      }\n    }\n  }\n  return res;\n}\ninline void ksm(int p) {\n  while (p) {\n    if (p &amp; 1)\n      ans = mul(ans, base);\n    base = mul(base, base);\n    p &gt;&gt;= 1;\n  }\n}\n\nsigned main() {\n  p = rd, q = rd, a1 = rd, a2 = rd, n = rd, MOD = rd;\n  if (n == 1) {\n    cout &lt;&lt; a1;\n    return 0;\n  }\n  if (n == 2) {\n    cout &lt;&lt; a2;\n    return 0;\n  }\n  init();\n  ksm(n - 2);\n  // cerr&lt;&lt;\"OK\";\n  printf(\"%lld\", ans.m[1][1] % MOD);\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#_5","title":"\u77e9\u9635\u6c42\u9006","text":"<p>\u77e9\u9635\u6c42\u9006\u662f\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u6307\u7684\u662f\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u65b9\u9635\uff08\u5373\u884c\u6570\u548c\u5217\u6570\u76f8\u7b49\u7684\u77e9\u9635\uff09\uff0c\u5bfb\u627e\u53e6\u4e00\u4e2a\u65b9\u9635\uff0c\u4f7f\u5f97\u8fd9\u4e24\u4e2a\u65b9\u9635\u76f8\u4e58\u7684\u7ed3\u679c\u662f\u5355\u4f4d\u77e9\u9635\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a \\(n \\times n\\) \u7684\u65b9\u9635 \\(A\\)\uff0c\u5982\u679c\u5b58\u5728\u53e6\u4e00\u4e2a \\(n \\times n\\) \u7684\u65b9\u9635 \\(B\\)\uff0c\u4f7f\u5f97 \\(A \\times B = B \\times A = I\\)\uff0c\u5176\u4e2d \\(I\\) \u662f \\(n \\times n\\) \u7684\u5355\u4f4d\u77e9\u9635\uff08\u5355\u4f4d\u77e9\u9635\u7684\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u7684\u5143\u7d20\u90fd\u662f1\uff0c\u5176\u4f59\u5143\u7d20\u90fd\u662f0\uff09\uff0c\u90a3\u4e48\u77e9\u9635 \\(B\\) \u5c31\u88ab\u79f0\u4e3a\u77e9\u9635 \\(A\\) \u7684\u9006\u77e9\u9635\uff0c\u8bb0\u4f5c \\(A^{-1}\\)\u3002 \u4e0d\u662f\u6240\u6709\u7684\u65b9\u9635\u90fd\u6709\u9006\u77e9\u9635\u3002\u4e00\u4e2a\u65b9\u9635 \\(A\\) \u5b58\u5728\u9006\u77e9\u9635\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\u5b83\u7684\u884c\u5217\u5f0f\uff08determinant\uff09\u4e0d\u4e3a\u96f6\uff0c\u5373 \\(\\text{det}(A) \\neq 0\\)\u3002\u5982\u679c\u884c\u5217\u5f0f\u4e3a\u96f6\uff0c\u5219\u77e9\u9635 \\(A\\) \u662f\u5947\u5f02\u7684\uff0c\u5b83\u6ca1\u6709\u9006\u77e9\u9635\u3002 \u77e9\u9635\u6c42\u9006\u7684\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u65b9\u6cd5\uff1a</p> <ol> <li> <p>\u9ad8\u65af-\u7ea6\u5f53\u6d88\u5143\u6cd5\uff1a\u901a\u8fc7\u884c\u53d8\u6362\u5c06\u77e9\u9635 \\(A\\) \u8f6c\u6362\u6210\u5355\u4f4d\u77e9\u9635\uff0c\u540c\u65f6\u5bf9\u5355\u4f4d\u77e9\u9635\u8fdb\u884c\u76f8\u540c\u7684\u884c\u53d8\u6362\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u77e9\u9635\u5c31\u662f \\(A\\) \u7684\u9006\u77e9\u9635\u3002</p> </li> <li> <p>\u4f34\u968f\u77e9\u9635\u6cd5\uff1a\u9996\u5148\u8ba1\u7b97 \\(A\\) \u7684\u4f34\u968f\u77e9\u9635\uff08adjugate matrix\uff09\uff0c\u7136\u540e\u5229\u7528\u516c\u5f0f \\(A^{-1} = \\frac{1}{\\text{det}(A)} \\text{adj}(A)\\) \u6765\u8ba1\u7b97 \\(A\\) \u7684\u9006\u77e9\u9635\u3002</p> </li> <li> <p>\u76f4\u63a5\u516c\u5f0f\u6cd5\uff1a\u5bf9\u4e8e2x2\u62163x3\u7684\u77e9\u9635\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7279\u5b9a\u7684\u516c\u5f0f\u6765\u8ba1\u7b97\u9006\u77e9\u9635\u3002 \u77e9\u9635\u6c42\u9006\u5728\u591a\u4e2a\u9886\u57df\u90fd\u6709\u5e94\u7528\uff0c\u6bd4\u5982\u5728\u89e3\u51b3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u3001\u5728\u7269\u7406\u5b66\u4e2d\u7684\u53d8\u6362\u3001\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u7684\u5750\u6807\u53d8\u6362\u7b49\u3002\u5b83\u662f\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff0c\u4e5f\u662f\u8bb8\u591a\u6570\u5b66\u548c\u5de5\u7a0b\u95ee\u9898\u7684\u57fa\u7840\u3002</p> </li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#_6","title":"\u77e9\u9635\u4e58\u6cd5\u89e3\u51b3\u5b9e\u9645\u95ee\u9898","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#_7","title":"\u5728\u56fe\u8bba\u4e2d","text":"<p>\u8bbe\u73b0\u5728\u6709\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\\(A\\)\u3002</p> <p>\u90a3\u4e48\\(A^k\\)\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\uff08\u4e24\u4e2a\u70b9\u4e4b\u95f4\u82e5\u6709\u8fb9\u5219\\(A[u][v]=1\\)\uff09</p> <p>\u4ece\\(floyd\\)\u7b97\u6cd5\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u4e0d\u96be\u53d1\u73b0\\(A^k\\)\u7684\u7b2c\\(i\\)\u884c\u7b2c\\(j\\)\u5217\u7684\u6570\u5b57\u542b\u4e49\u662f\u4ece\\(i\\)\u5230\\(j\\)\u7ecf\u8fc7\\(k\\)\u6b65\u7684\u8def\u5f84\u65b9\u6848\u603b\u6570\u3002</p> <p>[TJOI2017] \u53ef\u4e50\uff08\u6570\u636e\u52a0\u5f3a\u7248\uff09</p> <p>\u52a0\u91cc\u6566\u661f\u7403\u7684\u4eba\u4eec\u7279\u522b\u559c\u6b22\u559d\u53ef\u4e50\u3002\u56e0\u800c\uff0c\u4ed6\u4eec\u7684\u654c\u5bf9\u661f\u7403\u7814\u53d1\u51fa\u4e86\u4e00\u4e2a\u53ef\u4e50\u673a\u5668\u4eba\uff0c\u5e76\u4e14\u653e\u5728\u4e86\u52a0\u91cc\u6566\u661f\u7403\u7684 \\(1\\) \u53f7\u57ce\u5e02\u4e0a\u3002\u8fd9\u4e2a\u53ef\u4e50\u673a\u5668\u4eba\u6709\u4e09\u79cd\u884c\u4e3a\uff1a \u505c\u5728\u539f\u5730\uff0c\u53bb\u4e0b\u4e00\u4e2a\u76f8\u90bb\u7684\u57ce\u5e02\uff0c\u81ea\u7206\u3002\u5b83\u6bcf\u4e00\u79d2\u90fd\u4f1a\u968f\u673a\u89e6\u53d1\u4e00\u79cd\u884c\u4e3a\u3002\u73b0\u5728\u7ed9\u52a0\u91cc\u6566\u661f\u7403\u57ce\u5e02\u56fe\uff0c\u5728\u7b2c \\(0\\) \u79d2\u65f6\u53ef\u4e50\u673a\u5668\u4eba\u5728 \\(1\\) \u53f7\u57ce\u5e02\uff0c\u95ee\u7ecf\u8fc7\u4e86 \\(t\\) \u79d2\uff0c\u53ef\u4e50\u673a\u5668\u4eba\u7684\u884c\u4e3a\u65b9\u6848\u6570\u662f\u591a\u5c11\uff1f</p> <p>\u8f93\u51fa\u53ef\u4e50\u673a\u5668\u4eba\u7684\u884c\u4e3a\u65b9\u6848\u6570\uff0c\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u8bf7\u8f93\u51fa\u5bf9 \\(2017\\) \u53d6\u6a21\u540e\u7684\u7ed3\u679c\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c \\(n,m\\leq 100\\) \uff0c $ t\\leq 10^9$ .</p> <p>\u8fd9\u9053\u9898\u6211\u4eec\u53ef\u4ee5\u4ece**\u90bb\u63a5\u77e9\u9635**\u7684**\u5e42**\u7684\u610f\u4e49\u8003\u8651\u3002</p> <p>\u8bbe\u73b0\u5728\u6709\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\\(A\\)\u3002</p> <p>\u90a3\u4e48\\(A^k\\)\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\uff08\u4e24\u4e2a\u70b9\u4e4b\u95f4\u82e5\u6709\u8fb9\u5219\\(A[u][v]=1\\)\uff09</p> <p>\u4ece\\(floyd\\)\u7b97\u6cd5\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u4e0d\u96be\u53d1\u73b0\\(A^k\\)\u7684\u7b2c\\(i\\)\u884c\u7b2c\\(j\\)\u5217\u7684\u6570\u5b57\u542b\u4e49\u662f\u4ece\\(i\\)\u5230\\(j\\)\u7ecf\u8fc7\\(k\\)\u6b65\u7684\u8def\u5f84\u65b9\u6848\u603b\u6570\u3002</p> <p>\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u8003\u8651\uff0c\u8fd9\u4e2a\u70b9\u5c31\u6709\u4e86\u4e00\u79cd\u505a\u6cd5\u3002</p> <p>\u9996\u5148\u5c06\u8fd9\u4e2a\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u5efa\u51fa\u6765\uff0c\u7136\u540e\u76f4\u63a5\u7b97\u8fd9\u4e2a\u77e9\u9635\u7684\\(k\\)\u6b21\u65b9\u3002</p> <p>\u6700\u540e\u7edf\u8ba1\\(\\sum\\limits_{i=1}^{n}A[1][i]\\)\u5c31\u662f\u7b54\u6848\u3002</p> <p>\u505c\u7559</p> <p>\u5728\u539f\u5730\u505c\u7559\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u8981\u8ba4\u4e3a\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u4ece\u81ea\u5df1\u5230\u81ea\u5df1\u7684\u81ea\u73af\u5373\u53ef\u3002</p> <p>\u81ea\u7206</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u81ea\u7206\u8fd9\u4e2a**\u72b6\u6001**\u4e5f\u770b\u6210\u4e00\u4e2a**\u57ce\u5e02**\uff0c\u5c31\u8bbe\u5b83\u4e3a\u7f16\u53f7\\(0\\)\u3002</p> <p>\u6211\u4eec\u5728\u90bb\u63a5\u77e9\u9635\u4e0a\u4ece\u6bcf\u4e2a\u70b9\u90fd\u5411\u8fd9\u4e2a\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u4e2a\u70b9\u9664\u4e86\u81ea\u5df1\u5916\u4e0d\u8fde\u5176\u4ed6\u51fa\u8fb9\u3002</p> <p>\u8fd9\u6837\u5c31\u6ee1\u8db3\u4e86\u4efb\u4f55\u4e00\u4e2a\u70b9\u968f\u65f6\u53ef\u4ee5\u81ea\u7206\uff0c\u4e14\u65e0\u6cd5\u6062\u590d\u5230\u5176\u4ed6\u72b6\u6001\u3002</p> <p>\u6700\u540e\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\\(Ans=\\sum\\limits_{i=0}^{n}A[1][i]\\)</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n\n\nconst int N = 100 + 5;\nconst int M = 40;\nconst int INF = 1e16 + 5;\nconst int MOD = 2010 + 7;\n\nint t,m,n;\n\nstruct node {\n    int a[N][N];\n    node() {\n        memset(a,0,sizeof a); //\u4e00\u5b9a\u8981\u5199\uff01\n    }\n}c;\n\nvoid add(int u,int v){\n    c.a[u][v]=c.a[v][u]=1;  \n\n}\n\nnode f(node a,node b) {\n    node x;\n    for(int k=0; k&lt;=n; k++)\n        for(int i=0; i&lt;=n; i++) {\n            for(int j=0; j&lt;=n; j++)x.a[i][j]=(x.a[i][j]+a.a[i][k]*b.a[k][j]%MOD)%MOD;\n        }\n    return x;\n}\nnode ksm(node c,int k) {\n    node res;\n    for(int i=0; i&lt;=n; i++)res.a[i][i]=1;\n\n    while(k) {\n        if(k&amp;1) {\n            res=f(res,c);\n        }\n        c=f(c,c);\n        k&gt;&gt;=1;\n    }\n    return res;\n}\n\nint ans;\nsigned main(){\n    n=rd;m=rd;\n    for(int i=1;i&lt;=m;i++){\n        int u=rd,v=rd;\n        add(u,v);\n    }\n    t=rd;\n\n    for(int i=0;i&lt;=n;i++){\n        c.a[i][i]=1;//\u5efa\u7acb\u81ea\u73af\uff0c\u5373\u4e0d\u52a8\u7684\u60c5\u51b5\n    }\n    for(int i=1;i&lt;=n;i++)c.a[i][0]=1;//\u5efa\u7acb\u5355\u5411\u8fb9\u52300\u8282\u70b9\u8868\u793a\u81ea\u7206\n\n    node res=ksm(c,t);//\u5feb\u901f\u5e42\u6c42\u77e9\u9635\u4e58\u6cd5\n    for(int i=0;i&lt;=n;i++){\n        (ans+=res.a[1][i])%=MOD;//\u7edf\u8ba1\u7b54\u6848\n    }\n    write(ans),putchar('\\n');//\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n/*\n1\n2 5 1 \n0 0 1 \n0 0 4 \n\n*/\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#_8","title":"\u5728\u9012\u63a8\u4e0e\u53d8\u6362\u4e2d | \u77e9\u9635\u7684\u7ed3\u5408\u5f8b\u5e94\u7528","text":"<p>P5550 Chino\u7684\u6570\u5217</p> <p>\u6ca1\u6709\u80cc\u666f\uff0c\u6211\u5199\u4e0d\u51fa\u6765\u4e86qwq</p> <p>Chino\u53ef\u53ef\u7231\u7231\u6d85\uff01</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>Chino\u7ed9\u5b9a\u4e86\\(n\\)\u4e2a\u6570\\(a_1...a_n\\)\uff0c\u7ed9\u5b9a\u5e38\u6570\\(s,m\\)\uff0c\u5979\u4f1a\u8f6e\u6d41\u5bf9\u8fd9\\(n\\)\u4e2a\u6570\u505a\\(k\\)\u7ec4\u64cd\u4f5c\uff0c\u6bcf\u7ec4\u64cd\u4f5c\u5305\u542b\u4ee5\u4e0b\u4e24\u6b65\uff1a</p> <p>\\(1.swap(a_s,a_m)\\)(\u4ea4\u6362\\(a_s\\),\\(a_m\\))</p> <p>\\(2.\\)\u5c06\\(n\\)\u4e2a\u6570\u90fd\u5411\u524d\u5e73\u79fb\u4e00\u4f4d(\u7b2c\\(1\\)\u4e2a\u79fb\u52a8\u5230\u7b2c\\(n\\)\u4e2a\u4f4d\u7f6e\u4e0a)</p> <p>Chino\u60f3\u77e5\u9053\uff0c\\(k\\)\u7ec4\u64cd\u4f5c\u540e\uff0c\u8fd9\\(n\\)\u4e2a\u6570\u5206\u522b\u662f\u591a\u5c11\uff1f</p> <p>\u5bf9\u4e8e\\(100\\%\\)\u7684\u6570\u636e\uff0c\\(1 \\leq n \\leq 80\\)\uff0c\\(1 \\leq s &lt; m\\leq n\\)\uff0c\\(1 \\leq k \\leq 10^{18}\\)</p> <p>\u6240\u6709\u6570\u5b57\u5747\u5728\\(long~ long\\)\u4ee5\u5185</p> <p>\u6211\u4eec\u8981\u6784\u5efa\u77e9\u9635\u6765\u5feb\u901f\u8f6c\u79fb\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u6837\u6784\u5efa\u77e9\u9635\u5462\uff1f\u5bf9\u4e8e\u64cd\u4f5c\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u77e9\u9635\\(a_{i,i}=1\\)\uff0c\u4f46\u662f\\(a_{s,m}=a_{m,s}=1,a_{s,s}=a_{m,m}=0\\)\uff0c\u7136\u540e\u77e9\u9635\u5feb\u901f\u5e42\u8f6c\u79fb\u5c31\u884c\u4e86\u3002</p> <p>\u5bf9\u4e8e\u64cd\u4f5c2\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6784\u5efa\u77e9\u9635\\(b_{i,i+1}=1\\),\u5bf9\u4e8e\\(i=n,b_{n,1}=1\\)\u7136\u540e\u77e9\u9635\u5feb\u901f\u5e42\u8f6c\u79fb\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5206\u5f00\u7684\u60c5\u51b5\u53ef\u4ee5\u5904\u7406\u4e86\uff0c\u6211\u4eec\u600e\u4e48\u6837\u628a\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e00\u8d77\u8f6c\u79fb\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u77e9\u9635\u662f\u6ee1\u8db3\u7ed3\u5408\u5f8b\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8ba9\u5feb\u901f\u5e42\u4e2d\u8f6c\u79fb\u7684\\(base=a\\times b\\)\u5c31\u53ef\u4ee5\u5566\uff01</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=105,MOD=1e9+7;\nint n,k,s,m;\nstruct node {\n    int a[88][88];\n    node() {\n        memset(a,0,sizeof a); //\u4e00\u5b9a\u8981\u5199\uff01\n    }\n}a,b,c;\n\nnode f(node a,node b) {\n    node x;\n    for(int k=1; k&lt;=n; k++)\n        for(int i=1; i&lt;=n; i++) {\n            for(int j=1; j&lt;=n; j++)x.a[k][i]=(x.a[k][i]+a.a[j][i]*b.a[k][j]%MOD)%MOD;\n        }\n    return x;\n}\nnode ksm(node base) {\n    node res,c=base;\n    for(int i=1; i&lt;=n; i++)res.a[i][i]=1;\n\n    while(k) {\n        if(k&amp;1) {\n            res=f(res,c);\n        }\n        c=f(c,c);\n        k&gt;&gt;=1;\n    }\n    return res;\n}\n\nsigned main() {\n    cin&gt;&gt;n&gt;&gt;s&gt;&gt;m&gt;&gt;k;\n    for(int i=1;i&lt;=n;i++)cin&gt;&gt;c.a[i][1];\n    for(int i=1;i&lt;=n;i++)if(i!=s&amp;&amp;i!=m)a.a[i][i]=1;\n    a.a[s][m]=1;a.a[m][s]=1;\n    for(int i=1;i&lt;=n-1;i++)b.a[i][i+1]=1;\n    b.a[n][1]=1;\n\n    node base=f(a,b);\n    node res;\n    res=ksm(base);\n    c=f(c,res);\n    for(int i=1;i&lt;=n;i++)cout&lt;&lt;c.a[i][1]&lt;&lt;' ';\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#_9","title":"\u5728\u9012\u63a8\u4e0e\u53d8\u6362\u4e2d | \u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\u5e94\u7528","text":"<p>[GZOI2017] \u6cb3\u795e</p> <p>\u7ed9\u51fa\u6570\u5217 \\(\\{a_n\\}\\) \u548c \\(\\{b_n\\}\\) \u4ee5\u53ca \\(\\{A_n\\}\\) \u7684\u9012\u63a8\u5173\u7cfb, \u8bd5\u6c42\u51fa\u6570\u5217 \\(\\{A_n\\}\\) \u7b2c \\(N\\) \u9879.</p> <p>\u9012\u63a8\u5173\u7cfb\u4e3a:</p> <p>\\(A_n=\\begin{cases}a_n  &amp;  0 \\le n &lt; K \\\\ \\bigoplus (A_{n-K+t} \\otimes b_t) &amp; n \\ge K \\end{cases}\\)</p> <p>\u5176\u4e2d\uff0c\\(\\otimes\\) \u8868\u793a\u4e0e\u64cd\u4f5c\uff0c\\(\\oplus\\) \u8868\u793a\u6216\u64cd\u4f5c\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f \\([a_1,a_2,\\dots,a_{K-1}]\u2192[\\dots,A_n]\\)\u7684\u95ee\u9898\uff0c\u5ffd\u75650\u2264n&lt;K\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u53ea\u4e0d\u8fc7\u662f\u8868\u793a\u6570\u7ec4\u7684\u521d\u59cb\u503c\u3002</p> <p>\u8003\u8651\u7528\u77e9\u9635\u5feb\u901f\u5e42\u6765\u89e3\u51b3\uff0c\u6b64\u5904\u6211\u4eec\u66f4\u6539\u77e9\u9635\u4e58\u6cd5\u7684\u5b9a\u4e49\uff1a\u5c06\u539f\u672c\u7684\u4e58\u6cd5\u6539\u4e3a\u6309\u4f4d\u4e0e\uff0c\u539f\u672c\u7684\u52a0\u6cd5\u6539\u4e3a\u6309\u4f4d\u6216\u3002\u90a3\u4e48\u56e0\u4e3a\u662f\u4f4d\u8fd0\u7b97\uff0c\u6240\u4ee5\u5728\u5feb\u901f\u5e42\u4e2d\u7684\u57fa[a_{i,i}=1]\u5c31\u5e94\u8be5\u53d8\u6210\\([a_{i,i}=\\text{Bbase}=(111\\dots111)_2]\\)</p> <p>\\(\\begin{bmatrix} a_{n-1} &amp; a_{n-2} &amp;\\dots &amp;a_{n-k}\\end{bmatrix} \\times \\begin{bmatrix} b_1 &amp;\\text{Bbase} &amp;0 &amp; \\dots &amp; 0 \\\\ b_{2} &amp; 0 &amp; \\text{Bbase} &amp; \\dots &amp; 0 \\\\b_3 &amp; 0 &amp; 0 &amp; \\dots &amp; 0 \\\\ \\dots &amp; \\dots &amp; \\dots &amp; \\dots &amp; \\dots \\\\ b_{k-1} &amp; 0 &amp; 0 &amp; \\dots &amp; \\text{Bbase}\\\\ b_k &amp; 0 &amp; 0 &amp; \\dots &amp; 0\\end{bmatrix}=\\begin{bmatrix} a_n &amp; a_{n-1} &amp;\\dots &amp;a_{n-k+1}\\end{bmatrix}\\)</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ull unsigned long long\n#define inf 0xffffffffffffffffull\nconst int N=205;\nint n,K,s,m;\nstruct node {\n    ull a[N][N];\n    node() {\n        memset(a,0,sizeof a); //\u4e00\u5b9a\u8981\u5199\uff01\n    }\n}c;\n\n\nnode f(node a,node b) {\n    node x;\n    for(int i=1; i&lt;=K; i++)\n        for(int j=1; j&lt;=K; j++) \n            for(int k=1; k&lt;=K; k++)\n                x.a[i][j]|=a.a[i][k]&amp;b.a[k][j];\n\n    return x;\n}\nnode ksm(node base,int k) {\n    node res,c=base;\n    for(int i=1; i&lt;=K; i++)res.a[i][i]=inf;\n\n    while(k) {\n        if(k&amp;1) {\n            res=f(res,c);\n        }\n        c=f(c,c);\n        k&gt;&gt;=1;\n    }\n    return res;\n}\n\null a[N],b[N];\null ans;\nsigned main() {\n    cin&gt;&gt;n&gt;&gt;K;\n    for(int i=1;i&lt;=K;i++)cin&gt;&gt;a[i];\n    for(int i=1;i&lt;=K;i++)cin&gt;&gt;b[i];\n\n    if(n&lt;=K){cout&lt;&lt;a[n]&lt;&lt;endl;return 0;}\n    for(int i=1;i&lt;=K;i++)c.a[i][1]=b[K-i+1];\n    for(int i=1;i&lt;=K;i++)c.a[i][i+1]=inf;\n\n    c=ksm(c,n-K+1);\n    for(int i=1;i&lt;=K;i++){\n        ans|=a[K-i+1]&amp;c.a[i][1];\n    }\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/#_10","title":"\u7279\u522b\u6ce8\u610f","text":"<p>\u5728\u201c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u201d\u4e2d\u6211\u4eec\u63a8\u5bfc\u51fa\u6765\u7684\u77e9\u9635\u548c\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\u7684\u77e9\u9635\u5b58\u5728\u6620\u5c04\u5173\u7cfb\u3002\u8fd9\u79cd\u5173\u7cfb\u4e0d\u662f\u4e00\u5b9a\u7684\uff01\u800c\u662f\u6839\u636e\u4f60\u5199\u7684\u77e9\u9635\u4e58\u6cd5\uff08\u5373\u91cd\u5b9a\u4e49<code>*</code>\uff09\u7684\u5199\u6cd5\u76f8\u5173\uff01</p> <p>\u5728Chino\u7684\u6570\u5217\u8fd9\u4e00\u9898\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u5c31\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u77e9\u9635\u4e58\u6cd5\uff0c\u5e76\u4e14\u8fd9\u79cd\u65b9\u6cd5\u8c8c\u4f3c\u66f4\u4f18\u79c0\uff0c\u56e0\u4e3a\u5176\u6070\u597d\u8ba9\u6211\u4eec\u63a8\u5bfc\u51fa\u6765\u7684\u77e9\u9635\u548c\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\u7684\u77e9\u9635\u4e00\u4e00\u5bf9\u5e94\u3002\u8bf7\u7406\u89e3\u548c\u5bf9\u6bd4\u4e0d\u540c\u4e58\u6cd5\u7684\u5199\u6cd5\u7684\u672c\u8d28\u548c\u533a\u522b\uff01</p> <p>\u4ee5\u4e0b\u7684\u77e9\u9635\u8f6c\u79fb\u65b9\u6cd5\u66f4\u52a0\u5e38\u7528\uff0c\u5bf9\u4e8e\u7f51\u7edc\u5e73\u53f0\u7b49\u3002</p> <pre><code>node f(node a,node b) {\n    node x;\n    for(int i=1; i&lt;=n; i++)\n        for(int j=1; j&lt;=n; j++) \n            for(int k=1; k&lt;=n; k++)\n                x.a[i][j]=(x.a[i][j]+a.a[i][k]*b.a[k][j]%MOD)%MOD;\n\n    return x;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/","title":"\u8d28\u6570\u7b5b\u6cd5","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/#_2","title":"\u5b9a\u4e49","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E7%AD%9B%E6%B3%95/#_3","title":"\u7b5b\u6cd5","text":"<p>\u4e00\u3001\u6734\u7d20\u7b5b\u6cd5</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u7b5b\u6389\u4ed6\u7684\u6240\u6709\u500d\u6570</p> <p>\u590d\u6742\u5ea6\uff1a2\u8981\u7b5bn / 2 \u6b21\uff0c3\u8981\u7b5bn / 3\u6b21\uff0c\u6240\u4ee5\u4e00\u5171\u8981\u7b5bn / 2 + n / 3 + \u2026n / n\uff0c\u4e5f\u5c31\u662f n * (1 / 2 + 1 / 3 + \u2026 + 1 / n)\u6b21\uff0c\u540e\u9762\u6c42\u548c\u662f\u8c03\u548c\u7ea7\u6570\uff0c\u5f53 n \u8db3\u591f\u5927\u65f6\uff0c\u7b49\u4e8elnn + c\uff0cc\u662f\u5e38\u6570,\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a logn * n.</p> <p>\u4e8c\u3001\u57c3\u6c0f\u7b5b\u6cd5</p> <p></p> <p>\u590d\u6742\u5ea6\uff1a\u8d28\u6570\u5b9a\u7406\uff1a1 - n \u4e2d\u8d28\u6570\u7684\u6570\u91cf\u662f n / lnn \u4e2a\uff0c\u6240\u4ee5\u57c3\u6c0f\u7b5b\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a n * loglog n\uff0c\u5f88\u63a5\u8fd1\u7ebf\u6027\u4e86\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint n,cnt,prime[100001],notprime[100001];\n\nvoid erat(int n){\n    for(int i=2;i&lt;=n;i++)\n    if(!notprime[i]){\n        prime[++cnt]=i;\n        for(int j=2;j&lt;=n/i;j++){\n            notprime[j*i]=1;\n        }\n    }\n}\nsigned main(){\n    cin&gt;&gt;n;\n    erat(n);\n    for(int i=1;i&lt;=cnt;i++)cout&lt;&lt;prime[i]&lt;&lt;' ';\n}\n</code></pre> <p>\u4e09\u3001\u7ebf\u6027\u7b5b</p> <p></p> <p>\u4f8b\u5982 \u5728\u57c3\u6c0f\u7b5b\u4e2d 6 \u4f1a\u88ab 2 \u548c 3 \u90fd\u7b5b\u4e00\u904d\uff0c\u589e\u52a0\u4e86\u590d\u6742\u5ea6</p> <p>\u4ee3\u7801\u4e2d\u4e24\u79cd\u60c5\u51b5\u7684\u89e3\u91ca\uff1a</p> <p>\u5f53 i % pj == 0 \u65f6\uff0c$p_j $\u4e00\u5b9a\u662f $i $ \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c\u56e0\u6b64 \\(p_j\\) \u4e00\u5b9a\u662f \\(p_j\\) * i \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u3002 \u5f53 i % pj != 0 \u65f6\uff0c\\(p_j\\) \u4e00\u5b9a\u5c0f\u4e8e $ i$ \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c\u56e0\u6b64 \\(p_j\\)\u4e00\u5b9a\u662f \\(p_j\\) * i \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u3002 \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014</p> <p>\u539f\u6587\u94fe\u63a5\uff1ahttps://blog.csdn.net/magnte/article/details/119805672</p> <p>\u4ee3\u7801\u5b9e\u73b0</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint n,cnt,prime[100001],notprime[100001];\n\nvoid oula(int n){\n    for(int i=2;i&lt;=n;i++){\n\n        if(!notprime[i]){\n            prime[++cnt]=i;\n            notprime[i]=i;\n        }\n        for(int j=1;j&lt;=cnt;j++){\n            if(prime[j]&gt;notprime[i]||prime[j]&gt;n/i)break;\n            notprime[i*prime[j]]=prime[j];\n        } \n    }\n}\nsigned main(){\n    cin&gt;&gt;n;\n    oula(n);\n    for(int i=1;i&lt;=cnt;i++)cout&lt;&lt;prime[i]&lt;&lt;' ';\n}\n</code></pre> <p>\u5f53<code>notprime[i] = i</code>\u65f6,\u8bf4\u660e<code>i</code>\u662f\u8d28\u6570,\u53cd\u4e4b\u5b58<code>i</code>\u7684\u6700\u5c0f\u8d28\u56e0\u5b50.</p> <p>i\u4ece \\(2 \\to n\\) \u9012\u589e, \u6bcf\u6b21\u5230\u8fbe\u4e00\u4e2a \\(i\\) ,  \u7b5b\u53bb\u6570 \\(i \\times p\\) (\u5373\u5c06<code>notprime[i*p]</code>\u8d4b\u503c\u4e3a<code>p</code>), \u5176\u4e2d \\(p\u2264notprime[i]\\) \u4e14\u4e3a\u8d28\u6570</p> <p></p> <p>\u4f18\u5316\u7b97\u6cd5</p> <p>\u4f8b\u9898</p> <p>\u3010\u6a21\u677f\u3011\u7ebf\u6027\u7b5b\u7d20\u6570 - \u6d1b\u8c37</p> <p>\u7b97\u6cd5</p> <p>\u3010\u7b97\u6cd5/\u6570\u8bba\u3011\u6b27\u62c9\u7b5b\u6cd5\u8be6\u89e3\uff1a\u8fc7\u7a0b\u8be6\u8ff0\u3001\u6b63\u786e\u6027\u8bc1\u660e\u3001\u590d\u6742\u5ea6\u8bc1\u660e_seh_sjlj\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N=1e8+5;\nint notprime[N],q;\nbool isprime[N]; // isprime[i]\u8868\u793ai\u662f\u4e0d\u662f\u7d20\u6570\nint prime[N]; // \u73b0\u5728\u5df2\u7ecf\u7b5b\u51fa\u7684\u7d20\u6570\u5217\u8868\nint n; // \u4e0a\u9650\uff0c\u5373\u7b5b\u51fa&lt;=n\u7684\u7d20\u6570\nint cnt; // \u5df2\u7ecf\u7b5b\u51fa\u7684\u7d20\u6570\u4e2a\u6570\n\nvoid euler()\n{\n    memset(isprime, true, sizeof(isprime)); // \u5148\u5168\u90e8\u6807\u8bb0\u4e3a\u7d20\u6570\n    isprime[1] = false; // 1\u4e0d\u662f\u7d20\u6570\n    for(int i = 2; i &lt;= n; +/ i\u4ece2\u5faa\u73af\u5230n\uff08\u5916\u5c42\u5faa\u73af\uff09\n    {\n        if(isprime[i]) prime[++cnt] = i;\n        // \u5982\u679ci\u6ca1\u6709\u88ab\u524d\u9762\u7684\u6570\u7b5b\u6389\uff0c\u5219i\u662f\u7d20\u6570\n        for(int j = 1; j &lt;= cnt &amp;&amp; i * prime[j] &lt;= n; ++j)\n        // \u7b5b\u6389i\u7684\u7d20\u6570\u500d\uff0c\u5373i\u7684prime[j]\u500d\n        // j\u5faa\u73af\u679a\u4e3e\u73b0\u5728\u5df2\u7ecf\u7b5b\u51fa\u7684\u7d20\u6570\uff08\u5185\u5c42\u5faa\u73af\uff09\n        {\n            isprime[i * prime[j]] = false;\n            // \u500d\u6570\u6807\u8bb0\u4e3a\u5408\u6570\uff0c\u4e5f\u5c31\u662fi\u7528prime[j]\u628ai * prime[j]\u7b5b\u6389\u4e86\n            if(i % prime[j] == 0) break;\n            // \u6700\u795e\u5947\u7684\u4e00\u53e5\u8bdd\uff0c\u5982\u679ci\u6574\u9664prime[j]\uff0c\u9000\u51fa\u5faa\u73af\n            // \u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u7ebf\u6027\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n        }\n    }\n}\n\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;q;\n    euler();\n    while(q--){\n        int k;\n        cin&gt;&gt;k;\n        cout&lt;&lt;prime[k]&lt;&lt;endl;\n    }\n}\n</code></pre> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/","title":"\u7ec4\u5408\u8ba1\u6570","text":"<ul> <li> <p>\u7ec4\u5408\u8ba1\u6570</p> </li> <li> <p>\u5eb7\u6258\u5c55\u5f00</p> </li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_1","title":"\u7ec4\u5408\u6570","text":"<p>\u4ecb\u7ecd\u7ec4\u5408\u6570\u76844\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u3002</p> <p>\u8463\u6653\u7b97\u6cd5\u7684\u4e2a\u4eba\u7a7a\u95f4-\u8463\u6653\u7b97\u6cd5\u4e2a\u4eba\u4e3b\u9875-\u54d4\u54e9\u54d4\u54e9\u89c6\u9891</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_2","title":"\u9012\u63a8\u6cd5\u6c42\u7ec4\u5408\u6570","text":"<p>\u9012\u63a8\u521d\u59cb\u503c</p> <p></p> <p>\u5f53\\(j=0\\)\u65f6\\(c(i,j)=1\\).</p> <p>\u6bcf\u4e2a\u6570\u7531\u5176\u4e0a\u65b9\u548c\u5de6\u4e0a\u65b9\u7684\u6570\u76f8\u52a0\u5f97\u6765\uff08\u6768\u8f89\u4e09\u89d2\uff09</p> <pre><code>void init(){\n    c[0][0]=1;//\u4ece0\u5f00\u59cb\uff01\n    for(int i=1;i&lt;=n;i++){\n        c[i][0]=1;\n        for(int j=1;j&lt;=n;j++){\n            c[i][j]=c[i-1][j]+c[i-1][j-1]%MOD;\n        }\n    }\n//  for(int i=0;i&lt;=10;i++){\n//      for(int j=0;j&lt;=i;j++){\n//          cerr&lt;&lt;c[i][j]&lt;&lt;' ';\n//      }\n//      cerr&lt;&lt;endl;\n//  }\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_3","title":"\u5feb\u901f\u5e42\u6c42\u7ec4\u5408\u6570","text":"<p>\u8003\u5bdf\u9898\u76ee\u8981\u6c42</p> <p></p> <p>\u590d\u4e60**\u4e58\u6cd5\u9006\u5143**\u76f8\u5173\u77e5\u8bc6\uff0c\u7406\u89e3\\(g[x]\\)\u7684\u542b\u4e49</p> <p></p> <p>\u590d\u4e60**\u8d39\u9a6c\u5c0f\u5b9a\u7406**\uff0c\u5f97\uff1a</p> <p>\u5728\\(p\\)\u4e3a\u8d28\u6570\u65f6\uff0c\\(a^{p-2}\\)\u5373\\(a\\)\u5728\u6a21\\(p\\)\u4e0b\u7684\u9006\u5143</p> <p>\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u5feb\u901f\u5e42\u6c42\\(a^{p-2}\\)\uff08\u4e5f\u5c31\u662f\u6c42\\((x!)^{-1}\\)\uff0c\u5f53\u7136\uff0c\\(x!\\)\u9700\u8981\u9012\u63a8\u6c42\u51fa\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\\(1!\\sim n!\\)\u7684\u9006\u5143\u5168\u90e8\u9884\u5904\u7406\u51fa\u6765\uff09</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#lucas","title":"Lucas\u5b9a\u7406\u6c42\u7ec4\u5408\u6570","text":"<p>\u65b9\u6cd5\uff1a</p> <p>\u9012\u63a8+\u5feb\u901f\u5e42\uff08\u5373\u4e0b\u65b9\u6807\u8bc6\u7684\u201c\u53ef\u4ee5\u76f4\u63a5\u6c42\u89e3\u201d\uff09</p> <p></p> <p>\u8bc1\u660e</p> <p></p> <p>\\(inv(x)\\)\u5c31\u662f\\(x\\)\u7684\u4e58\u6cd5\u9006\u5143</p> <p>\u6613\u8bc1\u3002</p> <p></p> <p>\u7531\u5f15\u74062\u5f97\uff0c\u5f53\\(i=1\\sim p-1\\)\u65f6\uff0c\u90fd\u6ee1\u8db3\u5f15\u74061\uff0c\u6c42\u548c\u65f6\u5168\u90e8\u7ea6\u6389\uff0c\u53ea\u5269\u4e0b\\(i=0\\)\u548c\\(i=p\\)\u4e24\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5206\u522b\u4ee3\u5165\uff0c\u5f97\u5230\u4e24\u4e2a\u5355\u9879\u5f0f\u4e3a\\(1\\)\u548c\\(x^p\\)</p> <p>\u6613\u8bc1\u3002</p> <p>\u8865\u5145</p> <p>\u8bf7\u5b66\u4e60**\u4e8c\u9879\u5f0f\u5b9a\u7406\uff01**</p> <p></p> <p>\u5728(2)\u4e2d\u4f7f\u7528\u4e86**\u5f15\u74062**</p> <p>\u4f7f\u7528\u7684\u65b9\u6cd5\u4e3a**\u6bd4\u8f83\u7cfb\u6570\u6cd5**</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=2e5+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,p,q,T,fac[N],ans;\n\nint ksm(int c,int k,int p) {\n//  p=p;\n    if(!c)return 0;\n    int res=1;\n    while(k){\n        if(k&amp;1)res=(res*c)%p;\n        c=(c*c)%p;k&gt;&gt;=1;\n    }\n    return res;\n}\n\nvoid comb_init(){\n    fac[0]=1;\n    for (int i=1;i&lt;=p;++i) fac[i]=fac[i-1]*i%p;\n}\n\nint inv(int x){\n\n    return ksm(x,p-2,p);//\u8bf7\u4fdd\u8bc1p\u4e3a\u8d28\u6570\n} \n\nint C(int n,int m){\n    if(n-m&lt;0)return 0;\n    //n==m\u65f6\u4e0d\u80fdrt 0 \n    return fac[n]*inv(fac[m])%p*inv(fac[n-m])%p;\n}\n\n\nint lucas(int n,int m){\n    if(n==p)return 0;\n    if(m==0)return 1;\n    return lucas(n/p,m/p)*C(n%p,m%p)%p;\n}\n\nsigned main(){\n\n    cin&gt;&gt;T;\n    while(T--){\n        cin&gt;&gt;n&gt;&gt;m&gt;&gt;p;comb_init();\n        cout&lt;&lt;lucas(n+m,n)&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_4","title":"\u9ad8\u7cbe\u5ea6&amp;\u7ebf\u6027\u7b5b\u6c42\u7ec4\u5408\u6570","text":"<p>\u80cc\u666f</p> <p></p> <p>\u5c0f\u6280\u5de7</p> <p></p> <p>\u539f\u7406</p> <p></p> <p>\u6211\u4eec\u5c06\\(C_n^m\\)\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u7136\u540e\u9010\u6b65\u7d2f\u4e58\u8fdb\\(C_n^m\\)</p> <p>\u4e4d\u4e00\u770b**\u7b2c2\u6b65**\u53ef\u80fd\u770b\u4e0d\u5230\uff0c\u8fd9\u91cc\u5c31\u4ecb\u7ecd\u4e00\u4e0b\uff1a</p> <p>\\(c[i]\\)\u7684\u521d\u59cb\u503c\u4e3a\\(1\\)\uff0c\u540e\u9762\u5c06\\(C_n^m\\)\u7684\u8d28\u56e0\u6570\u9010\u6b65\u6c42\u51fa\u6765\uff08\u4ece\u5c0f\u5230\u5927\uff09\uff0c\u5373\u904d\u5386\u8d28\u6570\u8868\u4ece\u5c0f\u5230\u5927\uff0c\u6c42\u51fa\u8d28\u6570\\(p_i\\)\u7684\u4e2a\u6570\\(n\\)\uff0c\u7136\u540e\u6307\u5411\\(n\\)\u6b21\u5c06\\(c[i]*=p_i\\)</p> <p>\u4ee3\u7801</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code by Ntsc .\n       . Love by  .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e4;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,ans,cnt,p,l;\nint prim[N],notp[N],b[N];\nint get(int n,int p){//\u8ba1\u7b97n!\u4e2d\u8d28\u6570p\u7684\u4e2a\u6570,\u6839\u636e\u516c\u5f0f \n    int s=0;\n    while(n)s+=n/p,n/=p;//point1 \n    return s;\n}\nint getc(int n,int m,int p){//\u8ba1\u7b97c_n^m\u4e2d\u8d28\u6570p\u7684\u4e2a\u6570 \n    return get(n,p)-get(m,p)-get(n-m,p);//\u5206\u5b50\u4e2dp\u7684\u4e2a\u6570-\u5206\u6bcd\u4e2dp\u7684\u4e2a\u6570 \n}\nvoid mul(int c[],int p,int &amp;l){//\u9ad8\u7cbe\u5ea6\u00d7\u5355\u7cbe\u5ea6 \n    int t=0;\n    for(int i=0;i&lt;l;i++){\n        t+=c[i]*p;\n        c[i]=t%10;\n        t/=10;\n    }\n    while(t){\n        l++;\n        c[l]=t%10;\n        t/=10;\n    }\n}\nvoid init(){//\u521d\u59cb\u5316\u7b5b\u8d28\u6570\u8868 \n    for(int i=2;i&lt;=N;i++){\n        if(!notp[i])prim[++cnt]=i;\n        for(int j=i;j&lt;N;j+=i)notp[j]=1;\n    }\n}\nsigned main(){\n    init();\n\n    cin&gt;&gt;n&gt;&gt;m; \n    int c[N],l=1;c[0]=1;\n    for(int i=1;i&lt;=cnt;i++){//\u904d\u5386\u6bcf\u4e00\u4e2a\u8d28\u6570 \n        int p=prim[i];\n        int s=getc(n,m,p);//\u6c42\u51fac_n^m\u4e2d\u8d28\u6570p\u7684\u4e2a\u6570\n        while(s--)mul(c,p,l) ;//\u5c06c\u4e58\u4e0ap,\u4e58n\u6b21 \n    } cout&lt;&lt;\"OK\"&lt;&lt;endl;\n    for(int i=l;i;i--)cout&lt;&lt;c[i];\n    return 0;\n}\n</code></pre> <pre><code>/*////////ACACACACACACAC///////////\n       . Code by Ntsc .\n       . Love by  .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e4+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,ans,cnt,p,l;\nint prim[M],notp[M],c[M];\nint get(int n,int p){//\u8ba1\u7b97n!\u4e2d\u8d28\u6570p\u7684\u4e2a\u6570,\u6839\u636e\u516c\u5f0f \n    int s=0;\n    while(n)s+=n/p,n/=p;//point1 \n    return s;\n}\nint getc(int n,int m,int p){//\u8ba1\u7b97c_n^m\u4e2d\u8d28\u6570p\u7684\u4e2a\u6570 \n    return get(n,p)-get(m,p)-get(n-m,p);//\u5206\u5b50\u4e2dp\u7684\u4e2a\u6570-\u5206\u6bcd\u4e2dp\u7684\u4e2a\u6570 \n}\nvoid mul(int c[],int p){//\u9ad8\u7cbe\u5ea6\u00d7\u5355\u7cbe\u5ea6 \n    int t=0;\n    for(int i=0;i&lt;l;i++){\n        t+=c[i]*p;\n        c[i]=t%10;\n        t/=10;\n    }\n    while(t){\n        l++;\n        c[l]=t%10;\n        t/=10;\n    }\n}\nvoid init(){//\u521d\u59cb\u5316\u7b5b\u8d28\u6570\u8868 \n    for(int i=2;i&lt;=N;i++){\n        if(!notp[i])prim[++cnt]=i;\n        for(int j=i;j&lt;=N;j+=i)notp[j]=1;\n    }\n}\nsigned main(){\n    init();\n\n    cin&gt;&gt;n&gt;&gt;m; \n    l=1;c[0]=1;\n    for(int i=1;i&lt;=cnt;i++){//\u904d\u5386\u6bcf\u4e00\u4e2a\u8d28\u6570 \n        int p=prim[i];\n        int s=getc(n,m,p);//\u6c42\u51fac_n^m\u4e2d\u8d28\u6570p\u7684\u4e2a\u6570\n        while(s--)mul(c,p) ;//\u5c06c\u4e58\u4e0ap,\u4e58n\u6b21 \n    } \n//  cout&lt;&lt;\"OK\"&lt;&lt;endl;\n    for(int i=l-1;i+1;i--)cout&lt;&lt;c[i];\n    cout&lt;&lt;endl&lt;&lt;\"cnt=\"&lt;&lt;cnt&lt;&lt;\" l=\"&lt;&lt;l&lt;&lt;endl;\n    for(int i=1;i&lt;=cnt;i++)cout&lt;&lt;prim[i]&lt;&lt;' '; \n    return 0;\n}\n</code></pre> <p>point1\uff1a</p> <p>\u6211\u4eec\u8981\u61c2\u5f97\u5c06</p> <p>\\(\\frac{n}{p^i}\\)</p> <p>\u8f6c\u5316\u4e3a</p> <p>\\(\\frac{\\frac{n}{p^{i-1}}}{p}\\)</p> <p>\u4ece\u800c\u9012\u63a8\uff0c\u4e0d\u9700\u8981\u8ba1\u7b97\\(p^i\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_5","title":"\u6807\u51c6\u51fd\u6570","text":"<pre><code>int C(int u, int v) { return fac[u] * inv[v] % P * inv[u - v] % P; }\n\nsigned main() {\n    fac[0] = 1;\n    for (int i = 1; i &lt;= N - 2; i++) fac[i] = (fac[i - 1] * i) % P;\n\n    inv[1] = 1, inv[0] = 1;  // att!\u5f53n=m\u65f6\u7279\u5224\uff0c\u7ec4\u5408\u4e3a1\n    for (int i = 2; i &lt;= N - 2; i++) inv[i] = ((P - P / i) * inv[P % i]) % P;\n    for (int i = 1; i &lt;= N - 2; i++) inv[i] = (inv[i] * inv[i - 1]) % P;\n  //...\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_6","title":"\u7ec4\u5408\u6570\u5b66\u5e38\u7528\u6a21\u578b","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_7","title":"\u9519\u6392\u5217","text":"<p>\u9519\u6392\u5217\uff0c\u53c8\u79f0\u4f5c\u5fb7\u5229\u514b\u96f7\u6392\u5217\uff0c\u662f\u6307\u4e00\u4e2a\u6392\u5217\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\u5728\u539f\u6765\u4f4d\u7f6e\u4e0a\u7684\u6392\u5217\u65b9\u5f0f\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e3\u4e2a\u5143\u7d20\u7684\u9519\u6392\u5217\u67092\u79cd\uff1a[2, 3, 1]\u548c[3, 1, 2]\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_8","title":"\u5706\u6392\u5217","text":"<p>\u5706\u6392\u5217\u662f\u6307\u5728\u4e00\u4e2a\u5706\u5468\u4e0a\u8fdb\u884c\u7684\u6392\u5217\uff0c\u7531\u4e8e\u5706\u7684\u65cb\u8f6c\u5bf9\u79f0\u6027\uff0c\u4e0d\u540c\u7684\u65cb\u8f6c\u88ab\u89c6\u4e3a\u76f8\u540c\u7684\u6392\u5217\u3002\u4f8b\u5982\uff0c\u5706\u5468\u4e0a3\u4e2a\u70b9\u7684\u5706\u6392\u5217\u53ea\u67092\u79cd\uff0c\u56e0\u4e3a\u6bcf\u79cd\u6392\u5217\u53ef\u4ee5\u901a\u8fc7\u65cb\u8f6c\u5f97\u5230\u53e6\u5916\u4e24\u79cd\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_9","title":"\u9e3d\u5de2\u539f\u7406","text":"<p>\u9e3d\u5de2\u539f\u7406\uff0c\u53c8\u79f0\u72c4\u5229\u514b\u96f7\u62bd\u5c49\u539f\u7406\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5982\u679c\u6709n\u4e2a\u9e3d\u5b50\u548cm\u4e2a\u9e3d\u5de2\uff0c\u4e14n &gt; m\uff0c\u90a3\u4e48\u81f3\u5c11\u6709\u4e00\u4e2a\u9e3d\u5de2\u91cc\u6709\u591a\u4e8e\u4e00\u4e2a\u9e3d\u5b50\u3002\u4f8b\u5982\uff0c\u5982\u679c\u670910\u4e2a\u82f9\u679c\u653e\u51659\u4e2a\u76d2\u5b50\u91cc\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a\u76d2\u5b50\u91cc\u6709\u4e0d\u6b62\u4e00\u4e2a\u82f9\u679c\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_10","title":"\u5bb9\u65a5\u539f\u7406","text":"<p>\u5bb9\u65a5\u539f\u7406\u662f\u4e00\u4e2a\u8ba1\u6570\u539f\u7406\uff0c\u7528\u4e8e\u8ba1\u7b97\u591a\u4e2a\u96c6\u5408\u7684\u5e76\u96c6\u7684\u5927\u5c0f\u3002\u5176\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5148\u52a0\u4e0a\u6bcf\u4e2a\u96c6\u5408\u7684\u5927\u5c0f\uff0c\u7136\u540e\u51cf\u53bb\u6bcf\u5bf9\u4ea4\u96c6\u7684\u5927\u5c0f\uff0c\u518d\u52a0\u4e0a\u4e09\u4e2a\u96c6\u5408\u4ea4\u96c6\u7684\u5927\u5c0f\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u4f8b\u5982\uff0c\u8ba1\u7b97\u4e09\u4e2a\u96c6\u5408A\u3001B\u3001C\u7684\u5e76\u96c6\u5927\u5c0f\uff0c\u516c\u5f0f\u4e3a\uff1a|A\u222aB\u222aC| = |A| + |B| + |C| - |A\u2229B| - |A\u2229C| - |B\u2229C| + |A\u2229B\u2229C|\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_11","title":"\u5361\u7279\u5170\u6570","text":"<p>\u5361\u7279\u5170\u6570 - OI Wiki</p> <p></p> <pre><code>    c[1]=c[0]=1;\n    for(int i=1;i&lt;=n;i++)c[i]=c[i-1]*(4*i-2)/(i+1);\n</code></pre> <p>www.luogu.com.cn</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/#_12","title":"\u4f8b\u9898","text":"<p>www.luogu.com.cn</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BE%A4%E8%AE%BA/","title":"\u7fa4\u8bba","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E7%BE%A4%E8%AE%BA/#_2","title":"\u7f6e\u6362\u7fa4","text":"<p>\u7f6e\u6362\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217a\uff0c\u5c06a\u91cd\u65b0\u6392\u5217\u540e\u4e00\u4e00\u6620\u5c04\u5373\u4e3a\u7f6e\u6362</p> <p>\u5faa\u73af\u7f6e\u6362\uff1a\u5c06\u5e8f\u5217a\u6574\u4f53\u5411\u53f3\u5e73\u79fb1\u4f4d\u540e\u4e00\u4e00\u6620\u5c04\u3002</p> <p>\u4efb\u610f\u4e00\u4e2a\u7f6e\u6362\u90fd\u53ef\u4ee5\u62c6\u5206\u6210\u82e5\u5e72\u4e2a\u5faa\u73af\u7f6e\u6362\u7684\u4e58\u79ef\uff08\u4e58\u79ef\uff1a\u8bbe\u4e24\u4e2a\u7f6e\u6362\u6620\u5c04\u4e3af(x),g(x)\uff0c\u8fd9\u5176\u4e58\u79ef\u4e3ag(f(x))\uff09</p> <p>\u5176\u5b9e\u662f\u5e9f\u8bdd\uff0c\u56e0\u4e3a\u5faa\u73af\u7f6e\u6362\u592a\u7279\u6b8a\u5566\uff01</p> <p>\u7f6e\u6362\u7fa4\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217a\uff0c\u5176\u6240\u6709\u7f6e\u6362\u6709n!\u79cd\uff0c\u9009\u62e9\u5176\u4e2d\u82e5\u5e72\u79cd\u5373\u4e3a\u4e00\u4e2a\u7f6e\u6362\u7fa4\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E7%BE%A4%E8%AE%BA/#polya","title":"Polya\u5b9a\u7406","text":"<p>Burnside\u5f15\u7406\uff1a\u6bcf\u4e2a\u7f6e\u6362\u7684**\u4e0d\u52a8\u70b9**\u4e2a\u6570\u7684\u5e73\u5747\u503c\u5c31\u662f\u4e0d\u540c\u65b9\u6848\u6570\u3002</p> <p>Polya\u5b9a\u7406\uff1a\u5047\u8bbe\u6709\u4e00\u4e2a\u7f6e\u6362\u53ef\u4ee5\u62c6\u6210k\u4e2a\u5faa\u73af\uff0c\u6bcf\u4e2a\u5faa\u73af\u6709c\u79cd\u9009\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7f6e\u6362\u7684\u4e0d\u52a8\u70b9\u7684\u4e2a\u6570\u5c31\u662fc^k</p> <p>std</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n#define ps second\n#define pf first\n\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int N=2e5+5;\nconst int M=5e5+5;\nconst int INF=1e9+5;\nconst int MOD=1e9+7;\nbool f1;\nint m,k,n,qzh;\n\nint q;\nint T,mn=INF,ans;\n\nint ksm(int a,int b){ \n    int res=1;\n    while(b){\n        if(b&amp;1)res=(res*a)%MOD;\n        a=(a*a)%MOD;\n        b&gt;&gt;= 1;\n    }\n    return res;\n}\n\nint euler(int n) { //\u6b27\u62c9\u51fd\u6570\n    int res=1;\n    for(int i=2; i*i&lt;=n; i++)\n        if(n%i==0) {\n            n/=i,res=res*(i-1);\n            while(n%i==0) n/=i,res=res*i;\n        }\n    if(n&gt;1) res=res*(n-1);\n    return res;\n}\n\nint polya(int m,int n) {\n    int tot=0;\n    for(int i=1; i*i&lt;=n; i++) {\n        if(n%i) continue;\n        tot+=euler(i)*ksm(m,n/i-1);\n        if(i*i!=n) tot+=euler(n/i)*ksm(m,i-1);\n    }\n    return tot%MOD;\n}\n\nsigned main(){\n    int t=rd;\n    while(t--){\n        int n=rd;\n        cout&lt;&lt;polya(n,n)&lt;&lt;endl;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/","title":"\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#1-poi2007-zap-queries","title":"\u4f8b\u9898 #1 [POI2007] ZAP-Queries","text":"<p>\u5bc6\u7801\u5b66\u5bb6\u6b63\u5728\u5c1d\u8bd5\u7834\u89e3\u4e00\u79cd\u53eb BSA \u7684\u5bc6\u7801\u3002</p> <p>\u4ed6\u53d1\u73b0\uff0c\u5728\u7834\u89e3\u4e00\u6761\u6d88\u606f\u7684\u540c\u65f6\uff0c\u4ed6\u8fd8\u9700\u8981\u56de\u7b54\u8fd9\u6837\u4e00\u79cd\u95ee\u9898\uff1a</p> <p>\u7ed9\u51fa \\(a,b,d\\)\uff0c\u6c42\u6ee1\u8db3 \\(1 \\leq x \\leq a\\)\uff0c\\(1 \\leq y \\leq b\\)\uff0c\u4e14 \\(\\gcd(x,y)=d\\) \u7684\u4e8c\u5143\u7ec4 \\((x,y)\\) \u7684\u6570\u91cf\u3002</p> <p>\u56e0\u4e3a\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5b9e\u5728\u592a\u591a\u4e86\uff0c\u4ed6\u4fbf\u8fc7\u6765\u5bfb\u6c42\u4f60\u7684\u5e2e\u52a9\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 \\(n\\)\uff0c\u4ee3\u8868\u8981\u56de\u7b54\u7684\u95ee\u9898\u4e2a\u6570\u3002</p> <p>\u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 \\(a,b,d\\)\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff0c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\u4ee3\u8868\u7b54\u6848\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#_2","title":"\u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a","text":"<p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(1 \\leq n \\leq 5 \\times 10^4\\)\uff0c\\(1 \\leq d \\leq a,b \\leq 5 \\times 10^4\\)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#_3","title":"\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570 &amp; \u53cd\u6f14","text":"<p>\u6458\u81ea\u5b66\u4e60\u7b14\u8bb0 | \u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14</p> <p>\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570</p> <p>\\(\\mu(x)=\\begin{cases}0 &amp;\\exist d_i\\geq 1 \\\\(-1)^k &amp; \\forall d_i=1\\end{cases}\\)</p> <p>\u6027\u8d28\uff1a\u8bb0\\(s(n)=\\sum\\limits_{i|n}\\mu(i)\\)</p> <p>\u6709\\(s(x)=\\begin{cases}0 &amp;n&gt;1\\\\1 &amp;n=1\\end{cases}\\)</p> <p>\u8bc1\u660e\uff1a\u8003\u8651n\u7684\u7ea6\u6570i\u3002\u6839\u636e\u5b9a\u4e49\uff0c\u5c06\u8d28\u56e0\u6570\u5206\u89e3\u540e\u5f97\u5230\u8d28\u6570\u4e3a\\(d_i\\)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\\(d_i\\)\u8981\u4e48\u662f1\u8981\u4e48\u662f0\u7684\u60c5\u51b5\u3002\u5e76\u4e14\u5982\u679cd\u4e2d\u6709\u5947\u6570\u4e2a1\uff0c\u5219\\(\\mu(i)\\)\u4e3a-1\uff0c\u5426\u5219\u4e3a1\u3002\u53ef\u4ee5\u8bc1\u660es(n)=0\u3002n=1\u65f6\u4e3a\u7279\u4f8b\u3002</p> <p>\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u5b9a\u7406</p> <p>\u5b9a\u4e49\u5728\u6b63\u6574\u6570\u57df\u7684\u51fd\u6570</p> <p>\\(F(n)=\\sum\\limits_{i|n}f(i)\\)\uff0c\u5219\\(f(n)=\\sum\\limits_{i|n}\\mu(i)F(\\frac{n}{i})\\)\u3002\u8fd9\u6837\u8bf4\u5982\u679c\u5bf9\u4e8e\u4e00\u9053\u6c42f(n)\u7684\u9898\u76ee\uff0c\u5176f(n)\u96be\u6c42\uff0c\u4f46\u662fF(n)\u597d\u6c42\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u8be5\u65b9\u7a0b\u3002</p> <p>\u8bc1\u660e\uff1a\uff08\u4e0b\u6587\u4e2d\\(g(x)\\)\u5373\\(F(x)\\)\uff09</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#2-haoi2011-problem-b","title":"\u4f8b\u9898 #2 [HAOI2011] Problem b","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5bf9\u4e8e\u7ed9\u51fa\u7684 \\(n\\) \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u6c42\u6709\u591a\u5c11\u4e2a\u6570\u5bf9 \\((x,y)\\)\uff0c\u6ee1\u8db3 \\(a \\le x \\le b\\)\uff0c\\(c \\le y \\le d\\)\uff0c\u4e14 \\(\\gcd(x,y) = k\\)\uff0c\\(\\gcd(x,y)\\) \u51fd\u6570\u4e3a \\(x\\) \u548c \\(y\\) \u7684\u6700\u5927\u516c\u7ea6\u6570\u3002</p> <p>\u601d\u8def</p> <p>\u9996\u5148\u662f\u5dee\u5206\u8f6c\u5316\uff0c\u5c06\u77e9\u5f62\u8f6c\u5316\u4e3a\u524d\u7f00\u548c</p> <p>\\(F(k)=\\sum\\limits_{x=1}^a\\sum\\limits_{y=1}^b [k|\\gcd(x,y)]\\)</p> <p>\\(f(k)=\\sum\\limits_{x=1}^a\\sum\\limits_{y=1}^b [k=\\gcd(x,y)]\\)\uff0c\u5373\u9898\u76ee\u8981\u6c42\u7684\u5185\u5bb9\u3002</p> <p>\u90a3\u4e48\\(F(n)=\\sum\\limits_{n|i}f(i)\\)</p> <p>\\(f(n)=\\sum\\limits_{n|i}\\mu(\\frac{i}{n})F(i)\\)</p> <p>\u53ef\u4ee5\u77e5\u9053\\(k|\\gcd(x,y)=k|x,k|y\\)\uff0c\u6545\\(F(k)=\\sum\\limits_{x=1}^a\\sum\\limits_{y=1}^b [k|\\gcd(x,y)]=\\lfloor \\frac{a}{k}\\rfloor\\times \\lfloor \\frac{b}{k}\\rfloor\\)</p> <p>\\(f(n)=\\sum\\limits_{n|i}\\mu(\\frac{i}{n})\\lfloor \\frac{a}{i}\\rfloor\\times \\lfloor \\frac{b}{i}\\rfloor\\)\uff0c\u4ee4\\(D=\\frac{i}{n}\\)\uff0c\u5219\\(f(n)=\\sum\\limits_{D}\\mu(D)\\lfloor \\frac{a}{Dn}\\rfloor\\times \\lfloor \\frac{b}{Dn}\\rfloor\\)\uff0ca,b,n\u90fd\u662f\u5b9a\u503c\uff0c\u53ea\u6709D\u662f\u53d8\u91cf\u3002</p> <p>\u8fd9\u91cc\u63d2\u64ad\u4e00\u4e2a\\(g(x)=k/(k/x)\\)\uff0c\u8868\u793a\u4ee5\\(\\lfloor \\frac{k}{x}\\rfloor\\)\u6574\u6570\u5206\u5757\uff0c\\(x\\)\u6240\u5728\u7684\u5757\u7684\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u3002<code>/</code>\u8868\u793ac++\u9664\u6cd5</p> <pre><code>/*\nCode by Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define ps second\n#define pf first\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N = 6e5+5;\nint mu[N],st[N];\nint n,cnt;\nint sum[N];\nint prime[N];\n\nvoid init(){\n    mu[1]=1;\n    for(int i=2;i&lt;N;i++){\n        if(!st[i])prime[++cnt]=i,mu[i]=-1;\n        for(int j=1;prime[j]*i&lt;N;j++){\n            st[prime[j]*i]=1;\n            if(!(i%prime[j]))break;\n            mu[prime[j]*i]=-mu[i];//\u6839\u636e\u5b9a\u4e49\u5076\u6b63\u5947\u8d1f\n        }\n    }\n\n    for(int i=1;i&lt;N;i++)sum[i]=sum[i-1]+mu[i];\n}\n\nint g(int k,int x){\n    return k/(k/x);\n}\n\nint f(int a,int b,int k){\n    a/=k,b/=k;\n    n=min(a,b);\n    int mn=min(a,b),res=0;\n    for(int l=1,r;l&lt;=n;l=r+1){\n        r=min(n,min(g(a,l),g(b,l)));\n        res+=(sum[r]-sum[l-1])*(a/l)*(b/l);\n    }\n    return res;\n}\n\nsigned main(){\n    init();\n    int T=rd;\n    while(T--){\n\n        int a=rd,b=rd,c=rd,d=rd,k=rd;\n        cout&lt;&lt;f(b,d,k)-f(a-1,d,k)-f(b,c-1,k)+f(a-1,c-1,k)&lt;&lt;endl;\n\n    }\n\n}\n</code></pre> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\u6ee1\u8db3\uff1a\\(1 \\le n,k \\le 5 \\times 10^4\\)\uff0c\\(1 \\le a \\le b \\le 5 \\times 10^4\\)\uff0c\\(1 \\le c \\le d \\le 5 \\times 10^4\\)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#3-sdoi2015","title":"\u4f8b\u9898 #3 [SDOI2015] \u7ea6\u6570\u4e2a\u6570\u548c","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u8bbe \\(d(x)\\) \u4e3a \\(x\\) \u7684\u7ea6\u6570\u4e2a\u6570\uff0c\u7ed9\u5b9a \\(n,m\\)\uff0c\u6c42 \\(\\sum_{i=1}^n\\sum_{j=1}^md(ij)\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#_4","title":"\u601d\u8def","text":"<p>\\(d(ij)=\\sum_{x|i}\\sum_{y|j}[\\gcd(x,y)=1]\\)\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u5f88\u91cd\u8981</p> <p>\u8bc1\u660e\uff1a</p> <p>\u8bbei\u8d28\u56e0\u6570\u5206\u89e3\u540e\u7684\u6307\u6570\u4e3a\\(a_i\\)\uff0cj\u8d28\u56e0\u6570\u5206\u89e3\u540e\u7684\u6307\u6570\u4e3a\\(b_i\\)\uff0c\u90a3\u4e48\u9996\u5148\u53ef\u4ee5\u77e5\u9053ij\u7684\u8d28\u56e0\u6570\u4e2a\u6570\u4e3a\\((a_1+b_1+1)(a_2+b_2+1)\\dots(a_k+b_k+1)\\)</p> <p></p> <p>\u6211\u4eec\u518d\u53d6ij\u7684\u4e00\u4e2a\u56e0\u6570s=xy\u6765\u8bf4\u3002\u5bf9\u4e8e\\(p_1\\)\uff0c\u4e3a\u4e86\u6ee1\u8db3x,y\u4e92\u8d28\uff0c\u5219\u5f53x\u53d6\\(p_1^i\\)\u65f6\uff0cy\u53ea\u80fd\u53d61\u3002\u76f8\u540c\u5730\uff0c\u5f53y\u53d6\\(p_1^i\\)\u65f6\uff0cx\u53ea\u80fd\u53d61\u3002\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u662f\u4e24\u8005\u90fd\u53d61\u3002\u90a3\u4e48\u5408\u8d77\u6765\u5c31\u6709\\(a_1+b_1+1\\)\u79cd\u53d6\u503c\u3002\u8fd9\u6070\u6070\u548c\u8ba1\u7b97\u8d28\u56e0\u6570\u4e2a\u6570\u7684\u5f0f\u5b50\u4e00\u6837\u4e86\u3002</p> <p></p> <p>\u5219\\(\\sum_{i=1}^n\\sum_{j=1}^md(ij)=\\sum_{i=1}^n\\sum_{j=1}^m\\sum_{x|i}\\sum_{y|j}[\\gcd(x,y)=1]\\)\u3002</p> <p>\u8bbe</p> <p>\\(f(q)=\\sum_{i=1}^n\\sum_{j=1}^m\\sum_{x|i}\\sum_{y|j}[q=\\gcd(x,y)]\\)</p> <p>\\(F(q)=\\sum\\limits_{q|d}f(d)\\)\uff0c\u5219\u6709\\(f(q)=\\sum\\limits_{q|d}\\mu(\\frac{d}{q})F(d)\\)</p> <p>\u63a8\u5bfc\uff1a</p> <p>\\(F(q)=\\sum_{i=1}^n\\sum_{j=1}^m\\sum_{x|i}\\sum_{y|j}[q|\\gcd(x,y)]\\\\=\\sum_{x=1}^n\\sum_{y=1}^m\\sum_{i=kx,k\\in\\Z}^n\\sum_{j=ky,k\\in\\Z}^m[q|\\gcd(x,y)]\\\\=\\sum_{x=1}^n\\sum_{y=1}^m\\lfloor\\frac{n}{x}\\rfloor\\lfloor\\frac{m}{y}\\rfloor[q|\\gcd(x,y)]\\)</p> <p>\u8bbe \\(x'=\\frac{x}{q},y'=\\frac{y}{q},n'=\\frac{n}{q},m'=\\frac{m}{q}\\)</p> <p>\u5219\u4e0a\u5f0f\u7b49\u4e8e</p> <p>\\(\\sum_{x'=1}^{n'}\\sum_{y'=1}^{m'}\\lfloor\\frac{n'}{x'}\\rfloor\\lfloor\\frac{m'}{y'}\\rfloor\\\\=(\\sum_{x'=1}^{n'}\\lfloor\\frac{n'}{x'}\\rfloor)(\\sum_{y'=1}^{m'}\\lfloor\\frac{m'}{y'}\\rfloor)\\)</p> <p>\u5b9a\u4e49 \\(h(n')=(\\sum_{x'=1}^{n'}\\lfloor\\frac{n'}{x'}\\rfloor)\\)</p> <p>\u5219 \\(F(q)=h(n')h(m')\\)</p> <p>\\(f(q)=\\sum\\limits_{d=1}^n \\mu(d)h(\\frac{n}{d})h(\\frac{m}{d})\\)\uff0c\u6574\u6570\u5206\u5757\u4f18\u5316\u5373\u53ef\u3002</p> <pre><code>/*\nCode by Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define ps second\n#define pf first\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N = 5e4+5;\nint mu[N],st[N];\nint e,cnt;\nint sum[N];\nint h[N];\nint prime[N];\n\nint g(int k,int x){\n    return k/(k/x);\n}\n\nvoid init(){\n    mu[1]=1;\n    for(int i=2;i&lt;N;i++){\n        if(!st[i])prime[++cnt]=i,mu[i]=-1;\n        for(int j=1;prime[j]*i&lt;N;j++){\n            st[prime[j]*i]=1;\n            if(!(i%prime[j]))break;\n            mu[prime[j]*i]=-mu[i];//\u6839\u636e\u5b9a\u4e49\u5076\u6b63\u5947\u8d1f\n        }\n    }\n\n    for(int i=1;i&lt;N;i++)sum[i]=sum[i-1]+mu[i];\n    for(int i=1;i&lt;N;i++){\n        for(int l=1,r;l&lt;=i;l=r+1){\n            r=min(i,g(i,l));\n            h[i]+=(r-l/l);\n        }\n    }\n}\n\nsigned main(){\n    // ios::sync_with_stdio(0);\n    // cin.tie(0);cout.tie(0);\n    init();\n    int T=rd;\n    while(T--){\n        int n=rd,m=rd;\n        int res=0;\n        int k=min(n,m);\n        for(int l=1,r;l&lt;=k;l=r+1){\n            r=min(min(g(n,l),g(m,l)),k);\n            res+=(sum[r]-sum[l-1])*h[n/l]*h[m/l];\n        }\n        cout&lt;&lt;res&lt;&lt;'\\n';\n    }\n\n}\n</code></pre> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le T,n,m \\le 50000\\)\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#4","title":"\u4f8b\u9898 #4 \u516c\u7ea6\u6570\u7684\u548c","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>\u6709\u4e00\u5929\uff0cTIBBAR \u548c LXL \u6bd4\u8d5b\u8c01\u5148\u7b97\u51fa \\(1 \\sim n\\) \u8fd9 \\(n\\) \u4e2a\u6570\u4e2d\u6bcf\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u7684\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u7684\u548c\u3002LXL \u8fd8\u5728\u6572\u4e00\u4e2a\u590d\u6742\u800c\u5197\u957f\u7684\u7a0b\u5e8f\uff0c\u4e89\u53d6\u80fd\u5728 \\(100s\\) \u5185\u51fa\u89e3\u3002\u800c TIBBAR \u5219\u76f4\u63a5\u60f3 \\(1s\\) \u79d2\u8fc7\u800c\u83b7\u5f97\u5b8c\u80dc\uff0c\u8bf7\u4f60\u5e2e\u4ed6\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u3002</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u5b9a \\(n\\)\uff0c\u6c42 \\(\\sum_{i = 1}^n \\sum_{j = i + 1}^n \\gcd(i, j)\\)</p> <p>\u5176\u4e2d \\(\\gcd(i, j)\\) \u8868\u793a \\(i\\) \u548c \\(j\\) \u7684\u6700\u5927\u516c\u7ea6\u6570\u3002</p> <ul> <li>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(2 \\leq n \\leq 2 \\times 10^6\\)\u3002</li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/","title":"\u8ba1\u7b97\u51e0\u4f55","text":"<p>\u51f8\u5305</p> <p>\u65cb\u8f6c\u5361\u58f3</p> <p>\u534a\u5e73\u9762\u4ea4</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0%E5%9F%BA%E7%A1%80/","title":"\u8d28\u6570\u57fa\u7840","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0%E5%9F%BA%E7%A1%80/#_2","title":"\u60df\u4e00\u5206\u89e3\u5b9a\u7406","text":"<p>\\(m=\\prod p_i^{l_i}\\)\uff0c\u5373\u8d28\u56e0\u6570\u5206\u89e3\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u79cd\u60c5\u51b5\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0%E5%9F%BA%E7%A1%80/#_3","title":"\u8d28\u56e0\u6570\u5206\u89e3","text":"<p>\u6bcf\u4e2a\u5408\u6570\u90fd\u53ef\u4ee5\u5199\u6210\u51e0\u4e2a\u8d28\u6570\u76f8\u4e58\u7684\u5f62\u5f0f\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8d28\u6570\u90fd\u662f\u8fd9\u4e2a\u5408\u6570\u7684\u56e0\u6570\uff0c\u628a\u4e00\u4e2a\u5408\u6570\u7528\u8d28\u56e0\u6570\u76f8\u4e58\u7684\u5f62\u5f0f\u8868\u793a\u51fa\u6765\uff0c\u53eb\u505a\u5206\u89e3\u8d28\u56e0\u6570\u3002\u598230=2\u00d73\u00d75 \u3002\u5206\u89e3\u8d28\u56e0\u6570\u53ea\u9488\u5bf9\u5408\u6570\u3002</p> <p>\u7b97\u6cd5\u5b9e\u73b0\uff1a</p> <ul> <li> <p>\u7b5b\u8d28\u6570\u8868</p> </li> <li> <p>\u4ece\u5c0f\u5230\u5927\u904d\u5386\u8d28\u6570\u8868\uff0c\u5f53\u53d1\u73b0i\u662fn\u7684\u56e0\u6570(n%i==0)\u65f6\u4e0d\u65ad\u628an\u9664\u4ee5i\u76f4\u5230\u4e0d\u5305\u542b\u56e0\u6570 \\(i(n\\%i!=0)\\)\uff0c\u540c\u65f6\u8bb0\u5f55i\u7684\u4e2a\u6570cnt[i]++</p> </li> <li> <p>\u7ed3\u675f\u6761\u4ef6 $ i^2&gt;n$ \uff08\u5f53 \\(i^2&gt;n\\) \u65f6\uff0c\u5047\u8bbe \\(i*j=n\\)\uff0c\u90a3\u4e48 \\(j\\) \u4e00\u5b9a\u5c0f\u4e8e<code>sqrt(n)</code>\uff0c\u4e00\u5b9a\u4f1a\u5728\u4e4b\u524d\u5c31\u88ab\u7b5b\u6389\uff09</p> </li> <li> <p>\u4e2d\u9014\u7ed3\u675f\u6761\u4ef6\uff1a\\(n=1\\)</p> </li> <li> <p>\u7ed3\u675f\u540e\u7279\u6b8a\u5224\u5b9a\uff1a\u5982\u679c\\(n\u22601\\)\uff0c\u90a3\u4e48\u6b64\u65f6 \\(n\\) \u4e5f\u662f\u539f\u6570\u7684\u4e00\u4e2a\u56e0\u6570\u3002\uff08\u8bf7\u8bf4\u660e\u4e3a\u4f55\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff09</p> </li> </ul> <p>\u7b97\u6cd5\u5b9e\u73b0</p> <pre><code>hole\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0%E5%9F%BA%E7%A1%80/#_4","title":"\u56e0\u6570\u4e2a\u6570","text":"<p>\u4e00\u4e2a\u6b63\u6574\u6570\u6570n\u7684\u6240\u6709\u7684\u7ea6\u6570\u4e2a\u6570\u7684\u4e00\u4e2a\u6bd4\u8f83\u5b9e\u7528\u7684\u4e0a\u754c\u662f\\(2\\sqrt n\\)\u3002</p> <p>\u4e00\u4e2a\u6570\u7684\u8d28\u56e0\u6570\u4e2a\u6570\u6bd4\u8f83\u677e\u7684\u4e0a\u9650\u662f\\(\\log_2x\\)</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%B4%A8%E6%95%B0%E5%9F%BA%E7%A1%80/#_5","title":"\u5355\u4e2a\u7d20\u6570\u5224\u5b9a\uff08\u7d20\u6027\u5224\u5b9a\uff09","text":"<p>\u53c2\u8003 Miller\u2013Rabin \u7d20\u6027\u6d4b\u8bd5</p> <p>www.luogu.com.cn</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%80%86%E5%85%83/","title":"\u4e58\u6cd5\u9006\u5143","text":"<p>\u82e5**\\(ax\u22611 \\pmod f\\), \u5219\u79f0a\uff08\u5173\u4e8e1\uff09\u6a21f\u7684\u4e58\u6cd5\u9006\u5143\u4e3ax\u3002\u4e5f\u53ef\u8868\u793a\u4e3a\\(ax\u22611\\pmod f\\)**\u3002</p> <p>\u5f53a\u4e0ef\u4e92\u7d20\u65f6\uff0ca\u5173\u4e8e\u6a21f\u7684\u4e58\u6cd5\u9006\u5143\u6709\u89e3\u3002\u5982\u679c\u4e0d\u4e92\u7d20\uff0c\u5219\u65e0\u89e3\u3002\u5982\u679cf\u4e3a\u7d20\u6570\uff0c\u5219\u4ece1\u5230f-1\u7684\u4efb\u610f\u6570\u90fd\u4e0ef\u4e92\u7d20\uff0c\u5373\u57281\u5230f-1\u4e4b\u95f4\u90fd\u6070\u597d\u6709\u4e00\u4e2a\u5173\u4e8e\u6a21f\u7684\u4e58\u6cd5\u9006\u5143\u3002</p> <p>\u5176\u6c42\u6cd5\u53ef\u7528**\u6b27\u51e0\u91cc\u5fb7\u7b97\u6cd5**\uff1a Extended Euclid (d\uff0cf) //\u7b97\u6cd5\u6c42d\u5173\u4e8e\u6a21f\u7684\u4e58\u6cd5\u9006\u5143d-1 \uff0c\u5373 d* d-1 mod f = 1 1 \u3002(X1\uff0cX2\uff0cX3) := (1\uff0c0\uff0cf)\uff1b (Y1\uff0cY2\uff0cY3) := (0\uff0c1\uff0cd) 2\u3002 if (Y3=0) then return d-1 = null //\u65e0\u9006\u5143 3\u3002 if (Y3=1) then return d-1 = Y2 //Y2\u4e3a\u9006\u5143 4\u3002 Q := X3 div Y3 //\u6574\u9664 5\u3002 (T1\uff0cT2\uff0cT3) := (X1 - Q*Y1\uff0cX2 - Q*Y2\uff0cX3 - Q*Y3) 6 \u3002(X1\uff0cX2\uff0cX3) := (Y1\uff0cY2\uff0cY3) 7\u3002 (Y1\uff0cY2\uff0cY3) := (T1\uff0cT2\uff0cT3) 8\u3002 goto 2</p> <pre><code>int x,p,a,n,y;\nvoid exgcd(int a,int b,int &amp;x,int &amp;y){\n    if(!b)x=1,y=0;\n    else exgcd(b,a%b,y,x),y-=a/b*x;\n}\nsigned main() {\n    scanf(\"%d%d\",&amp;n,&amp;p);\n    for(int i=1;i&lt;=n;i++){\n        exgcd(i,p,x,y);\n        x=(x%p+p)%p;\n        printf(\"%d\\n\",x);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%80%86%E5%85%83/#_2","title":"\u5b9a\u7406\u76f4\u63a5\u6c42","text":"<p>\u6c42\u6b64\u7b97\u6cd5\u8fd8\u53ef\u4ee5\u4f7f\u7528**\u8d39\u9a6c\u5c0f\u5b9a\u7406** \u53ea\u4e0d\u8fc7\u5c40\u9650\u6027\u6bd4\u8f83\u5927\uff0c\u8981\u6c42\u6a21\u6570\u662f\u7d20\u6570 \\(a^{p-1} =1\\pmod p\\) p\u8981\u6c42\u662f\u7d20\u6570 \u90a3\u4e48\\(a^{p-2}\\)\u5c31\u662fa\u7684\u4e58\u6cd5\u9006\u5143</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%80%86%E5%85%83/#_3","title":"\u7ebf\u6027\u9012\u63a8","text":"<p>\\(inv[i]=(p\u2212\u230a\\frac{i}{p}\u200b\u230b\u00d7inv[p\\%i]\\%p)\\%p\\)</p> <pre><code>inv[1]=1;\nfor(int i=2;i&lt;=n;i++){\n    inv[i]=(p-p/i)*inv[p%i]%p;\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/","title":"\u9ad8\u65af\u6d88\u5143","text":"<p>\u9ad8\u65af\u6d88\u5143</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#_1","title":"\u7ebf\u6027\u65b9\u7a0b\u7ec4 \u9ad8\u65af\u6d88\u5143\u6cd5","text":"<p>533 \u7ebf\u6027\u65b9\u7a0b\u7ec4 \u9ad8\u65af\u6d88\u5143\u6cd5_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>www.luogu.com.cn</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#_2","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u5bf9\u5176\u6c42\u89e3</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#_3","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7b2c\u4e00\u884c\uff0c\u4e00\u4e2a\u6b63\u6574\u6570 n</p> <p>\u7b2c\u4e8c\u81f3 n+1 \u884c\uff0c\u6bcf\u884c n+1 \u4e2a\u6574\u6570\uff0c\u4e3aa1\u200b,a2\u200b\u22efan\u200b \u548c b\uff0c\u4ee3\u8868\u4e00\u7ec4\u65b9\u7a0b\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#_4","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u5171 n \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6570\uff0c\u7b2c i \u884c\u4e3a xi\u200b \uff08\u4fdd\u7559 2 \u4f4d\u5c0f\u6570\uff09</p> <p>\u5982\u679c\u4e0d\u5b58\u5728\u552f\u4e00\u89e3\uff0c\u5728\u7b2c\u4e00\u884c\u8f93\u51fa <code>No Solution</code>.</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#_5","title":"\u94fa\u57ab","text":"<p>\u6211\u4eec\u5bf9\u65b9\u7a0b\u7ec4\u8fdb\u884c\u4ee5\u4e0a\u64cd\u4f5c\u3002\u7531\u65b9\u7a0b\u7ec4\u7279\u6027\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u53d8\u6362\u7ed3\u8bba\uff1a</p> <p></p> <p>\u4ee5\u4e0a\u4e09\u4e2a\u64cd\u4f5c\u90fd\u4e0d\u4f1a\u5bf9\u65b9\u7a0b\u7ec4\u7684\u89e3\u4ea7\u751f\u5f71\u54cd</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#_6","title":"\u9ad8\u65af\u6d88\u5143\u6cd5","text":"<p>\u6d88\u5143\uff0c\u61c2\u5427\uff1f</p> <p>e.g.</p> <p>\\(\\begin{cases}a_1x+b_1y=c_1\\\\a_2x+b_2y=c_2\\end{cases}\\)</p> <p>\u9488\u5bf9\u4ee5\u4e0a\uff0c\u6839\u636e\u521d\u7b49\u884c\u53d8\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e0b\u5f0f\u4e2d\u7684\\(a_2x\\)\u6d88\u53bb\uff08\u7528\\(\u4e0b\u5f0f-n \\times \u4e0a\u5f0f\\) \u5373\u53ef\uff09</p> <p>\u9012\u63a8\u5230\\(n\\)\u4e2a\u65b9\u7a0b\u7684\u65b9\u7a0b\u7ec4\uff0c\u4e5f\u662f\u4e00\u6837\u7684\u3002\u867d\u7136\u6211\u4eec\u53ef\u80fd\u4e0d\u80fd\u5c06\u4e24\u4e2a\u65b9\u7a0b\u6d88\u5230\u5355\u9879\u5f0f\u4e2a\u6570\u76f8\u540c\uff0c\u4f46\u6bcf\u4e2a\u4e4b\u95f4\u76f8\u5dee\u4e00\u4e2a\u662f\u4e00\u5b9a\u53ef\u4ee5\u505a\u5230\u7684\u3002</p> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u6d88\u53bb\u540e\u7684\u65b9\u7a0b\u7ec4\u7684\u6bcf\u4e00\u4e2a\u65b9\u7a0b\u7684\u7b2c\u4e00\u4e2a\u5355\u9879\u5f0f\uff08\u6211\u4eec\u628a\u8fd9\u4e2a\u5355\u9879\u5f0f\u91cc\u7684\u672a\u77e5\u6570\\(x\\)\u4f5c\u4e3a\u8fd9\u4e2a\u65b9\u7a0b\u7684\u4e3b\u5143\uff09\u7684\u7cfb\u6570\u5316\u4e3a\\(1\\).\u7136\u540e\u4ece\u4e0b\u5f80\u4e0a\uff0c\u4f9d\u6b21\u6c42\u89e3\u5e26\u5165\u4e0a\u9762\u4e00\u4e2a\u65b9\u7a0b\uff0c\u5c31\u5b8c\u5de5\u5566\uff01</p> <p></p> <p>\u6982\u62ec\u4e00\u4e0b\uff0c\u5c31\u662f</p> <ol> <li> <p>\u627e</p> </li> <li> <p>\u6362</p> </li> <li> <p>\u4e3b\u5143\u7cfb\u6570\u53d8\u4e3a1</p> </li> <li> <p>\u5176\u4ed6\u65b9\u7a0b\u7684\u8be5\u7cfb\u6570\u53d8\u4e3a0</p> </li> </ol> <p>\u4e0b\u9762\u5c31\u5148\u4e3e\u4f8b\u89e3\u91ca\uff1a</p> <p></p> <p>\u56fe</p> <ol> <li> <p>\u521d\u59cb\u72b6\u6001</p> </li> <li> <p>\u4ece\u7b2ci=1\u884c\u95ee\u4e0b\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2a\u201c\u4e3b\u5143\\(x_1\\)\uff08\u7b2ci=1\u4e2a\u5355\u9879\u5f0f\uff09\u7cfb\u6570\u4e0d\u4e3a0\u7684\u65b9\u7a0b\u201d\u5e76\u4e14\u5c06\u5b83\u4ea4\u6362\u5230\u7b2ci=1\u884c</p> </li> <li> <p>\u5c06\u4e3b\u5143\u7cfb\u5316\u4e3a1</p> </li> <li> <p>\u5c06\u7b2ci=1\u884c\u4e0b\u65b9\u7684\u65b9\u7a0b\uff08\u6216\u8005\u662f\u8bf4\u672a**\u5904\u7406\u8fc7\u7684\u65b9\u7a0b**\uff09\u5982\u679c\u6709\\(x_1\\)\u7684\u7cfb\u6570\u4e0d\u4e3a0\u7684\uff0c\u5c31\u7528**\u53d8\u63623**\u5c06\u5176\u7cfb\u6570\u53d8\u4e3a0</p> </li> <li> <p>i=2\uff0c\u91cd\u590d\u4ee5\u4e0a2~4\u6b65\u64cd\u4f5c</p> </li> <li> <p>...</p> </li> <li> <p>...\u6240\u6709\u65b9\u7a0b\u7ec4\u90fd\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u4ece\u4e0b\u5f80\u4e0a\uff0c\u9010\u6b65\u8ba1\u7b97\u51fa\\(x_3,x_2,x_1\\)\u7684\u503c\uff08\u4ece\u4e0b\u5f80\u4e0a\u4ee3\u5165\uff09</p> </li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#_7","title":"\u4ee3\u7801","text":"<p>\u4ee3\u7801\u5982\u4e0b</p> <pre><code>#define db double\n\ndb a[N][N];\nbool gauss(){\n    for(int i=1;i&lt;=n;i++){\n        int r=1;//\u627e \n        for(int k=i;k&lt;=n;k++){\n            if(a[k][i]!=0){\n                r=k;\n                break;\n            }\n        }\n        if(k!=i)swap(a[r],a[i])//\u6362\n        if(a[i][i]==0.00)return 0;\n\n        for(int j=n+1;j&gt;=i;j++){\n            a[i][j]/=a[i][i];//\u53d8\u4e3b\u5143\u7cfb\u6570\u4e3a1 \n        } \n        for(int j=i/\u6b64\u5904\u5012\u5e8f\u56e0\u4e3a\u8981\u7528\u5230a[j][i],\u56e0\u6b64\u5faa\u73af\u4ecen-&gt;i,ij\u4e3a\u884c,k\u4e3a\u5217,i\u540c\u65f6\u4e5f\u662f\u7b2ci\u884c\u4e3b\u5143\u6240\u5728\u7684\u5217 \n            if(a[j][i]==0.00)continue;//\u5c0f\u5c0f\u7684\u4f18\u5316\u4e00\u4e0b \n            for(int k=n=1;j&gt;=i;k--)a[j][k]-=a[j][i]*a[i][k];//\u53d8\u5176\u5b83\u6570\u5b57\u7684\u7cfb\u6570\u4e3a0 \n        } \n    }\n\n    //\u5904\u7406\u5b8c\u4e4b\u540e,\u5f00\u59cb\u4ece\u4e0b\u5f80\u4e0a\u4ee3\u56de\n    for(int i=n-1;i&gt;0;i--){//\u6c42x_i \n        for(int j=i/\u5c06x_i+1~x_n\u4ee3\u5165\n            a[i][n/\u51cf\u6cd5\u662f\u79fb\u9879\u7684\u7ed3\u679c,\u539f\u5f0f\u4e3axi+a[i][j]*a[j][n+1]=a[i][n+1],xi=a[i][n+1]-a[i][j]*a[j][n+1]\n            //a[j][n+1]\u5c31\u5b58\u4e86x_j\u7684\u503c,\u5e76\u4e14\u4f1a\u5728\u4e4b\u524d\u5904\u7406\u51fa\u6765 \n    }\n    return 1; \n}\n</code></pre> <p>\u96be\u70b9\u89e3\u6790</p> <pre><code>for(int k=n=1;j&gt;=i;k--)a[j][k]-=a[j][i]*a[i][k];//\u53d8\u5176\u5b83\u6570\u5b57\u7684\u7cfb\u6570\u4e3a0 \n</code></pre> <p><code>a[j][k]-=a[j][i]*a[i][k]</code>\u4ec0\u4e48\u610f\u601d??</p> <p>\u8003\u5bdf\u4ee5\u4e0b\u65b9\u7a0b\u7ec4</p> <p>\\(\\begin{cases}x+b_1y=c_1\\\\ax+b_2y=c_2\\end{cases}\\)</p> <p>\u6211\u4eec\u600e\u4e48\u6837\u5c06\u65b9\u7a0b2\u7684\u7b2c\u4e00\u4e2a\u5355\u9879\u5f0f\u7cfb\u6570\u5316\u4e3a0\u5462?</p> <p>\u5f53\u7136\u662f\u5c06\u5b83\u51cf\u53bb \\(n\\)$ \\times \u65b9\u7a0b1$ \u4e86</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u6bd4\\(n\\)\u662f\u591a\u5c11?</p> <p>\u6070\u6070\u662f<code>a[j][i]</code>,\u5373\u65b9\u7a0b\u7ec4\u4e2d\u7684\\(a\\)\uff08\u6ce8\u610f\uff0c\u8fd9\u662f\u56e0\u4e3a\u6b64\u65f6\u7b2ci=1\u4e2a\u65b9\u7a0b\u7ec4\u7684\u4e3b\u5143\u7cfb\u6570\u5df2\u7ecf\u5316\u4e3a\u4e861\uff09</p> <p>\u90a3\u4e48\u5bf9\u4e8e**\u65b9\u7a0b2**\uff0c\u6211\u4eec\u5c06\\(a\\)\u51cf\u53bb\\(1\\times a\\) \uff0c\u5c06\\(b_2\\)\u51cf\u53bb$ b_1 \\times a \\(\uff0c\u5c06\\)c_2\\(\u51cf\u53bb\\)c_1 \\times a\\(\uff0c\u5c31\u76f8\u5f53\u4e8e\u5c06**\u65b9\u7a0b2**\u51cf\u53bb\u4e86\\)a \\times \u65b9\u7a0b1$\uff0c\u6ee1\u8db3\u53d8\u63623</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#-","title":"\u9ad8\u65af-\u7ea6\u65e6\u6d88\u5143\u6cd5","text":"<p>\u6a21\u62df\u4e00\u4e0b\u8fc7\u7a0b</p> <p></p> <p>\u56fe</p> <ol> <li> <p>\u548c\u524d\u9762\u7684\u4e00\u6837</p> </li> <li> <p>\u548c\u524d\u9762\u7684\u4e00\u6837\uff0c\u4f46\u6b64\u5904\u6211\u4eec**\u4e0d\u9700\u8981**\u5c06\u4e3b\u5143\u7cfb\u6570\u5316\u4e3a1\u4e86</p> </li> <li> <p>i=2\uff0c\u7528**\u65b9\u7a0b2**\u5c06\u5176\u4ed6\u65b9\u7a0b\u7684\u7b2ci=2\u4e2a\u5355\u9879\u5f0f\u7684\u7cfb\u6570\u5316\u4e3a0\uff08\u6b64\u5904\u51d1\u5de7\u5c06\u7b2c3\u4e2a\u5355\u9879\u5f0f\u4e5f\u5316\u4e3a\u4e860\uff0c\u7eaf\u5c5e\u5de7\u5408\uff09.\u56e0\u4e3a\u5728\u7b2c2\u6b65\u5df2\u7ecf\u628a**\u65b9\u7a0b2**\u7684\u7b2c\u4e00\u9879\u7cfb\u6570\u5316\u4e3a0\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5bf9\u5df2\u7ecf\u5904\u7406\u597d\u7684**\u65b9\u7a0b1**\u7684**\u4e3b\u5143\u9879**\u9020\u6210\u5f71\u54cd\u3002\u540c\u6837\uff0c\u6211\u4eec**\u4e0d\u9700\u8981**\u5c06\u4e3b\u5143\u7cfb\u6570\u5316\u4e3a1</p> </li> <li> <p>\u540c3</p> </li> <li> <p>\u5c06\\(c_i\\)\u9664\u4ee5\u4e3b\u5143\u7684\u7cfb\u6570\uff0c\u5f97\u5230\u7684\u65b0\\(c_i\\)\u5c31\u662f\u65b9\u7a0b\u7ec4\u7684\u89e3\\(x_i\\)</p> </li> </ol>"},{"location":"%E6%95%B0%E5%AD%A6/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#_8","title":"\u4ee3\u7801","text":"<p>\u6ce8\u91ca\uff1a<code>fabs()</code>\u662f\u5bf9\u4e8e\u5c0f\u6570\u7684<code>abs()</code></p> <pre><code>//\u53d8\u91cf\nlong double a[M][M];\nint n,b,c,x[N],y[N],ans,res,tmp,cnt,m;\n\nint gauss_jordan(){\n    for(int i=1;i&lt;=n;i++){\n        int idx=i;\n        for(int j=i;j&lt;=m;j++)if(fabs(a[j][i])&gt;fabs(a[idx][i]))idx=j;\n        if(fabs(a[idx][i])&gt;1e-10)for(int k=i;k&lt;=n/\u5c06\u5f53\u524d\u7cfb\u6570\u6700\u5927\u7684\u65b9\u7a0b\u4ea4\u6362\u5230\u7b2ci\u884c\n        else continue;//\u5f53\u524d\u4e3b\u5143\u7cfb\u6570\u4e3a0\n        for(int j=n/=a[i][i];\n        for(int j=1;j&lt;=m;j++)if(j!=i){//\u5c06\u5176\u4ed6\u65b9\u7a0b\u7684\u8fd9\u4e00\u5143\u6d88\u53bb,\u6700\u540e\u53ea\u7559\u4e0b\u5bf9\u89d2\u7ebf\u7684\u5143\n            for(int k=n+1;k&gt;0;k--)a[j][k]-=a[j][i]*a[i][k];\n        }\n\n\n    }\n    for(int i=1;i&lt;=m;i++){\n        int flg=0;\n        for(int j=1;j&lt;=n;j++)if(fabs(a[i][j])&lt;1e-10&amp;&amp;fabs(a[i][n/\u5148\u5224\u65e0\u89e3\n        if(flg==n)return -1;\n    }\n    for(int i=1;i&lt;=n;i++)if(fabs(a[i][i])&lt;1e-10)return 0;//\u518d\u5224\u591a\u89e3\n    return 1;\n}\n\nsigned main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=m;i++){\n        for(int j=1;j&lt;=n+1;j++)cin&gt;&gt;a[i][j];\n    }\n\n    int flg=gauss_jordan();\n    if(flg==-1)cout&lt;&lt;\"No solutions\";\n    if(flg==0)cout&lt;&lt;\"Many solutions\";\n    if(flg==1){\n        for(int i=1;i&lt;=n;i++)cout&lt;&lt;(int)(a[i][n/printf(\"%.2Lf\\n\",a[i][n+1]);\n    }\n\n\n    return 0;\n}\n</code></pre> <p>\u5173\u4e8e\u4e00\u7ec4hack</p> <pre><code>3 3\n0 0 1 1 \n0 1 0 1\n0 1 0 1\n</code></pre> <p>\u56e0\u6b64\uff0c\u4ee5\u4e0b\u5199\u6cd5\u662f\u9519\u8bef\u7684\uff01</p> <pre><code>for(int i=1;i&lt;=m;i++)if(fabs(a[i][i])&lt;1e-10&amp;&amp;fabs(a[i][n/\u5148\u5224\u65e0\u89e3\n</code></pre> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/Nim%E6%B8%B8%E6%88%8F/","title":"Nim\u6e38\u620f","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/Nim%E6%B8%B8%E6%88%8F/#1","title":"\u5b9a\u74061","text":"<p>\u4e00\u5b9a\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5fc5\u80dc\u6001\u5236\u9020\u5904\u4e00\u4e2a\u5fc5\u8d25\u6001\u7559\u7ed9\u5bf9\u624b</p> <p></p> <p></p> <p>\u5f88\u663e\u7136\uff0c\u5982\u679c\u7b2ck\u4f4d\u4e3a1\u7684\u6570\u6709\u5076\u6570\u4e2a\uff0c\u90a3\u4e48\u5f02\u6216\u548c\u4e3a0</p> <p>\u5c067\u6216\u80055\u6216\u800511\u6216\u800512\u8fdb\u884c^\\(s\\)\uff0c\u5373\u53ef</p> <p>\u56e0\u4e3a\u539f\u6765\\(a_1\\)<sup>\\(a_2\\)</sup>...^\\(a_n\\)\\(=\\)\\(s\\), \u5f02\u6216\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u5c06\u4efb\u610f\u4e00\u4e2a<sup>s\u540e\uff0c\u539f\u5f0f\u53d8\u4e3a\\(a_1\\)</sup>\\(a_2\\)<sup>...</sup>\\(a_n\\)^\\(s=s^s=0\\)</p> <p>\u5408\u6cd5\u6027\u9a8c\u8bc1</p> <p>\u56e0\u4e3a\u5f02\u6216\u540e\\(a_i\\)\u6700\u9ad8\u4f4d\u76841\u53d8\u6210\u4e860\uff0c\u6700\u9ad8\u4f4d\u524d\u7684\u4e0d\u4f1a\u53d8\uff08\u8fd8\u662f0\uff09\uff0c\u540e\u9762\u7684\u65e0\u8bba\u600e\u4e48\u53d8\u90fd\u4e0d\u4f1a\u5927\u4e8e\u539f\u6570\uff0c\u6545 \\(a_i\\)^\\(s&lt;a_i\\)\uff0c\u56e0\u6b64\u662f\u5408\u6cd5\u7684\uff08\u4f46\u662f\u5bf911\u8fdb\u884c\u6b64\u64cd\u4f5c\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u4f46\u56e0\u4e3a\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u6240\u4ee5\u5224\u5b9a\u65f6\u65e0\u6240\u8c13\uff0c\u4f46\u5728\u8981\u6c42\u8f93\u51fa\u65b9\u6848\u65f6\u8981\u6ce8\u610f\u4e0d\u53ef\u53d6\uff08\u5982\u4e0b\u6269\u5c55\uff09\uff09</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/Nim%E6%B8%B8%E6%88%8F/#2","title":"\u5b9a\u74062","text":"<p>\u89e3\u91ca\uff1a\u5373\u5fc5\u8d25\u6001\u65e0\u8bba\u600e\u4e48\u53d6\u7559\u7ed9\u5bf9\u624b\u7684\u90fd\u662f\u5fc5\u80dc\u6001\uff0c\u4ec5\u5728\u5f53\u524d\u4e00\u8f6e</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/Nim%E6%B8%B8%E6%88%8F/#code","title":"code","text":"<pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int N=1e5;\n\nsigned main(){\n    int t,n,x;\n    cin&gt;&gt;t;\n    while(t--){\n        int s=0;\n        cin&gt;&gt;n;\n        for(int i=1;i&lt;=n;i++){\n            cin&gt;&gt;x;s^=x;\n        }\n        if(s)cout&lt;&lt;\"Yes\"&lt;&lt;endl;\n        else cout&lt;&lt;\"No\"&lt;&lt;endl;\n    } \n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/Nim%E6%B8%B8%E6%88%8F/#_1","title":"\u6269\u5c55  \u8981\u6c42\u8f93\u51fa\u65b9\u6848","text":"<p>www.luogu.com.cn</p> <pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=5e5+5;\nint t,n,x[N],s=0;\nsigned main(){\n\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;x[i];s^=x[i];\n    }\n    if(!s){\n        cout&lt;&lt;\"lose\"&lt;&lt;endl;return 0;\n    }\n    else {\n        for(int i=1;i&lt;=n;i++){//\u6309\u9898\u76ee\u8981\u6c42\u5b57\u5178\u5e8f\u67e5\u627e\n            if((x[i]^s)&lt;x[i]){//\u5982\u679c\u5f02\u6216\u540e\u6bd4\u539f\u6765\u5c0f\uff0c\u5c31\u53ef\u884c\n                printf(\"%d %d\\n\",x[i]-(x[i]^s),i);\n                x[i]=x[i]^s;break;//\u4fee\u6539\u8fd9\u4e00\u5806\uff0cbreak\n            }\n        }\n\n    }\n    for(int i=1;i&lt;=n;i++)cout&lt;&lt;x[i]&lt;&lt;' ';//\u8f93\u51fa\u53d6\u7b2c\u4e00\u6b21\u540e\u6240\u6709\u5806\u7684\u60c5\u51b5\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/Nim%E6%B8%B8%E6%88%8F/#nim_1","title":"\u53f0\u9636 Nim","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/SG%E5%87%BD%E6%95%B0/","title":"SG\u51fd\u6570","text":"<p>b23.tv</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/SG%E5%87%BD%E6%95%B0/#_1","title":"\u9002\u7528\u8303\u56f4","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/SG%E5%87%BD%E6%95%B0/#_2","title":"\u8fd0\u7b97\u5b9a\u4e49","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/SG%E5%87%BD%E6%95%B0/#_3","title":"\u51fd\u6570\u5b9a\u4e49","text":"<p>\u5bf9\u4e8e\u67d0\u4e2a\u8282\u70b9,\u82e5\u5176SG\u4e3a0,\u5219\u8be5\u70b9\u7684\u73a9\u5bb6\u5fc5\u8d25.\u53cd\u6b63\u5fc5\u80dc</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/SG%E5%87%BD%E6%95%B0/#_4","title":"\u7ec3\u4e60","text":"<p>\u6211\u4eec\u6765\u8fdb\u884c\u4ee5\u4e0b\u5bf9SG\u51fd\u6570\u7684\u6c42\u89e3\u7ec3\u4e60</p> <p></p> <p>\u56fe\u4e2d\u7eff\u8272\u6570\u5b57\u5373\u8be5\u70b9\u7684SG\u503c\uff0c\u8bf7\u6ce8\u610f\uff0c\u56fe2\u7684\u6839\u8282\u70b91\u7684SG\u503c\u4e3a0.\u8bf7\u7ed3\u5408\u5b9a\u4e49\u601d\u8003\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/SG%E5%87%BD%E6%95%B0/#_5","title":"\u72b6\u6001","text":"<p>\u8ba9\u6211\u4eec\u7ed3\u5408\u56fe2\u8fdb\u884c\u5177\u4f53\u5206\u6790\uff1a</p> <p>\u5148\u624b\u4e3aA\uff0c\u5bf9\u65b9\u4e3aB</p> <p>\u5f53A\u5c06\u68cb\u5b50\u4ece1\u21922/7/6\u65f6\uff0cSG(1)=0,\u8bf4\u660e\u5176\u4e3a\u5fc5\u8d25.\u5230\u8fbe2/6/7\u540e,\u6211\u4eec\u4f1a\u53d1\u73b0\u5176\u56e0\u4e3a\u5bf91\u7684\u6240\u6709\u51fa\u70b9\u8fdb\u884cmex\u64cd\u4f5c\u540e\u5f97\u5230SG(1)=0,\u8bf4\u660e1\u7684\u6240\u6709\u51fa\u70b9\u4e2d\u6ca1\u67090,\u5373A\u7559\u7ed9B\u7684\u90fd\u662f\u5fc5\u80dc\u6001.</p> <p>\u56e0\u4e3aA,B\u5747\u4f1a\u91c7\u53d6\u6700\u4f18\u8d70\u6cd5,\u6240\u4ee5\u5728\u5148\u624b\u786e\u5b9a\u65f6,\u80dc\u8d1f\u5c31\u5df2\u7ecf\u5b9a\u4e86,\u6bcf\u6b21A\u2192B\u6216\u8005B\u2192A\u90fd\u662f\u4e00\u6b21\u5fc5\u80dc\u6001\u548c\u5fc5\u8d25\u6001\u4e4b\u95f4\u7684\u8f6c\u5316.</p> <p>\u6839\u636eSG\u51fd\u6570\u6027\u8d28,\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u5fc5\u80dc\u6001\u540e\u4e00\u5b9a\u6709\u4e00\u4e2a\u5fc5\u8d25\u6001,\u8fd9\u6837\u5fc5\u80dc\u6001\u7684\u73a9\u5bb6\u5c31\u53ef\u4ee5\u9009\u62e9\u8d70\u8ba9\u5bf9\u624b\u5fc5\u8d25\u7684\u90a3\u6761\u8def\u5f84.\u5fc5\u80dc\u6001\u7684\u73a9\u5bb6\u5fc5\u80dc.\u53cd\u4e4b,\u4e00\u4e2a\u5fc5\u8d25\u6001\u540e\u9762\u5747\u662f\u5fc5\u80dc\u6001,\u90a3\u4e48\u5fc5\u8d25\u6001\u7684\u73a9\u5bb6\u65e0\u6cd5\u8ba9\u5bf9\u624b\u5fc5\u8d25.\u5fc5\u8d25\u6001\u7684\u73a9\u5bb6\u5fc5\u8d25</p> <p>\u56e0\u6b64\u5728\u8d77\u70b9,\u5c31\u53ef\u4ee5\u77e5\u9053\u5148\u624b\u7684\u80dc\u8d25</p> <p>\u5bf9\u4e8e\u591a\u4e2a\u6709\u5411\u56fe\u7ec4\u6210\u7684\u7ec4\u5408\u6e38\u620f,\u5982\u56fe,\u6839\u636e\u5b9a\u7406\u5f97\u5148\u624b\u5fc5\u80dc.\u56e0\u4e3a\u5148\u624b\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u8d70\u6cd5,\u8ba9\u573a\u4e0a3\u9897\u68cb\u5b50\u7684\u6240\u5728\u4f4d\u7f6e\u7684SG\u5f02\u6216\u548c=0,\u7ed9\u5bf9\u624b\u4e00\u4e2a\u5fc5\u8d25\u6001.\u63a5\u4e0b\u6765\u65e0\u8bba\u5bf9\u624b\u600e\u4e48\u8d70,\u90fd\u4f1a\u7559\u4e0b\u4e00\u4e2a\u5fc5\u80dc\u6001\u7ed9\u5148\u624b</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/SG%E5%87%BD%E6%95%B0/#_6","title":"\u6574\u7406\u603b\u7ed3","text":""},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/SG%E5%87%BD%E6%95%B0/#stl_set","title":"\u5b9e\u73b0\u65b9\u6cd5 STL_Set","text":"<p>\u5b9a\u4e49\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>set&lt;int&gt; a; // \u5b9a\u4e49\u4e00\u4e2aint\u7c7b\u578b\u7684\u96c6\u5408a\n// set&lt;int&gt; a(10); // error\uff0c\u672a\u5b9a\u4e49\u8fd9\u79cd\u6784\u9020\u51fd\u6570\n// set&lt;int&gt; a(10, 1); // error\uff0c\u672a\u5b9a\u4e49\u8fd9\u79cd\u6784\u9020\u51fd\u6570\nset&lt;int&gt; b(a); // \u5b9a\u4e49\u5e76\u7528\u96c6\u5408a\u521d\u59cb\u5316\u96c6\u5408b\nset&lt;int&gt; b(a.begin(), a.end()); // \u5c06\u96c6\u5408a\u4e2d\u7684\u6240\u6709\u5143\u7d20\u4f5c\u4e3a\u96c6\u5408b\u7684\u521d\u59cb\u503c\n</code></pre> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6570\u7ec4\u6765\u521d\u59cb\u5316\u5411\u91cf\uff1a</p> <pre><code>int n[] = { 1, 2, 3, 4, 5 };\nlist&lt;int&gt; a(n, n + 5); // \u5c06\u6570\u7ec4n\u7684\u524d5\u4e2a\u5143\u7d20\u4f5c\u4e3a\u96c6\u5408a\u7684\u521d\u503c\n</code></pre> <ul> <li> <p>\u5bb9\u5668\u5927\u5c0f\uff1a<code>st.size();</code></p> </li> <li> <p>\u5bb9\u5668\u6700\u5927\u5bb9\u91cf\uff1a<code>st.max_size();</code></p> </li> <li> <p>\u5bb9\u5668\u5224\u7a7a\uff1a<code>st.empty();</code></p> </li> <li> <p>\u67e5\u627e\u952e key \u7684\u5143\u7d20\u4e2a\u6570\uff1a<code>st.count(key);</code></p> </li> </ul> <p>[C++ STL] set\u4f7f\u7528\u8be6\u89e3 - fengMisaka - \u535a\u5ba2\u56ed</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/SG%E5%87%BD%E6%95%B0/#1","title":"\u4f8b\u9898 #1","text":"<p>\u4f8b\u9898\u7b80\u5355,\u76f4\u63a5\u5feb\u7167</p> <p></p> <p>\u6ce8:\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u90fd\u662f\u8fd9\u4e2a\u8282\u70b9\u53d6\u4e86 \\(a_i\\) \u4e2a\u77f3\u5b50\u540e\u5269\u4e0b\u7684\u77f3\u5b50\u6570\u91cf</p> <p></p> <p>\u56de\u987e\u4e0b\u666e\u901aNim\u6e38\u620f</p> <p></p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/SG%E5%87%BD%E6%95%B0/#2","title":"\u4f8b\u9898 #2","text":"<p>\u7b97\u6cd5</p> <p></p> <p>\\(mex\\)\u7684\u7b2c\u4e00\u4e2a\u90e8\u5206\u5373\u6309\u884c\u526a\u7684\u7ed3\u679c,\u7b2c2\u90e8\u5206\u5373\u6309\u5217\u526a\u7684\u7ed3\u679c</p> <p>\u56e0\u4e3a\\(SG\\)\u5b9a\u7406\u8981\u6c42\u6700\u7ec8(\u53f6\u5b50\u8282\u70b9)\u662f\u5fc5\u8d25\u6001,\u56e0\u6b64\u8981\u6ce8\u610f\u8fb9\u754c</p> <p>\u56e0\u4e3a\u6700\u7ec8\u7684\u53f6\u5b50\u8282\u70b9\u7684\u5269\u4f59\u7eb8\u7247\u957f\u5bbd \\(\u22652\\) ,\u56e0\u6b64\\(mex\\)\u4e2d \\(2\u2264i\\) </p> <p></p> <p>\u67092\u4e2a\\(2,4\\)?</p> <p>\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u5b58\u7684\u662f\u5f53\u524d\u5269\u4f59\u7eb8\u7247\u7684\u957f\u5bbd,\u56e0\u6b64\u5f53\u5728\u7b2c\\(2,3\\)\u884c\u4e4b\u95f4\u88c1\u5f00\u548c\u5728\u7b2c\\(3,4\\)\u884c\u4e4b\u95f4\u88c1\u5f00\u90fd\u4f1a\u5404\u6709\u4e00\u4e2a\\(2,4\\),\u540c\u7406\u4e5f\u5404\u6709\u4e00\u4e2a\\(3,4\\)</p> <p>\u6bcf\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c,\u90fd\u4f1a\u5206\u88c2\u51fa2\u4e2a\u5b50\u8282\u70b9(\u5c0f\u7eb8\u7247),\u5bf9\u4e8e\u4e00\u4e2a\u7eb8\u7247,\u53ef\u4ee5\u67090\u4e2a\u6216n\u4e2a\u64cd\u4f5c\u65b9\u6cd5</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/%E5%A8%81%E4%BD%90%E5%A4%AB%E5%8D%9A%E5%BC%88/","title":"\u5a01\u4f50\u592b\u535a\u5f08","text":"<p>www.luogu.com.cn</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/%E5%A8%81%E4%BD%90%E5%A4%AB%E5%8D%9A%E5%BC%88/#_2","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u6709\u4e24\u5806\u77f3\u5b50\uff0c\u6570\u91cf\u4efb\u610f\uff0c\u53ef\u4ee5\u4e0d\u540c\u3002\u6e38\u620f\u5f00\u59cb\u7531\u4e24\u4e2a\u4eba\u8f6e\u6d41\u53d6\u77f3\u5b50\u3002\u6e38\u620f\u89c4\u5b9a\uff0c\u6bcf\u6b21\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u53d6\u6cd5</p> <ul> <li> <p>\u4e00\u662f\u53ef\u4ee5\u5728\u4efb\u610f\u7684\u4e00\u5806\u4e2d\u53d6\u8d70\u4efb\u610f\u591a\u7684\u77f3\u5b50\uff1b</p> </li> <li> <p>\u4e8c\u662f\u53ef\u4ee5\u5728\u4e24\u5806\u4e2d\u540c\u65f6\u53d6\u8d70\u76f8\u540c\u6570\u91cf\u7684\u77f3\u5b50\u3002</p> </li> </ul> <p>\u6700\u540e\u628a\u77f3\u5b50\u5168\u90e8\u53d6\u5b8c\u8005\u4e3a\u80dc\u8005\u3002\u73b0\u5728\u7ed9\u51fa\u521d\u59cb\u7684\u4e24\u5806\u77f3\u5b50\u7684\u6570\u76ee\uff0c\u4f60\u5148\u53d6\uff0c\u5047\u8bbe\u53cc\u65b9\u90fd\u91c7\u53d6\u6700\u597d\u7684\u7b56\u7565\uff0c\u95ee\u6700\u540e\u4f60\u662f\u80dc\u8005\u8fd8\u662f\u8d25\u8005\u3002</p> <p>\u9996\u5148\u6211\u4eec\u89c4\u5b9a: \u540e\u624b\u5fc5\u80dc\u6001\u88ab\u79f0\u4e3a\u5947\u5f02\u5c40\u52bf\uff0c\u7ed3\u8bba\u662f\uff0c\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u5947\u5f02\u5c40\u52bf\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u6570\u662f\u4e24\u6570\u5dee\u503c\u4e58\u5927\u9ec4\u91d1\u6bd4\uff08\\(\\frac{\\sqrt5 +1}{2}\\)\uff09\u4e0b\u53d6\u6574\u3002</p> <p>\u8bc1\u660e</p> <p>\u672a\u77e5</p> <pre><code>signed main(){\n    cin&gt;&gt;a&gt;&gt;b;\n    if(a&gt;b)swap(a,b);\n    double f= 1.00*(sqrt(5)/2;\n    int c=b-a;\n    if(a==(int)(1.00*f*c))cout&lt;&lt;0&lt;&lt;endl;\n    else cout&lt;&lt;1&lt;&lt;endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E5%8D%9A%E5%BC%88%E8%AE%BA/%E6%91%A9%E5%B0%94%E6%8A%95%E7%A5%A8%E6%B3%95/","title":"\u6469\u5c14\u6295\u7968\u6cd5","text":"<p>O(n)\u65f6\u95f4\u590d\u6742\u5ea6\uff0cO(\u5e38\u6570)\u7a7a\u95f4\u590d\u6742\u5ea6\u6c42\u51fa\u5e8f\u5217\u4e2d\u4e2a\u6570\u8d85\u8fc7\u5e8f\u5217\u957f\u5ea6\u4e00\u534a\u7684\u6570\u7684\u4e2a\u6570</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/%E5%87%B8%E5%8C%85/","title":"\u51f8\u5305","text":"<p>\u7b97\u6cd5Andrew</p> <ol> <li>\u5bf9\u6240\u6709\u70b9\u6309\u5750\u6807\u00d7\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u3001 y \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\u7b2c 1 \u3001\u7b2c n \u4e24\u4e2a\u70b9\u4e00\u5b9a\u5728\u51f8\u5305\u4e0a\u3002</li> </ol> <pre><code>struct node{\n    int x,y;\n}p[N];\n\nbool cmp(node x,node y){\n    if(x.x==y.x)return x.y&lt;y.y;\n    return x.x&lt;y.x;\n}\n\nsigned main(){\n\n//  freopen(\".in\",\"r\",stdin);\n//  freopen(\".out\",\"w\",stdout);\n//  freopen(\".txt\",\"w\",stderr);\n    n=rd;\n    for(int i=1;i&lt;=n;i++){\n        p[i].x=rd;\n        p[i].y=rd;\n    }\n\n    sort(p+1,p+n+1,cmp);\n}\n</code></pre> <p>2 \uff0c\u5148\u987a\u5e8f\u679a\u4e3e\u6240\u6709\u70b9\uff0c\u6c42\u4e0b\u51f8\u5305\u3002</p> <p>\u7528\u6808\u7ef4\u62a4\u5f53\u524d\u5728\u51f8\u5305\u4e0a\u7684\u70b9\uff1a\u65b0\u70b9\u5165\u6808\u524d\uff0c\u603b\u8981\u5224\u65ad\u8be5\u5f39\u51fa\u54ea\u4e9b\u65e7\u5360\u53ea\u8981\u65b0\u70b9\u5904\u5728\u7531\u6808\u9876\u4e24\u70b9\u6784\u6210\u7684\u6709\u5411\u76f4\u7ebf\u7684\u53f3\u4fa7\u6216\u5171\u7ebf\uff0c\u5c31\u5f39\u51fa\u65e7\u70b9\u3002\u4e0d\u80fd\u5f39\u51fa\u65f6\uff0c\u65b0\u70b9\u5165\u6808\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u6837\u5224\u65ad\u65b0\u70b9\u662f\u5426\u5904\u5728\u7531\u6808\u9876\u4e24\u70b9\u6784\u6210\u7684\u6709\u5411\u76f4\u7ebf\u7684\u53f3\u4fa7\u6216\u5171\u7ebf\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u539f\u70b9a\u2192b\u548c\u65b0\u70b9b\u2192c\u4e24\u6761\u6709\u5411\u7ebf\u6bb5\u7684\u53c9\u79ef\u3002\u5982\u679c\u53c9\u79ef\u22640\uff0c\u5219\u8bf4\u660e\u5728\u53f3\u4fa7\u6216\u8005\u5171\u7ebf\u3002</p> <pre><code>double cross(node a,node b,node c){\n    return (b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);\n}\n</code></pre> <p>3 \uff0e\u518d\u9006\u5e8f\u679a\u4e3e\u6240\u6709\u70b9\uff0c\u6c42\u4e0a\u51f8\u5305\u3002\u7528\u6808\u7ef4\u62a4\u540c\u4e0a\u3002</p> <p>\u6ce8\u610f\uff1a\u6bcf\u4e2a\u70b9\u5165\u6808\u4e24\u6b21\uff0c\u51fa\u6808\u4e0d\u8d85\u8fc7\u4e24\u6b21\u6240\u4ee5\u603b\u6b21\u6570\u4e0d\u8d85\u8fc74n</p> <pre><code>void andrew(){\n    for(int i=1;i&lt;=n;i++){\n        while(top&gt;1&amp;&amp;cross(stk[top-1],stk[top],p[i])&lt;=0)top--;\n        stk[++top]=p[i];\n\n    }\n    int t=top;\n    for(int i=n-1;i;i--){//\u6ce8\u610f\u8fd9\u91cc\u7528n-1\u9632\u6b62n\u70b9\u91cd\u590d\u5165\u6808\n        while(top&gt;t&amp;&amp;cross(stk[top-1],stk[top],p[i])&lt;=0)top--;\n        stk[++top]=p[i];\n    }\n}\n</code></pre> <p>\u7b97\u6cd5\u7ed3\u675f\u540e\u6bcf\u4e2a\u70b9\u4f1a\u5728\u6808\u4e2d\u4e00\u6b21\uff0c\u4f46\u662f1\u53f7\u70b9\u4f1a\u51fa\u73b0\u4e24\u6b21\u3002\u53cd\u6b63\u5c31\u662f\u77e5\u9053\u628ai\u2192i+1\u8fde\u63a5\u8d77\u6765\u66f4\u597d\u662f\u5b8c\u6574\u7684\u5468\u957f\u5c31\u884c\u4e86\u3002</p> <p>COde</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . FancyKnowledge .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\n#include&lt;bits/stdc++.h&gt;\n\n//\n#define int long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n#define err(fmt, ...) fprintf(stderr, \"[%d] : \" fmt \"\\n\", __LINE__, ##__VA_ARGS__)\n///*\n#define pr pair&lt;double,int&gt;\n#define pf first\n#define ps second\n#define pb push_back\n//*/\n\n//\nusing namespace std;\n\n\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n//\nconst int N=2e5+5;\nconst int M=1e3;\nconst int MOD=1e9+7;\nconst int MMOD=903250223;\nconst int INF=1e9;\nconst int IINF=1e18;\nconst db eps=1e-9;\n//\n\n\nstruct node{\n    double x,y;\n}p[N];\n\nint n,m,q,d[N],k,idx,len[N],res,tmp,cnt[N],id[N];\ndouble ans;\n\nnode stk[N];\nint top;\n\nbool cmp(node x,node y){\n    if(x.x==y.x)return x.y&lt;y.y;\n    return x.x&lt;y.x;\n}\n\ndouble cross(node a,node b,node c){\n    return (b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);\n}\n\ndouble dis(node a,node b){\n    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\n\nvoid andrew(){\n    for(int i=1;i&lt;=n;i++){\n        while(top&gt;1&amp;&amp;cross(stk[top-1],stk[top],p[i])&lt;=0)top--;\n        stk[++top]=p[i];\n\n    }\n    int t=top;\n    for(int i=n-1;i;i--){\n        while(top&gt;t&amp;&amp;cross(stk[top-1],stk[top],p[i])&lt;=0)top--;\n        stk[++top]=p[i];\n    }\n}\n\nsigned main(){\n\n//  freopen(\".in\",\"r\",stdin);\n//  freopen(\".out\",\"w\",stdout);\n//  freopen(\".txt\",\"w\",stderr);\n    n=rd;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;p[i].x&gt;&gt; p[i].y;\n    }\n\n    sort(p+1,p+n+1,cmp);\n\n    andrew();\n\n    for(int i=1;i&lt;top;i++)ans+=dis(stk[i],stk[i+1]);\n\n    printf(\"%.2lf\",ans);\n    return 0;\n}\n\n//check your long long and the size of memery!!!\n</code></pre>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/%E5%8D%8A%E5%B9%B3%E9%9D%A2%E4%BA%A4/","title":"\u534a\u5e73\u9762\u4ea4","text":"<p>\u9006\u65f6\u9488\u7ed9\u51fa \\(n\\) \u4e2a\u51f8\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5750\u6807\uff0c\u6c42\u5b83\u4eec\u4ea4\u7684\u9762\u79ef\u3002\u4f8b\u5982 \\(n=2\\) \u65f6\uff0c\u4e24\u4e2a\u51f8\u591a\u8fb9\u5f62\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u5219\u76f8\u4ea4\u90e8\u5206\u7684\u9762\u79ef\u4e3a \\(5.233\\)\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff1a\\(2 \\leq n \\leq 10\\)\uff0c\\(3 \\leq m_i \\leq 50\\)\uff0c\u6bcf\u7ef4\u5750\u6807\u4e3a \\([-1000,1000]\\) \u5185\u7684\u6574\u6570\u3002</p>"},{"location":"%E6%95%B0%E5%AD%A6/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/%E6%97%8B%E8%BD%AC%E5%8D%A1%E5%A3%B3/","title":"\u65cb\u8f6c\u5361\u58f3","text":"<p>\u7ed9\u5b9a\u5e73\u9762\u4e0a \\(n\\) \u4e2a\u70b9\uff0c\u6c42\u51f8\u5305\u76f4\u5f84\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/","title":"ST\u8868","text":"<p>https://blog.csdn.net/weixin_43914593/article/details/109500135</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#st","title":"ST\u8868","text":"<p>ST\u8868\uff08Sparse Table\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u89e3\u51b3\u533a\u95f4\u6700\u503c\u67e5\u8be2\u95ee\u9898\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u53ef\u4ee5\u9ad8\u6548\u5730\u9884\u5904\u7406\u6570\u636e\uff0c\u5e76\u5141\u8bb8\u5728\u5bf9\u6570\u65f6\u95f4\u5185\u67e5\u8be2\u4efb\u610f\u533a\u95f4\u7684\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u3002\u4ee5\u4e0b\u662fST\u8868\u7684\u5b9e\u73b0\u539f\u7406\uff1a</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li> <p>\u533a\u95f4\u67e5\u8be2\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u67e5\u8be2\u67d0\u4e2a\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u3002</p> </li> <li> <p>\u7a00\u758f\u8868\uff1aST\u8868\u7684\u6838\u5fc3\u601d\u60f3\u662f\u6784\u5efa\u4e00\u4e2a\u7a00\u758f\u8868\uff0c\u8868\u4e2d\u5b58\u50a8\u4e86\u539f\u6570\u7ec4\u7684\u5b50\u533a\u95f4\u7684\u6700\u503c\u4fe1\u606f\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#st_1","title":"\u6784\u5efaST\u8868","text":"<p>ST\u8868\u7684\u6784\u5efa\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\uff1a\u9884\u5904\u7406\u548c\u67e5\u8be2\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#_2","title":"\u9884\u5904\u7406","text":"<p>\u5728\u9884\u5904\u7406\u9636\u6bb5\uff0c\u6211\u4eec\u6784\u5efa\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4<code>st</code>\uff0c\u5176\u4e2d<code>st[i][j]</code>\u5b58\u50a8\u4e86\u4ece\u7d22\u5f15<code>i</code>\u5f00\u59cb\u7684\u957f\u5ea6\u4e3a<code>2^j</code>\u7684\u533a\u95f4\u7684\u6700\u503c\u3002</p> <ol> <li> <p>\u521d\u59cb\u5316<code>st[i][0]</code>\u4e3a\u539f\u6570\u7ec4<code>arr[i]</code>\u7684\u503c\uff0c\u56e0\u4e3a\u957f\u5ea6\u4e3a<code>2^0 = 1</code>\u7684\u533a\u95f4\u7684\u6700\u503c\u5c31\u662f\u5b83\u81ea\u5df1\u3002</p> </li> <li> <p>\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3\uff0c\u9010\u6b65\u6784\u5efa\u66f4\u957f\u7684\u533a\u95f4\u3002\u5bf9\u4e8e\u6bcf\u4e2a<code>i</code>\u548c<code>j</code>\uff0c<code>st[i][j]</code>\u53ef\u4ee5\u901a\u8fc7\u5408\u5e76\u4e24\u4e2a\u957f\u5ea6\u4e3a<code>2^(j-1)</code>\u7684\u533a\u95f4<code>st[i][j-1]</code>\u548c<code>st[i + 2^(j-1)][j-1]</code>\u7684\u6700\u503c\u5f97\u51fa\u3002 \u4ee5\u4e0b\u662f\u6784\u5efaST\u8868\u7684\u4f2a\u4ee3\u7801\uff1a</p> </li> </ol> <pre><code>for i from 0 to n-1:\n    st[i][0] = arr[i]\nfor j from 1 to log(n):\n    for i from 0 to n-2^j:\n        st[i][j] = func(st[i][j-1], st[i + 2^(j-1)][j-1])\n</code></pre> <p>\u5176\u4e2d<code>func</code>\u53ef\u4ee5\u662f<code>max</code>\u6216<code>min</code>\uff0c\u53d6\u51b3\u4e8e\u6211\u4eec\u662f\u8981\u67e5\u8be2\u6700\u5927\u503c\u8fd8\u662f\u6700\u5c0f\u503c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#_3","title":"\u67e5\u8be2","text":"<p>\u67e5\u8be2\u64cd\u4f5c\u9700\u8981\u627e\u5230\u8986\u76d6\u67e5\u8be2\u533a\u95f4\u7684\u6700\u77ed\u7684\u533a\u95f4\u5bf9\uff0c\u5e76\u4eceST\u8868\u4e2d\u83b7\u53d6\u8fd9\u4e9b\u533a\u95f4\u7684\u6700\u503c\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u67e5\u8be2\u533a\u95f4<code>[L, R]</code>\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e24\u4e2a\u5e42<code>2^P</code>\u548c<code>2^Q</code>\uff0c\u4f7f\u5f97<code>2^P + 2^Q</code>\u8986\u76d6\u533a\u95f4<code>[L, R]</code>\uff0c\u4e14<code>P</code>\u548c<code>Q</code>\u5c3d\u53ef\u80fd\u5927\u3002 \u4ee5\u4e0b\u662f\u67e5\u8be2ST\u8868\u7684\u4f2a\u4ee3\u7801\uff1a</p> <pre><code>function query(L, R):\n    P = log(R - L + 1)\n    return func(st[L][P], st[R - 2^P + 1][P])\n</code></pre> <p>\u8fd9\u91cc<code>func</code>\u540c\u6837\u53ef\u4ee5\u662f<code>max</code>\u6216<code>min</code>\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#_4","title":"\u793a\u4f8b","text":"<p>\u5047\u8bbe\u6211\u4eec\u6709\u6570\u7ec4<code>arr = [3, 2, 4, 5, 9, 7, 10, 8]</code>\uff0c\u6211\u4eec\u60f3\u8981\u6784\u5efa\u4e00\u4e2a\u67e5\u8be2\u6700\u5927\u503c\u7684ST\u8868\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#_5","title":"\u9884\u5904\u7406","text":"i\\j 0 1 2 3 0 3 3 3 3 1 2 4 4 4 2 4 5 9 9 3 5 9 9 10 4 9 9 10 10 5 7 10 10 10 6 10 10 10 10 7 8 8 10 10"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#_6","title":"\u67e5\u8be2","text":"<p>\u5982\u679c\u6211\u4eec\u60f3\u67e5\u8be2\u533a\u95f4<code>[1, 6]</code>\u7684\u6700\u5927\u503c\uff0c\u6211\u4eec\u9996\u5148\u627e\u5230<code>2^2 = 4</code>\u548c<code>2^1 = 2</code>\u53ef\u4ee5\u8986\u76d6\u8fd9\u4e2a\u533a\u95f4\uff0c\u7136\u540e\u67e5\u8be2<code>st[1][2] = 9</code>\u548c<code>st[5][1] = 10</code>\uff0c\u6700\u540e\u8fd4\u56de\u8fd9\u4e24\u4e2a\u503c\u7684\u6700\u5927\u503c\uff0c\u5373<code>10</code>\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#_7","title":"\u603b\u7ed3","text":"<p>ST\u8868\u901a\u8fc7\u9884\u5904\u7406\u5c06\u539f\u6570\u7ec4\u7684\u6240\u6709\u53ef\u80fd\u533a\u95f4\u6700\u503c\u5b58\u50a8\u5728\u4e00\u4e2a\u7a00\u758f\u8868\u4e2d\uff0c\u4f7f\u5f97\u6bcf\u6b21\u67e5\u8be2\u64cd\u4f5c\u53ef\u4ee5\u5728\u5bf9\u6570\u65f6\u95f4\u5185\u5b8c\u6210\u3002\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u7684\u4f18\u70b9\u662f\u67e5\u8be2\u901f\u5ea6\u5feb\uff0c\u4f46\u7f3a\u70b9\u662f\u5b83\u4e0d\u652f\u6301\u52a8\u6001\u66f4\u65b0\uff0c\u5373\u5982\u679c\u539f\u6570\u7ec4\u53d1\u751f\u53d8\u5316\uff0c\u9700\u8981\u91cd\u65b0\u6784\u5efaST\u8868\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#1","title":"\u4f8b\u9898 #1","text":"<p>\u8fd9\u662f\u4e00\u9053 ST \u8868\u7ecf\u5178\u9898\u2014\u2014\u9759\u6001\u533a\u95f4\u6700\u5927\u503c</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u6570\u5217\uff0c\u548c \\(M\\) \u6b21\u8be2\u95ee\uff0c\u6c42\u51fa\u6bcf\u4e00\u6b21\u8be2\u95ee\u7684\u533a\u95f4\u5185\u6570\u5b57\u7684\u6700\u5927\u503c\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u6ee1\u8db3 \\(1\\le N\\le {10}^5\\)\uff0c\\(1\\le M\\le 2\\times{10}^6\\)\uff0c\\(a_i\\in[0,{10}^9]\\)\uff0c\\(1\\le l_i\\le r_i\\le N\\)\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#_8","title":"\u8bb2\u89e3","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#_9","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N = 4e5+5;\nint n, st[N][20], lg2[N], m, a, b;\n\nvoid pre() {\n    for (int j = 1; j &lt;= 18; j++)\n        for (int i = 1; i + (1 &lt;&lt; j) - 1 &lt;= n; i++)\n            st[i][j] = max(st[i][j - 1], st[i + (1 &lt;&lt; (j - 1))][j - 1]);\n\n}\n\nint main() {\n\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    lg2[0] = -1;\n    for (int i = 1; i &lt;= n; i++)\n        lg2[i] = lg2[i / 2] + 1;\n\n    for (int i = 1; i &lt;= n; i++) {\n        scanf(\"%d\",&amp;st[i][0]);\n    }\n    pre();\n    while (m--) {\n        scanf(\"%d%d\",&amp;a,&amp;b);\n        int k = lg2[b - a + 1];\n        printf(\"%d\\n\",max(st[a][k], st[b - (1 &lt;&lt; k) + 1][k]));\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#2","title":"\u4f8b\u9898 #2","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5c0f Z \u662f\u4e00\u4e2a\u5c0f\u6709\u540d\u6c14\u7684\u94a2\u7434\u5bb6\uff0c\u6700\u8fd1 C \u535a\u58eb\u9001\u7ed9\u4e86\u5c0f Z \u4e00\u67b6\u8d85\u7ea7\u94a2\u7434\uff0c\u5c0f Z \u5e0c\u671b\u80fd\u591f\u7528\u8fd9\u67b6\u94a2\u7434\u521b\u4f5c\u51fa\u4e16\u754c\u4e0a\u6700\u7f8e\u5999\u7684\u97f3\u4e50\u3002</p> <p>\u8fd9\u67b6\u8d85\u7ea7\u94a2\u7434\u53ef\u4ee5\u5f39\u594f\u51fa \\(n\\) \u4e2a\u97f3\u7b26\uff0c\u7f16\u53f7\u4e3a \\(1\\) \u81f3 \\(n\\)\u3002\u7b2c \\(i\\) \u4e2a\u97f3\u7b26\u7684\u7f8e\u5999\u5ea6\u4e3a \\(A_i\\)\uff0c\u5176\u4e2d \\(A_i\\) \u53ef\u6b63\u53ef\u8d1f\u3002</p> <p>\u4e00\u4e2a\u201c\u8d85\u7ea7\u548c\u5f26\u201d\u7531\u82e5\u5e72\u4e2a\u7f16\u53f7\u8fde\u7eed\u7684\u97f3\u7b26\u7ec4\u6210\uff0c\u5305\u542b\u7684\u97f3\u7b26\u4e2a\u6570\u4e0d\u5c11\u4e8e \\(L\\) \u4e14\u4e0d\u591a\u4e8e \\(R\\)\u3002\u6211\u4eec\u5b9a\u4e49\u8d85\u7ea7\u548c\u5f26\u7684\u7f8e\u5999\u5ea6\u4e3a\u5176\u5305\u542b\u7684\u6240\u6709\u97f3\u7b26\u7684\u7f8e\u5999\u5ea6\u4e4b\u548c\u3002\u4e24\u4e2a\u8d85\u7ea7\u548c\u5f26\u88ab\u8ba4\u4e3a\u662f\u76f8\u540c\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e24\u4e2a\u8d85\u7ea7\u548c\u5f26\u6240\u5305\u542b\u7684\u97f3\u7b26\u96c6\u5408\u662f\u76f8\u540c\u7684\u3002</p> <p>\u5c0f Z \u51b3\u5b9a\u521b\u4f5c\u4e00\u9996\u7531 \\(k\\) \u4e2a\u8d85\u7ea7\u548c\u5f26\u7ec4\u6210\u7684\u4e50\u66f2\uff0c\u4e3a\u4e86\u4f7f\u5f97\u4e50\u66f2\u66f4\u52a0\u52a8\u542c\uff0c\u5c0f Z \u8981\u6c42\u8be5\u4e50\u66f2\u7531 \\(k\\) \u4e2a\u4e0d\u540c\u7684\u8d85\u7ea7\u548c\u5f26\u7ec4\u6210\u3002\u6211\u4eec\u5b9a\u4e49\u4e00\u9996\u4e50\u66f2\u7684\u7f8e\u5999\u5ea6\u4e3a\u5176\u6240\u5305\u542b\u7684\u6240\u6709\u8d85\u7ea7\u548c\u5f26\u7684\u7f8e\u5999\u5ea6\u4e4b\u548c\u3002\u5c0f Z \u60f3\u77e5\u9053\u4ed6\u80fd\u591f\u521b\u4f5c\u51fa\u6765\u7684\u4e50\u66f2\u7f8e\u5999\u5ea6\u6700\u5927\u503c\u662f\u591a\u5c11\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#_10","title":"\u601d\u8def","text":"<p>\u5c31\u662f\u5148\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6ei\uff0c\u628a\\(i \\sim i+l-1,i \\sim i+r-1\\)\u653e\u8fdb\u53bb\u8868\u793ai\u5f00\u5934\u7684\u53ef\u7528\u533a\u95f4\u3002 \u7136\u540e\u679a\u4e3ek\u6b21\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u4f18\u7684\u533a\u95f4\\(i \\sim t\\)\uff0c\u5047\u8bbe\u5b83\u5c5e\u4e8e\u5757 \\(\\{i \\sim i+l-1,i \\sim i+r-1\\}\\)\uff0c\u90a3\u4e48\u6211\u4eec\u53d6\u51fa\u4e86\\(i \\sim t\\)\u540e\u8fd8\u8981\u628a\\(\\{i \\sim i+l-1,i \\sim t-1\\}\\{i \\sim t+1,i \\sim i+r-1\\}\\)\u4e22\u56de\u4f18\u5148\u961f\u5217\u4e2d\u4f5c\u4e3a\u5907\u9009\u9879\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ST%E8%A1%A8/#_11","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\n#define rep(l, r, i) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(r, l, i) for (int i = r, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n#define X(j) i[j]\n#define Y(j) (dp[j] + (i[j] + L) * (i[j] + L))\n\n#define rd read()\nint read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\nconst int N = 5e5 + 5;\nconst int INF = 1e18;\n\nint n,K,l,r;\nint qz[N],lg[N];\nint st[N][20];\nint a[N];\n\nvoid init(){\n    lg[1]=0;\n    for(int i=2;i&lt;=n;i++)lg[i]=(lg[i&gt;&gt;1]+1);\n    for(int i=1;i&lt;=n;i++)st[i][0]=i;\n    for(int j=1;(1&lt;&lt;j)&lt;=n;j++){\n        for(int i=1;i+(1&lt;&lt;j)-1&lt;=n;i++){\n            int x=st[i][j-1],y=st[i+(1&lt;&lt;(j-1))][j-1];\n\n            if(qz[x]&gt;qz[y])st[i][j]=x;\n            else st[i][j]=y;\n        }\n    }\n}\n\nint query(int l,int r){\n    int k=lg[r-l+1];\n    int x=st[l][k],y=st[r-(1&lt;&lt;k)+1][k];\n    return qz[x]&gt;qz[y]?x:y;\n}\n\nstruct node{\n    int o,l,r,t;\n    node(){}\n    node(int o,int l,int r) : o(o), l(l), r(r), t(query(l, r)) {}\n    friend bool operator &lt; (const node&amp; a, const node&amp; b) {\n        return qz[a.t] - qz[a.o - 1] &lt; qz[b.t] - qz[b.o - 1];\n    }\n};\n\npriority_queue&lt;node&gt; q;\nvoid solve(){\n    n=rd,K=rd,l=rd,r=rd;\n    for(int i=1;i&lt;=n;i++){\n        a[i]=rd;\n    }\n    for(int i=1;i&lt;=n;i++){\n        qz[i]=qz[i-1]+a[i];\n    }\n    init();//\u5efa\u7acbst\u8868\n    for(int i=1;i&lt;=n;i++){\n        if(i+l-1&lt;=n)q.push(node(i,i+l-1,min(i+r-1,n)));\n    }\n\n    //\u5c31\u662f\u5148\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6ei\uff0c\u628ai~i+l-1,i~i+r-1\u653e\u8fdb\u53bb\u8868\u793ai\u5f00\u5934\u7684\u53ef\u7528\u533a\u95f4\n    //\u7136\u540e\u679a\u4e3ek\u6b21\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u4f18\u7684\u533a\u95f4i~t\uff0c\u5047\u8bbe\u5b83\u5c5e\u4e8e\u5757{i~i+l-1,i~i+r-1}\uff0c\\\n    \u90a3\u4e48\u6211\u4eec\u53d6\u51fa\u4e86i~t\u540e\u8fd8\u8981\u628a{i~i+l-1,i~t-1}{i~t+1,i~i+r-1}\u4e22\u56de\u4f18\u5148\u961f\u5217\u4e2d\u4f5c\u4e3a\u5907\u9009\u9879\u3002\n    int ans=0;\n    while(K--){\n        int o=q.top().o,L=q.top().l,R=q.top().r,t=q.top().t;\n        q.pop();\n        ans+=qz[t]-qz[o-1];\n        if(L!=t)q.push(node(o,L,t-1));\n        if(t!=R)q.push(node(o,t+1,R));\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/","title":"\u4e8c\u53c9\u67e5\u627e\u6811","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/#_2","title":"\u5178\u4f8b","text":"<p>\u6bcf\u6b21\u7ed9\u51fa\u6570\u5b57i\u63d2\u5165\u5728\u5f53\u524d\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\\(op_i\\)\u7684\u540e\u9762\uff0c\u6c42\u51fa\u6700\u540e\u6bcf\u4e2a\u6570\u5b57\u7684\u4f4d\u7f6e\u3002</p> <p>\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5176\u4e2d\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5c31\u5f88\u7c7b\u4f3c\u5728\u4e8c\u53c9\u67e5\u627e\u6811\u4e0a\u7684\u67e5\u627e\u64cd\u4f5c\u3002</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n\nconst int N = 1e6 + 5;\nconst int M = 16;\nconst int INF = 1e9 + 5;\nconst int MOD = 9999973;\n\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\nbool f1;\nint tr[N&lt;&lt;2],op[N],pos[N];\nint q, n, m, t[N&lt;&lt;2], ans, T;\nbool f2;\n\n\nvoid push(int x){\n    t[x]=t[x&lt;&lt;1]+t[x&lt;&lt;1|1];\n}\n\nvoid build(int x,int l,int r){\n    if(l==r){\n        t[x]=1;\n        return ;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(x&lt;&lt;1,l,mid);\n    build((x&lt;&lt;1)|1,mid+1,r);\n    push(x);\n}\n\nint find(int x,int l,int r,int p){\n    if(l==r){\n        t[x]=0;\n        return l;\n    }\n    int res;\n    int mid=l+r&gt;&gt;1;\n    if(t[x&lt;&lt;1]&gt;=p)res=find(x&lt;&lt;1,l,mid,p);\n    else res=find(x&lt;&lt;1|1,mid+1,r,p-t[x&lt;&lt;1]);\n    push(x);\n    return res;\n}\n\nsigned main() {\n    // freopen(\"chfran.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n    // cerr&lt;&lt;1.00*(&amp;f2-&amp;f1)/1024/1024&lt;&lt;endl;\n    n=rd;\n\n    build(1,1,n);\n    for(int i=1;i&lt;=n;i++){\n        op[i]=rd;\n    }\n\n    for(int i=n;i;i--){\n        pos[i]=find(1,1,n,op[i]+1);\n    }\n\n    return 0;\n}\n\n/*\n1\n2 5 1 \n0 0 1 \n0 0 4 \n\n*/\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/#_3","title":"\u4ecb\u7ecd","text":"<p>1.\u5b9a\u4e49 \u4e8c\u53c9\u67e5\u627e\u6811( Binary Search Tree,BST)\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u4e8c\u53c9\u6811,\u53c8\u79f0\u4e3a\u6392\u5e8f\u4e8c\u53c9\u6811\u3001\u4e8c\u53c9\u641c\u7d22\u6811\u3001\u4e8c\u53c9\u6392\u5e8f\u6811\u3002\u4e8c\u53c9\u67fb\u627e\u6811\u7684\u9012\u5f52\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p>\u2460\u8981\u4e48\u4e8c\u53c9\u67fb\u627e\u6811\u662f\u4e00\u68f5\u7a7a\u6811\u3002</p> <p>\u2461\u8981\u4e48\u4e8c\u53c9\u67e5\u627e\u6811\u7531**\u6839\u7ed3\u70b9\u3001\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811**\u7ec4\u6210\uff0c\u5176\u4e2d**\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u90fd\u662f\u4e8c\u53c9\u67e5\u627e\u6811**\uff0c\u4e14**\u5de6\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u6570\u636e\u57df\u5747\u5c0f\u4e8e\u6216\u7b49\u4e8e\u6839\u7ed3\u70b9\u7684\u6570\u636e\u57df\uff0c\u53f3\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u6570\u636e\u57df\u5747\u5927\u4e8e\u6839\u7ed3\u70b9\u7684\u6570\u636e\u57df\u3002**</p> <p>\u4ece\u4e8c\u53c9\u67fb\u627e\u6811\u7684\u5b9a\u4e49\u4e2d\u53ef\u4ee5\u77e5\u9053\uff0c\u4e8c\u53c9\u67e5\u627e\u6811\u5b9e\u9645\u4e0a\u662f\u4e00\u68f5\u6570\u636e\u57df\u6709\u5e8f\u7684\u4e8c\u53c9\u6811\uff0c\u5373**\u5bf9\u6811\u4e0a\u7684\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u90fd\u6ee1\u8db3\u5176\u5de6\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u6570\u636e\u57df\u5747\u5c0f\u4e8e\u6216\u7b49\u4e8e\u6839\u7ed3\u70b9\u7684\u6570\u636e\u57df\uff0c\u53f3\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u6570\u636e\u57df\u5747\u5927\u4e8e\u6839\u7ed3\u70b9\u7684\u6570\u636e\u57df\u3002**</p> <p>2.\u57fa\u672c\u64cd\u4f5c \u4e8c\u53c9\u67e5\u627e\u6811\u7684\u57fa\u672c\u64cd\u4f5c\u6709\u67e5\u627e\u3001\u63d2\u5165\u3001\u5efa\u6811\u3001\u5220\u9664\u3002</p> <p>\u4e8c\u53c9\u6811\u7684\u57fa\u672c\u64cd\u4f5c\u8bf7\u53c2\u8003\uff1a\u6811\u4e0e\u4e8c\u53c9\u6811</p> <p>(1).\u67e5\u627e\u64cd\u4f5c</p> <p>\u5728\u4e4b\u524d\u4ecb\u7ecd\u4e8c\u53c9\u6811\u7684\u67e5\u627e\u64cd\u4f5c\u65f6\uff0c\u7531\u4e8e\u65e0\u6cd5\u786e\u5b9a\u4e8c\u53c9\u6811\u7684\u5177\u4f53\u7279\u6027\uff0c\u56e0\u6b64\u53ea\u80fd\u5bf9\u5de6\u53f3\u5b50\u6811\u90fd\u8fdb\u884c\u9012\u5f52\u904d\u5386\u3002\u4f46\u662f\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u6027\u8d28\u51b3\u5b9a\u4e86\u8bfb\u8005\u53ef\u4ee5\u53ea\u9009\u62e9\u5176\u4e2d\u4e00\u68f5\u5b50\u6811\u8fdb\u884c\u904d\u5386\uff0c\u56e0\u6b64\u67fb\u627e\u5c06\u4f1a\u662f\u4ece\u6811\u6839\u5230\u67e5\u627e\u7ed3\u70b9\u7684\u4e00\u6761\u8def\u5f84\uff0c\u6545\u6700\u574f\u590d\u6742\u5ea6\u662fO(h)\uff0c\u5176\u4e2dh\u662f\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u9ad8\u5ea6\u3002</p> <p>\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u67e5\u627e\u64cd\u4f5c\u7684\u57fa\u672c\u601d\u8def\uff1a</p> <p>\u2460\u5982\u679c\u5f53\u524d\u6839\u7ed3\u70b9root\u4e3a\u7a7a\uff0c\u8bf4\u660e\u67e5\u627e\u5931\u8d25\uff0c\u8fd4\u56de\u3002</p> <p>\u2461\u5982\u679c\u9700\u8981\u67e5\u627e\u7684\u503cx\u7b49\u4e8e\u5f53\u524d\u6839\u7ed3\u70b9\u7684\u6570\u636e\u57dfroot-&gt;data\uff0c\u8bf4\u660e\u67e5\u627e\u6210\u529f\uff0c\u8bbf\u95ee\u4e4b\u3002</p> <p>\u2462\u5982\u679c\u9700\u8981\u67e5\u627e\u7684\u503cx\u5c0f\u4e8e\u5f53\u524d\u6839\u7ed3\u70b9\u7684\u6570\u636e\u57dfroot-&gt;data\uff0c\u8bf4\u660e\u5e94\u8be5\u5f80\u5de6\u5b50\u6811\u67e5\u627e\uff0c\u56e0\u6b64\u5411root-&gt;child\u9012\u5f52\u3002</p> <p>\u2463\u8bf4\u660e\u9700\u8981\u67fb\u627e\u7684\u503cx\u5927\u4e8e\u5f53\u524d\u6839\u7ed3\u70b9\u7684\u6570\u636e\u57dfroot-&gt;data\uff0c\u5219\u5e94\u8be5\u5f80\u53f3\u5b50\u6811\u67e5\u627e\uff0c\u56e0\u6b64\u5411root-&gt; rchild\u9012\u5f52\u3002</p> <p>\u7531\u6b64\u53ef\u5f97\u5230\u4ee3\u7801\uff1a</p> <pre><code>//search\u51fd\u6570\u67e5\u627e\u4e8c\u53c9\u6811\u4e2d\u6570\u636e\u57df\u4e3ax\u7684\u7ed3\u70b9\nvoid search(node* root,int x){\nif(root == NULL){\n//\u7a7a\u6811\uff0c\u67e5\u627e\u5931\u8d25\nprintf(\"search failed\\n\");\nreturn;\n}\nif(x == root-&gt;data){\n//\u67e5\u627e\u6210\u529f\uff0c\u8bbf\u95ee\u4e4b\nprintf(\"%d\\n\",root-&gt;data);\n} else if(x &lt; root-&gt;data){\n//\u5982\u679cx\u6bd4\u6839\u7ed3\u70b9\u7684\u6570\u636e\u57df\u8981\u5c0f\uff0c\u8bf4\u660ex\u5728\u5de6\u5b50\u6811\nsearch(root-&gt;lchild,x); //\u5f80\u5de6\u5b50\u6811\u641c\u7d22x\n} else{\n//\u5982\u679cx\u6bd4\u6839\u7ed3\u70b9\u7684\u6570\u636e\u57df\u8981\u5927\uff0c\u8bf4\u660ex\u5728\u53f3\u5b50\u6811\nsearch(root-&gt;rchild,x); //\u5f80\u53f3\u5b50\u6811\u641c\u7d22x\n}\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u548c\u666e\u901a\u4e8c\u53c9\u6811\u7684\u67e5\u627e\u51fd\u6570\u4e0d\u540c\uff0c\u4e8c\u53c9\u67fb\u627e\u6811\u7684\u67fb\u627e\u5728\u4e8e\u5bf9\u5de6\u53f3\u5b50\u6811\u7684\u9009\u62e9\u9012\u5f52\u3002\u5728\u666e\u901a\u4e8c\u53c9\u6811\u4e2d\uff0c\u65e0\u6cd5\u786e\u5b9a\u9700\u8981\u67fb\u627e\u7684\u503cx\u5230\u5e95\u662f\u5728\u5de6\u5b50\u6811\u8fd8\u662f\u53f3\u5b50\u6811\uff0c\u4f46\u662f\u5728\u4e8c\u53c9\u67e5\u627e\u6811\u4e2d\u5c31\u53ef\u4ee5\u786e\u5b9a\uff0c\u56e0\u4e3a\u4e8c\u53c9\u67fb\u627e\u6811\u4e2d\u7684\u6570\u636e\u57df\u987a\u5e8f\u603b\u662f\u5de6\u5b50\u6811&lt;\u6839\u7ed3\u70b9&lt;\u53f3\u5b50\u6811\u3002</p> <p>(2).\u63d2\u5165\u64cd\u4f5c</p> <p>\u5bf9\u4e00\u68f5\u4e8c\u53c9\u67e5\u627e\u6811\u6765\u8bf4\uff0c\u67e5\u627e\u67d0\u4e2a\u6570\u636e\u57df\u7684\u7ed3\u70b9\u4e00\u5b9a\u662f\u6cbf\u7740\u786e\u5b9a\u7684\u8def\u5f84\u8fdb\u884c\u7684\u3002\u56e0\u6b64\uff0c\u5f53\u5bf9\u67d0\u4e2a\u9700\u8981\u67e5\u627e\u7684\u503c\u5728\u4e8c\u53c9\u67fb\u627e\u6811\u4e2d\u67fb\u627e\u6210\u529f\uff0c\u8bf4\u660e\u7ed3\u70b9\u5df2\u7ecf\u5b58\u5728\uff1b\u53cd\u4e4b\uff0c\u5982\u679c\u8fd9\u4e2a\u9700\u8981\u67fb\u627e\u7684\u503c\u5728\u4e8c\u53c9\u67e5\u627e\u6811\u4e2d\u67e5\u627e\u5931\u8d25\uff0c\u90a3\u4e48\u8bf4\u660e\u67e5\u627e\u5931\u8d25\u7684\u5730\u65b9\u4e00\u5b9a\u662f\u7ed3\u70b9\u9700\u8981\u63d2\u5165\u7684\u5730\u65b9\u3002\u56e0\u6b64\u53ef\u4ee5\u5728\u4e0a\u9762\u67e5\u627e\u64cd\u4f5c\u7684\u57fa\u7840\u4e0a\uff0c\u5728root=NULL\u65f6\u65b0\u5efa\u9700\u8981\u63d2\u5165\u7684\u7ed3\u70b9\u3002\u663e\u7136\u63d2\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662fO(h)\uff0c\u5176\u4e2dh\u4e3a\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u9ad8\u5ea6\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>//insert\u51fd\u6570\u5c06\u5728\u4e8c\u53c9\u6811\u4e2d\u63d2\u5165\u4e00\u4e2a\u6570\u636e\u57df\u4e3ax\u7684\u65b0\u7ed3\u70b9\uff08\u6ce8\u610f\u53c2\u6570root\u8981\u52a0\u5f15\u7528&amp;\uff09\nvoid insert(node* &amp;root,int x){\nif(root == NULL){\n//\u7a7a\u6811\uff0c\u8bf4\u660e\u67e5\u627e\u5931\u8d25\uff0c\u4e5f\u5373\u63d2\u5165\u4f4d\u7f6e\nroot = newNode(x);//\u65b0\u7ed3\u70b9\uff0c\u6743\u503c\u4e3ax\nreturn;\n}\nif(x == root-&gt;data){\n//\u67e5\u627e\u6210\u529f\uff0c\u8bf4\u660e\u7ed3\u70b9\u5df2\u7ecf\u5b58\u5728\uff0c\u76f4\u63a5\u8fd4\u56de\nreturn;\n} else if(x &lt; root-&gt;data){\n//\u5982\u679cx\u6bd4\u6839\u7ed3\u70b9\u7684\u6570\u636e\u57df\u8981\u5c0f\uff0c\u8bf4\u660ex\u9700\u8981\u63d2\u5728\u5de6\u5b50\u6811\ninsert(root-&gt;lchild,x); //\u5f80\u5de6\u5b50\u6811\u63d2\u5165x\n} else{\n//\u5982\u679cx\u6bd4\u6839\u7ed3\u70b9\u7684\u6570\u636e\u57df\u8981\u5927\uff0c\u8bf4\u660ex\u9700\u8981\u63d2\u5728\u53f3\u5b50\u6811\ninsert(root-&gt;rchild,x); //\u5f80\u53f3\u5b50\u6811\u63d2\u5165x\n}\n}\n</code></pre> <p>node* newNode(int v) { node* Node = new node;  //\u7533\u8bf7\u4e00\u4e2anode\u578b\u7684\u5730\u5740\u7a7a\u95f4 Node-&gt;data = v;     //\u7ed3\u70b9\u6743\u503c\u4e3av Node-&gt;lchild = Node-&gt;rchild = NULL;         //\u521d\u59cb\u5316\u72b6\u6001\u4e0b\u6ca1\u6709\u5de6\u53f3\u5b69\u5b50 return Node;            //\u8fd4\u56de\u65b0\u5efa\u7ed3\u70b9\u7684\u5730\u5740 }</p> <p>(3).\u5efa\u7acb</p> <p>\u5efa\u7acb\u4e00\u68f5\u4e8c\u53c9\u67fb\u627e\u6811\uff0c\u5c31\u662f\u5148\u540e\u63d2\u5165n\u4e2a\u7ed3\u70b9\u7684\u8fc7\u7a0b\uff0c\u8fd9\u548c\u4e00\u822c\u4e8c\u53c9\u6811\u7684\u5efa\u7acb\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u4ee3\u7801\u4e5f\u57fa\u672c\u76f8\u540c\uff1a</p> <pre><code>//\u4e8c\u53c9\u6811\u7684\u5efa\u7acb\nnode* Create(int data[],int n){\nnode* root = NULL;  //\u65b0\u5efa\u6839\u7ed3\u70b9root\nfor(int i=0;i&lt;n;i++){\n//\u5c06data[0]\u5230data[n-1]\u63d2\u5165\u5230\u4e8c\u53c9\u6811\u4e2d\ninsert(root,data[i]);\n}\nreturn root;    //\u8fd4\u56de\u6839\u7ed3\u70b9\n}\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5373\u4fbf\u662f\u4e00\u7ec4\u76f8\u540c\u7684\u6570\u5b57\uff0c\u5982\u679c\u63d2\u5165\u5b83\u4eec\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u6700\u540e\u751f\u6210\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u4e5f\u53ef\u80fd\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u5148\u540e\u63d2\u5165{5,3,7,4,2,8,6}\u4e0e{7,4,5,8,2,6,3}\u4e4b\u540e\u53ef\u4ee5\u5f97\u5230\u4e24\u68f5\u4e0d\u540c\u7684\u4e8c\u53c8\u67e5\u627e\u6811\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\n</code></pre> <p>(4).\u5220\u9664</p> <p>\u4e8c\u53c9\u67fb\u627e\u6811\u7684\u5220\u9664\u64cd\u4f5c\u4e00\u822c\u6709\u4e24\u79cd\u5e38\u89c1\u505a\u6cd5\uff0c\u590d\u6742\u5ea6\u90fd\u662fO(h)\uff0c\u5176\u4e2dh\u4e3a\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u9ad8\u5ea6\u3002\u6b64\u5904\u4e3b\u8981\u4ecb\u7ecd\u7b80\u5355\u6613\u5199\u7684\u4e00\u79cd\u3002\u56fe9-20\u6240\u793a\u662f\u4e00\u68f5\u4e8c\u53c9\u67fb\u627e\u6811\uff0c\u5982\u679c\u9700\u8981\u5220\u6389\u6839\u7ed3\u70b95\uff0c\u5e94\u8be5\u600e\u4e48\u505a\u5462?</p> <p>\u4e3a\u4e86\u4fdd\u8bc1\u5220\u9664\u64cd\u4f5c\u4e4b\u540e\u4ecd\u7136\u662f\u4e00\u68f5\u4e8c\u53c9\u67fb\u627e\u6811\uff0c\u4e00\u79cd\u529e\u6cd5\u662f\u4ee5\u6811\u4e2d\u6bd45\u5c0f\u7684\u6700\u5927\u7ed3\u70b9(\u4e5f\u5c31\u662f\u7ed3\u70b94)\u8986\u76d6\u7ed3\u70b95\uff0c\u7136\u540e\u5220\u9664\u539f\u6765\u7684\u7ed3\u70b94\uff1b\u53e6\u4e00\u79cd\u529e\u6cd5\u662f\u628a\u6811\u4e2d\u6bd45\u5927\u7684\u6700\u5c0f\u7ed3\u70b9(\u4e5f\u5c31\u662f\u7ed3\u70b96)\u8986\u76d6\u7ed3\u70b95\uff0c\u7136\u540e\u5220\u9664\u539f\u6765\u7684\u7ed3\u70b96\u3002\u8fd9\u4e24\u79cd\u505a\u6cd5\u90fd\u80fd\u4fdd\u8bc1\u5220\u9664\u64cd\u4f5c\u4e4b\u540e\u4ecd\u7136\u662f\u4e00\u68f5\u4e8c\u53c9\u67fb\u627e\u6811\u3002</p> <p>\u628a\u4ee5\u4e8c\u53c9\u67fb\u627e\u6811\u4e2d\u6bd4\u7ed3\u70b9\u6743\u503c\u5c0f\u7684\u6700\u5927\u7ed3\u70b9\u79f0\u4e3a\u8be5\u7ed3\u70b9\u7684\u524d\u9a71\uff0c\u800c\u628a\u6bd4\u7ed3\u70b9\u6743\u503c\u5927\u7684\u6700\u5c0f\u7ed3\u70b9\u79f0\u4e3a\u8be5\u7ed3\u70b9\u7684\u540e\u7ee7\u3002\u663e\u7136\uff0c\u7ed3\u70b9\u7684\u524d\u9a71\u662f\u8be5\u7ed3\u70b9\u5de6\u5b50\u6811\u4e2d\u7684\u6700\u53f3\u7ed3\u70b9(\u4e5f\u5c31\u662f\u4ece\u5de6\u5b50\u6811\u6839\u7ed3\u70b9\u5f00\u59cb\u4e0d\u65ad\u6cbf\u7740rchild\u5f80\u4e0b\u76f4\u5230rchild\u4e3aNUL\u65f6\u7684\u7ed3\u70b9)\uff0c\u800c\u7ed3\u70b9\u7684\u540e\u7ee7\u5219\u662f\u8be5\u7ed3\u70b9\u53f3\u5b50\u6811\u4e2d\u7684\u6700\u5de6\u7ed3\u70b9(\u4e5f\u5c31\u662f\u4ece\u53f3\u5b50\u6811\u6839\u7ed3\u70b9\u5f00\u59cb\u4e0d\u65ad\u6cbf\u7740lchild\u5f80\u4e0b\u76f4\u5230lchild\u4e3aNULL\u65f6\u7684\u7ed3\u70b9)\u3002\u4e0b\u9762\u4e24\u4e2a\u51fd\u6570\u7528\u6765\u5bfb\u627e\u4ee5root\u4e3a\u6839\u7684\u6811\u4e2d\u6700\u5927\u6216\u6700\u5c0f\u6743\u503c\u7684\u7ed3\u70b9\uff0c\u7528\u4ee5\u8f85\u52a9\u5bfb\u627e\u7ed3\u70b9\u7684\u524d\u9a71\u548c\u540e\u7ee7\uff1a</p> <pre><code>//\u5bfb\u627e\u4ee5root\u4e3a\u6839\u7ed3\u70b9\u7684\u6811\u4e2d\u7684\u6700\u5927\u6743\u503c\u7ed3\u70b9\nnode* findMax(node* root){\nwhile(root-&gt;rchild != NULL){\nroot = root-&gt;rchild;    //\u4e0d\u65ad\u5f80\u53f3\uff0c\u76f4\u5230\u6ca1\u6709\u53f3\u5b69\u5b50\n}\nreturn root;\n}\n//\u5bfb\u627e\u4ee5root\u4e3a\u6839\u7ed3\u70b9\u7684\u6811\u4e2d\u7684\u6700\u5c0f\u6743\u503c\u7ed3\u70b9\nnode* findMin(node* root){\nwhile(root-&gt;lchild != NULL){\nroot = root-&gt;lchild;    //\u4e0d\u65ad\u5f80\u5de6\uff0c\u76f4\u5230\u6ca1\u6709\u5de6\u5b69\u5b50\n}\nreturn root;\n}\n\u5047\u8bbe\u51b3\u5b9a\u7528\u7ed3\u70b9N\u7684\u524d\u9a71P\u6765\u66ff\u6362N\uff0c\u4e8e\u662f\u5c31\u628a\u95ee\u9898\u8f6c\u6362\u4e3a\u5728N\u7684\u5de6\u5b50\u6811\u4e2d\u5220\u9664\u7ed3\u70b9P\u5c31\u53ef\u4ee5\u9012\u5f52\u4e0b\u53bb\u4e86\uff0c\u76f4\u5230\u9012\u5f52\u5230\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u628a\u5b83\u5220\u9664\u4e86\u3002\n</code></pre> <p>\u56e0\u6b64\u5220\u9664\u64cd\u4f5c\u7684\u57fa\u672c\u601d\u8def\u5982\u4e0b:</p> <p>\u2460\u5982\u679c\u5f53\u524d\u7ed3\u70b9root\u4e3a\u7a7a\uff0c\u8bf4\u660e\u4e0d\u5b58\u5728\u6743\u503c\u4e3a\u7ed9\u5b9a\u6743\u503cx\u7684\u7ed3\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de\u3002</p> <p>\u2461\u5982\u679c\u5f53\u524d\u7ed3\u70b9root\u7684\u6743\u503c\u6070\u4e3a\u7ed9\u5b9a\u7684\u6743\u503cx\uff0c\u8bf4\u660e\u627e\u5230\u4e86\u60f3\u8981\u5220\u9664\u7684\u7ed3\u70b9\uff0c\u6b64\u65f6\u8fdb\u5165\u9664\u5904\u7406\u3002</p> <p>a)\u5982\u679c\u5f53\u524d\u7ed3\u70b9root\u4e0d\u5b58\u5728\u5de6\u53f3\u5b69\u5b50\uff0c\u8bf4\u660e\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u76f4\u63a5\u5220\u9664\uff1b</p> <p>b)\u5982\u679c\u5f53\u524d\u7ed3\u70b9roo\u5b58\u5728\u5de6\u5b69\u5b50\uff0c\u90a3\u4e48\u5728\u5de6\u5b50\u6811\u4e2d\u5bfb\u627e\u7ed3\u70b9\u524d\u9a71pre\uff0c\u7136\u540e\u8ba9pre\u7684\u6570\u636e\u8986\u76d6root\uff0c\u63a5\u7740\u5728\u5de6\u5b50\u6811\u4e2d\u5220\u9664\u7ed3\u70b9pre\uff1b</p> <p>c)\u5982\u679c\u5f53\u524d\u7ed3\u70b9root\u5b58\u5728\u53f3\u5b69\u5b50\uff0c\u90a3\u4e48\u5728\u53f3\u5b50\u6811\u4e2d\u5bfb\u627e\u7ed3\u70b9\u540e\u7ee7next\uff0c\u7136\u540e\u8ba9next\u7684\u6570\u636e\u8986\u76d6root\uff0c\u63a5\u7740\u5728\u53f3\u5b50\u6811\u4e2d\u5220\u9664\u7ed3\u70b9 next\u3002</p> <p>\u2462\u5982\u679c\u5f53\u524d\u7ed3\u70b9root\u7684\u6743\u503c\u5927\u4e8e\u7ed9\u5b9a\u7684\u6743\u503cx\uff0c\u5219\u5728\u5de6\u5b50\u6811\u4e2d\u9012\u5f52\u5220\u9664\u6743\u503c\u4e3ax\u7684\u7ed3\u70b9\u3002</p> <p>\u2463\u5982\u679c\u5f53\u524d\u7ed3\u70b9root\u7684\u6743\u503c\u5c0f\u4e8e\u7ed9\u5b9a\u7684\u6743\u503cx\uff0c\u5219\u5728\u53f3\u5b50\u6811\u4e2d\u9012\u5f52\u5220\u9664\u6743\u503c\u4e3ax\u7684\u7ed3\u70b9\u3002</p> <p>\u5220\u9664\u64cd\u4f5c\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>//\u5220\u9664\u4ee5root\u4e3a\u6839\u7ed3\u70b9\u7684\u6811\u4e2d\u6743\u503c\u4e3ax\u7684\u7ed3\u70b9\nvoid deleteNode(node* &amp;root,int x){\nif(root == NULL)    //\u6839\u7ed3\u70b9\u4e0d\u5b58\u5728\uff0c\u76f4\u63a5\u8fd4\u56de\nreturn;\n//\u627e\u5230\u6b32\u5220\u9664\u7ed3\u70b9\nif(root-&gt;data == x){\n//\u53f6\u5b50\u7ed3\u70b9\u76f4\u63a5\u5220\u9664\nif(root-&gt;lchild == NULL &amp;&amp; root-&gt;rchild == NULL){\nroot = NULL;    //\u628aroot\u5730\u5740\u8bbe\u4e3aNULL\uff0c\u7236\u8282\u70b9\u5c31\u5f15\u7528\u4e0d\u5230\u5b83\u4e86\n} else if(root-&gt;lchild != NULL){\n//\u5de6\u5b50\u6811\u4e0d\u4e3a\u7a7a\u65f6\nnode* pre = findMax(root-&gt;lchild);  //\u627eroot\u7684\u524d\u9a71\nroot-&gt;data = pre-&gt;data; //\u7528\u524d\u9a71\u8986\u76d6root\ndeleteNode(root-&gt;lchild,pre-&gt;data); //\u5728\u5de6\u5b50\u6811\u4e2d\u5220\u9664\u7ed3\u70b9pre\n} else{\n//\u53f3\u5b50\u6811\u4e0d\u4e3a\u7a7a\nnode* next = findMin(root-&gt;rchild); //\u627eroot\u7684\u540e\u7ee7\nroot-&gt;data = next-&gt;data;    //\u7528\u540e\u7ee7\u8986\u76d6root\ndeleteNode(root-&gt;lchild,next-&gt;data);    //\u5728\u5de6\u5b50\u6811\u4e2d\u5220\u9664\u7ed3\u70b9next\n</code></pre> <pre><code>    }\n} else if(root-&gt;data &gt; x){\n    deleteNode(root-&gt;lchild,x); //\u5f80\u5de6\u5b50\u6811\u4e2d\u5220\u9664x \n}  else {\n    deleteNode(root-&gt;rchild,x); //\u5f80\u53f3\u5b50\u6811\u4e2d\u5220\u9664x \n}\n</code></pre> <p>}</p> <p>\u5f53\u7136\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u5f88\u591a\u624b\u6bb5\u4f18\u5316\uff0c\u4f8b\u5982\u53ef\u4ee5\u5728\u627e\u5230\u6b32\u5220\u9664\u7ed3\u70b9root\u7684\u540e\u7ee7\u7ed3\u70b9n\u540e\uff0c\u4e0d\u8fdb\u884c\u9012\u5f52\uff0c\u800c\u901a\u8fc7\u8fd9\u6837\u7684\u624b\u6bb5\u76f4\u63a5\u5220\u9664\u8be5\u540e\u7ee7\uff1a\u5047\u8bbe\u7ed3\u70b9next\u7684\u7236\u4eb2\u7ed3\u70b9\u662f\u7ed3\u70b9S\uff0c\u663e\u7136\u7ed3\u70b9next\u662fS\u7684\u5de6\u5b69\u5b50(\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48?)\uff0c\u90a3\u4e48\u7531\u4e8e\u7ed3\u70b9next\u4e00\u5b9a\u6ca1\u6709\u5de6\u5b50\u6811(\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48?)\uff0c\u4fbf\u53ef\u4ee5\u76f4\u63a5\u628a\u7ed3\u70b9next\u7684\u53f3\u5b50\u6811\u4ee3\u66ff\u7ed3\u70b9next\u6210\u4e3aS\u7684\u5de6\u5b50\u6811\uff0c\u8fd9\u6837\u5c31\u5220\u53bb\u4e86\u7ed3\u70b9next\u3002\u524d\u9a71\u540c\u7406\u3002\u4f8b\u5982\u4e0a\u56fe\u4e2d\u7ed3\u70b95\u7684\u540e\u7ee7\u662f\u7ed3\u70b96\uff0c\u5b83\u662f\u7236\u4eb2\u7ed3\u70b98\u7684\u5de6\u5b69\u5b50\uff0c\u90a3\u4e48\u5728\u7528\u7ed3\u70b96\u8986\u76d6\u7ed3\u70b95\u4e4b\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u628a\u7ed3\u70b96\u7684\u53f3\u5b50\u6811\u4ee3\u66ff\u7ed3\u70b96\u79f0\u4e3a\u7ed3\u70b98\u7684\u5de6\u5b50\u6811\u3002\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u4f18\u5316\u9700\u8981\u5728\u7ed3\u70b9\u5b9a\u4e49\u4e2d\u989d\u5916\u8bb0\u5f55\u6bcf\u4e2a\u7ed3\u70b9\u7684\u7236\u4eb2\u7ed3\u70b9\u5730\u5740\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u5b9e\u73b0\u3002</p> <p>\u4f46\u662f\u4e5f\u8981\u6ce8\u610f\uff0c\u603b\u662f\u4f18\u5148\u5220\u9664\u524d\u9a71(\u6216\u8005\u540e\u7ee7)\u5bb9\u6613\u5bfc\u81f4\u6811\u7684\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u6781\u5ea6\u4e0d\u5e73\u8861\uff0c\u4f7f\u5f97\u4e8c\u53c9\u67fb\u627e\u6811\u9000\u5316\u6210\u4e00\u6761\u94fe\u3002\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u529e\u6cd5\u6709\u4e24\u79cd\uff1a\u4e00\u79cd\u662f\u6bcf\u6b21\u4ea4\u66ff\u5220\u9664\u524d\u9a71\u6216\u540e\u7ee7\uff1b\u53e6\u4e00\u79cd\u662f\u8bb0\u5f55\u5b50\u6811\u9ad8\u5ea6\uff0c\u603b\u662f\u4f18\u5148\u5728\u9ad8\u5ea6\u8f83\u9ad8\u7684\u4e00\u68f5\u5b50\u6811\u91cc\u5220\u9664\u7ed3\u70b9\u3002</p> <p>3.\u6027\u8d28 \u4e8c\u53c9\u67e5\u627e\u6811\u4e00\u4e2a\u5b9e\u7528\u7684\u6027\u8d28\uff1a\u5bf9\u4e8c\u53c9\u67e5\u627e\u6811\u8fdb\u884c\u4e2d\u5e8f\u904d\u5386\uff0c\u904d\u5386\u7684\u7ed3\u679c\u662f\u6709\u5e8f\u7684\u3002</p> <p>\u8fd9\u662f\u7531\u4e8e\u4e8c\u53c9\u67fb\u627e\u6811\u672c\u8eab\u7684\u5b9a\u4e49\u4e2d\u5c31\u5305\u542b\u4e86\u5de6\u5b50\u6811&lt;\u6839\u7ed3\u70b9&lt;\u53f3\u5b50\u6811\u7684\u7279\u70b9\uff0c\u800c\u4e2d\u5e8f\u904d\u5386\u7684\u8bbf\u95ee\u987a\u5e8f\u4e5f\u662f\u5de6\u5b50\u6811\u4e00\u6839\u7ed3\u70b9\u4e00\u53f3\u5b50\u6811\uff0c\u56e0\u6b64,\u6240\u5f97\u5230\u7684\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u662f\u6709\u5e8f\u7684\u3002</p> <p>\u53e6\u5916\uff0c\u5982\u679c\u5408\u7406\u8c03\u6574\u4e8c\u53c9\u67fb\u627e\u6811\u7684\u5f62\u6001\uff0c\u4f7f\u5f97\u6811\u4e0a\u7684\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u5c3d\u91cf\u6709\u4e24\u4e2a\u5b50\u7ed3\u70b9\uff0c\u8fd9\u6837\u6574\u4e2a\u4e8c\u53c9\u67fb\u627e\u6811\u7684\u9ad8\u5ea6\u5c31\u4f1a\u5f88\u4f4e\uff0c\u4e5f\u5373\u6811\u7684\u9ad8\u5ea6\u5927\u6982\u5728log(N)\u7684\u7ea7\u522b\uff0c\u5176\u4e2dN\u662f\u7ed3\u70b9\u4e2a\u6570\u80fd\u5b9e\u73b0\u8fd9\u4e2a\u8981\u6c42\u7684\u4e00\u79cd\u6811\u662f\u5e73\u8861\u4e8c\u53c8\u6811(AVL)\uff0c\u53c2\u8003\u4e0b\u4e00\u7bc7\u6587\u7ae0\u3002 \u539f\u6587\u94fe\u63a5\uff1ahttps://blog.csdn.net/qq_42410605/article/details/104156943</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/#bst","title":"BST \u4e8c\u53c9\u67e5\u627e\u6811","text":"<p>\u4ee5\u4e0b\u4e24\u5e45\u56fe\u5747\u662f\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u4f46\u662f\u5de6\u8fb9\u7684\u590d\u6742\u5ea6\u4e3aO(log n)\u53f3\u8fb9\u7684\u590d\u6742\u5ea6\u5219\u4e3aO(n)</p> <p></p> <p>\u90a3\u4e48\u6709\u4ec0\u4e48\u529e\u6cd5\u8ba9BST\u4e0d\u9000\u8fd8\u6210\u4e00\u6761\u94fe\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u5e73\u8861\u6811\u4e86\uff08\u4e0b\u63a5Splay\uff09</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/","title":"\u5206\u5757","text":"<p>\u5206\u5757\u662f\u4e00\u79cd\u7528\u4e8e\u5904\u7406\u6570\u7ec4\u95ee\u9898\u7684\u6280\u5de7\uff0c\u5b83\u5c06\u6570\u7ec4\u5206\u6210\u82e5\u5e72\u5757\uff0c\u5e76\u5728\u6bcf\u4e2a\u5757\u4e0a\u6267\u884c\u64cd\u4f5c\u4ee5\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5206\u5757\u6280\u672f\u901a\u5e38\u7528\u4e8e\u5904\u7406\u6570\u7ec4\u4e0a\u7684\u533a\u95f4\u67e5\u8be2\u548c\u66f4\u65b0\u95ee\u9898\uff0c\u5b83\u53ef\u4ee5\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u63d0\u4f9b\u6bd4\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\u66f4\u7b80\u5355\u7684\u5b9e\u73b0\uff0c\u5c3d\u7ba1\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u80fd\u4e0d\u5982\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u4ee5\u4e0b\u662f\u5206\u5757\u6280\u672f\u7684\u57fa\u672c\u539f\u7406\u548c\u5b9e\u73b0\u65b9\u5f0f\uff1a</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li> <p>\u5757\u5927\u5c0f\uff1a\u5c06\u6570\u7ec4\u5206\u6210\u5927\u5c0f\u76f8\u7b49\u7684\u5757\uff0c\u901a\u5e38\u5757\u5927\u5c0f\u662fsqrt(n)\uff08n\u662f\u6570\u7ec4\u7684\u957f\u5ea6\uff09\u3002</p> </li> <li> <p>\u5757\u5185\u64cd\u4f5c\uff1a\u5bf9\u4e8e\u5757\u5185\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u904d\u5386\u5757\u5185\u7684\u5143\u7d20\u8fdb\u884c\u5904\u7406\u3002</p> </li> <li> <p>\u8de8\u5757\u64cd\u4f5c\uff1a\u5bf9\u4e8e\u8de8\u8d8a\u591a\u4e2a\u5757\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5206\u522b\u5904\u7406\u6bcf\u4e2a\u5757\uff0c\u7136\u540e\u5408\u5e76\u7ed3\u679c\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_3","title":"\u5206\u5757\u7684\u6784\u5efa","text":"<p>\u5206\u5757\u901a\u5e38\u4e0d\u9700\u8981\u663e\u5f0f\u7684\u6784\u5efa\u8fc7\u7a0b\uff0c\u4f46\u9700\u8981\u5b9a\u4e49\u5757\u7684\u5927\u5c0f\uff0c\u5e76\u6839\u636e\u5757\u5927\u5c0f\u6765\u7ec4\u7ec7\u6570\u636e\u3002</p> <pre><code>int n; // \u6570\u7ec4\u957f\u5ea6\nint block_size = sqrt(n); // \u5757\u5927\u5c0f\nvector&lt;int&gt; arr(n); // \u539f\u59cb\u6570\u7ec4\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_4","title":"\u5206\u5757\u64cd\u4f5c","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_5","title":"\u5355\u70b9\u66f4\u65b0","text":"<p>\u5355\u70b9\u66f4\u65b0\u64cd\u4f5c\u53ef\u4ee5\u76f4\u63a5\u5728\u539f\u6570\u7ec4\u4e0a\u8fdb\u884c\u3002</p> <pre><code>void update(int idx, int new_value) {\n    arr[idx] = new_value;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_6","title":"\u533a\u95f4\u67e5\u8be2","text":"<p>\u533a\u95f4\u67e5\u8be2\u64cd\u4f5c\u9700\u8981\u5904\u7406\u4e24\u79cd\u60c5\u51b5\uff1a\u8de8\u5757\u7684\u67e5\u8be2\u548c\u5757\u5185\u7684\u67e5\u8be2\u3002</p> <pre><code>int query(int L, int R) {\n    int sum = 0;\n    // \u5904\u7406\u5de6\u7aef\u70b9\u6240\u5728\u7684\u5757\n    while (L &lt;= R &amp;&amp; L % block_size != 0) {\n        sum += arr[L++];\n    }\n    // \u5904\u7406\u4e2d\u95f4\u5b8c\u6574\u7684\u5757\n    while (L + block_size &lt;= R) {\n        for (int i = L; i &lt; L + block_size; ++i) {\n            sum += arr[i];\n        }\n        L += block_size;\n    }\n    // \u5904\u7406\u53f3\u7aef\u70b9\u6240\u5728\u7684\u5757\n    while (L &lt;= R) {\n        sum += arr[L++];\n    }\n    return sum;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_7","title":"\u533a\u95f4\u66f4\u65b0","text":"<p>\u533a\u95f4\u66f4\u65b0\u64cd\u4f5c\u901a\u5e38\u9700\u8981\u5bf9\u6bcf\u4e2a\u5757\u8fdb\u884c\u5904\u7406\u3002</p> <pre><code>void range_update(int L, int R, int val) {\n    for (int i = L; i &lt;= R; ++i) {\n        arr[i] += val;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_8","title":"\u5206\u5757\u7684\u4f18\u52bf\u548c\u5c40\u9650","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_9","title":"\u4f18\u52bf","text":"<ul> <li> <p>\u5b9e\u73b0\u7b80\u5355\uff0c\u4e0d\u9700\u8981\u590d\u6742\u7684\u6811\u5f62\u7ed3\u6784\u3002</p> </li> <li> <p>\u5728\u67d0\u4e9b\u95ee\u9898\u4e2d\uff0c\u5206\u5757\u53ef\u4ee5\u63d0\u4f9b\u8f83\u4f18\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5c24\u5176\u662f\u5f53\u64cd\u4f5c\u6b21\u6570\u8f83\u5c11\u65f6\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_10","title":"\u5c40\u9650","text":"<ul> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u4e0d\u5982\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\uff0c\u5c24\u5176\u662f\u5728\u5927\u91cf\u67e5\u8be2\u548c\u66f4\u65b0\u64cd\u4f5c\u65f6\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u533a\u95f4\u66f4\u65b0\u95ee\u9898\uff0c\u5206\u5757\u901a\u5e38\u9700\u8981O(n)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u800c\u7ebf\u6bb5\u6811\u53ef\u4ee5\u63d0\u4f9bO(log n)\u7684\u66f4\u65b0\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_11","title":"\u603b\u7ed3","text":"<p>\u5206\u5757\u6280\u672f\u662f\u4e00\u79cd\u5904\u7406\u6570\u7ec4\u95ee\u9898\u7684\u6709\u6548\u65b9\u6cd5\uff0c\u5b83\u901a\u8fc7\u5c06\u6570\u7ec4\u5206\u6210\u5757\u6765\u7b80\u5316\u533a\u95f4\u64cd\u4f5c\u3002\u5c3d\u7ba1\u5b83\u4e0d\u662f\u4e07\u80fd\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5206\u5757\u53ef\u4ee5\u63d0\u4f9b\u7b80\u5355\u4e14\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5206\u5757\u6280\u672f\u9002\u7528\u4e8e\u90a3\u4e9b\u4e0d\u7ecf\u5e38\u66f4\u65b0\u6216\u67e5\u8be2\u7684\u6570\u7ec4\u95ee\u9898\uff0c\u6216\u8005\u5f53\u95ee\u9898\u89c4\u6a21\u4e0d\u662f\u975e\u5e38\u5927\u65f6\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#1-tjoi2009","title":"\u4f8b\u9898 #1 [TJOI2009] \u5f00\u5173","text":"<p>\u73b0\u6709 \\(n\\) \u76cf\u706f\u6392\u6210\u4e00\u6392\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u7f16\u53f7\u4e3a\uff1a\\(1\\)\uff0c\\(2\\)\uff0c\u2026\u2026\uff0c\\(n\\)\u3002\u7136\u540e\u4f9d\u6b21\u6267\u884c \\(m\\) \u9879\u64cd\u4f5c\u3002</p> <p>\u64cd\u4f5c\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ol> <li> <p>\u6307\u5b9a\u4e00\u4e2a\u533a\u95f4 \\([a,b]\\)\uff0c\u7136\u540e\u6539\u53d8\u7f16\u53f7\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u706f\u7684\u72b6\u6001\uff08\u628a\u5f00\u7740\u7684\u706f\u5173\u4e0a\uff0c\u5173\u7740\u7684\u706f\u6253\u5f00\uff09\uff1b</p> </li> <li> <p>\u6307\u5b9a\u4e00\u4e2a\u533a\u95f4 \\([a,b]\\)\uff0c\u8981\u6c42\u4f60\u8f93\u51fa\u8fd9\u4e2a\u533a\u95f4\u5185\u6709\u591a\u5c11\u76cf\u706f\u662f\u6253\u5f00\u7684\u3002</p> </li> </ol> <p>\u706f\u5728\u521d\u59cb\u65f6\u90fd\u662f\u5173\u7740\u7684\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6574\u6570 \\(n\\) \u548c \\(m\\)\uff0c\u5206\u522b\u8868\u793a\u706f\u7684\u6570\u76ee\u548c\u64cd\u4f5c\u7684\u6570\u76ee\u3002</p> <p>\u63a5\u4e0b\u6765\u6709 \\(m\\) \u884c\uff0c\u6bcf\u884c\u6709\u4e09\u4e2a\u6574\u6570\uff0c\u4f9d\u6b21\u4e3a\uff1a\\(c\\)\u3001\\(a\\)\u3001\\(b\\)\u3002\u5176\u4e2d \\(c\\) \u8868\u793a\u64cd\u4f5c\u7684\u79cd\u7c7b\u3002</p> <ul> <li> <p>\u5f53 \\(c\\) \u7684\u503c\u4e3a \\(0\\) \u65f6\uff0c\u8868\u793a\u662f\u7b2c\u4e00\u79cd\u64cd\u4f5c\u3002</p> </li> <li> <p>\u5f53 \\(c\\) \u7684\u503c\u4e3a \\(1\\) \u65f6\uff0c\u8868\u793a\u662f\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u3002</p> </li> </ul> <p>\\(a\\) \u548c \\(b\\) \u5219\u5206\u522b\u8868\u793a\u4e86\u64cd\u4f5c\u533a\u95f4\u7684\u5de6\u53f3\u8fb9\u754c\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(2\\le n\\le 10^5\\)\uff0c\\(1\\le m\\le 10^5\\)\uff0c\\(1\\le a,b\\le n\\)\uff0c\\(c\\in\\{0,1\\}\\)\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_12","title":"\u8bb2\u89e3","text":"<p>\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u5b8c\u6210\uff01\u4f46\u662f\u6211\u4eec\u4e5f\u53d1\u73b0\uff0c\u6211\u4eec\u4e0d\u60f3\u5199\u7ebf\u6bb5\u6811\uff01\u56e0\u4e3a\u5b83\u592a\u957f\u4e86\uff01\u4e8e\u662f\u6211\u4eec\u9009\u7ebf\u6bb5\u6811\u7684\u66ff\u4ee3\u54c1\u2014\u2014\u5206\u5757\uff01</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_13","title":"\u5206\u5757\uff01","text":"<p>549 \u6574\u9664\u5206\u5757\uff08\u6570\u8bba\u5206\u5757\uff09_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u6ce8\u610f\uff0c\u6570\u8bba\u5206\u5757\u4e0e\u6b64\u5904\u7684\u5206\u5757\u4e0d\u4e00\u6837\uff01\u4ee5\u4e0a\u94fe\u63a5\u6307\u5411\u9519\u8bef\u3002</p> <p>OI Wiki\u7684\u5206\u5757\u662f\u6b63\u786e\u7684</p> <p>\u5206\u5757\u601d\u60f3 - OI Wiki</p> <p>\u6211\u4eec\u628a\u4e00\u6bb5\u5e8f\u5217\\(1\\sim n\\) \u5206\u6210$ \\lfloor\\sqrt{n}\\rfloor$\u4efd\uff0c\u53ef\u4ee5\u771f\u5feb\u4fee\u6539\u7684\u5c31\u4e00\u8d77\u4fee\u6539\uff0c\u8d1f\u8d23\u76f4\u63a5\u6734\u7d20\u4fee\u6539\u3002\u8fd9\u6837\u5b50\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u4f1a\u6709\u6240\u8ba9\u6b65\uff0c\u4f46\u662f\u5b83\u7684\u4ee3\u7801\u7b80\u6d01\u6613\u61c2\uff0c\u6269\u5c55\u6027\u5f3a\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_14","title":"\u4ee3\u7801","text":"<p>\u4ee5\u4e0b\u4e3a\u9519\u8bef\u4ee3\u7801</p> <pre><code>//j0, j1 , jn , y1 , y0 , yn\u4e0d\u80fd\u7528\uff1a\u8fd9\u662f\u4e2a\u51fd\u6570\uff08\u975e\u5e38\u7684\u9ad8\u7ea7\uff09\n#include &lt;bits/stdc++.h&gt;\nconst int N=1e5+5;\nint op[N],kuai[N],n,m,sn;\nusing namespace std;\nvoid change(int a,int b){\n    int p=b-b%sn;\n    while((a)%sn){\n        op[a]=1-op[a];\n        if(op[a])kuai[a/sn]++;\n        else kuai[a/sn]--;\n        a++;\n    }\n    while(a&lt;p){\n        kuai[a/sn]=sn-kuai[a/sn];\n        a+=sn;\n    }\n    while(a&lt;=b){\n        op[a]=1-op[a];\n        if(op[a])kuai[a/sn]++;\n        else kuai[a/sn]--;\n        a++;\n    }\n\n}\nvoid query(int a,int b){\n    int ans=0;\n\n    int p=b-b%sn;\n    while((a)%sn){\n        if(op[a])ans++;a++;\n    }\n    while(a&lt;p){\n        ans+=kuai[a/sn];\n        a+=sn;\n    }\n    while(a&lt;=b){\n        if(op[a])ans++;\n        a++;\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\nint main(){\n    //ios::sync_which_stdio(false);\n    cin&gt;&gt;n&gt;&gt;m;\n    sn=sqrt(n);\n    for(int i=1;i&lt;=m;i++){\n        int a,b,c;\n        cin&gt;&gt;c&gt;&gt;a&gt;&gt;b;\n        if(c==0){\n            change(a,b);\n        }else{\n            query(a,b);\n        }\n    } \n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#2","title":"\u4f8b\u9898 #2","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_15","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u8fd9\u6b21\u7684\u4efb\u52a1\u662f\uff1a\u5728\u4f34\u968f\u7740\u6570\u5b57\u6539\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u8bd5\u8bd5\u7edf\u8ba1\u67d0\u6bb5\u7684\u548c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570n\u548cm\uff0c\u8868\u793a\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3an\u4e2a\u5e8f\u5217\u548cm\u4e2a\u64cd\u4f5c</p> <p>\u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c\u7684\u5185\u5bb9\u5c5e\u4e8e\u4ee5\u4e0b\u4e00\u79cd\uff1a</p> <p>Change x a\uff1a\u628a\u7b2cx\u4e2a\u6570\u6539\u6210a</p> <p>Query x y\uff1a\u6c42\u51fa[x,y]\u8fd9\u6bb5\u533a\u95f4\u7684\u548c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_16","title":"\u4f7f\u7528\u5206\u5757\u5b9e\u73b0","text":"<p>\u5206\u5757\u65e0\u8bba\u4fee\u6539\uff0c\u8fd8\u662f\u67e5\u8be2\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u9898\u76ee\u7684\u7b54\u6848\u53ef\u80fd\u5b58\u5728\u7684\u5730\u65b9\uff0c\u90fd\u662f\u7531\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\u7684\uff1a</p> <ul> <li> <p>\u5de6\u8fb9\u6b8b\u7f3a\u5757\uff08\u66b4\u529b\u679a\u4e3e\uff09</p> </li> <li> <p>\u4e2d\u95f4\u6574\u5757</p> </li> <li> <p>\u53f3\u8fb9\u6b8b\u7f3a\u5757\uff08\u66b4\u529b\u679a\u4e3e\uff09</p> </li> </ul> <p>\u7136\u540e\u628a\u8fd9\u4e9b\u90e8\u5206\u7684\u7b54\u6848merge\u5373\u53ef\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%88%86%E5%9D%97/#_17","title":"\u4ee3\u7801","text":"<pre><code>const int N = 5e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nint n;\nint B;\n\nnamespace BD{\n    int v[N];\n    int bv[N];\n\n    void change(int x,int a){\n        bv[x/B]+=a-v[x];\n        v[x]=a;\n    }  \n\n\n    int query(int x,int y){\n        int res=0;\n        if(x/B==y/B){\n            for(itn i=x;i&lt;=y;i++){\n                res+=v[i];\n            }\n            return res;\n        }\n\n        for(int i=x;i/B==x/B&amp;&amp;i&lt;n;i++){\n            res+=v[i];\n        }\n\n        for(int i=y;i/B==y/B&amp;&amp;i&gt;=0;i--){\n            res+=v[i];\n        }\n\n        for(itn i=x/B/B;i++){\n            res+=bv[i];\n        }\n\n\n        return res;\n    }\n\n\n    void build(){\n        for(int i=0;i&lt;n;i++){\n            bv[i/B]+=v[i];\n        }\n    }\n}using namespace BD;\n\nvoid solve(){\n    n=rd;\n    int m=rd;\n    B=sqrt(n)+1;\n    for(itn i=0;i&lt;n;i++){\n        v[i]=rd;\n    }\n    build();\n    while(m--){\n        string s;\n        cin&gt;&gt;s;\n        int a=rd,b=rd;\n        if(s[0]=='Q'){\n            cout&lt;&lt;query(a-1,b-1)&lt;&lt;endl;\n        }else{\n            change(a-1,b);\n        }\n    }\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9D%97%E7%8A%B6%E9%93%BE%E8%A1%A8/","title":"\u5757\u72b6\u94fe\u8868","text":"<p>\u5206\u5757\u601d\u60f3\u5e94\u7528\uff1a\u5757\u72b6\u94fe\u8868</p> <p></p> <p>\u6548\u7387\u5bf9\u6bd4</p> <p></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9D%97%E7%8A%B6%E9%93%BE%E8%A1%A8/#_2","title":"\u57fa\u672c\u64cd\u4f5c","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9D%97%E7%8A%B6%E9%93%BE%E8%A1%A8/#_3","title":"\u7b2c\u4e00\u79cd\u5757\u72b6\u94fe\u8868\uff1a","text":"<p>\u5f3a\u5236\u7ef4\u62a4\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\u4e00\u5b9a\u4e3a \\(\\sqrt{n}\\)</p> <p></p> <p></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9D%97%E7%8A%B6%E9%93%BE%E8%A1%A8/#_4","title":"\u7b2c\u4e8c\u79cd\u5757\u72b6\u94fe\u8868\uff1a","text":"<p>\u4ec5\u7ef4\u62a4\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\\(&lt;\\sqrt{2\\times n}\\)\uff0c\u8ba9\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\u4fdd\u6301\u5728\\(\\sqrt{n}\\)\u9644\u8fd1</p> <p>\u64cd\u4f5c\u7c7b\u578b</p> <p>\u5206\u88c2\u3001\u63d2\u5165\u3001\u67e5\u627e\u3002 </p> <p>\u4ec0\u4e48\u662f\u5206\u88c2\uff1f</p> <p>\u5206\u88c2\u5c31\u662f\u5206\u88c2\u4e00\u4e2a node\uff0c\u53d8\u6210\u4e24\u4e2a\u5c0f\u7684 node\uff0c\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a node \u7684\u5927\u5c0f\u90fd\u63a5\u8fd1 \\(\\sqrt{n}\\)\uff08\u5426\u5219\u53ef\u80fd\u9000\u5316\u6210\u666e\u901a\u6570\u7ec4\uff09\u3002\u5f53\u4e00\u4e2a node \u7684\u5927\u5c0f\u8d85\u8fc7 \\(2\\times \\sqrt{n}\\) \u65f6\u6267\u884c\u5206\u88c2\u64cd\u4f5c\u3002</p> <p>\u5206\u88c2\u64cd\u4f5c\u600e\u4e48\u505a\u5462\uff1f\u5148\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u518d\u628a\u88ab\u5206\u88c2\u7684\u8282\u70b9\u7684\u540e \\(\\sqrt{n}\\) \u4e2a\u503c copy \u5230\u65b0\u8282\u70b9\uff0c\u7136\u540e\u628a\u88ab\u5206\u88c2\u7684\u8282\u70b9\u7684\u540e $\\sqrt{n} $\u4e2a\u503c\u5220\u6389\uff08size--\uff09\uff0c\u6700\u540e\u628a\u65b0\u8282\u70b9\u63d2\u5165\u5230\u88ab\u5206\u88c2\u8282\u70b9\u7684\u540e\u9762\u5373\u53ef\u3002</p> <p>\u63d2\u5165</p> <p>\u8fd8\u6709\u4e00\u4e2a\u8981\u8bf4\u7684\u3002 \u968f\u7740\u5143\u7d20\u7684\u63d2\u5165\uff08\u6216\u5220\u9664\uff09\uff0c\\(n\\) \u4f1a\u53d8\uff0c\\(\\sqrt{n}\\) \u4e5f\u4f1a\u53d8\u3002\u8fd9\u6837\u5757\u7684\u5927\u5c0f\u5c31\u4f1a\u53d8\u5316\uff0c\u6211\u4eec\u96be\u9053\u8fd8\u8981\u6bcf\u6b21\u7ef4\u62a4\u5757\u7684\u5927\u5c0f\uff1f</p> <p>\u5176\u5b9e\u4e0d\u7136\uff0c\u628a $\\sqrt{n} $ \u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5b9a\u503c\u5373\u53ef\u3002\u6bd4\u5982\u9898\u76ee\u7ed9\u7684\u8303\u56f4\u662f \\(10^6\\)\uff0c\u90a3\u4e48 \\(\\sqrt{n}\\) \u5c31\u8bbe\u7f6e\u4e3a\u5927\u5c0f\u4e3a $10^3 $ \u7684\u5e38\u91cf\uff0c\u4e0d\u7528\u66f4\u6539\u5b83\u3002</p> <p>\u67e5\u627e</p> <p>\u4ece\u524d\u5f80\u540e\u627e\u6bcf\u4e2a\u5757\u5373\u53ef\uff0c\u76f4\u63a5\u8bbf\u95ee\u5757\u4e2d\u5b58\u50a8\u7684\u5f53\u524d\u5757\u7684\u5927\u5c0f\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9D%97%E7%8A%B6%E9%93%BE%E8%A1%A8/#_5","title":"\u5177\u4f53\u5b9e\u73b0","text":"<p>\u5b58\u50a8</p> <p>\u6211\u4eec\u8003\u5bdf\u7ed3\u6784\u4f53\u5199\u6cd5\u7684\u666e\u901a\u94fe\u8868</p> <pre><code>struct node {\n    int pre, nxt;\n    int v;\n}a[N];\n</code></pre> <p>\u5757\u72b6\u94fe\u8868\u5b9e\u9645\u4e0a\u548c\u5728\u666e\u901a\u94fe\u8868\u91cc\u6bcf\u4e2a\u8282\u70b9\u5b58\u4e00\u4e2a\u503c\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u662f\u6bcf\u4e2a\u8282\u70b9\u91cc\u5b58\u4e00\u4e2a\u5927\u5c0f\u7ea6\u4e3a\\(\\sqrt{n}\\)\u7684\u6570\u7ec4</p> <pre><code>struct node {\n    int sz, nxt;        //\u8282\u70b9\u5bf9\u5e94\u7684\u6570\u7ec4\u957f\u5ea6,\u94fe\u8868\u4e2d\u4e0b\u4e00\u4e2a\u8282\u70b9\n    char s[MAXB*4];     //\u8282\u70b9\u5bf9\u5e94\u7684\u6570\u7ec4\u5b9e\u9645\u503c(\u4ee5\u4f8b\u98982\u4e3a\u4f8b:\u672c\u9898\u8981\u6c42\u4e3a\u5b57\u7b26)\n}a[N];\n</code></pre> <p>\u67e5\u8be2</p> <pre><code>//\u8fd4\u56de\u539f\u6570\u7ec4\u4e2d\u4e0b\u6807\u4e3ap\u7684\u5143\u7d20\u6240\u5728\u7684\u5757\u7684\u7f16\u53f7\uff0c\u5e76\u5c06\u4f20\u5165\u7684\u5f15\u7528(\u539f\u6570\u7ec4\u4e0b\u6807)\u6539\u4e3a\u5757\u5185\u7684\u4e0b\u6807\u3002\nint pos(int &amp;p) {\n    int x = 0;\n    while(x != -1 &amp;&amp; a[x].sz &lt; p) { //\u4e3a\u65b9\u4fbf\u4e0b\u9762\u7684split\u64cd\u4f5c\uff0c\u5b9a\u4e49\u4e0b\u6807\u5728[1,sz]\u5185,\u4f46\u5b9e\u9645\u6570\u7ec4\u4e0b\u6807\u4ece0\u5f00\u59cb\u3002\n        p -= a[x].sz, x = a[x].nxt;     //\u4e00\u6b21\u8df3\u6574\u4e2a\u8282\u70b9\n    }\n    return x;\n}\n</code></pre> <p>\u63d2\u5165\uff08\u6ce8\u610f\u8fd9\u91cc\u53ea\u662f\u5757\u4e4b\u95f4\u7684\u64cd\u4f5c\uff0c\u662f\u5e95\u5c42\u7684\uff0c\u4e0d\u662f\u8868\u5c42\u64cd\u4f5c\uff09</p> <pre><code>//\u5728\u7f16\u53f7\u4e3ax\u7684\u8282\u70b9\u540e\u63d2\u5165\u4e00\u4e2a\u7f16\u53f7\u4e3ay,\u957f\u5ea6\u4e3alen,\u5bf9\u5e94\u6570\u7ec4\u4e3as\u7684\u8282\u70b9\nvoid add(int x, int y, int len, char *s) {\n    if(y != -1) {       //\u7279\u5224x\u6307\u5411-1(\u5373\u94fe\u8868\u7684\u672b\u5c3e)\n        a[y].sz = len;      //\u5bf9\u7f16\u53f7\u4e3ay\u7684\u8282\u70b9\u8d4b\u503c\n        a[y].nxt = a[x].nxt;\n        memcpy(a[y].s, s, len);     //memcpy\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u590d\u5236\u7684\u5b57\u8282\u6570,\u6240\u4ee5\u8fd9\u91cc\u7684len\u672c\u6765\u5e94\u8be5\u4e58\u4e0a\u76f8\u5e94\u5143\u7d20\u7c7b\u578b\u7684size,\u4f46\u672c\u9898\u7531\u4e8esizeof(char)=1\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u4e58\u3002\n    }\n    a[x].nxt = y;       //x\u6307\u5411y\n}\n</code></pre> <p>\uff08\u6279\u6ce8\uff1a\u4ee3\u7801\u4e2d\u7684y\u5e94\u8be5\u4f20\u5165\u7684\u662f++idx\uff09</p> <p>\u5408\u5e76</p> <pre><code>//\u628a\u7f16\u53f7\u4e3ax\u548cy\u7684\u4e24\u4e2a\u8282\u70b9\u5408\u5e76\n//\u6211\u4eec\u9009\u62e9\u628ay\u66b4\u529b\u63a5\u5728x\u7684\u540e\u9762,\u7136\u540e\u628ay\u5220\u9664\nvoid merge(int x, int y) {\n    memcpy(a[x].s/\u628ay\u5bf9\u5e94\u7684\u6570\u7ec4\u63a5\u5230x\u540e\u9762\n    a[x].sz += a[y].sz, a[x].nxt = a[y].nxt;    //\u7528y\u7684\u4fe1\u606f\u66f4\u65b0x\n    del(y);     //\u5220\u9664y\n}\n</code></pre> <p>\uff08\u6279\u6ce8\uff1a\u8fd9\u91cc\u4f7f\u7528\u4e86memcpy\u7684\u7528\u6cd5\uff1a\u4ee5\u4e0b\u4ee3\u7801\u53ef\u4ee5\u4e00\u6b65\u5c06b\u63d2\u5165\u5230a\u7684\u540e\u9762\uff0c\u5f53\u7136\u4f60\u624b\u5199\u4e5f\u884c\uff0c\u53ea\u4e0d\u8fc7\u6548\u7387\u4f4e\u4e0b\uff0c\u66f4\u591a\u8bf7\u53c2\u8003\u7f51\u7edc\u6d41\u5185\u6709\u5173memcpy\u7684\u89e3\u8bf4\uff09</p> <pre><code>memcpy(a/a,b\u4e3a\u6570\u7ec4,len_a,len_b\u4e3a\u53d8\u91cf\uff0c\u5b58\u7684\u662fa,b\u6570\u7ec4\u7684\u5927\u5c0f\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684<code>del()</code>\u89e3\u8bf4\uff1a</p> <pre><code>void del(int x) {       //\u56de\u6536\u8282\u70b9\n    pool[++tot] = x;\n}\n</code></pre> <p>\u5176\u4e2dpool[]\u4e2d\u5b58\u5230\u662f\u6ca1\u6709\u4f7f\u7528\u7684\u8282\u70b9\u3002\u56e0\u4e3a\u5728\u5220\u9664\u4e2d\u6211\u4eec\u4f1a\u5220\u9664\u67d0\u4e9b\u8282\u70b9\uff0c\u8fd9\u4e9b\u8282\u70b9\u5c31\u4f1a\u7a7a\u51fa\u6765\u3002\u5982\u679c\u6bcf\u6b21\u6211\u4eec\u5728\u63d2\u5165\u65f6\u90fd\u628a\u65b0\u7684\u5206\u5757\u5f80\u540e\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u524d\u9762\u5c31\u4f1a\u6709\u4e00\u4e9b\u7a7a\u4f59\u7684\u8282\u70b9\u88ab\u6d6a\u8d39\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u6240\u4ee5pool[]\u6765\u8bb0\u5f55\u7a7a\u4f59\u7684\u8282\u70b9\uff08\u6216\u8005\u8bf4\u662f\u5df2\u56de\u6536\u53ef\u518d\u6b21\u5229\u7528\u7684\u8282\u70b9\uff09</p> <p>\u5206\u88c2</p> <pre><code>//\u628a\u7b2cx\u4e2a\u8282\u70b9\u4ecepos\u4f4d\u7f6e\u5206\u88c2\u6210\u4e24\u4e2a\u8282\u70b9(\u5373\u524dpos\u4e2a\u548c\u540esz-pos\u4e2a\u5206\u79bb)\nvoid split(int x, int pos) {\n    if(x == -1 || pos == a[x].sz) return;       //\u5982\u679c\u8282\u70b9\u4e3a\u7a7a\u6216\u8005\u6839\u672c\u4e0d\u9700\u8981\u5206\u88c2(\u5206\u88c2\u4f4d\u7f6e\u5728\u5757\u7684\u672b\u5c3e)\n    int t = new_node();     //\u5206\u88c2\u540e\u591a\u51fa\u4e00\u4e2a\u8282\u70b9\n    add(x, t, a[x].sz-pos, a[x].s/\u628a\u5206\u79bb\u51fa\u6765\u7684\u540e\u534a\u90e8\u5206\u63a5\u5728\u539f\u8282\u70b9\u7684\u540e\u9762\n    a[x].sz = pos;      //\u628asz\u8d4b\u503c\u4e3apos,\u76f8\u5f53\u4e8e\u53ea\u4fdd\u7559\u4e86\u524d\u534a\u90e8\u5206\u7684\u5143\u7d20,pos\u4e4b\u540e\u7684\u5143\u7d20\u8fd8\u5b58\u5728,\u53ea\u4e0d\u8fc7\u6211\u4eec\u628a\u5b83\u5f53\u6210\u4e0d\u5b58\u5728(\u5c31\u50cf\u673a\u68b0\u786c\u76d8\u7684\u5220\u9664\u6570\u636e\u7684\u65b9\u5f0f)\n}\n</code></pre> <p>\u5176\u4e2d\u7684<code>new_node()</code>\u64cd\u4f5c</p> <pre><code>int new_node() {        //\u4ecepool\u4e2d\u5206\u914d\u4e00\u4e2a\u7a7a\u4f59\u7684\u8282\u70b9\uff0c\u8fd4\u56de\u7684\u662f\u8282\u70b9\u7684\u4e0b\u6807\n    return pool[tot--];\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9D%97%E7%8A%B6%E9%93%BE%E8%A1%A8/#_6","title":"\u76f8\u5173\u64cd\u4f5c\uff08\u89c6\u9891\u5185\u6458\u5f55\uff09","text":"<p>\u63d2\u5165</p> <p></p> <p>\u5220\u9664</p> <p></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9D%97%E7%8A%B6%E9%93%BE%E8%A1%A8/#stl","title":"\u6269\u5c55\uff1aSTL\u4e2d\u7684\u5757\u72b6\u94fe\u8868","text":"<p>\u5757\u72b6\u94fe\u8868 - OI Wiki</p> <p>\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u6765\u5f15\u5165\uff1a</p> <pre><code>#include &lt;ext/rope&gt;\nusing namespace __gnu_cxx;\n</code></pre> <p><code>rope</code> \u76ee\u524d\u53ef\u4ee5\u5728 OI \u4e2d\u6b63\u5e38\u4f7f\u7528\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9D%97%E7%8A%B6%E9%93%BE%E8%A1%A8/#_7","title":"\u57fa\u672c\u64cd\u4f5c","text":"\u64cd\u4f5c \u4f5c\u7528 <code>rope &lt;int &gt; a</code> \u521d\u59cb\u5316 <code>rope</code>\uff08\u4e0e <code>vector</code> \u7b49\u5bb9\u5668\u5f88\u76f8\u4f3c\uff09 <code>a.push_back(x)</code> \u5728 <code>a</code> \u7684\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20 <code>x</code> <code>a.insert(pos, x)</code> \u5728 <code>a</code> \u7684 <code>pos</code> \u4e2a\u4f4d\u7f6e\u6dfb\u52a0\u5143\u7d20 <code>x</code> <code>a.erase(pos, x)</code> \u5728 <code>a</code> \u7684 <code>pos</code> \u4e2a\u4f4d\u7f6e\u5220\u9664 <code>x</code> \u4e2a\u5143\u7d20 <code>a.at(x)</code> \u6216 <code>a[x]</code> \u8bbf\u95ee <code>a</code> \u7684\u7b2c <code>x</code> \u4e2a\u5143\u7d20 <code>a.length()</code> \u6216 <code>a.size()</code> \u83b7\u53d6 <code>a</code> \u7684\u5927\u5c0f"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9D%97%E7%8A%B6%E9%93%BE%E8%A1%A8/#1","title":"\u4f8b\u9898 #1","text":"<p>\u4e13\u9898 | \u5357\u591620230715-\u6811\u72b6\u6570\u7ec4&amp;\u7ebf\u6bb5\u6811&amp;bitset</p> <p>\u89c1\u7b2cH\u9898</p> <p>\u7b97\u6cd5\u7ade\u8d5b4.6-\u5757\u72b6\u94fe\u8868_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9D%97%E7%8A%B6%E9%93%BE%E8%A1%A8/#2-noi2003","title":"\u4f8b\u9898 #2 [NOI2003] \u6587\u672c\u7f16\u8f91\u5668","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5f88\u4e45\u5f88\u4e45\u4ee5\u524d\uff0c\\(DOS3.x\\) \u7684\u7a0b\u5e8f\u5458\u4eec\u5f00\u59cb\u5bf9 \\(EDLIN\\) \u611f\u5230\u538c\u5026\u3002\u4e8e\u662f\uff0c\u4eba\u4eec\u5f00\u59cb\u7eb7\u7eb7\u6539\u7528\u81ea\u5df1\u5199\u7684\u6587\u672c\u7f16\u8f91\u5668\u22ef\u22ef</p> <p>\u591a\u5e74\u4e4b\u540e\uff0c\u51fa\u4e8e\u5076\u7136\u7684\u673a\u4f1a\uff0c\u5c0f\u660e\u627e\u5230\u4e86\u5f53\u65f6\u7684\u4e00\u4e2a\u7f16\u8f91\u8f6f\u4ef6\u3002\u8fdb\u884c\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u6d4b\u8bd5\u540e\uff0c\u5c0f\u660e\u60ca\u5947\u5730\u53d1\u73b0\uff1a\u90a3\u4e2a\u8f6f\u4ef6\u6bcf\u79d2\u80fd\u591f\u8fdb\u884c\u4e0a\u4e07\u6b21\u7f16\u8f91\u64cd\u4f5c\uff08\u5f53\u7136\uff0c\u4f60\u4e0d\u80fd\u624b\u5de5\u8fdb\u884c\u8fd9\u6837\u7684\u6d4b\u8bd5\uff09 \uff01\u4e8e\u662f\uff0c\u5c0f\u660e\u5e9f\u5bdd\u5fd8\u98df\u5730\u60f3\u505a\u4e00\u4e2a\u540c\u6837\u7684\u4e1c\u897f\u51fa\u6765\u3002\u4f60\u80fd\u5e2e\u52a9\u4ed6\u5417\uff1f</p> <p>\u4e3a\u4e86\u660e\u786e\u76ee\u6807\uff0c\u5c0f\u660e\u5bf9\u201c\u6587\u672c\u7f16\u8f91\u5668\u201d\u505a\u4e86\u4e00\u4e2a\u62bd\u8c61\u7684\u5b9a\u4e49:</p> <p>\u6587\u672c\uff1a\u7531 \\(0\\) \u4e2a\u6216\u591a\u4e2a ASCII \u7801\u5728\u95ed\u533a\u95f4 [\\(32\\), \\(126\\)] \u5185\u7684\u5b57\u7b26\u6784\u6210\u7684\u5e8f\u5217\u3002</p> <p>\u5149\u6807\uff1a\u5728\u4e00\u6bb5\u6587\u672c\u4e2d\u7528\u4e8e\u6307\u793a\u4f4d\u7f6e\u7684\u6807\u8bb0\uff0c\u53ef\u4ee5\u4f4d\u4e8e\u6587\u672c\u9996\u90e8\uff0c\u6587\u672c\u5c3e\u90e8\u6216\u6587\u672c\u7684\u67d0\u4e24\u4e2a\u5b57\u7b26\u4e4b\u95f4\u3002</p> <p>\u6587\u672c\u7f16\u8f91\u5668\uff1a\u7531\u4e00\u6bb5\u6587\u672c\u548c\u8be5\u6587\u672c\u4e2d\u7684\u4e00\u4e2a\u5149\u6807\u7ec4\u6210\u7684\uff0c\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\u3002\u5982\u679c\u8fd9\u6bb5\u6587\u672c\u4e3a\u7a7a\uff0c\u6211\u4eec\u5c31\u8bf4\u8fd9\u4e2a\u6587\u672c\u7f16\u8f91\u5668\u662f\u7a7a\u7684\u3002</p> \u64cd\u4f5c\u540d\u79f0 \u8f93\u5165\u6587\u4ef6\u4e2d\u7684\u683c\u5f0f \u529f\u80fd \\(\\text{Move}(k)\\) Move k \u5c06\u5149\u6807\u79fb\u52a8\u5230\u7b2c \\(k\\) \u4e2a\u5b57\u7b26\u4e4b\u540e\uff0c\u5982\u679c \\(k=0\\)\uff0c\u5c06\u5149\u6807\u79fb\u5230\u6587\u672c\u5f00\u5934 \\(\\text{Insert}(n,s)\\) Insert n s \u5728\u5149\u6807\u5904\u63d2\u5165\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5b57\u7b26\u4e32 \\(s\\)\uff0c\u5149\u6807\u4f4d\u7f6e\u4e0d\u53d8\\(n\\geq1\\) \\(\\text{Delete}(n)\\) Delete n \u5220\u9664\u5149\u6807\u540e\u7684 \\(n\\) \u4e2a\u5b57\u7b26\uff0c\u5149\u6807\u4f4d\u7f6e\u4e0d\u53d8\uff0c\\(n \\geq 1\\) \\(\\text{Get}(n)\\) Get n \u8f93\u51fa\u5149\u6807\u540e\u7684 \\(n\\) \u4e2a\u5b57\u7b26\uff0c\u5149\u6807\u4f4d\u7f6e\u4e0d\u53d8\uff0c\\(n \\geq 1\\) \\(\\text{Prev}()\\) Prev \u5149\u6807\u524d\u79fb\u4e00\u4e2a\u5b57\u7b26 \\(\\text{Next}()\\) Next \u5149\u6807\u540e\u79fb\u4e00\u4e2a\u5b57\u7b26 <p>\u4f60\u7684\u4efb\u52a1\u662f\uff1a</p> <ul> <li> <p>\u5efa\u7acb\u4e00\u4e2a\u7a7a\u7684\u6587\u672c\u7f16\u8f91\u5668\u3002</p> </li> <li> <p>\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u8bfb\u5165\u4e00\u4e9b\u64cd\u4f5c\u5e76\u6267\u884c\u3002</p> </li> <li> <p>\u5bf9\u6240\u6709\u6267\u884c\u8fc7\u7684 <code>GET</code> \u64cd\u4f5c\uff0c\u5c06\u6307\u5b9a\u7684\u5185\u5bb9\u5199\u5165\u8f93\u51fa\u6587\u4ef6\u3002</p> </li> </ul> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u6587\u4ef6 <code>editor.in</code> \u7684\u7b2c\u4e00\u884c\u662f\u6307\u4ee4\u6761\u6570 \\(t\\)\uff0c\u4ee5\u4e0b\u662f\u9700\u8981\u6267\u884c\u7684 \\(t\\) \u4e2a\u64cd\u4f5c\u3002\u5176\u4e2d\uff1a</p> <p>\u4e3a\u4e86\u4f7f\u8f93\u5165\u6587\u4ef6\u4fbf\u4e8e\u9605\u8bfb\uff0c <code>Insert</code> \u64cd\u4f5c\u7684\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u4f1a\u63d2\u5165\u4e00\u4e9b\u56de\u8f66\u7b26\uff0c \u8bf7\u5ffd\u7565\u6389\u5b83\u4eec\uff08\u5982\u679c\u96be\u4ee5\u7406\u89e3\u8fd9\u53e5\u8bdd\uff0c\u53ef\u4ee5\u53c2\u7167\u6837\u4f8b\uff09 \u3002</p> <p>\u9664\u4e86\u56de\u8f66\u7b26\u4e4b\u5916\uff0c\u8f93\u5165\u6587\u4ef6\u7684\u6240\u6709\u5b57\u7b26\u7684 ASCII \u7801\u90fd\u5728\u95ed\u533a\u95f4 [\\(32\\), \\(126\\)] \u5185\u3002\u4e14</p> <p>\u884c\u5c3e\u6ca1\u6709\u7a7a\u683c\u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u6709\u5982\u4e0b\u5047\u5b9a\uff1a</p> <ul> <li> <p><code>MOVE</code> \u64cd\u4f5c\u4e0d\u8d85\u8fc7 \\(50000\\) \u4e2a\uff0c <code>INSERT</code> \u548c <code>DELETE</code> \u64cd\u4f5c\u7684\u603b\u4e2a\u6570\u4e0d\u8d85\u8fc7 \\(4000\\)\uff0c<code>PREV</code> \u548c <code>NEXT</code> \u64cd\u4f5c\u7684\u603b\u4e2a\u6570\u4e0d\u8d85\u8fc7 \\(200000\\)\u3002</p> </li> <li> <p>\u6240\u6709 <code>INSERT</code> \u63d2\u5165\u7684\u5b57\u7b26\u6570\u4e4b\u548c\u4e0d\u8d85\u8fc7 \\(2M\\)\uff08\\(1M=1024\\times 1024\\) \u5b57\u8282\uff09 \uff0c\u6b63\u786e\u7684\u8f93\u51fa\u6587\u4ef6\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(3M\\) \u5b57\u8282\u3002</p> </li> <li> <p><code>DELETE</code> \u64cd\u4f5c\u548c <code>GET</code> \u64cd\u4f5c\u6267\u884c\u65f6\u5149\u6807\u540e\u5fc5\u7136\u6709\u8db3\u591f\u7684\u5b57\u7b26\u3002 <code>MOVE</code> \u3001 <code>PREV</code> \u3001 <code>NEXT</code> \u64cd\u4f5c\u5fc5\u7136\u4e0d\u4f1a\u8bd5\u56fe\u628a\u5149\u6807\u79fb\u52a8\u5230\u975e\u6cd5\u4f4d\u7f6e\u3002</p> </li> <li> <p>\u8f93\u5165\u6587\u4ef6\u6ca1\u6709\u9519\u8bef\u3002</p> </li> </ul> <p>\u5bf9 C++ \u9009\u624b\u7684\u63d0\u793a\uff1a\u7ecf\u6d4b\u8bd5\uff0c\u6700\u5927\u7684\u6d4b\u8bd5\u6570\u636e\u4f7f\u7528 <code>fstream</code> \u8fdb\u884c\u8f93\u5165\u6709\u53ef\u80fd\u4f1a\u6bd4\u4f7f\u7528 <code>stdio</code> \u6162\u7ea6 \\(1\\) \u79d2\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u6587\u4ef6 editor.out \u7684\u6bcf\u884c\u4f9d\u6b21\u5bf9\u5e94\u8f93\u5165\u6587\u4ef6\u4e2d\u6bcf\u6761 <code>Get</code> \u6307\u4ee4\u7684\u8f93\u51fa\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","title":"\u57fa\u7840\u7ebf\u6027\u6570\u636e\u7ed3\u6784","text":"<p>\u6808</p> <p>\u961f\u5217</p> <p>\u94fe\u8868</p> <p>\u5355\u8c03\u961f\u5217</p> <p>\u5355\u8c03\u6808</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/","title":"\u5e73\u8861\u6811","text":"<p>\u4e13\u9898 | \u4e8c\u53c9\u67e5\u627e\u6811\u4e0e\u5e73\u8861\u6811</p> <p>\u5e73\u8861\u6811\u91cd\u70b9\uff1a\u5bf9\u4e8eFHQ\uff0csplit\u51fd\u6570\u4f1a\u968f\u9898\u76ee\u8981\u6c42\u800c\u6539\u53d8\uff01\uff01\uff01</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/#_1","title":"\u76ee\u5f55","text":"<ul> <li> <p>\u5e73\u8861\u6811FHQ Treap</p> </li> <li> <p>\u5e73\u8861\u6811Splay</p> </li> <li> <p>pbds\u4e2d\u7684\u5e73\u8861\u6811</p> </li> <li> <p>\u5e73\u8861\u6811\u7684vector\u4f2a\u505a\u6cd5</p> </li> <li> <p>\u6587\u827a\u5e73\u8861\u6811</p> </li> <li> <p>\u4e8c\u903c\u5e73\u8861\u6811\uff08\u6811\u5957\u6811\uff09</p> </li> <li> <p>\u540e\u7f00\u5e73\u8861\u6811</p> </li> <li> <p>\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811</p> </li> </ul> <p>FHQ Treap</p> <p>Splay</p> <p>Treap</p> <p>\u6587\u827a\u5e73\u8861\u6811</p> <p>\u540e\u7f00\u5e73\u8861\u6811</p> <p>\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811</p> <p>\u5176\u5b83\u5e73\u8861\u6811</p> <p>\u5e73\u8861\u6811\u4f8b\u9898</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/","title":"\u5e76\u67e5\u96c6","text":"<p>\u4e13\u9898 | \u5e76\u67e5\u96c6&amp;\u6269\u5c55</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_1","title":"\u5e76\u67e5\u96c6","text":"<p>\u5e76\u67e5\u96c6\uff08Union-Find\uff09\u6570\u636e\u7ed3\u6784\u662f\u4e00\u79cd\u7528\u4e8e\u5904\u7406\u4e00\u4e9b\u4e0d\u4ea4\u96c6\u7684\u5408\u5e76\u53ca\u67e5\u8be2\u95ee\u9898\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\u5408\u5e76\uff08Union\uff09\u548c\u67e5\u8be2\uff08Find\uff09\u3002\u4ee5\u4e0b\u662f\u5e76\u67e5\u96c6\u7684\u57fa\u672c\u5b9e\u73b0\u539f\u7406\uff1a</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li> <p>\u96c6\u5408\uff1a\u5e76\u67e5\u96c6\u662f\u7531\u4e00\u7cfb\u5217\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408\u7ec4\u6210\u7684\u96c6\u5408\u3002</p> </li> <li> <p>\u4ee3\u8868\u5143\u7d20\uff08\u6839\u8282\u70b9\uff09\uff1a\u6bcf\u4e2a\u96c6\u5408\u4e2d\u90fd\u4f1a\u6709\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u8be5\u96c6\u5408\u7684\u4ee3\u8868\u5143\u7d20\u3002\u5728\u5b9e\u73b0\u4e2d\uff0c\u901a\u5e38\u7528\u4ee3\u8868\u5143\u7d20\u6765\u6807\u8bc6\u4e00\u4e2a\u96c6\u5408\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_3","title":"\u521d\u59cb\u5316","text":"<p>\u5728\u5e76\u67e5\u96c6\u7684\u521d\u59cb\u5316\u9636\u6bb5\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u88ab\u770b\u4f5c\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u96c6\u5408\uff0c\u5176\u4ee3\u8868\u5143\u7d20\u5c31\u662f\u5b83\u81ea\u5df1\u3002</p> <pre><code>parent[i] = i;  // \u521d\u59cb\u65f6\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u662f\u5b83\u81ea\u5df1\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#find","title":"\u67e5\u627e\uff08Find\uff09","text":"<p>\u67e5\u627e\u64cd\u4f5c\u7528\u4e8e\u786e\u5b9a\u4e00\u4e2a\u5143\u7d20\u5c5e\u4e8e\u54ea\u4e2a\u96c6\u5408\uff0c\u8fd9\u901a\u5e38\u662f\u901a\u8fc7\u627e\u5230\u8be5\u5143\u7d20\u7684\u4ee3\u8868\u5143\u7d20\u6765\u5b9e\u73b0\u7684\u3002</p> <pre><code>int find(int x) {\n    if (parent[x] == x) {\n        return x;  // \u5982\u679cx\u662f\u5176\u81ea\u5df1\u7684\u7236\u8282\u70b9\uff0c\u90a3\u4e48x\u662f\u4ee3\u8868\u5143\u7d20\n    }\n    return find(parent[x]);  // \u9012\u5f52\u67e5\u627ex\u7684\u7236\u8282\u70b9\u7684\u4ee3\u8868\u5143\u7d20\n}\n</code></pre> <p>\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u901a\u5e38\u4f1a\u5728\u67e5\u627e\u8fc7\u7a0b\u4e2d\u8fdb\u884c**\u8def\u5f84\u538b\u7f29**\uff0c\u5373\u5c06\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u76f4\u63a5\u8fde\u63a5\u5230\u4ee3\u8868\u5143\u7d20\u4e0a\u3002</p> <pre><code>int find(int x) {\n    if (parent[x] != x) {\n        parent[x] = find(parent[x]);  // \u8def\u5f84\u538b\u7f29\n    }\n    return parent[x];\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#union","title":"\u5408\u5e76\uff08Union\uff09","text":"<p>\u5408\u5e76\u64cd\u4f5c\u7528\u4e8e\u5c06\u4e24\u4e2a\u96c6\u5408\u5408\u5e76\u6210\u4e00\u4e2a\u96c6\u5408\u3002\u901a\u5e38\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u9009\u62e9\u4e24\u4e2a\u96c6\u5408\u7684\u4ee3\u8868\u5143\u7d20\uff0c\u7136\u540e\u5c06\u4e00\u4e2a\u96c6\u5408\u7684\u4ee3\u8868\u5143\u7d20\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u4ee3\u8868\u5143\u7d20\u7684\u5b50\u8282\u70b9\u3002</p> <pre><code>void unionSets(int x, int y) {\n    int rootX = find(x);  // \u67e5\u627ex\u7684\u4ee3\u8868\u5143\u7d20\n    int rootY = find(y);  // \u67e5\u627ey\u7684\u4ee3\u8868\u5143\u7d20\n    if (rootX != rootY) {\n        parent[rootY] = rootX;  // \u5c06rootY\u7684\u4ee3\u8868\u5143\u7d20\u8bbe\u7f6e\u4e3arootX\n    }\n}\n</code></pre> <p>\u4e3a\u4e86\u9632\u6b62\u5408\u5e76\u540e\u6811\u53d8\u5f97\u4e0d\u5e73\u8861\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528**\u6309\u79e9\u5408\u5e76**\uff08\u6309\u5927\u5c0f\u5408\u5e76\uff09\u7684\u7b56\u7565\uff0c\u5373\u603b\u662f\u5c06\u79e9\u8f83\u5c0f\u7684\u6811\u5408\u5e76\u5230\u79e9\u8f83\u5927\u7684\u6811\u4e2d\u3002</p> <pre><code>void unionSets(int x, int y) {\n    int rootX = find(x);\n    int rootY = find(y);\n    if (rootX != rootY) {\n        if (rank[rootX] &gt; rank[rootY]) {\n            parent[rootY] = rootX;\n        } else if (rank[rootX] &lt; rank[rootY]) {\n            parent[rootX] = rootY;\n        } else {\n            parent[rootY] = rootX;\n            rank[rootX] += 1;  // \u5982\u679c\u79e9\u76f8\u540c\uff0c\u9009\u62e9\u4e00\u4e2a\u4f5c\u4e3a\u6839\uff0c\u5e76\u589e\u52a0\u5176\u79e9\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_4","title":"\u603b\u7ed3","text":"<p>\u5e76\u67e5\u96c6\u901a\u8fc7\u5c06\u6bcf\u4e2a\u96c6\u5408\u7684\u4ee3\u8868\u5143\u7d20\u4f5c\u4e3a\u6811\u7684\u6839\u8282\u70b9\uff0c\u5e76\u901a\u8fc7\u7236\u8282\u70b9\u6307\u9488\u6765\u8868\u793a\u6811\u7ed3\u6784\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u9ad8\u6548\u7684\u5408\u5e76\u548c\u67e5\u8be2\u64cd\u4f5c\u3002\u8def\u5f84\u538b\u7f29\u548c\u6309\u79e9\u5408\u5e76\u662f\u4e24\u79cd\u5e38\u7528\u7684\u4f18\u5316\u65b9\u6cd5\uff0c\u5b83\u4eec\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u5e76\u67e5\u96c6\u7684\u64cd\u4f5c\u6548\u7387\u3002\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff0c\u5e76\u67e5\u96c6\u7684\u64cd\u4f5c\u51e0\u4e4e\u53ef\u4ee5\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5b8c\u6210\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#1","title":"\u4f8b\u9898 #1","text":"<p>\u8f93\u5165\u7531\u4e24\u90e8\u5206\u7ec4\u6210\u3002</p> <p>\u7b2c\u4e00\u90e8\u5206\u4ee5N\uff0cM\u5f00\u59cb\u3002N\u4e3a\u95ee\u9898\u6d89\u53ca\u7684\u4eba\u7684\u4e2a\u6570(1\u2264N\u226420000)\u3002\u8fd9\u4e9b\u4eba\u7684\u7f16\u53f7\u4e3a1,2,3,\u2026, N\u3002\u4e0b\u9762\u6709M\u884c(1\u2264M\u22641000000)\uff0c\u6bcf\u884c\u6709\u4e24\u4e2a\u6570ai,bi\uff0c\u8868\u793a\u5df2\u77e5ai\u548cbi\u662f\u4eb2\u621a\u3002</p> <p>\u7b2c\u4e8c\u90e8\u5206\u4ee5Q\u5f00\u59cb\u3002\u4ee5\u4e0bQ\u884c\u6709Q\u4e2a\u8be2\u95ee(1\u2264 Q \u22641000000)\uff0c\u6bcf\u884c\u4e3aci,di\uff0c\u8868\u793a\u8be2\u95eeci\u548cdi\u662f\u5426\u4e3a\u4eb2\u621a\u3002</p> <p>\u6838\u5fc3\u4ee3\u7801</p> <p>\u8def\u5f84\u538b\u7f29</p> <pre><code>int find(x){\n    if(fa[x]==x)return x;\n    return fa[x]=find(fa[x]);\n}\n</code></pre> <p>\u5408\u5e76</p> <pre><code>void merge(int a,int b){\n    a=find(a),b=find(b);\n    fa[a]=b;\n}\n</code></pre> <p>\u6309\u79e9\u5408\u5e76</p> <pre><code>void merge(int a,int b){\n    a=find(a),b=find(b);\n    if(x==y)return ;\n    if(sz[a]&gt;sz[b])swap(a,b);\n    fa[a]=b;\n    sz[b]+=sz[a];//sz[]\u521d\u59cb\u5316\u4e3a1\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_5","title":"\u5e76\u67e5\u96c6\u7ef4\u62a4\u5e76\u67e5\u96c6\u4fe1\u606f","text":"<p>\u7ef4\u62a4\u5e76\u67e5\u96c6\u5927\u5c0f</p> <p>\u4e0d\u8981\u5fd8\u8bb0\u600e\u4e48\u5199\uff01\u53ea\u9700\u8981merge\u65f6\u4fee\u6539\u5373\u53ef\u3002</p> <pre><code>int find(int a){\n    if(fa[a]==a)return a;\n    return fa[a]=find(fa[a]);\n}\n\nvoid merge(int faa,int fbb){\n    if(faa!=fbb)fa[faa]=fbb,sz[fbb]+=sz[faa];\n}\n\n//merge(find(e[cur].a),find(e[cur].b));\n</code></pre> <p>www.luogu.com.cn</p> <p>\u7ef4\u62a4\u5e76\u67e5\u96c6\u5927\u5c0f\uff0c\u5e76\u4e14\u4ee5\u6b64\u66f4\u65b0\u8be5\u70b9\u5230\u94fe\u5934\u7684\u8ddd\u79bb</p> <pre><code>int find(int x){\n    if(fa[x]==x)return x;\n    int f=fa[x];\n    fa[x]=find(fa[x]);\n    dis[x]+=dis[f];\n    sz[x]+=sz[fa[x]];\n    return fa[x];\n}\n\nvoid merge(int x,int y){\n    int fx=find(x),fy=find(y);\n    fa[fx]=fy;\n    dis[fx]+=sz[fy];\n    sz[fx]+=sz[fy];//\u66f4\u65b0\u96c6\u5408\u5927\u5c0f\n    sz[fy]=sz[fx];//\u8bb0\u5f55\u5f53\u524d\u70b9\u5b9e\u5728\u96c6\u5408\u7684\u5927\u5c0f\n\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_6","title":"\u5e76\u67e5\u96c6\u6c42\u6700\u5c0f\u73af","text":"<p>https://www.luogu.com.cn/problem/P2661</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n//\n\nconst int N = 1e6 + 5;\nconst int INF = 1e9 + 5;\nconst int MOD = 998244353;\n\nbool f1;\nint t[N], fa[N], d[N], ans, n;\nbool f2;\nint find(int x){\n    if(fa[x]!=x){\n        int l=fa[x];\n        fa[x]=find(fa[x]);\n        d[x]+=d[l];\n    }return fa[x];\n}\n\nsigned main() {\n    n=rd;\n    for(int i=1;i&lt;=n;i++){\n        fa[i]=i;t[i]=rd;\n    }\n    ans=INF;\n    for(int i=1;i&lt;=n;i++){\n        int a=find(i),b=find(t[i]);\n        if(a!=b){\n            fa[a]=b;d[i]=d[t[i]]+1;\n        }else{\n            ans=min(ans,d[i]+d[t[i]]+1);\n        }\n    }\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_7","title":"\u6269\u5c55\u57df\u5e76\u67e5\u96c6","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#noi2001","title":"[NOI2001] \u98df\u7269\u94fe","text":"<p>\u52a8\u7269\u738b\u56fd\u4e2d\u6709\u4e09\u7c7b\u52a8\u7269 \\(A,B,C\\)\uff0c\u8fd9\u4e09\u7c7b\u52a8\u7269\u7684\u98df\u7269\u94fe\u6784\u6210\u4e86\u6709\u8da3\u7684\u73af\u5f62\u3002\\(A\\) \u5403 \\(B\\)\uff0c\\(B\\) \u5403 \\(C\\)\uff0c\\(C\\) \u5403 \\(A\\)\u3002</p> <p>\u73b0\u6709 \\(N\\) \u4e2a\u52a8\u7269\uff0c\u4ee5 \\(1 \\sim N\\) \u7f16\u53f7\u3002\u6bcf\u4e2a\u52a8\u7269\u90fd\u662f \\(A,B,C\\) \u4e2d\u7684\u4e00\u79cd\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u5b83\u5230\u5e95\u662f\u54ea\u4e00\u79cd\u3002</p> <p>\u6709\u4eba\u7528\u4e24\u79cd\u8bf4\u6cd5\u5bf9\u8fd9 \\(N\\) \u4e2a\u52a8\u7269\u6240\u6784\u6210\u7684\u98df\u7269\u94fe\u5173\u7cfb\u8fdb\u884c\u63cf\u8ff0\uff1a</p> <ul> <li> <p>\u7b2c\u4e00\u79cd\u8bf4\u6cd5\u662f <code>1 X Y</code>\uff0c\u8868\u793a \\(X\\) \u548c \\(Y\\) \u662f\u540c\u7c7b\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u79cd\u8bf4\u6cd5\u662f<code>2 X Y</code>\uff0c\u8868\u793a \\(X\\) \u5403 \\(Y\\)\u3002</p> </li> </ul> <p>\u6b64\u4eba\u5bf9 \\(N\\) \u4e2a\u52a8\u7269\uff0c\u7528\u4e0a\u8ff0\u4e24\u79cd\u8bf4\u6cd5\uff0c\u4e00\u53e5\u63a5\u4e00\u53e5\u5730\u8bf4\u51fa \\(K\\) \u53e5\u8bdd\uff0c\u8fd9 \\(K\\) \u53e5\u8bdd\u6709\u7684\u662f\u771f\u7684\uff0c\u6709\u7684\u662f\u5047\u7684\u3002\u5f53\u4e00\u53e5\u8bdd\u6ee1\u8db3\u4e0b\u5217\u4e09\u6761\u4e4b\u4e00\u65f6\uff0c\u8fd9\u53e5\u8bdd\u5c31\u662f\u5047\u8bdd\uff0c\u5426\u5219\u5c31\u662f\u771f\u8bdd\u3002</p> <ul> <li> <p>\u5f53\u524d\u7684\u8bdd\u4e0e\u524d\u9762\u7684\u67d0\u4e9b\u771f\u7684\u8bdd\u51b2\u7a81\uff0c\u5c31\u662f\u5047\u8bdd\uff1b</p> </li> <li> <p>\u5f53\u524d\u7684\u8bdd\u4e2d \\(X\\) \u6216 \\(Y\\) \u6bd4 \\(N\\) \u5927\uff0c\u5c31\u662f\u5047\u8bdd\uff1b</p> </li> <li> <p>\u5f53\u524d\u7684\u8bdd\u8868\u793a \\(X\\) \u5403 \\(X\\)\uff0c\u5c31\u662f\u5047\u8bdd\u3002</p> </li> </ul> <p>\u4f60\u7684\u4efb\u52a1\u662f\u6839\u636e\u7ed9\u5b9a\u7684 \\(N\\) \u548c \\(K\\) \u53e5\u8bdd\uff0c\u8f93\u51fa\u5047\u8bdd\u7684\u603b\u6570\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u6570\u636e\uff0c\\(1\\le N\\le 5 \\times 10^4\\)\uff0c\\(1\\le K \\le 10^5\\)\u3002</p> <p>\u77e5\u8bc6</p> <p>\u5e76\u67e5\u96c6\uff0c\u6269\u5c55\u57df\u5e76\u67e5\u96c6</p> <p>\u4ee3\u7801</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N=5e4+5;\nint fa[N*3],n,k,ans;\nint find(int x){\n    return (fa[x]!=x)?fa[x]=find(fa[x]):x;\n}\nvoid uni(int a,int b){\n    fa[find(a)]=find(b);\n}\nint main(){\n    scanf(\"%d%d\",&amp;n,&amp;k);\n    for(int i=1;i&lt;=n*3;i++)fa[i]=i;\n    while(k--){\n        int a,b,op;\n        scanf(\"%d%d%d\",&amp;op,&amp;a,&amp;b);\n        if(a&gt;n||b&gt;n){\n            ans++;continue;\n        }\n        if(op==1){\n            if(find(a+n)==find(b)||find(a)==find(n+b))ans++;\n            else uni(a,b),uni(a+n,b+n),uni(a+n+n,b+n+n);\n\n        }else {\n            if(find(a)==find(b)||find(a)==find(b+n))ans++;\n            else uni(a+n,b),uni(a+n+n,b+n),uni(a,b+n+n);\n\n        }\n    }\n    printf(\"%d\\n\",ans);\n}\n\n//////////////GOOD LUCK ,NTSC/////////////\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#ceoi1999-parity-game","title":"[CEOI1999] Parity Game","text":"<p>Alice \u548c Bob \u5728\u73a9\u4e00\u4e2a\u6e38\u620f\uff1a\u4ed6\u5199\u4e00\u4e2a\u7531 \\(0\\) \u548c \\(1\\) \u7ec4\u6210\u7684\u5e8f\u5217\u3002Alice \u9009\u5176\u4e2d\u7684\u4e00\u6bb5\uff08\u6bd4\u5982\u7b2c \\(3\\) \u4f4d\u5230\u7b2c \\(5\\) \u4f4d\uff09\uff0c\u95ee\u4ed6\u8fd9\u6bb5\u91cc\u9762\u6709\u5947\u6570\u4e2a \\(1\\) \u8fd8\u662f\u5076\u6570\u4e2a \\(1\\)\u3002Bob \u56de\u7b54\u4f60\u7684\u95ee\u9898\uff0c\u7136\u540e Alice \u7ee7\u7eed\u95ee\u3002Alice \u8981\u68c0\u67e5 Bob \u7684\u7b54\u6848\uff0c\u6307\u51fa\u5728 Bob \u7684\u7b2c\u51e0\u4e2a\u56de\u7b54\u4e00\u5b9a\u6709\u95ee\u9898\u3002\u6709\u95ee\u9898\u7684\u610f\u601d\u5c31\u662f\u5b58\u5728\u4e00\u4e2a \\(01\\) \u5e8f\u5217\u6ee1\u8db3\u8fd9\u4e2a\u56de\u7b54\u524d\u7684\u6240\u6709\u56de\u7b54\uff0c\u800c\u4e14\u4e0d\u5b58\u5728\u5e8f\u5217\u6ee1\u8db3\u8fd9\u4e2a\u56de\u7b54\u524d\u7684\u6240\u6709\u56de\u7b54\u53ca\u8fd9\u4e2a\u56de\u7b54\u3002</p> <p>\u7b2c \\(1\\) \u884c\u4e00\u4e2a\u6574\u6570 \\(n\\)\uff0c\u662f\u8fd9\u4e2a \\(01\\) \u5e8f\u5217\u7684\u957f\u5ea6\u3002</p> <p>\u7b2c \\(2\\) \u884c\u4e00\u4e2a\u6574\u6570 \\(m\\)\uff0c\u662f\u95ee\u9898\u548c\u7b54\u6848\u7684\u4e2a\u6570\u3002</p> <p>\u7b2c \\(3\\) \u884c\u5f00\u59cb\u662f\u95ee\u9898\u548c\u7b54\u6848\uff0c\u6bcf\u884c\u5148\u6709\u4e24\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4f60\u8be2\u95ee\u7684\u6bb5\u7684\u5f00\u59cb\u4f4d\u7f6e\u548c\u7ed3\u675f\u4f4d\u7f6e\u3002\u7136\u540e\u662f Bob \u7684\u56de\u7b54\u3002<code>odd</code>\u8868\u793a\u6709\u5947\u6570\u4e2a \\(1\\)\uff0c<code>even</code> \u8868\u793a\u6709\u5076\u6570\u4e2a \\(1\\)\u3002</p> <p>\u8f93\u51fa\u4e00\u884c\uff0c\u4e00\u4e2a\u6570 \\(x\\)\uff0c\u8868\u793a\u5b58\u5728\u4e00\u4e2a \\(01\\) \u5e8f\u5217\u6ee1\u8db3\u7b2c \\(1\\) \u5230\u7b2c \\(x\\) \u4e2a\u56de\u7b54\uff0c\u4f46\u662f\u4e0d\u5b58\u5728\u5e8f\u5217\u6ee1\u8db3\u7b2c \\(1\\) \u5230\u7b2c \\(x+1\\) \u4e2a\u56de\u7b54\u3002\u5982\u679c\u6240\u6709\u56de\u7b54\u90fd\u6ca1\u95ee\u9898\uff0c\u4f60\u5c31\u8f93\u51fa\u6240\u6709\u56de\u7b54\u7684\u4e2a\u6570\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\le  n \\leq 10^9\\)\uff0c\\(m \\leq 5 \\times 10^3\\)\u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u8003\u8651\u524d\u7f00\u548c\u6027\u8d28\u3002\u8981\u660e\u786e\u63a7\u5236\u6b32\u5e76\u67e5\u96c6\u53ef\u4ee5\u7ef4\u62a4\u4ec0\u4e48\uff0c\u624d\u80fd\u60f3\u5230\u505a\u6cd5\u3002</p> <p>\u8f6c\u5316\u4e3a\u5e76\u67e5\u96c6\uff0c\u5373\u82e5[l,r]\u548c\u4e3a\u5947\u6570\uff0c\u90a3\u4e48q_r\u548cq_{l-1}\uff08q_i\u8868\u793a[1,i]\u524d\u7f00\u548c\uff09\u7684\u5947\u5076\u6027\u76f8\u540c\uff0c\u53cd\u4e4b\u4e0d\u76f8\u540c\u3002\u4e8e\u662f\u6211\u4eec\u7ef4\u62a4\u524d\u7f00\u548c\u7684\u5947\u5076\u6027\u5173\u7cfb\u5373\u53ef\u3002</p> <p>\u5f00\u4e24\u500d\u7a7a\u95f4\u4e3a[1,n][n+1,2n]\uff0c\u5408\u5e76a,b\u8868\u793aq_a,q_{b-1}\u5947\u5076\u6027\u76f8\u540c\uff0c\u5408\u5e76a,b+n\u8868\u793a\u4e0d\u540c\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\n#include &lt;iostream&gt;\n#define rep(l, r, i) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(r, l, i) for (int i = r, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n// #define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n#define X(j) i[j]\n#define Y(j) (dp[j] + (i[j] + L) * (i[j] + L))\n\n#define rd read()\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int N =2e5 + 5;\nconst int INF = 1e18;\nconst int MOD = 998244353;\n\nint m,n,a[N],b[N],v[N];\nint fa[N&lt;&lt;1];\n\nint find(int x){\n  if(x==fa[x])return x;\n  return fa[x]=find(fa[x]);\n}\n\nvoid merge(int a,int b){\n  int faa=find(a),fbb=find(b);\n  if(faa!=fbb) fa[faa]=fbb;\n}\n\n\n\n\nint e[N];\nint cnt;\nsigned main(){\n  n=rd,m=rd;\n  for(int i=1;i&lt;=m;i++){\n    a[i]=rd-1,b[i]=rd;\n    // cerr&lt;&lt;a[i]&lt;&lt;' '&lt;&lt;b[i]&lt;&lt;endl;\n    e[++cnt]=a[i];\n    e[++cnt]=b[i];\n    string s;\n    cin&gt;&gt;s;\n    if(s==\"odd\")v[i]=1;\n    // cerr&lt;&lt;v[i]&lt;&lt;endl;\n\n  }\n  sort(e+1,e+cnt+1);\n  int l=unique(e+1,e+cnt+1)-e-1;\n  // for(int i=1;i&lt;=l*2;i++)cerr&lt;&lt;e[i]&lt;&lt;' ';\n  // cerr&lt;&lt;endl;\n  for(int i=1;i&lt;=l*2;i++)fa[i]=i;//\u4e24\u500d\u521d\u59cb\u5316\uff01\n  for(int i=1;i&lt;=m;i++){\n    // cerr&lt;&lt;i&lt;&lt;' '&lt;&lt;a[i]&lt;&lt;' '&lt;&lt;b[i]&lt;&lt;' '&lt;&lt;endl;\n    a[i]=lower_bound(e+1,e+l+1,a[i])-e;\n    b[i]=lower_bound(e+1,e+l+1,b[i])-e;\n    // cerr&lt;&lt;i&lt;&lt;' '&lt;&lt;a[i]&lt;&lt;' '&lt;&lt;b[i]&lt;&lt;' '&lt;&lt;endl;\n    if(v[i]){\n      if(find(a[i])==find(b[i])){\n        cout&lt;&lt;i-1&lt;&lt;endl;\n        return 0;\n      }else{\n        merge(a[i],b[i]+l);\n        merge(a[i]+l,b[i]);\n      }\n    }else{\n        if(find(a[i])==find(b[i]+l)){\n          cout&lt;&lt;i-1&lt;&lt;endl;\n          return 0;\n        }else{\n          merge(a[i],b[i]);\n          merge(a[i]+l,b[i]+l);\n      }\n    }\n  }\n\n\n\n  cout&lt;&lt;m&lt;&lt;endl;\n\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_8","title":"\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u5224\u5b9a\u4e8c\u5206\u56fe","text":"<p>\u5e76\u67e5\u96c6\u5224\u65ad\u4e8c\u5206\u56fe(tourist\u505a\u6cd5) - yHan234 - \u535a\u5ba2\u56ed</p> <p>\u6ce8\u610f\u8fd9\u91cc\u7684\u4e8c\u5206\u56fe\u6ca1\u6709\u89c4\u5b9a\u90a3\u4e9b\u70b9\u5fc5\u987b\u5728\u54ea\u8fb9\uff0c\u56e0\u6b64\u5f53\u4e14\u4ec5\u5f53\u56fe\u4e2d\u51fa\u73b0\u5947\u73af\u65f6\u4e8c\u5206\u56fe\u4e0d\u6210\u7acb\uff0c\u6216\u8005\u8bf4\u662f**\u4e0d\u80fd\u6784\u6210**\u4e8c\u5206\u56fe\u3002</p> <p>\u7528\u6269\u5c55\u57df\u53ef\u4ee5\u5224\u5b9a\u4e8c\u5206\u56fe\u3002\u6211\u4eec\u5f00\u4e24\u500d\u7a7a\u95f4\u7684\u5e76\u67e5\u96c6\uff0c\u5de6\u8fb9\u4e3aL(1\\sim n)\uff0c\u53f3\u8fb9\u4e3aR(n+1\\sim 2n)\u3002\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u5206\u88c2\u4e3a\u4e24\u4e2a\u70b9\u4e3au_1,u_2\uff0c\u7f16\u53f7\u4e3au,n+u\u3002\u5728\u6211\u4eec\u8fde\u63a5u,v\u65f6\uff0c\u5c31\u8fde\u63a5u_1-v_2\u548cu_2-v_1\u3002\u6700\u540e\u5982\u679c\u67d0\u4e00\u65f6\u523b\u5b58\u5728p,p_n\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u5185\uff0c\u4e8c\u5206\u56fe\u5c31\u4e0d\u6210\u7acb\u4e86\u3002</p> <p>\u8fd9\u91cc\u7684\u610f\u601d\u5c31\u662fu_1\u9ed8\u8ba4u\u5728\u5de6\u90e8\uff0cu_2\u9ed8\u8ba4u\u5728\u53f3\u90e8\u3002\u8fde\u63a5u_1,-v_2\u5c31\u8868\u793a\u5047\u8bbeu\u5728\u5de6\u90e8\u4e14v\u5728\u53f3\u90e8\uff0c\u53e6\u4e00\u79cd\u60c5\u51b5\u4ea6\u7136\u3002\u5982\u679c\u5b58\u5728\u67d0\u4e2ap\u6ee1\u8db3p_1\u548cp_2\u95f4\u63a5\u6216\u76f4\u63a5\u76f8\u8fde\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u65e0\u8bba\u5047\u8bbep\u5728\u5de6\u90e8\u8fd8\u662f\u53f3\u90e8\uff0c\u4e3a\u4e86\u5c3d\u53ef\u80fd\u8ba9\u4e0ep\u76f8\u8fde\u7684\u70b9\u6ee1\u8db3\u4e8c\u5206\u56fe\u6027\u8d28\uff0c\u5219\u4f1a\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u70b9x\u76f8\u8fde\u7684p\u5e94\u8be5\u5728\u5047\u8bbe\u7684p\u7684\u53e6\u5916\u4e00\u90e8\u3002\u5373p\u65e0\u8bba\u653e\u5728\u54ea\u4e00\u90e8\u90fd\u4f1a\u5f97\u5230\u76f8\u53cd\u7684\u7ed3\u8bba\u3002\u4e8c\u5206\u56fe\u65e0\u6cd5\u6210\u7acb\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#noip2010","title":"[NOIP2010 \u63d0\u9ad8\u7ec4] \u5173\u62bc\u7f6a\u72af","text":"<p>S \u57ce\u73b0\u6709\u4e24\u5ea7\u76d1\u72f1\uff0c\u4e00\u5171\u5173\u62bc\u7740 \\(N\\) \u540d\u7f6a\u72af\uff0c\u7f16\u53f7\u5206\u522b\u4e3a \\(1\\sim N\\)\u3002\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u81ea\u7136\u4e5f\u6781\u4e0d\u548c\u8c10\u3002\u5f88\u591a\u7f6a\u72af\u4e4b\u95f4\u751a\u81f3\u79ef\u6028\u5df2\u4e45\uff0c\u5982\u679c\u5ba2\u89c2\u6761\u4ef6\u5177\u5907\u5219\u968f\u65f6\u53ef\u80fd\u7206\u53d1\u51b2\u7a81\u3002\u6211\u4eec\u7528\u201c\u6028\u6c14\u503c\u201d\uff08\u4e00\u4e2a\u6b63\u6574\u6570\u503c\uff09\u6765\u8868\u793a\u67d0\u4e24\u540d\u7f6a\u72af\u4e4b\u95f4\u7684\u4ec7\u6068\u7a0b\u5ea6\uff0c\u6028\u6c14\u503c\u8d8a\u5927\uff0c\u5219\u8fd9\u4e24\u540d\u7f6a\u72af\u4e4b\u95f4\u7684\u79ef\u6028\u8d8a\u591a\u3002\u5982\u679c\u4e24\u540d\u6028\u6c14\u503c\u4e3a \\(c\\) \u7684\u7f6a\u72af\u88ab\u5173\u62bc\u5728\u540c\u4e00\u76d1\u72f1\uff0c\u4ed6\u4eec\u4fe9\u4e4b\u95f4\u4f1a\u53d1\u751f\u6469\u64e6\uff0c\u5e76\u9020\u6210\u5f71\u54cd\u529b\u4e3a \\(c\\) \u7684\u51b2\u7a81\u4e8b\u4ef6\u3002</p> <p>\u6bcf\u5e74\u5e74\u672b\uff0c\u8b66\u5bdf\u5c40\u4f1a\u5c06\u672c\u5e74\u5185\u76d1\u72f1\u4e2d\u7684\u6240\u6709\u51b2\u7a81\u4e8b\u4ef6\u6309\u5f71\u54cd\u529b\u4ece\u5927\u5230\u5c0f\u6392\u6210\u4e00\u4e2a\u5217\u8868\uff0c\u7136\u540e\u4e0a\u62a5\u5230 S \u57ce Z \u5e02\u957f\u90a3\u91cc\u3002\u516c\u52a1\u7e41\u5fd9\u7684 Z \u5e02\u957f\u53ea\u4f1a\u53bb\u770b\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u7684\u5f71\u54cd\u529b\uff0c\u5982\u679c\u5f71\u54cd\u5f88\u574f\uff0c\u4ed6\u5c31\u4f1a\u8003\u8651\u64a4\u6362\u8b66\u5bdf\u5c40\u957f\u3002</p> <p>\u5728\u8be6\u7ec6\u8003\u5bdf\u4e86 \\(N\\) \u540d\u7f6a\u72af\u95f4\u7684\u77db\u76fe\u5173\u7cfb\u540e\uff0c\u8b66\u5bdf\u5c40\u957f\u89c9\u5f97\u538b\u529b\u5de8\u5927\u3002\u4ed6\u51c6\u5907\u5c06\u7f6a\u72af\u4eec\u5728\u4e24\u5ea7\u76d1\u72f1\u5185\u91cd\u65b0\u5206\u914d\uff0c\u4ee5\u6c42\u4ea7\u751f\u7684\u51b2\u7a81\u4e8b\u4ef6\u5f71\u54cd\u529b\u90fd\u8f83\u5c0f\uff0c\u4ece\u800c\u4fdd\u4f4f\u81ea\u5df1\u7684\u4e4c\u7eb1\u5e3d\u3002\u5047\u8bbe\u53ea\u8981\u5904\u4e8e\u540c\u4e00\u76d1\u72f1\u5185\u7684\u67d0\u4e24\u4e2a\u7f6a\u72af\u95f4\u6709\u4ec7\u6068\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e00\u5b9a\u4f1a\u5728\u6bcf\u5e74\u7684\u67d0\u4e2a\u65f6\u5019\u53d1\u751f\u6469\u64e6\u3002</p> <p>\u90a3\u4e48\uff0c\u5e94\u5982\u4f55\u5206\u914d\u7f6a\u72af\uff0c\u624d\u80fd\u4f7f Z \u5e02\u957f\u770b\u5230\u7684\u90a3\u4e2a\u51b2\u7a81\u4e8b\u4ef6\u7684\u5f71\u54cd\u529b\u6700\u5c0f\uff1f\u8fd9\u4e2a\u6700\u5c0f\u503c\u662f\u591a\u5c11\uff1f</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u6bcf\u884c\u4e2d\u4e24\u4e2a\u6570\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\u7b2c\u4e00\u884c\u4e3a\u4e24\u4e2a\u6b63\u6574\u6570 \\(N,M\\)\uff0c\u5206\u522b\u8868\u793a\u7f6a\u72af\u7684\u6570\u76ee\u4ee5\u53ca\u5b58\u5728\u4ec7\u6068\u7684\u7f6a\u72af\u5bf9\u6570\u3002\u63a5\u4e0b\u6765\u7684 \\(M\\) \u884c\u6bcf\u884c\u4e3a\u4e09\u4e2a\u6b63\u6574\u6570 \\(a_j,b_j,c_j\\)\uff0c\u8868\u793a \\(a_j\\) \u53f7\u548c \\(b_j\\) \u53f7\u7f6a\u72af\u4e4b\u95f4\u5b58\u5728\u4ec7\u6068\uff0c\u5176\u6028\u6c14\u503c\u4e3a \\(c_j\\)\u3002\u6570\u636e\u4fdd\u8bc1 \\(1&lt;a_j\\leq b_j\\leq N, 0 &lt; c_j\\leq 10^9\\)\uff0c\u4e14\u6bcf\u5bf9\u7f6a\u72af\u7ec4\u5408\u53ea\u51fa\u73b0\u4e00\u6b21\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5171\u4e00\u884c\uff0c\u4e3a Z \u5e02\u957f\u770b\u5230\u7684\u90a3\u4e2a\u51b2\u7a81\u4e8b\u4ef6\u7684\u5f71\u54cd\u529b\u3002\u5982\u679c\u672c\u5e74\u5185\u76d1\u72f1\u4e2d\u672a\u53d1\u751f\u4efb\u4f55\u51b2\u7a81\u4e8b\u4ef6\uff0c\u8bf7\u8f93\u51fa <code>0</code>\u3002</p> <p>\u5bf9\u4e8e \\(30\\%\\) \u7684\u6570\u636e\u6709 \\(N\\leq 15\\)\u3002</p> <p>\u5bf9\u4e8e \\(70\\%\\) \u7684\u6570\u636e\u6709 \\(N\\leq 2000,M\\leq 50000\\)\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\u6709 \\(N\\leq 20000,M\\leq 100000\\)\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_9","title":"\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6","text":"<p>\u7ed9\u5b9a \\(n\\) \u4e2a\u96c6\u5408\uff0c\u7b2c \\(i\\) \u4e2a\u96c6\u5408\u5185\u521d\u59cb\u72b6\u6001\u4e0b\u53ea\u6709\u4e00\u4e2a\u6570\uff0c\u4e3a \\(i\\)\u3002</p> <p>\u6709 \\(m\\) \u6b21\u64cd\u4f5c\u3002\u64cd\u4f5c\u5206\u4e3a \\(3\\) \u79cd\uff1a</p> <ul> <li> <p><code>1 a b</code> \u5408\u5e76 \\(a,b\\) \u6240\u5728\u96c6\u5408\uff1b</p> </li> <li> <p><code>2 k</code> \u56de\u5230\u7b2c \\(k\\) \u6b21\u64cd\u4f5c\uff08\u6267\u884c\u4e09\u79cd\u64cd\u4f5c\u4e2d\u7684\u4efb\u610f\u4e00\u79cd\u90fd\u8bb0\u4e3a\u4e00\u6b21\u64cd\u4f5c\uff09\u4e4b\u540e\u7684\u72b6\u6001\uff1b</p> </li> <li> <p><code>3 a b</code> \u8be2\u95ee \\(a,b\\) \u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408\uff0c\u5982\u679c\u662f\u5219\u8f93\u51fa \\(1\\)\uff0c\u5426\u5219\u8f93\u51fa \\(0\\)\u3002</p> </li> </ul> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n\\le 10^5\\)\uff0c\\(1\\le m\\le 2\\times 10^5\\)\uff0c\\(1 \\le a, b \\le n\\)\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_10","title":"\u4ee3\u7801\u5206\u6790","text":"<pre><code>struct node{\n    int lc,rc,v,rnk;\n}tr[M];\n</code></pre> <p>\u79e9</p> <pre><code>int getrnk(int x,int l,int r,int p){//\u5355\u70b9\u67e5\u8be2\u79e9\n    if(l==r)return tr[x].rnk;\n    int mid=l+r&gt;&gt;1;\n    if(p&lt;=mid)return getrnk(tr[x].lc,l,mid,p);\n    return getrnk(tr[x].rc,mid+1,r,p);\n}\n\nvoid changernk(int pre,int &amp;now,int l,int r,int p,int v){//\u4fee\u6539\u79e9\uff08\u6811\u7684\u9ad8\u5ea6\uff09\n    now=++idx;\n    tr[now]=tr[pre];\n    if(l==r){\n        tr[now].rnk=max(tr[now].rnk,v);//\u8981\u6bd4\u5bf9\u53d6\u6700\u5927\u503c\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    if(p&lt;=mid)changernk(tr[pre].lc,tr[now].lc,l,mid,p,v);\n    else changernk(tr[pre].rc,tr[now].rc,mid+1,r,p,v);\n    return ;\n}\n</code></pre> <p>\u67e5\u8be2</p> <pre><code>int query(int x,int l,int r,int p){//\u67e5\u8be2\u7236\u8282\u70b9\n    if(l==r){\n        return tr[x].v;\n    }\n    int mid=l+r&gt;&gt;1;\n    if(p&lt;=mid)return query(tr[x].lc,l,mid,p);\n    return query(tr[x].rc,mid+1,r,p);\n}\n\nint find(int x,int p){\n    int fa=query(x,1,n,p);\n    if(p==fa)return fa;\n    return find(x,fa);//x\u662f\u7248\u672c\n}\n</code></pre> <p>\u4fee\u6539&amp;\u5408\u5e76</p> <pre><code>void change(int pre,int now,int l,int r,int p,int fa){//\u4fee\u6539\u7236\u8282\u70b9 \n    now=++idx;\n    tr[now]=tr[pre];\n    if(l==r){\n        tr[now].v=fa;\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    if(p&lt;=mid)change(tr[pre].lc,tr[now].lc,l,mid,p,fa);\n    else change(tr[pre].rc,tr[now].rc,mid+1,r,p,fa);\n}\n\nvoid merge(int a,int b,int i){\n    a=find(rt[i-1],a),b=find(rt[i-1],b);\n    // cerr&lt;&lt;\"OK\\n\";\n    if(a==b){rt[i]=rt[i-1];return ;}\n    if(getrnk(rt[i-1],1,n,a)&gt;getrnk(rt[i-1],1,n,b))swap(a,b);\n    // int t;\n    change(rt[i-1],rt[i],1,n,a,b);\n    int t=rt[i];\n    changernk(t,rt[i],1,n,b,getrnk(rt[i-1],1,n,a)/sz[b]+=sz[a];\n\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_11","title":"\u5b8c\u6574\u4ee3\u7801","text":"<p>WA64pts</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n//#define int long long\n#define mp make_pair\n\nconst int N = 2e5 + 5;\nconst int M = 1e7 + 5;\nconst int INF = 1e9 + 5;\nconst int MOD = 1e9 + 7;\nbool f1;\nint rt[N];\nint q, n, m, ans, idx, T;\nvector&lt;int&gt; b;\nbool f2;\n\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\nstruct node{\n    int lc,rc,v,rnk;\n}tr[N*50];//50\u500d\u7a7a\u95f4 ,32\u4e0d\u591f \n\n\n\nvoid build(int &amp;x,int l,int r){\n    x=++idx;\n    if(l==r){\n        tr[x].v=l;\n        tr[x].rnk=1;\n        return;\n    }\n    build(tr[x].lc,l,l+r&gt;&gt;1);\n    build(tr[x].rc,(l+r&gt;&gt;1)+1,r);\n}\n\nint getrnk(int x,int l,int r,int p){//\u5355\u70b9\u67e5\u8be2\u79e9\n    if(l==r)return tr[x].rnk;\n    int mid=l+r&gt;&gt;1;\n    if(p&lt;=mid)return getrnk(tr[x].lc,l,mid,p);\n    return getrnk(tr[x].rc,mid+1,r,p);\n}\n\nvoid changernk(int pre,int &amp;now,int l,int r,int p,int v){//\u4fee\u6539\u79e9\uff08\u6811\u7684\u9ad8\u5ea6\uff09\n    now=++idx;\n    tr[now]=tr[pre];\n    if(l==r){\n        tr[now].rnk=max(tr[now].rnk,v);//\u8981\u6bd4\u5bf9\u53d6\u6700\u5927\u503c\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    if(p&lt;=mid)changernk(tr[pre].lc,tr[now].lc,l,mid,p,v);\n    else changernk(tr[pre].rc,tr[now].rc,mid+1,r,p,v);\n    return ;\n}\n// void insert(int pre,int &amp;now,int l,int r,int v){\n//  now=+/\u52a8\u6001\u5f00\u70b9.\u65b0\u63d2\u5165\u4e00\u4e2a\u70b9 \u4e3a\u4e86\u53ef\u4ee5\u65b9\u4fbf\u7684\u7528\u8fd9\u4e2anow\u66f4\u65b0\u4e0a\u4e00\u4e2a\u51fd\u6570\u7a7a\u95f4\u7684tr[now].lc(\u6216rc),\u6211\u4eec\u5c31\u5f15\u7528\u4e00\u4e0b\n//  tr[now]=tr[pre];//\u590d\u5236\u65e7\u70b9\u7684\u4fe1\u606f\n//  tr[now].v++;//\u70b9\u6743+1,\u56e0\u4e3a\u63d2\u5165\u7684\u6811\u5728now\u7684\u533a\u95f4\u5185\n//  if(l==r)return;\n//  int mid=l+r&gt;&gt;1;\n//  if(v&lt;=mid)insert(tr[pre].lc,tr[now].lc,l,mid,v);\n//  else insert(tr[pre].rc,tr[now].rc,mid+1,r,v);\n// }\n\nint query(int x,int l,int r,int p){//\u67e5\u8be2\u7236\u8282\u70b9\n    if(l==r){\n        return tr[x].v;\n    }\n    int mid=l+r&gt;&gt;1;\n    if(p&lt;=mid)return query(tr[x].lc,l,mid,p);\n    return query(tr[x].rc,mid+1,r,p);\n}\n\nint find(int x,int p){\n    int fa=query(x,1,n,p);\n    if(p==fa)return fa;\n    return find(x,fa);//x\u662f\u7248\u672c\n}\n\nint change(int pre,int l,int r,int p,int fa){//\u4fee\u6539\u7236\u8282\u70b9 \n  //\u8fd9\u91cc\u4e0d\u80fd\u5f15\u7528&amp;now\u76f4\u63a5\u4fee\u6539\uff0c\u5728merge\u4e2d\u4f1a\u51fa\u9519-&gt;note\n    int now=++idx;\n    tr[now]=tr[pre];\n    if(l==r){\n        tr[now].v=fa;\n        return now;\n    }\n    int mid=l+r&gt;&gt;1;\n    if(p&lt;=mid)tr[now].lc=change(tr[pre].lc,l,mid,p,fa);\n    else tr[now].rc=change(tr[pre].rc,mid+1,r,p,fa);\n    return now;\n}\n\nvoid merge(int a,int b,int i){\n    a=find(rt[i-1],a),b=find(rt[i-1],b);\n    // cerr&lt;&lt;\"OK\\n\";\n    if(a==b){rt[i]=rt[i-1];return ;}\n    if(getrnk(rt[i-1],1,n,a)&gt;getrnk(rt[i-1],1,n,b))swap(a,b);\n    // int t;\n//    change(rt[i-1],rt[i],1,n,a,b);\n    int t=change(rt[i-1],1,n,a,b);\n//    int t=rt[i];\n    changernk(t,rt[i],1,n,b,getrnk(rt[i-1],1,n,a)/sz[b]+=sz[a];\n\n}\n\n\nsigned main() {\n    // freopen(\"chfran.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n    n=rd;m=rd;\n\n    build(rt[0],1,n);\n\n    for(int i=1;i&lt;=m;i++) {\n        int op=rd;\n        if(op==1){\n            int a=rd,b=rd;\n            merge(a,b,i);\n        }if(op==2){\n            int k=rd;\n            rt[i]=rt[k];\n        }if(op==3){\n            int a=rd,b=rd;\n            rt[i]=rt[i-1];\n            if(find(rt[i],a)==find(rt[i],b))cout&lt;&lt;1&lt;&lt;endl;\n            else cout&lt;&lt;0&lt;&lt;endl;\n        }\n    }\n\n\n}\n\n/*\n1\n2 5 1 \n0 0 1 \n0 0 4 \n\n*/\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B6%E6%9F%A5%E9%9B%86/#hint","title":"Hint","text":"<pre><code>int change(int pre,int l,int r,int p,int fa){//\u4fee\u6539\u7236\u8282\u70b9 \n  //\u8fd9\u91cc\u4e0d\u80fd\u5f15\u7528&amp;now\u76f4\u63a5\u4fee\u6539\uff0c\u5728merge\u4e2d\u4f1a\u51fa\u9519-&gt;note\n    ...\n}\n</code></pre> <p>\u539f\u56e0\uff1a</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E5%88%86%E5%9D%97/","title":"\u6811\u5206\u5757","text":"<p>\u6811\u5206\u5757\uff0c\u5c31\u662f\u50cf\u5bf9\u5e8f\u5217\u5206\u5757\u4e00\u6837\u8bbe\u4e00\u4e2a\u9608\u503c \\(B\\)\uff0c\u7136\u540e\u5728\u6811\u4e0a\u968f\u673a\u6492 \\(\\dfrac{n}{B}\\) \u4e2a\u5173\u952e\u70b9\uff0c\u6ee1\u8db3\u4efb\u610f\u4e00\u4e2a\u70b9\u5230\u8ddd\u79bb\u5176\u6700\u8fd1\u7684\u5173\u952e\u70b9\u8ddd\u79bb\u4e0d\u8d85\u8fc7 \\(\\mathcal O(B)\\) \u7ea7\u522b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u9884\u5904\u7406\u5173\u952e\u70b9\u4e24\u4e24\u4e4b\u95f4\u7684\u4fe1\u606f\u3002</p> <p>\u5728\u8be2\u95ee\u4e24\u4e2a\u70b9\u8def\u5f84\u4e0a\u7684\u4fe1\u606f\u65f6\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u9884\u5904\u7406\u7684\u4fe1\u606f\u62ff\u51fa\u6765\u4f7f\u7528\uff0c\u518d\u989d\u5916\u52a0\u4e0a\u4e24\u4e2a\u7aef\u70b9\u5230\u8ddd\u79bb\u5b83\u4eec\u6700\u8fd1\u7684\u5173\u952e\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u7684\u8d21\u732e\u5373\u53ef\u7b97\u51fa\u7b54\u6848\uff0c\u590d\u6742\u5ea6 \\(\\mathcal O(B^2+qB+\\dfrac{n^2}{B})\\)\uff0c\u4e00\u822c \\(B\\) \u53d6 \\(\\sqrt{n}\\)\u3002</p> <p>\u5bf9\u4e8e\u201c\u968f\u673a\u6492\u70b9\u201d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u60f3\u6cd5\u662f\u5c06\u6df1\u5ea6 \\(\\bmod B=0\\) \u8bbe\u4e3a\u5173\u952e\u70b9\uff0c\u4e0d\u8fc7\u5219\u53ef\u80fd\u4f1a\u88ab\u5361\uff1a</p> <p>\u4e00\u6761\u957f\u5ea6\u4e3a \\(B\\) \u7684\u94fe\u4e0b\u9762\u6302 \\(n-B\\) \u4e2a\u53f6\u5b50\u3002</p> <p>\u56e0\u6b64\u6211\u4eec\u8fdb\u884c\u4f18\u5316\uff1a\u6211\u4eec\u8bb0 \\(dis_i\\) \u4e3a \\(i\\) \u5230\u8ddd\u79bb\u5b83\u6700**\u8fdc**\u7684\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u6df1\u5ea6 \\(\\bmod B=0\\) \u4e14 \\(dis_i\\ge B\\) \u7684\u70b9 \\(i\\) \u8bbe\u4e3a\u5173\u952e\u8282\u70b9\u5373\u53ef\uff0c\u53ef\u4ee5\u8bc1\u660e\u5728\u8fd9\u79cd\u6784\u9020\u65b9\u6cd5\u4e0b\u5173\u952e\u70b9\u4e2a\u6570\u662f\u4e25\u683c \\(\\dfrac{n}{B}\\) \u7ea7\u522b\u7684\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E5%88%86%E5%9D%97/#1-count-on-a-tree-ii","title":"\u4f8b\u9898 #1 Count on a tree II","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(n\\) \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6709\u4e00\u4e2a\u6574\u6570\uff0c\\(i\\) \u53f7\u70b9\u7684\u6574\u6570\u4e3a \\(val_i\\)\u3002</p> <p>\u6709 \\(m\\) \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51fa \\(u',v\\)\uff0c\u60a8\u9700\u8981\u5c06\u5176\u89e3\u5bc6\u5f97\u5230 \\(u,v\\)\uff0c\u5e76\u67e5\u8be2 \\(u\\) \u5230 \\(v\\) \u7684\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6574\u6570\u3002</p> <p>\u89e3\u5bc6\u65b9\u5f0f\uff1a\\(u=u' \\operatorname{xor} lastans\\)\u3002</p> <p>\\(lastans\\) \u4e3a\u4e0a\u4e00\u6b21\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u82e5\u65e0\u8be2\u95ee\u5219\u4e3a \\(0\\)\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le u,v\\le n\\le 4\\times 10^4\\)\uff0c\\(1\\le m\\le 10^5\\)\uff0c\\(0\\le u',val_i&lt;2^{31}\\)\u3002</p> <p>\u9996\u5148\u5bf9\u4e8e\u8ba1\u6570\u95ee\u9898\uff0c\u6211\u4eec\u4f7f\u7528 bitset\u6765\u7edf\u8ba1\u51fa\u73b0\u7684\u4e0d\u540c\u6574\u6570\u4e2a\u6570\uff08\u79bb\u6563\u5316\uff09\u3002\u6211\u4eec\u4f7f\u7528\u6811\u5206\u5757\u540e\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u4e24\u4e2a\u76f8\u90bb\u5173\u952e\u70b9\u4e4b\u95f4\u7684\u7b54\u6848\uff0c\u7136\u540e\u5728\u8be2\u95ee\u65f6\u5c06\u9884\u5904\u7406\u7b54\u6848\u548c\u6563\u70b9\u7684\u7b54\u6848\uff08bitset\u5f62\u5f0f\uff09\u4f4d\u6216\u5373\u53ef\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\n\n\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int MAXN=4e4;\nconst int N=4e4+5;\nconst int M=205;\n\n\nint n,Q,a[N],key[N],uni[N],num=0;\nint h[N],to[MAXN*2+5],nxt[MAXN*2+5],tot=0;\n\n\nint id[N],pcnt=0,B,buc[N];\nint dis[N],dep[N],fa[N][16+2];\nbitset&lt;N&gt; col[21000],vis;\n\n\nvoid add(int u,int v){\n    to[++tot]=v;nxt[tot]=h[u];h[u]=tot;\n    to[++tot]=u;nxt[tot]=h[v];h[v]=tot;\n}\n\nvoid dfs(int x,int f){\n    fa[x][0]=f;\n    for(int e=h[x];e;e=nxt[e]){\n        int y=to[e];\n        if(y==f)continue;\n\n        dep[y]=dep[x]+1;\n        dfs(y,x);dis[x]=max(dis[x],dis[y]+1);\n    } if(dep[x]%B==0&amp;&amp;dis[x]&gt;=B) id[x]=++pcnt;\n}\n\n\nint Bcol[M][M],cc=0;\n\nvoid dfs(int x,int f,int rt){\n    buc[a[x]]++;if(buc[a[x]]==1) vis.set(a[x]);\n    if(id[x]) col[Bcol[id[rt]][id[x]]]=vis;\n    for(int e=h[x];e;e=nxt[e]){\n        int y=to[e];\n        if(y==f)continue;\n        dfs(y,x,rt);\n    } buc[a[x]]--;if(!buc[a[x]]) vis.reset(a[x]);\n}\n\n\nint lca(int x,int y){\n    if(dep[x]&lt;dep[y]) swap(x,y);\n    for(int i=16;~i;i--) if(dep[x]-(1&lt;&lt;i)&gt;=dep[y]) x=fa[x][i];\n    if(x==y) return x;\n    for(int i=16;~i;i--) if(fa[x][i]^fa[y][i]) x=fa[x][i],y=fa[y][i];\n    return fa[x][0];\n}\n\n\nint jump(int x){\n    while(x){\n        if(id[x]) return x;\n        x=fa[x][0];\n    } \n    return 0;\n}\n\n\nint get_kanc(int x,int k){\n    for(int i=16;~i;i--) if(k&gt;&gt;i&amp;1) x=fa[x][i];\n    return x;\n}\n\n\nint lstans;\n\n\nvoid solve(int x,int y){\n    int l=lca(x,y),fx=jump(x),fy=jump(y);\n    if(dep[fx]&lt;dep[l]&amp;&amp;dep[fy]&lt;dep[l]){\n        while(x!=l) vis.set(a[x]),x=fa[x][0];\n        while(y!=l) vis.set(a[y]),y=fa[y][0];\n        vis.set(a[l]);\n\n        lstans=vis.count();\n        write(lstans);\n        puts(\"\");\n    } else if(dep[fx]&gt;=dep[l]&amp;&amp;dep[fy]&gt;=dep[l]){\n\n        vis=col[Bcol[id[fx]][id[fy]]];\n        while(x!=fx) vis.set(a[x]),x=fa[x][0];\n        while(y!=fy) vis.set(a[y]),y=fa[y][0];\n\n        lstans=vis.count();\n        write(lstans);\n        puts(\"\");\n    } else{\n\n        if(dep[fy]&gt;=dep[l]) swap(x,y),swap(fx,fy);\n\n        int z=get_kanc(x,max(dep[x]-dep[l]-(B&lt;&lt;1|1),0ll));\n        int near=-1;\n        while(z!=l){\n            if(id[z]) near=z;\n            z=fa[z][0];\n        } if(id[l]) near=l;\n\n        if(fx!=near) vis=col[Bcol[id[fx]][id[near]]];\n        while(x!=fx) vis.set(a[x]),x=fa[x][0];\n        while(near!=l) vis.set(a[near]),near=fa[near][0];\n        while(y!=l) vis.set(a[y]),y=fa[y][0];\n        vis.set(a[l]);\n\n        lstans=vis.count();\n        write(lstans);\n        puts(\"\");\n    }\n}\n\nvoid solve(){\n    n=rd,Q=rd;\n\n    for(int i=1;i&lt;=n;i++) {\n        a[i]=rd,key[i]=a[i];\n    }\n    key[0]=-1;\n\n    sort(key+1,key+n+1);\n    for(int i=1;i&lt;=n;i++) \n        if(key[i]^key[i-1]) uni[+/\n    for(int i=1;i&lt;=n;i++) \n        a[i]=lower_bound(uni+1,uni+num+1,a[i])-uni;\n    for(int i=1,u,v;i&lt;n;i++) \n        add(rd,rd);\n    B=sqrt(n);\n\n    dfs(1,0);\n\n    dep[0]=-1;\n    for(int i=1;i&lt;=pcnt;i++) \n        for(int j=1;j&lt;=i;j++) \n            Bcol[i][j]=Bcol[j][i]=++cc;\n    for(int i=1;i&lt;=n;i++) {\n        if(id[i]) memset(buc,0,sizeof(buc));\n        dfs(i,0,i);\n    }\n    for(int i=1;i&lt;=16;i++) \n        for(int j=1;j&lt;=n;j++)\n            fa[j][i]=fa[fa[j][i-1]][i-1];\n\n\n    while(Q--){\n        int x=rd,y=rd;\n\n        x^=lstans;\n        vis.reset();\n        solve(x,y);\n\n    }\n}\n\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/","title":"\u6811\u72b6\u6570\u7ec4","text":"<p>https://blog.csdn.net/weixin_43914593/article/details/107842628</p> <p>https://ntsc-yrx.github.io/2022/07/09/CPP%E8%BF%9B%E9%98%B6-%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_1","title":"\u6811\u72b6\u6570\u7ec4","text":"<p>\u6811\u72b6\u6570\u7ec4\uff08Binary Indexed Tree\uff0cBIT\uff0c\u4e5f\u79f0\u4e3aFenwick Tree\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u9ad8\u6548\u5904\u7406\u7d2f\u8ba1\u548c\u67e5\u8be2\u548c\u66f4\u65b0\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u53ef\u4ee5\u5728\u5bf9\u6570\u65f6\u95f4\u5185\u5b8c\u6210\u5355\u70b9\u66f4\u65b0\u548c\u524d\u7f00\u548c\u67e5\u8be2\u64cd\u4f5c\u3002\u4ee5\u4e0b\u662f\u6811\u72b6\u6570\u7ec4\u7684\u5b9e\u73b0\u539f\u7406\uff1a</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li> <p>\u524d\u7f00\u548c\uff1a\u6570\u7ec4\u7684\u524d\u7f00\u548c\u662f\u6307\u4ece\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5230\u7b2ci\u4e2a\u5143\u7d20\u7684\u603b\u548c\u3002</p> </li> <li> <p>\u5355\u70b9\u66f4\u65b0\uff1a\u6539\u53d8\u6570\u7ec4\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c\u3002</p> </li> <li> <p>\u6811\u72b6\u6570\u7ec4\uff1a\u901a\u8fc7\u4e00\u4e2a\u6570\u7ec4\u6765\u6a21\u62df\u6811\u5f62\u7ed3\u6784\uff0c\u5b9e\u73b0\u5bf9\u6570\u65f6\u95f4\u7684\u66f4\u65b0\u548c\u67e5\u8be2\u64cd\u4f5c\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_3","title":"\u6811\u72b6\u6570\u7ec4\u7684\u6784\u5efa","text":"<p>\u6811\u72b6\u6570\u7ec4\u901a\u5e38\u7528\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4<code>tree</code>\u6765\u8868\u793a\uff0c\u5176\u4e2d<code>tree[i]</code>\u5b58\u50a8\u4e86\u4e00\u90e8\u5206\u539f\u6570\u7ec4\u7684\u5143\u7d20\u548c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_4","title":"\u521d\u59cb\u5316","text":"<p>\u521d\u59cb\u5316\u65f6\uff0c\u6240\u6709\u7684<code>tree[i]</code>\u90fd\u8bbe\u4e3a0\u3002</p> <pre><code>vector&lt;int&gt; tree(n + 1, 0);\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#lowbit","title":"Lowbit\u51fd\u6570","text":"<p>\u6811\u72b6\u6570\u7ec4\u4e2d\u4e00\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\u662f<code>lowbit</code>\uff0c\u5b83\u7528\u4e8e\u627e\u5230\u5f53\u524d\u8282\u70b9\u76f4\u63a5\u7ba1\u8f96\u7684\u533a\u95f4\u3002</p> <pre><code>int lowbit(int x) {\n    return x &amp; (-x);\n}\n</code></pre> <p><code>lowbit</code>\u51fd\u6570\u8fd4\u56de<code>x</code>\u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u6700\u4f4e\u4f4d\u76841\u6240\u5bf9\u5e94\u7684\u503c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_5","title":"\u66f4\u65b0\u64cd\u4f5c","text":"<p>\u66f4\u65b0\u64cd\u4f5c\u7528\u4e8e\u6539\u53d8\u539f\u6570\u7ec4\u4e2d\u67d0\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u5e76\u66f4\u65b0\u6811\u72b6\u6570\u7ec4\u3002</p> <ol> <li> <p>\u9996\u5148\u8ba1\u7b97\u8be5\u5143\u7d20\u7684<code>lowbit</code>\uff0c\u627e\u5230\u9700\u8981\u66f4\u65b0\u7684\u76f4\u63a5\u5b50\u8282\u70b9\u3002</p> </li> <li> <p>\u7136\u540e\u6cbf\u7740\u6811\u5411\u4e0a\u66f4\u65b0\u6240\u6709\u76f8\u5173\u7684\u8282\u70b9\u3002</p> <p>\u4ee5\u4e0b\u662f\u66f4\u65b0\u64cd\u4f5c\u7684\u4f2a\u4ee3\u7801\uff1a</p> </li> </ol> <pre><code>void update(int i, int delta) {\n    while (i &lt;= n) {\n        tree[i] += delta;\n        i += lowbit(i);\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_6","title":"\u67e5\u8be2\u64cd\u4f5c","text":"<p>\u67e5\u8be2\u64cd\u4f5c\u7528\u4e8e\u8ba1\u7b97\u539f\u6570\u7ec4\u7684\u524d\u7f00\u548c\u3002</p> <ol> <li> <p>\u4ece\u7ed9\u5b9a\u7684\u7d22\u5f15\u5f00\u59cb\uff0c\u8ba1\u7b97\u6240\u6709\u5305\u542b\u8be5\u7d22\u5f15\u7684\u7236\u8282\u70b9\u7684\u548c\u3002</p> </li> <li> <p>\u6bcf\u6b21\u67e5\u8be2\u65f6\uff0c\u901a\u8fc7<code>lowbit</code>\u627e\u5230\u4e0b\u4e00\u4e2a\u9700\u8981\u67e5\u8be2\u7684\u7236\u8282\u70b9\u3002 \u4ee5\u4e0b\u662f\u67e5\u8be2\u64cd\u4f5c\u7684\u4f2a\u4ee3\u7801\uff1a</p> </li> </ol> <pre><code>int query(int i) {\n    int sum = 0;\n    while (i &gt; 0) {\n        sum += tree[i];\n        i -= lowbit(i);\n    }\n    return sum;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_7","title":"\u5b8c\u6574\u793a\u4f8b","text":"<p>\u5047\u8bbe\u539f\u6570\u7ec4\u4e3a<code>arr = [0, 1, 2, 3, 4, 5, 6, 7]</code>\uff0c\u4ee5\u4e0b\u662f\u6784\u5efa\u6811\u72b6\u6570\u7ec4\u5e76\u8fdb\u884c\u66f4\u65b0\u548c\u67e5\u8be2\u7684\u793a\u4f8b\uff1a</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_8","title":"\u521d\u59cb\u5316","text":"<pre><code>tree = [0, 0, 0, 0, 0, 0, 0, 0, 0]\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_9","title":"\u66f4\u65b0\u64cd\u4f5c","text":"<p>\u66f4\u65b0<code>arr[3]</code>\u589e\u52a02\uff0c\u5373<code>arr[3] = 3 + 2 = 5</code>\u3002</p> <pre><code>update(3, 2)  // tree\u53d8\u4e3a[0, 0, 0, 1, 1, 1, 2, 2, 2]\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_10","title":"\u67e5\u8be2\u64cd\u4f5c","text":"<p>\u67e5\u8be2\u524d\u7f00\u548c\uff0c\u5373<code>arr[1] + arr[2] + arr[3]</code>\u3002</p> <pre><code>query(3)  // \u8fd4\u56de 1 + 2 + 5 = 8\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_11","title":"\u603b\u7ed3","text":"<p>\u6811\u72b6\u6570\u7ec4\u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u6765\u6a21\u62df\u6811\u5f62\u7ed3\u6784\uff0c\u4f7f\u5f97\u5355\u70b9\u66f4\u65b0\u548c\u524d\u7f00\u548c\u67e5\u8be2\u90fd\u53ef\u4ee5\u5728\u5bf9\u6570\u65f6\u95f4\u5185\u5b8c\u6210\u3002\u5b83\u7684\u4f18\u70b9\u662f\u4ee3\u7801\u5b9e\u73b0\u7b80\u5355\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4f4e\uff0c\u9002\u7528\u4e8e\u9891\u7e41\u7684\u66f4\u65b0\u548c\u67e5\u8be2\u64cd\u4f5c\u3002\u6811\u72b6\u6570\u7ec4\u4e0d\u652f\u6301\u533a\u95f4\u66f4\u65b0\u64cd\u4f5c\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u6280\u5de7\u6765\u6269\u5c55\u8fd9\u4e00\u529f\u80fd\u3002</p> <p>\u518d\u6b21\u5f3a\u8c03\uff0c\u6811\u72b6\u6570\u7ec4\u7684change\u662f**\u5355\u70b9\u52a0**\uff01\uff01</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#1","title":"\u4f8b\u9898 #1","text":"<p>\u5982\u9898\uff0c\u5df2\u77e5\u4e00\u4e2a\u6570\u5217\uff0c\u4f60\u9700\u8981\u8fdb\u884c\u4e0b\u9762\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li> <p>\u5c06\u67d0\u4e00\u4e2a\u6570\u52a0\u4e0a \\(x\\)</p> </li> <li> <p>\u6c42\u51fa\u67d0\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u7684\u548c</p> </li> </ul> <p>\u5bf9\u4e8e \\(30\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\le n \\le 8\\)\uff0c\\(1\\le m \\le 10\\)\uff1b \u5bf9\u4e8e \\(70\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m \\le 10^4\\)\uff1b \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m \\le 5\\times 10^5\\)\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_12","title":"\u8bb2\u89e3","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_13","title":"\u5b9e\u73b0\u65b9\u6cd5","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#lowbitx","title":"\u5173\u952e\u51fd\u6570 <code>lowbit(x)</code>","text":"<pre><code>lowbit(x){return x&amp;-x}\n</code></pre> <p>\u4f5c\u7528\uff1a \u8fd4\u56de\u6700\u540e\u4e00\u4f4d1\u7684\u4f4d\u7f6e</p> <p>e.g. \u5bf9<code>(11010)2</code>\u6267\u884c<code>lowbit</code>\u8fd4\u56de\u503c\u4e3a<code>(10)2</code>. <code>x-lowbit(x)</code>\u64cd\u4f5c\u53ef\u5feb\u901f\u6d88\u53bb\u6700\u540e\u4e00\u4f4d1</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#changexv","title":"<code>change(x,v)</code>","text":"<p>\u5728\u6811\u72b6\u6570\u7ec4\u610f\u4e49\u4e0b\u5bf9x\u4f4d\u7f6e\u8fdb\u884c\u5355\u70b9\u52a0v\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#queryx","title":"<code>query(x)</code>","text":"<p>\u8fd4\u56de[1,x]\u7684\u6743\u503c\u548c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_14","title":"\u5e94\u7528","text":"<p>\u7ef4\u62a4\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u4fee\u6539</p> <p>\u8fd9\u65f6\u6211\u4eec\u5e94\u8be5\u4f7f\u7528change\u6765\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\u5e76\u4e14\u4f7f\u7528query\u5feb\u901f\u6c42\u51fa\u524d\u7f00\u548c\u3002</p> <p>\u4e0d\u53ef\u4f7f\u7528change\u6765\u533a\u95f4\u52a0\u800cquery(x)-query(x-1)\uff0c\u56e0\u4e3a\u5b83\u6839\u672c\u6ca1\u8fd9\u529f\u80fd\uff01\uff01</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/#_15","title":"\u4ee3\u7801","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\n\nconst int N=5e5+5;\n//typedef long long ll;\nint n,m,x,y;\nint c[N];\nint a;\n\n\nint lowbit(int x) {\n    return x&amp;-x;\n}\n\n\nvoid add(int i,int x) {//\u5728\u4f4d\u7f6ei\u52a0\u4e0ax\n    while(i&lt;=N) {\n        c[i]+=x;\n        i+=lowbit(i);\n    }\n}\n\n\nint sum(int x) {\n    int res=0;\n    while(x) {\n        res+=c[x];\n        x-=lowbit(x);\n    }\n    return res;\n}\nint main() {\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1; i&lt;=n; i++){\n        cin&gt;&gt;a;\n        add(i,a);\n    }\n        //scanf(\"%d\",&amp;a[i]);\n    while(m--) {\n        int op;\n        scanf(\"%d%d%d\",&amp;op,&amp;x,&amp;y);\n        if(op==2)\n            printf(\"%d\\n\",sum(y)-sum(x-1)); //sum(i)\u6c42\u7684\u662fa[i]~a[1]\u7684\u548c\uff01\uff01\n        else {\n            add(x,y);\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/","title":"\u7ebf\u6bb5\u6811","text":"<p>\u7ebf\u6bb5\u6811</p> <p>\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u5404\u79cd\u4fe1\u606f</p> <p>\u7ebf\u6bb5\u6811\u5206\u88c2</p> <p>01\u7ebf\u6bb5\u6811</p> <p>\u7ebf\u6bb5\u6811\u5408\u5e76</p> <p>\u7ebf\u6bb5\u6811\u5206\u6cbb</p> <p>\u4e3b\u5e2d\u6811</p> <p>\u674e\u8d85\u7ebf\u6bb5\u6811</p> <p>\u5409\u53f8\u673a\u7ebf\u6bb5\u6811</p> <p>\u53ef\u6301\u4e45\u5316\u6570\u7ec4</p> <p>\u626b\u63cf\u7ebf</p> <p>\u4e8c\u7ef4\u7ebf\u6bb5\u6811</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%8E%AB%E9%98%9F/","title":"\u83ab\u961f","text":"<p>\u5206\u5757\u53d8\u5f62\uff1a\u83ab\u961f</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%8E%AB%E9%98%9F/#1","title":"\u4f8b\u9898 #1 \u5f15\u5165","text":"<p>\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217\u548c\u82e5\u5e72\u67e5\u8be2l, r\uff0c\u95ee[l, r]\u4e2d\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6570\u3002</p> <p>\u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0(24): \u83ab\u961f</p> <p>\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6216\u5757\u72b6\u6570\u7ec4\u6765\u505a\uff0c\u4f46\u7528\u83ab\u961f\u7684\u8bdd\u601d\u7ef4\u96be\u5ea6\u4f1a\u6bd4\u8f83\u4f4e\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%8E%AB%E9%98%9F/#_2","title":"\u8bb2\u89e3","text":"<p>\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4<code>Cnt[]</code>\u6765\u8bb0\u5f55\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c<code>cur</code> \u8868\u793a\u5f53\u524d\u533a\u95f4\u7684\u7b54\u6848\uff0c\u4f8b\u5982\uff1a</p> <p></p> <p>\u73b0\u5728\u8f6c\u79fb\u5230\u7d27\u90bb\u7684\u533a\u95f4\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4f8b\u5982\u8f6c\u79fb\u5230[l,r+1]\uff1a</p> <p></p> <p>Cnt[2]=0\uff0c\u8bf4\u660e\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6ca1\u51fa\u73b0\u8fc7\u7684\u6570\uff0c\u6240\u4ee5cur\u53d8\u62104\uff0c\u4f46\u5982\u679c\u5728\u8fd9\u91cc\u518d\u6b21\u5411\u53f3\u8f6c\u79fb\uff1a</p> <p></p> <p>\u8fd9\u65f6Cnt[3]\u4e0d\u4e3a0\uff0c\u6240\u4ee5\u867d\u7136Cnt[3]++\uff0c\u4f46\u662fcur\u4e0d\u518d\u589e\u957f\u3002</p> <p>\u5176\u4ed6\u7684\u8f6c\u79fb\u90fd\u662f\u7c7b\u4f3c\u7684\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u8f6c\u79fb\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff0c\u5f80\u533a\u95f4\u91cc**\u6dfb**\u6570\uff0c\u6216\u8005\u5f80\u533a\u95f4\u91cc**\u5220**\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u5199\u6210\u4e24\u4e2a\u51fd\u6570\uff1a</p> <pre><code>void add(int p){//p\u4e3a\u8981\u6dfb\u52a0\u7684\u4e0b\u6807\u4fdd\u8bc1p\u4e0e\u5f53\u524d\u5206\u5757\u76f8\u90bb\n    if(!cnt[a[p]])cur++;\n    cnt[a[p]]++;\n}\nvoid del(int p){\n    if(cnt[a[p]]==1)cur--;\n    cnt[a[p]]--;\n}\n</code></pre> <p>\u5bf9\u4e8e\u533a\u95f4\u7684\u79fb\u52a8\uff0c\u82e5\u76ee\u6807\u533a\u95f4\u4e3a[al,ar]\uff0c\u5f53\u524d\u533a\u95f4\u4e3a[l,r]</p> <pre><code>while(l&gt;al)add(--l);//al\u5728l\u5de6\u8fb9,l\u5728\u5f53\u524d\u5206\u5757\u4e2d,l-1\u4e0d\u5728,\u6240\u4ee5\u5148\u79fb\u52a8\u540e\u6dfb\u52a0\nwhile(l&lt;al)del(l++);//al\u5728l\u53f3\u8fb9,l\u5728\u5f53\u524d\u5206\u5757\u4e2d\u4f46\u4e0d\u5728\u76ee\u6807\u533a\u95f4,\u6240\u4ee5\u5148\u5220\u9664\u540e\u79fb\u52a8\nwhile(r&gt;ar)del(r--);\nwhile(r&lt;ar)add(++r);\n</code></pre> <p>\u5f53\u7136\uff0c\u5982\u679c\u77e5\u9053al\u4e0el\uff0car\u4e0er\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u5220\u53bb\u4e00\u534a\u3002</p> <p>\u521d\u59cb\u5316\u65f6\uff0c\u8981\u5148\u4ee4l=1\uff0cr=0\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4ece\u4e00\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u533a\u95f4\u4e86\uff0c\u4f46\u662f\uff0c\u5982\u679c\u76f4\u63a5\u5728\u7ebf\u67e5\u8be2\uff0c\u5f88\u6709\u53ef\u80fd\u5728\u5e8f\u5217\u4e24\u5934\u201c\u5de6\u53f3\u6a2a\u8df3\u201d\uff0c\u5230\u5934\u6765\u8fd8\u4e0d\u5982\u6734\u7d20\u7684$  O(n^2)$\u7b97\u6cd5\u3002\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u67e5\u8be2\u79bb\u7ebf\u4e0b\u6765\uff08\u8bb0\u5f55\u4e0b\u6765\uff09\uff0c\u7136\u540e\uff0c\u6392\u4e2a\u5e8f\u2026\u2026</p> <p>\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u6392\u5e8f\uff1f\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4ee5l\u4e3a\u7b2c\u4e00\u5173\u952e\u8bcd\uff0cr\u4e3a\u7b2c\u4e8c\u5173\u952e\u8bcd\u6392\u4e0b\u5e8f\uff0c\u4f46\u8fd9\u6837\u505a\u6548\u679c\u5e76\u4e0d\u662f\u5f88\u597d\u3002\u83ab\u6d9b\u5927\u795e\u7ed9\u51fa\u7684\u65b9\u6cd5\u662f\uff0c\u5206\u5757\uff0c\u7136\u540e\u6309\u7167<code>bel[l]</code> \u4e3a\u7b2c\u4e00\u5173\u952e\u8bcd\uff0c<code>bel[r]</code>\u4e3a\u7b2c\u4e8c\u5173\u952e\u8bcd\u6392\u5e8f\u3002 \u8fd9\u6837\uff0c\u6bcf\u4e24\u6b21\u8be2\u95ee\u95f4l\u548cr\u6307\u9488\u79fb\u52a8\u7684\u8ddd\u79bb\u53ef\u4ee5\u88ab\u6709\u6548\u5730\u964d\u4f4e\uff0c\u6574\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u964d\u5230 \\(O(n \\sqrt n)\\) \uff01</p> <p>\uff08\u6ce8\u91ca\uff1a <code>bel[i]</code>\u8868\u793a\u5143\u7d20i\u5f52\u5c5e\u54ea\u4e2a\u5757\uff09</p> <p>\u83ab\u961f\u7b97\u6cd5\u4f18\u5316\u7684\u6838\u5fc3\u662f\u5206\u5757\u548c\u6392\u5e8f\u3002\u6211\u4eec\u5c06\u5927\u5c0f\u4e3an\u7684\u5e8f\u5217\u5206\u4e3a\u221an\u4e2a\u5757\uff0c\u4ece1\u5230\u221an\u7f16\u53f7\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u5bf9\u67e5\u8be2\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u628a\u67e5\u8be2\u533a\u95f4\u6309\u7167**\u5de6\u7aef\u70b9\u6240\u5728\u5757\u7684\u5e8f\u53f7\u4ece\u5c0f\u5230\u5927**\u6392\u4e2a\u5e8f\uff0c\u5982\u679c\u5de6\u7aef\u70b9\u6240\u5728\u5757\u76f8\u540c\uff0c\u518d\u6309**\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927**\u6392\u5e8f\u3002\u6392\u5b8c\u5e8f\u540e\u6211\u4eec\u518d\u8fdb\u884c\u5de6\u53f3\u6307\u9488\u8df3\u6765\u8df3\u53bb\u7684\u64cd\u4f5c</p> <pre><code> bool operator&lt;(const query &amp;o) const // \u91cd\u8f7d&lt;\u8fd0\u7b97\u7b26\uff0c\u5947\u5076\u5316\u6392\u5e8f\n    {\n        // \u8fd9\u91cc\u53ea\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u5143\u7d20\u5f52\u5c5e\u54ea\u4e2a\u5757\uff0c\u800c\u5757\u7684\u5927\u5c0f\u90fd\u662fsqrt(n)\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528l/sq\n        if (l / sq != o.l / sq) \n            return l &lt; o.l;\n        if (l / sq &amp; 1)\n            return r &lt; o.r;\n        return r &gt; o.r;\n    }\n</code></pre> <p>\u5728\\(l / sq \\&amp; 1\\)\u4e2d\uff0c<code>&amp;</code>\u4f18\u5148\u7ea7\u4f4e\u4e8e<code>/</code></p> <p>\u5982\u679c\\(1/sq\\)\u4e3a\u5947\u6570,\u5219\u4e0a\u5f0f\u4e3atrue</p> <p>\u4e0e\uff08&amp;\uff09</p> <p>\u89c4\u5219\uff1a\u4e24\u4e2a\u64cd\u4f5c\u6570\u5bf9\u5e94\u4e8c\u8fdb\u5236**\u4f4d**\u540c\u6837\u4e3a1 \u7ed3\u679c**\u4f4d** \u624d\u4e3a1\uff0c\u5426\u5219\u4e3a0\uff1b</p> <p>\u5206\u5757\u524d\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u8bf4</p> <p>\u5206\u5757\u524d\uff1a</p> <p>\u6211\u4eec\u6309\u7167l\u8fdb\u884c\u6392\u5e8f\uff0c\u5f53l\u4e0d\u53d8\u65f6\uff0cr\u53ef\u80fd\u4f1a\u5728l~n\u4e4b\u95f4\u53cd\u590d\u6a2a\u8df3\uff0c\u590d\u6742\u5ea6\u8f83\u9ad8</p> <p>\u5206\u5757\u540e\uff1a</p> <p>\u6211\u4eec\u628a\u6240\u5c5e\u7684\u5757\u76f8\u540c\u7684\u8be2\u95ee\u653e\u5728\u4e00\u8d77\uff0c\u6309r\u4ece\u5c0f\u5230\u5927\u6392\u5e8f</p> <p>l\u53ef\u80fd\u4f1a\u5728\u5757\u5185\u53cd\u590d\u6a2a\u8df3\uff0c\u4f46\u590d\u6742\u5ea6\u8f83\u5c0f\u3002\u800cr\u662f\u4ece\u5c0f\u5230\u5927\u7684\uff0c\u590d\u6742\u5ea6\u6700\u9ad8\u4e3a\\(O(n-l)\\)\u4e5f\u8f83\u5c0f</p> <p>\u8f83\u9ad8&gt;\u8f83\u5c0f\u00d7\u8f83\u5c0f\uff0c\u7ed3\u679c\u4e25\u8c28\u8bc1\u660e\u5f97\u5206\u5757\u66f4\u4f18\u79c0\u3002</p> <p>\u5947\u5076\u6027\u6392\u5e8f</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u6211\u4eec\u7684l\u4ece\u4e00\u5757\u8df3\u5230\u540e\u9762\u4e00\u5757\u65f6\uff0cr\u8981\u4ece\u504f\u53f3\u7aef\u8df3\u56de\u5230\u6700\u9760\u8fd1l\u7684\u90a3\u4e2ar\uff0c\u7136\u540e\u53c8\u8981\u518d\u5f80\u53f3\u8df3\u4e00\u8fb9\u3002\u8fd9\u6837\u5c31\u4f1a\u91cd\u590d\u8d70\u8def\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u8ba9r\u5728\u201c\u4ece\u504f\u53f3\u7aef\u8df3\u56de\u5230\u6700\u9760\u8fd1l\u7684\u90a3\u4e2ar\u201d\u8fc7\u7a0b\u4e2d\u5c31\u628a\u7b54\u6848\u5904\u7406\u6389\uff0c\u5c31\u4f1a\u4f18\u5316\u4e00\u534a\u7684\u590d\u6742\u5ea6\u3002</p> <p>\u56e0\u6b64\uff1a\u5982\u679c<code>bel[l]</code> \u662f\u5947\u6570\uff0c\u5219\u5c06<code>r</code>\u987a\u5e8f\u6392\u5e8f\uff0c\u5426\u5219\u5c06<code>r</code>\u9006\u5e8f\u6392\u5e8f</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%8E%AB%E9%98%9F/#2-b","title":"\u4f8b\u9898 #2 \u5c0fB\u7684\u8be2\u95ee","text":"<p>\u5c0fB \u6709\u4e00\u4e2a\u957f\u4e3a \\(n\\) \u7684\u6574\u6570\u5e8f\u5217 \\(a\\)\uff0c\u503c\u57df\u4e3a \\([1,k]\\)\u3002 \u4ed6\u4e00\u5171\u6709 \\(m\\) \u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4 \\([l,r]\\)\uff0c\u6c42\uff1a \\(\\sum\\limits_{i=1}^k c_i^2\\)</p> <p>\u5176\u4e2d \\(c_i\\) \u8868\u793a\u6570\u5b57 \\(i\\) \u5728 \\([l,r]\\) \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u5c0fB\u8bf7\u4f60\u5e2e\u52a9\u4ed6\u56de\u7b54\u8be2\u95ee\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m,k \\le 5\\times 10^4\\)\u3002</p> <p>zhuanlan.zhihu.com</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+B then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s &lt;&lt; ' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nstruct node{\n    int l,r,id;\n}t[N];\n\nint B;\nint a[N];\n\nint cnt[N],cnt2[N];\n\n\ninline int getK(int x){\n    return (x-1)/B+1;\n}\n\nbool cmp(node a, node b)\n{\n    if(getK(a.l) ^ getK(b.l)) return a.l &lt; b.l;\n    else if(getK(a.l) &amp; 1) return a.r &lt; b.r;\n    else return a.r &gt; b.r;\n}\n\n\nint ans;\nint K;\n\nvoid add(int x){\n    if(a[x]&gt;K)return ;\n    ans-=cnt2[a[x]];\n    cnt2[a[x]]+=2*cnt[a[x]]+1;\n    cnt[a[x]]++;\n    ans+=cnt2[a[x]];\n}\n\nvoid del(int x){\n    if(a[x]&gt;K)return ;\n    ans-=cnt2[a[x]];\n    cnt2[a[x]]+=-2*cnt[a[x]]+1;\n    cnt[a[x]]--;\n    ans+=cnt2[a[x]];\n\n}\n\nint anss[N];\n\nvoid solve(){\n    int n=rd,m=rd;\n    K=rd;\n    B=sqrt(n)+1;\n    for(int i=1;i&lt;=n;i++){\n        a[i]=rd;\n    }   \n    for(int i=1;i&lt;=m;i++){\n        t[i].l=rd,t[i].r=rd;\n        t[i].id=i;\n    }\n\n    // dbg(\"OK\");\n    sort(t+1,t+m+1,cmp);\n    int cl=1,cr=0;\n    for(int i=1;i&lt;=m;i++){\n        int l=t[i].l,r=t[i].r;\n\n        // dbg(\"--\",l,r,el);\n\n        while(cl&gt;l)add(--cl);\n        while(cl&lt;l)del(cl),cl++;\n        while(cr&gt;r)del(cr),cr--;        \n        while(cr&lt;r)cr++,add(cr);\n\n        anss[t[i].id]=ans;\n    }\n\n    for(int i=1;i&lt;=m;i++){\n        cout&lt;&lt;anss[i]&lt;&lt;endl;\n    }\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%8E%AB%E9%98%9F/#_3","title":"\u5e26\u4fee\u83ab\u961f","text":"<p>\u4f8b\u9898 #1\u3010\u6a21\u677f\u3011\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\uff08\u7b2c\u5341\u56db\u5206\u5757(\u524d\u4f53)\uff09</p> <p>\u73c2\u6735\u8389\u7ed9\u4e86\u4f60\u4e00\u4e2a\u5e8f\u5217 \\(a\\)\uff0c\u6bcf\u6b21\u67e5\u8be2\u7ed9\u4e00\u4e2a\u533a\u95f4 \\([l,r]\\)\uff0c\u67e5\u8be2 \\(l \\leq i&lt; j \\leq r\\)\uff0c\u4e14 \\(a_i \\oplus a_j\\) \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u6709 \\(k\\) \u4e2a \\(1\\) \u7684\u4e8c\u5143\u7ec4 \\((i,j)\\) \u7684\u4e2a\u6570\u3002\\(\\oplus\\) \u662f\u6307\u6309\u4f4d\u5f02\u6216\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e09\u4e2a\u6570\u8868\u793a \\(n,m,k\\)\u3002</p> <p>\u7b2c\u4e8c\u884c \\(n\\) \u4e2a\u6570\u8868\u793a\u5e8f\u5217 \\(a\\)\u3002</p> <p>\u4e4b\u540e \\(m\\) \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6570 \\(l,r\\) \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u3002</p> <p>\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c\\(1 \\leq n, m \\leq 100000\\)\uff0c\\(0 \\leq a_i, k &lt; 16384\\)\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%8E%AB%E9%98%9F/#_4","title":"\u56de\u6eda\u83ab\u961f&amp;\u4e0d\u5220\u9664\u83ab\u961f","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%8E%AB%E9%98%9F/#_5","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u591a\u6b21\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4 \\([l,r]\\)\uff0c\u6c42\u533a\u95f4\u4e2d**\u76f8\u540c\u7684\u6570\u7684\u6700\u8fdc\u95f4\u9694\u8ddd\u79bb**\u3002</p> <p>\u5e8f\u5217\u4e2d\u4e24\u4e2a\u5143\u7d20\u7684**\u95f4\u9694\u8ddd\u79bb**\u6307\u7684\u662f**\u4e24\u4e2a\u5143\u7d20\u4e0b\u6807\u5dee\u7684\u7edd\u5bf9\u503c**\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%8E%AB%E9%98%9F/#_6","title":"\u5e94\u7528","text":"<p>\u4f17\u6240\u5468\u77e5\uff0c\u6211\u4eec\u5728\u662f\u5b9e\u73b0\u83ab\u961f\u7684\u65f6\u5019\u8981\u5b9e\u73b0\u4e24\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a\u662fadd\uff0c\u4e00\u4e2a\u662fdel\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u9047\u5230\u4e86\u96be\u4ee5\u5b9e\u73b0\u5feb\u901fdel\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u4f7f\u7528\u56de\u6eda\u83ab\u961f\u3002</p> <p>\u56de\u6eda\u83ab\u961f\u5c31\u662f\u901a\u8fc7\u53cc\u6307\u9488\u56de\u5230\u67d0\u4e00\u4e2a\u5386\u53f2\u7248\u672c\uff0c\u7136\u540e\u91cd\u65b0\u5f00\u59cbadd\u64cd\u4f5c\u6765\u5b9e\u73b0\u533a\u95f4\u8fb9\u754c\u7684del\u64cd\u4f5c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%8E%AB%E9%98%9F/#_7","title":"\u601d\u8def","text":"<p>\u6839\u636e\u83ab\u961f\u7684\u6027\u8d28\uff0c\u5728\u4e00\u4e2a\u8be2\u95ee\u5757\u4e2d\uff0c\u6211\u4eec\u7684r\u662f\u5355\u8c03\u7684\uff0c\u4f46\u662fl\u53ef\u80fd\u4e0d\u662f\uff0c\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u8003\u8651\u4e00\u4e2al\u7684\u95ee\u9898\u5c31\u884c\u4e86\u3002\u90a3\u4e48\u4e3a\u4e86\u51cf\u5c11\u5220\u9664\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9l\u4e00\u76f4\u6307\u5411L\u4e2d\u7684\u6700\u5927\u503c\uff08L\u662f\u5757\u4e2d\u6240\u6709\u8be2\u95ee\u7684l\uff09\uff0c\u5e76\u4e14\u8ba9\u6307\u9488p,r\u53bb\u5206\u522b\u8d70\u5230\u5de6\u53f3\u7aef\u70b9\u3002\u5e76\u4e14\u5728\u6bcf\u4e00\u6b21\u9700\u8981\u5de6\u7aef\u70b9del\u65f6\uff0c\u5c31\u4ebap\u76f4\u63a5\u56de\u5230l\u540e\u91cd\u65b0\u5411\u5de6\u8fb9\u6269\u6563\u5373\u53ef\u3002</p> <p>\u8fd9\u4e2a\u505a\u6cd5\u4ec5\u4ec5\u662f\u5728\u79fb\u52a8\u53cc\u6307\u9488\u65f6\u9700\u8981\u66f4\u591a\u7684\u4ee3\u7801\uff0c\u5e76\u4e0d\u9700\u8981\u5728\u6392\u5e8f\u4e0a\u52a8\u624b\u811a\u3002</p> <p>\u6ce8\u610f\uff0c\u56de\u6eda\u83ab\u961f\u5e76\u4e0d\u4ee3\u8868\u7740\u6211\u4eec\u53ef\u4ee5\u5b8c\u5168\u505a\u5230\u4e0d\u5220\u9664\uff0c\u53ea\u662f\u5728\u51cf\u5c11\u5220\u9664\u7684\u6b21\u6570\u3002\u8fd8\u662f\u56de\u5230\u4e0a\u9762\u7684\u601d\u8def\uff0c\u6211\u4eec\u5728\u6765\u5230\u4e00\u4e2a\u65b0\u5757\u65f6\uff0c\u5148\u8bbe\u5b9acl\u4e3a\u5176\u4e2d\u6700\u5927\u7684l\uff0c\u6b64\u65f6\u6211\u4eec\u6ce8\u610f\u5230\u53ef\u80fd\u4f1a\u6709\u8be2\u95ee\u7684r&lt;cl\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u9700\u8981\u5220\u9664[r+1,cl]\u4e4b\u95f4\u7684\u6570\u636e\u4e86\u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u53d1\u73b0\uff0cr\u65e0\u975e\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\u2014\u2014\u5728\u5f53\u524d\u5757\u5185\u548c\u5728\u5f53\u524d\u5757\u540e\u9762\u3002\u90a3\u4e48\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u5373\u53ef\u3002\u7b2c\u4e8c\u79cd\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684\u4e0d\u5220\u9664\u7b56\u7565\u4e86\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%8E%AB%E9%98%9F/#_8","title":"\u4ee3\u7801","text":"<p>\u6ce8\u610f\u6bcf\u6b21pl\u56de\u9000\u65f6res\u4e5f\u8981\u56de\u9000\u3002</p> <p>\u6211\u4eec\u7684\u8d21\u732e\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u90e8\u5206</p> <ul> <li> <p>\u8de8cl\u7684</p> </li> <li> <p>\u4ec5\u4ec5\u7531cl\u5de6\u8fb9\u4ea7\u751f\u7684</p> </li> <li> <p>\u4ec5\u4ec5\u7531cl\u53f3\u8fb9\u4ea7\u751f\u7684</p> </li> </ul> <p>\u56de\u9000pl\u65f6\uff0c\u6211\u4eec\u53ea\u80fd\u4fdd\u7559\u4ec5\u4ec5\u7531cl\u53f3\u8fb9\u4ea7\u751f\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u6211\u4eec\u9664\u4e86\u8981\u7ef4\u62a4\u5168\u5c40\u8d21\u732e\u6700\u5927\u503cres\uff0c\u8fd8\u8981\u7ef4\u62a4\u4ec5\u4ec5\u7531cl\u53f3\u8fb9\u4ea7\u751f\u7684\u8d21\u732e\u7684\u6700\u5927\u503cresr</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\nint B;\n\nstruct node{\n    int l,r,id;\n}t[N];\nint a[N];\nint ans[N];\nint mxl[N];\n\ninline int getK(int x){\n    return (x-1)/B+1;\n}\n\nbool cmp(node a,node b){\n    if(getK(a.l)==getK(b.l)){\n        return a.r&lt;b.r;\n    }\n    return getK(a.l)&lt;getK(b.l);\n}\n\n\nint res=0;\nint dislmn[N],disrmx[N];\nint dislmx[N],disrmn[N];\nint cl,cr;\nint stk[N],top;\nint stk2[N],top2;\n\nint resr;\n\nvoid update(int x){\n    int v=a[x];\n    res=max(res,dislmx[v]-dislmn[v]);\n    res=max(res,disrmx[v]-disrmn[v]);\n    res=max(res,disrmx[v]-dislmn[v]);\n    resr=max(resr,disrmx[v]-disrmn[v]);\n\n    // dbg(dislmx[v] - dislmn[v], disrmx[v] - disrmn[v], disrmx[v] - dislmn[v], el);\n\n}\n\nvoid addl(int x){\n    dislmx[a[x]]=max(dislmx[a[x]],x);\n    dislmn[a[x]]=min(dislmn[a[x]],x);\n    stk[++top]=a[x];\n    update(x);\n}\n\nvoid addr(int x){\n    disrmx[a[x]]=max(disrmx[a[x]],x);\n    disrmn[a[x]]=min(disrmn[a[x]],x);\n    stk2[++top2]=a[x];\n    update(x);\n}\n\nint b[N];\nint f[N];\n\n\nint loc[N],but[N],btop;\n\nvoid solve(){\n    for(int i=0;i&lt;N;i++)dislmx[i]=-INF;\n    for(int i=0;i&lt;N;i++)disrmx[i]=-INF;\n    for(int i=0;i&lt;N;i++)disrmn[i]=INF;\n    for(int i=0;i&lt;N;i++)dislmn[i]=INF;\n    for(int i=0;i&lt;N;i++)loc[i]=-1;\n\n\n    int n=rd;\n    B=sqrt(n)+1;\n    for(int i=1;i&lt;=n;i++){\n        b[i]=a[i]=rd;\n    }   \n    sort(b+1,b+n+1);\n    int len=unique(b+1,b+n+1)-b;\n    for(int i=1;i&lt;=n;i++){\n        a[i]=lower_bound(b+1,b+len+1,a[i])-b;\n    }\n\n\n    int m=rd;\n    for(int i=1;i&lt;=m;i++){\n        t[i].l=rd,t[i].r=rd;\n        mxl[getK(t[i].l)]=max(mxl[getK(t[i].l)],t[i].l);\n        t[i].id=i;\n    }\n\n    sort(t+1,t+m+1,cmp);\n\n    cl=0,cr=0;\n    for(int i=1;i&lt;=m;i++){\n        int l=t[i].l,r=t[i].r;\n\n\n        while(top){dislmn[stk[top]]=INF;dislmx[stk[top--]]=-INF;}\n\n        if(cl!=mxl[getK(l)]){\n            cr=cl=mxl[getK(l)];\n            while(top2){disrmx[stk2[top2]]=-INF;disrmn[stk2[top2--]]=INF;}\n            res=0;resr=0;\n            addr(cl);\n        }\n\n        if(getK(l)==getK(r)){\n            res=0;\n            while(btop)loc[but[btop--]]=-1;\n            for(int j=l;j&lt;=r;j++){\n                int v=a[j];\n                if(loc[v]!=-1)res=max(res,j-loc[v]);\n                else {loc[v]=j;but[++btop]=v;}\n            }\n            ans[t[i].id]=res;\n            f[t[i].id]=1;\n\n            continue;\n        }\n\n        int pl=cl;\n        res=resr;\n\n        while(pl&gt;l)addl(--pl);\n        while(cr&lt;r)addr(++cr);\n        ans[t[i].id]=res;\n    }\n\n    for(int i=1;i&lt;=m;i++){\n        cout&lt;&lt;ans[i]&lt;&lt;endl;\n    }\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%8E%AB%E9%98%9F/#_9","title":"\u4e60\u9898","text":"<p>www.luogu.com.cn</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/","title":"\u8df3\u821e\u94fe","text":"<p>\u8df3\u821e\u94fe\u662f\u94fe\u8868\u7684\u4e00\u79cd\u9ad8\u7ea7\u53d8\u79cd</p> <p>Day6 \u821e\u8e48\u94fe - \u6d69\u7199\u7684\u535a\u5ba2 - \u6d1b\u8c37\u535a\u5ba2</p> <p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | DLX</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#_2","title":"\u7cbe\u786e\u8986\u76d6\u95ee\u9898","text":"<p>e.g. \u7ed9\u5b9a\u4e00\u4e2a01\u77e9\u9635\uff0c\u6c42\u81f3\u5c11\u9009\u591a\u5c11\u884c\u53ef\u4ee5\u4f7f\u5f97\u6bcf\u4e00\u5217**\u6070\u597d\uff08\u4f53\u73b0\uff1a\u7cbe\u786e\uff09**\u6709\u4e00\u4e2a1</p> <p>\u53ea\u9002\u7528\u4e8e\u7a00\u758f\u56fe\u3002</p> <p>\u5b58\u56fe</p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a1\uff0c\u5efa\u7acb\u4e00\u4e2a\u5341\u5b57\u94fe\u8868\u8282\u70b9\uff08\u5373\u6709\u4e0a\u4e0b\u5de6\u53f34\u4e2a\u6307\u9488\uff09\uff0c\u5e76\u4e14\u5217\u8868\u5728\u5de6\u53f3\u65b9\u5411\u548c\u4e0a\u4e0b\u65b9\u5411\u5206\u522b\u662f\u5faa\u73af\u7684\u3002\u5373\u7684\u4e00\u4e2a\u6307\u5411\u6700\u540e\u4e00\u4e2a\u3002</p> <p>\u521b\u5efa\uff1a\u9010\u884c\u5730\u521b\u5efa\u5341\u5b57\u94fe\u8868\u3002\u6bcf\u4e00\u884c\u6bcf\u4e00\u5217\u5206\u522b\u8bbe\u7f6e\u4e00\u4e2a\u94fe\u5934\uff08\u6807\u5175\uff09</p> <p>\u65e2\u7136DLX\u662f\u7528\u6765\u4f18\u5316\u66b4\u529b\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u8003\u8651\u66b4\u529b\uff1adfs\u679a\u4e3e\u6240\u6709\u65b9\u6848\u540e\u5224\u65ad\u3002</p> <p>\u526a\u679d\uff1a</p> <ul> <li> <p>\u6bcf\u6b21\u9009\u62e91\u7684\u4e2a\u6570\u6700\u5c11\u7684\u4e00\u5217\u679a\u4e3e\u9009\u62e9\u54ea\u4e00\u4e2a1</p> </li> <li> <p>\u9009\u62e9\u4e86\u67d0\u4e00\u5217\u540e\u5e94\u8be5\u5220\u9664\u8fd9\u4e00\u5217\uff0c\u56e0\u4e3a\u8fd9\u4e00\u5217\u5df2\u7ecf\u6ee1\u8db3\u8981\u6c42\u4e86\u3002\u540c\u65f6\u5e94\u8be5\u5220\u9664\u8fd9\u4e00\u5217\u4e2d\u6240\u67091\u6240\u5728\u7684\u884c\uff0c\u56e0\u4e3a\u201c\u7cbe\u786e\u201d\uff0c\u8fd9\u4e9b\u884c\u5df2\u7ecf\u4e0d\u80fd\u9009\u4e86\u3002</p> </li> <li> <p>\u9009\u62e9\u4e86\u67d0\u4e00\u884c\u540e\u5e94\u8be5\u5220\u9664\u8fd9\u4e00\u884c\u4e2d\u6240\u67091\u6240\u5728\u7684\u5217\uff0c\u56e0\u4e3a\u8fd9\u5199\u5217\u5df2\u7ecf\u6ee1\u8db3\u8981\u6c42\u4e86\u3002</p> </li> <li> <p>\u5728\u5220\u9664\u884c/\u5217\u65f6\uff0c\u6211\u4eec\u5220\u9664\u5176\u6807\u5175\u5373\u53ef\u3002</p> </li> </ul> <p>\u5927\u81f4\u6846\u67b6\uff08\u9012\u5f52\uff09\u8fd8\u662f**\u6539-\u4e0b-\u6062**</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#_3","title":"\u8be6\u89e3","text":"<p>\u53d8\u91cf</p> <pre><code>int n, m;\nint l[N], r[N],u[N],d[N];//\u56db\u4e2a\u65b9\u5411\u7684\u6307\u9488\nint row[N],col[N];//\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u884c/\u5217\nint s[N];//\u6bcf\u4e00\u5217\u7684\u8282\u70b9\u6570\u91cf\nint ans[N];//\u6807\u8bb0\u9009\u62e9\u4e86\u54ea\u4e9b\u884c\nint idx,top;\n</code></pre> <p>\u521d\u59cb\u5316</p> <pre><code>void init(){//\u521d\u59cb\u5316\u7b2c0\u884c\u7684\u5217\u8868\u5934\n    for(int i=0;i&lt;=m;i++){\n        l[i]=i-1,r[i]=i+1;\n        u[i]=d[i]=i;\n    }\n    l[0]=m,r[m]=0;\n    idx=m/\u8282\u70b9\u5206\u914dcnt\n}\n</code></pre> <p>\u5bfb\u5740\u539f\u7406\uff1a\u6211\u4eec\u9884\u5148\u5206\u914dm\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6bcf\u4e00\u5217\u7684\u8868\u5934\u3002\u8fd9\u6837\u6211\u4eec\u8981\u904d\u5386\u7b2ci\u5217\u65f6\uff0c\u4ece\u8282\u70b9i\u5f80\u4e0b\u5373\u53ef\u3002\u6211\u4eec\u7684\u5341\u5b57\u94fe\u8868\u662f\u5faa\u73af\u7684\uff0c\u6240\u4ee5\u5f53\u518d\u4e00\u6b21\u8bbf\u95ee\u5230i\u65f6\u5c31\u8bf4\u660e\u904d\u5386\u5b8c\u4e86\u3002</p> <p>\u6dfb\u52a0\u8282\u70b9</p> <p>\u5341\u5b57\u94fe\u8868\u7684\u63d2\u5165\u64cd\u4f5c\u3002\u6ce8\u610f\u63d2\u5165\u65f6\u7684\u662f\u9010\u884c\u4ece\u5de6\u5230\u53f3\u63d2\u5165\u7684\u3002</p> <pre><code>void add(int &amp;hh,int &amp;tt,int x,int y){\n    row[idx]=x,col[idx]=y;s[y]++;//\u66f4\u65b0\u70b9\u7684\u4fe1\u606f\uff0c\u5217\u7684\u8282\u70b9\u6570\u91cf\n    u[idx]=y,d[idx]=d[y],u[d[y]]=idx;d[y]=idx;\n    r[hh]=l[tt]=idx,r[idx]=tt,l[idx]=hh;\n    tt=idx++;\n}\n</code></pre> <p>dfs</p> <p>\u8fd9\u4e00\u90e8\u5206\u5f88\u60f3\u662f\u516b\u7687\u540e\u7684dfs</p> <pre><code>void remove(int p){//\u5220\u9664\u7b2cp\u5217\n    r[l[p]]=r[p];l[r[p]]=l[p];//\u9996\u5148\u5bf9\u5217\u8868\u5934\u7ee7\u7eed\u4fee\u6539\n    for(int i=d[p];i!=p;i=d[i]){\n        for(int j=r[i];j!=i;j=r[j]){\n            u[d[j]]=u[j],d[u[j]]=d[j];\n            s[col[j]]--;\n        }\n    }\n\n}\n\nvoid resume(int p){//\u590d\u539f\u7b2cp\u5217\n    for(int i=u[p];i!=p;i=u[i]){\n        for(int j=l[i];j!=i;j=l[j]){\n            u[d[j]]=d[u[j]]=j;\n            s[col[j]]++;\n        }\n    }\n    r[l[p]]=l[r[p]]=p;\n}\n\n\nbool dfs(){\n    if(!r[0])return 1;\n    int p=r[0];\n    for(int i=r[0];i;i=r[i]){\n        if(s[i]&lt;s[p])p=i;//\u627e\u52301\u6700\u5c11\u7684\uff0c\u8fd8\u5b58\u5728\u7684\u90a31\u5217\n    }\n  //\u4e0b\u9762\u5c31\u662fdfs\u641c\u7d22\u5957\u8def\u4e86\n\n    remove(p);//\u5220\u9664\u7b2cp\u5217\n\n    for(int i=d[p];i!=p;i=d[i]){//\u679a\u4e3e\u9009\u62e9\u90a3\u4e2a1\u5e76\u4e14\u5220\u9664\u90a3\u4e2a1\u6240\u5728\u7684\u884c\n        ans[++top]=row[i];\n        for(int j=r[i];j!=i;j=r[j]){\n            remove(col[j]);\n        }\n        if(dfs())return 1;\n        for(int j=l[i];j!=i;j=l[j]){\n            resume(col[j]);\n        }\n        top--;\n    }\n    resume(p);//\u6062\u590d\u7b2cp\u5217\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#_4","title":"\u4ee3\u7801","text":"<pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n// #define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n#define rep(i, a, b) for(int i = a; i &lt;= b; ++i)\n#define per(i, a, b) for(int i = a; i &gt;= b; --i)\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\nconst int N = 2e4 + 5;\nconst int M = 1e5;\nconst int MOD = 998244353;\nconst int INF = 1e9+5;\n\nint n, m, l[N], r[N],u[N],d[N];\nint row[N],col[N],s[N];\nint ans[N],idx,top;\n\nvoid init(){\n    for(int i=0;i&lt;=m;i++){\n        l[i]=i-1,r[i]=i+1;\n        u[i]=d[i]=i;\n    }\n    l[0]=m,r[m]=0;\n    idx=m/\u8282\u70b9\u5206\u914dcnt\n}\n\nvoid add(int &amp;hh,int &amp;tt,int x,int y){\n    row[idx]=x,col[idx]=y;s[y]++;\n    u[idx]=y,d[idx]=d[y],u[d[y]]=idx;d[y]=idx;\n    r[hh]=l[tt]=idx,r[idx]=tt,l[idx]=hh;\n    tt=idx++;\n}\n\nvoid remove(int p){\n    r[l[p]]=r[p];l[r[p]]=l[p];\n    for(int i=d[p];i!=p;i=d[i]){\n        for(int j=r[i];j!=i;j=r[j]){\n            u[d[j]]=u[j],d[u[j]]=d[j];\n            s[col[j]]--;\n        }\n    }\n\n}\n\nvoid resume(int p){\n    for(int i=u[p];i!=p;i=u[i]){\n        for(int j=l[i];j!=i;j=l[j]){\n            u[d[j]]=d[u[j]]=j;\n            s[col[j]]++;\n        }\n    }\n    r[l[p]]=l[r[p]]=p;\n}\n\n\nbool dfs(){\n    if(!r[0])return 1;\n    int p=r[0];\n    for(int i=r[0];i;i=r[i]){\n        if(s[i]&lt;s[p])p=i;//\u627e\u52301\u6700\u5c11\u7684\uff0c\u8fd8\u5b58\u5728\u7684\u90a31\u5217\n    }\n    remove(p);//\u5220\u9664p\u5217\n\n    for(int i=d[p];i!=p;i=d[i]){//\u679a\u4e3e\u9009\u62e9\u90a3\u4e2a1\u5e76\u4e14\u5220\u9664\u90a3\u4e2a1\u6240\u5728\u7684\u884c\n        ans[++top]=row[i];\n        for(int j=r[i];j!=i;j=r[j]){\n            remove(col[j]);\n        }\n        if(dfs())return 1;\n        for(int j=l[i];j!=i;j=l[j]){\n            resume(col[j]);\n        }\n        top--;\n    }\n    resume(p);//\u6062\u590dp\u5217\n    return 0;\n}\nsigned main(){\n    n=rd,m=rd;\n\n    init();\n    for(int i=1;i&lt;=n;i++){\n        int hh=idx,tt=idx;\n        for(int j=1;j&lt;=m;j++){\n            int x=rd;\n            if(x)add(hh,tt,i,j);\n        }\n    }\n\n    // cerr&lt;&lt;\"OK\";\n\n    if(dfs()){\n        for(int i=1;i&lt;=top;i++){\n            cout&lt;&lt;ans[i]&lt;&lt;' ';\n        }\n    }else cout&lt;&lt;\"No Solution!\";\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#_5","title":"\u91cd\u590d\u8986\u76d6\u95ee\u9898","text":"<p>\u662f\u4e00\u4e2aNP\u95ee\u9898\uff0c\u914d\u5408IDA*\u4f18\u5316\u3002\u4e0d\u7528\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#1dlx","title":"\u4f8b\u9898 #1\u3010\u6a21\u677f\u3011\u821e\u8e48\u94fe\uff08DLX\uff09","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>\u672c\u9898\u662f\u821e\u8e48\u94fe\u6a21\u677f\u2014\u2014\u7cbe\u786e\u8986\u76d6\u95ee\u9898</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u5b9a\u4e00\u4e2a \\(N\\) \u884c \\(M\\) \u5217\u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8981\u4e48\u662f \\(1\\)\uff0c\u8981\u4e48\u662f \\(0\\)\u3002</p> <p>\u4f60\u9700\u8981\u5728\u77e9\u9635\u4e2d\u6311\u9009\u51fa\u82e5\u5e72\u884c\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u77e9\u9635\u7684\u6bcf\u4e00\u5217 \\(j\\)\uff0c\u5728\u4f60\u6311\u9009\u7684\u8fd9\u4e9b\u884c\u4e2d\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u884c\u7684\u7b2c \\(j\\) \u4e2a\u5143\u7d20\u4e3a \\(1\\)\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6570 \\(N,M\\)\u3002</p> <p>\u63a5\u4e0b\u6765 \\(N\\) \u884c\uff0c\u6bcf\u884c \\(M\\) \u4e2a\u6570\u5b57 \\(0\\) \u6216 \\(1\\)\uff0c\u8868\u793a\u8fd9\u4e2a\u77e9\u9635\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e00\u884c\u8f93\u51fa\u82e5\u5e72\u4e2a\u6570\u8868\u793a\u7b54\u6848\uff0c\u4e24\u4e2a\u6570\u4e4b\u95f4\u7528\u7a7a\u683c\u9694\u5f00\uff0c\u8f93\u51fa\u4efb\u4e00\u53ef\u884c\u65b9\u6848\u5747\u53ef\uff0c\u987a\u5e8f\u968f\u610f\u3002</p> <p>\u82e5\u65e0\u89e3\uff0c\u8f93\u51fa <code>No Solution!</code>\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(N,M\\leq 500\\)\uff0c\u4fdd\u8bc1\u77e9\u9635\u4e2d \\(1\\) \u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 \\(5000\\) \u4e2a\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#2","title":"\u4f8b\u9898 #2 \u6570\u72ec","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6570\u72ec\u662f\u6839\u636e \\(9 \\times 9\\) \u76d8\u9762\u4e0a\u7684\u5df2\u77e5\u6570\u5b57\uff0c\u63a8\u7406\u51fa\u6240\u6709\u5269\u4f59\u7a7a\u683c\u7684\u6570\u5b57\uff0c\u5e76\u6ee1\u8db3\u6bcf\u4e00\u884c\u3001\u6bcf\u4e00\u5217\u3001\u6bcf\u4e00\u4e2a\u7c97\u7ebf\u5bab\u5185\u7684\u6570\u5b57\u5747\u542b \\(1 - 9\\) \uff0c\u4e0d\u91cd\u590d\u3002\u6bcf\u4e00\u9053\u5408\u683c\u7684\u6570\u72ec\u8c1c\u9898\u90fd\u6709\u4e14\u4ec5\u6709\u552f\u4e00\u7b54\u6848\uff0c\u63a8\u7406\u65b9\u6cd5\u4e5f\u4ee5\u6b64\u4e3a\u57fa\u7840\uff0c\u4efb\u4f55\u65e0\u89e3\u6216\u591a\u89e3\u7684\u9898\u76ee\u90fd\u662f\u4e0d\u5408\u683c\u7684\u3002</p> <p>\u82ac\u5170\u4e00\u4f4d\u6570\u5b66\u5bb6\u53f7\u79f0\u8bbe\u8ba1\u51fa\u5168\u7403\u6700\u96be\u7684\u201c\u6570\u72ec\u6e38\u620f\u201d\uff0c\u5e76\u520a\u767b\u5728\u62a5\u7eb8\u4e0a\uff0c\u8ba9\u5927\u5bb6\u53bb\u6311\u6218\u3002</p> <p>\u8fd9\u4f4d\u6570\u5b66\u5bb6\u8bf4\uff0c\u4ed6\u76f8\u4fe1\u53ea\u6709\u201c\u667a\u6167\u6700\u9876\u5c16\u201d\u7684\u4eba\u624d\u6709\u53ef\u80fd\u7834\u89e3\u8fd9\u4e2a\u201c\u6570\u72ec\u4e4b\u8c1c\u201d\u3002</p> <p>\u636e\u4ecb\u7ecd\uff0c\u76ee\u524d\u6570\u72ec\u6e38\u620f\u7684\u96be\u5ea6\u7684\u7b49\u7ea7\u6709\u4e00\u5230\u4e94\u7ea7\uff0c\u4e00\u662f\u5165\u95e8\u7b49\u7ea7\uff0c\u4e94\u5219\u6bd4\u8f83\u96be\u3002\u4e0d\u8fc7\u8fd9\u4f4d\u6570\u5b66\u5bb6\u8bf4\uff0c\u4ed6\u6240\u8bbe\u8ba1\u7684\u6570\u72ec\u6e38\u620f\u96be\u5ea6\u7b49\u7ea7\u662f\u5341\u4e00\uff0c\u53ef\u4ee5\u8bf4\u662f\u6240\u4ee5\u6570\u72ec\u6e38\u620f\u4e2d\uff0c\u96be\u5ea6\u6700\u9ad8\u7684\u7b49\u7ea7\u3002\u4ed6\u8fd8\u8868\u793a\uff0c\u4ed6\u76ee\u524d\u8fd8\u6ca1\u9047\u5230\u89e3\u4e0d\u51fa\u6765\u7684\u6570\u72ec\u6e38\u620f\uff0c\u56e0\u6b64\u4ed6\u8ba4\u4e3a\u201c\u6700\u5177\u6311\u6218\u6027\u201d\u7684\u6570\u72ec\u6e38\u620f\u5e76\u6ca1\u6709\u51fa\u73b0\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#_6","title":"\u601d\u8def","text":"<p>\u6211\u4eec\u8003\u8651\u5230DLX\u53ef\u7528\u89e3\u51b3\u4ec0\u4e48\u2014\u2014\u7cbe\u786e\u8986\u76d6\u95ee\u9898\u3002\u6a21\u677f\u9898\u662f\u4ec0\u4e48\u2014\u2014\u586b01\u77e9\u9635\u3002\u90a3\u4e48\u76f8\u6bd4DLX\u4e5f\u6ca1\u6709\u66f4\u4e30\u5bcc\u7684\u529f\u80fd\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u8f6c\u5316\u9898\u610f\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#01","title":"\u628a\u7ea6\u675f\u6761\u4ef6\u8f6c\u6362\u4e3a 01 \u77e9\u9635\u7684\u5217","text":"<p>1 \uff0c\u6bcf\u4e00\u683c\u53ea\u80fd\u586b\u4e00\u4e2a\u6570</p> <p>\u4e00\u5171 81 \u683c\uff0c\u8f6c\u6362\u4e3a 81 \u5217\u7b2c 1 \u5217\u8868\u793a\uff08 1 \uff0c 1 \uff09\u586b\u4e86\u4e00\u4e2a\u6570\u5b57</p> <p>\u7b2c 2 \u5217\u8868\u793a\uff08 1 \uff0c 2 \uff09\u586b\u4e86\u4e00\u4e2a\u6570\u5b57</p> <p>...</p> <p>\u7b2c 81 \u5217\u8868\u793a\uff08 9 \uff0c 9 \uff09\u586b\u4e86\u4e00\u4e2a\u6570\u5b57</p> <p>2 \uff0c\u6bcf\u4e00\u884c\u6bcf\u79cd\u6570\u53ea\u80fd\u586b\u4e00\u4e2a</p> <p>\u4e00\u5171 9 \u884c\uff0c\u6bcf\u884c\u586b 9 \u4e2a\u6570\u5b57\uff0c\u8f6c\u6362\u4e3a 81 \u5217</p> <p>\u7b2c 81 + 1 \u5217\u8868\u793a\u7b2c 1 \u884c\u586b\u4e86\u6570\u5b57 1</p> <p>\u7b2c 81 + 2 \u5217\u8868\u793a\u7b2c 1 \u884c\u586b\u4e86\u6570\u5b57 2</p> <p>\u7b2c 81 + 81 \u5217\u8868\u793a\u7b2c 9 \u884c\u586b\u4e86\u6570\u5b57 9</p> <p>3 \uff0c\u6bcf\u4e00\u5217\u6bcf\u79cd\u6570\u53ea\u80fd\u586b\u4e00\u4e2a</p> <p>\u4e00\u5171 9 \u5217\uff0c\u6bcf\u5217\u586b 9 \u4e2a\u6570\u5b57\uff0c\u8f6c\u6362\u4e3a 81 \u5217</p> <p>\u7b2c 162 + 1 \u5217\u8868\u793a\u7b2c 1 \u5217\u586b\u4e86\u6570\u5b57 1</p> <p>\u7b2c 162 + 2 \u5217\u8868\u793a\u7b2c 1 \u5217\u586b\u4e86\u6570\u5b57 2</p> <p>\u7b2c 162 + 81 \u5217\u8868\u793a\u7b2c 9 \u5217\u586b\u4e86\u6570\u5b57 9</p> <p>4 \uff0c\u6bcf\u4e00\u5bab\u6bcf\u79cd\u6570\u53ea\u80fd\u586b\u4e00\u4e2a</p> <p>\u4e00\u5171 9 \u5bab\uff0c\u6bcf\u5bab\u586b 9 \u4e2a\u6570\u5b57\uff0c\u8f6c\u6362\u4e3a81\u5217\u3001</p> <p>\u7b2c 243 + 1 \u5217\u8868\u793a\u7b2c 1 \u5bab\u586b\u4e86\u6570\u5b57 1</p> <p>\u7b2c 243 + 2 \u5217\u8868\u793a\u7b2c 1 \u5bab\u586b\u4e86\u6570\u5b57 2</p> <p>\u7b2c 243 + 81 \u5217\u8868\u793a\u7b2c 9 \u5bab\u586b\u4e86\u6570\u5b57 9</p> <p>\u4e00\u5171\u5f00 324 \u5217\u6765\u4fdd\u8bc1\u6bcf\u4e2a\u7ea6\u675f\u6761\u4ef6\uff0e</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#01_1","title":"\u628a\u51b3\u7b56\u8f6c\u6362\u4e3a 01 \u77e9\u9635\u7684\u884c","text":"<p>1 \uff0e\u5bf9\u4e8e\u586b\u4e86\u6570\u5b57\u7684\u683c\u5b50</p> <p>e.g.\uff08 1 \uff0c 3 \uff09\u4e2d\u586b\u4e86\u4e00\u4e2a\u6570\u5b57 8</p> <p>\u8f6c\u6362\u4e3a\u7ea6\u675f\u6761\u4ef6\uff0c\u5373\uff1a</p> <ul> <li> <p>\uff08 1 \uff0c 3 \uff09\u586b\u4e86\u4e00\u4e2a\u6570\u5b57\u7b2c 1 \u884c\u586b\u4e86\u4e00\u4e2a\u6570\u5b57 8</p> </li> <li> <p>\u7b2c 3 \u5217\u586b\u4e86\u4e00\u4e2a\u6570\u5b57 8</p> </li> <li> <p>\u7b2c 1 \u5bab\u586b\u4e86\u4e00\u4e2a\u6570\u5b57 8</p> </li> </ul> <p>\u5bf9\u5e94 01 \u77e9\u9635\u6709 4 \u5217\uff0c\u9700\u8981\u5f00 1 \u884c</p> <p>2 \uff0e\u5bf9\u4e8e\u6ca1\u586b\u6570\u5b57\u683c\u5b50\u8981\u679a\u4e3e\u8fd9\u4e2a\u683c\u5b50\u7684\u586b\u5165\u60c5\u51b5\uff0e</p> <ul> <li> <p>\uff08 1 \uff0c 1 \uff09\u4e2d\u586b\u5165\u6570\u5b57 1 \uff0c\u5bf9\u5e94 01 \u77e9\u9635\u6709 4 \u5217\u662f1</p> </li> <li> <p>\uff08 1 \uff0c 1 \uff09\u4e2d\u586b\u5165\u6570\u5b57 2 \uff0c\u5bf9\u5e94 01 \u77e9\u9635\u6709 4 \u5217\u662f1</p> </li> <li> <p>...</p> </li> <li> <p>\uff08 1 \uff0c 1 \uff09\u4e2d\u586b\u5165\u6570\u5b57 9 \uff0c\u5bf9\u5e94 01 \u77e9\u9635\u6709 4 \u5217\u662f1</p> </li> </ul> <p>\u679a\u4e3e 9 \u79cd\u586b\u5165\u60c5\u51b5\uff0c\u9700\u8981\u5f00 9 \u884c\u6765\u8bb0\u5f55</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#_7","title":"\u5176\u4ed6\u8bf4\u660e","text":"<ul> <li> <p>\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u586b\u6cd5\uff0c\u5728\u524d81\u5217\u90fd\u4f1a\u5728\u5bf9\u4e8e\u683c\u5b50\u6709\u4e00\u4e2a1\u8868\u793a\u5f53\u524d\u683c\u5b50\u5df2\u9009\u3002\u5982\u679c\u5f53\u524d\u683c\u5b50\u539f\u5148\u5df2\u7ecf\u586b\u4e86\uff0c\u90a3\u4e48\u53ea\u6709\u4e00\u884c\u7684\u8fd9\u5217\u662f1\uff0c\u5426\u5219\u5c31\u67099\u884c\u3002\u6839\u636eDLX\u4f18\u5148\u627e1\u6570\u91cf\u6700\u5c11\u7684\u5217\uff0c\u6240\u4ee5\u4f1a\u4f18\u5148\u5904\u7406\u8fd9\u4e9b\u5df2\u7ecf\u586b\u4e0a\u7684\uff0c\u4e8e\u662f\u5c31\u4f1a\u628a\u54ea\u4e9b\u548c\u5df2\u7ecf\u586b\u4e0a\u4e86\u7684\u6570\u5b57\u51b2\u7a81\u7684\u60c5\u51b5\u5220\u53bb\u3002</p> </li> <li> <p>\u4e3a\u4e86\u65b9\u4fbf\u7edf\u8ba1\u7b54\u6848\uff0c\u5982\u679c\u4e00\u4e2a\u683c\u5b50\u5df2\u7ecf\u586b\u4e86\uff0c\u6211\u4eec\u5728\u521b\u5efa\u51761\u884c\u65f6\u8981\u989d\u5916\u521b\u5efa8\u4e2a\u7a7a\u884c\u6765\u5bf9\u9f50\u6620\u5c04\u3002</p> </li> </ul> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n// #define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n#define rep(i, a, b) for(int i = a; i &lt;= b; ++i)\n#define per(i, a, b) for(int i = a; i &gt;= b; --i)\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\nconst int N = 2e6 + 5;\nconst int M = 1e3 + 5;\nconst int MOD = 998244353;\nconst int INF = 1e9+5;\n\nint n, m;\nint l[N], r[N],u[N],d[N];//\u56db\u4e2a\u65b9\u5411\u7684\u6307\u9488\nint row[N],col[N];//\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u884c/\u5217\nint s[N];//\u6bcf\u4e00\u5217\u7684\u8282\u70b9\u6570\u91cf\nint ans[N];//\u6807\u8bb0\u9009\u62e9\u4e86\u54ea\u4e9b\u884c\nint idx,top;\nint a[M][M];\n\nvoid init(){//\u521d\u59cb\u5316\u7b2c0\u884c\u7684\u5217\u8868\u5934\n    for(int i=0;i&lt;=m;i++){\n        l[i]=i-1,r[i]=i+1;\n        u[i]=d[i]=i;\n    }\n    l[0]=m,r[m]=0;\n    idx=m/\u8282\u70b9\u5206\u914dcnt\n}\n\nvoid add(int &amp;hh,int &amp;tt,int x,int y){\n    row[idx]=x,col[idx]=y;s[y]++;//\u66f4\u65b0\u70b9\u7684\u4fe1\u606f\uff0c\u5217\u7684\u8282\u70b9\u6570\u91cf\n    u[idx]=y,d[idx]=d[y],u[d[y]]=idx;d[y]=idx;\n    r[hh]=l[tt]=idx,r[idx]=tt,l[idx]=hh;\n    tt=idx++;\n}\n\nvoid remove(int p){\n    r[l[p]]=r[p];l[r[p]]=l[p];\n    for(int i=d[p];i!=p;i=d[i]){\n        for(int j=r[i];j!=i;j=r[j]){\n            u[d[j]]=u[j],d[u[j]]=d[j];\n            s[col[j]]--;\n        }\n    }\n\n}\n\nvoid resume(int p){\n    for(int i=u[p];i!=p;i=u[i]){\n        for(int j=l[i];j!=i;j=l[j]){\n            u[d[j]]=d[u[j]]=j;\n            s[col[j]]++;\n        }\n    }\n    r[l[p]]=l[r[p]]=p;\n}\n\n\nbool dfs(){\n    if(!r[0]){\n        // cerr&lt;&lt;\"N\";  \n        for(int i=1;i&lt;=top;i++){\n            int x=(ans[i]-1)/9/9;\n            int y=(ans[i]-1)/9%9;\n            int v=(ans[i])%9;\n            if(!v)v=9;\n            a[x][y]=v;\n        }\n        for(int i=0;i&lt;9;i++){\n            for(int j=0;j&lt;9;j++)cout&lt;&lt;a[i][j]&lt;&lt;' ';\n            cout&lt;&lt;endl;\n        }\n        return 1;\n    }\n    int p=r[0];\n    for(int i=r[0];i;i=r[i]){\n        if(s[i]&lt;s[p])p=i;//\u627e\u52301\u6700\u5c11\u7684\uff0c\u8fd8\u5b58\u5728\u7684\u90a31\u5217\n    }\n    remove(p);//\u5220\u9664p\u5217\n\n    for(int i=d[p];i!=p;i=d[i]){//\u679a\u4e3e\u9009\u62e9\u90a3\u4e2a1\u5e76\u4e14\u5220\u9664\u90a3\u4e2a1\u6240\u5728\u7684\u884c\n        ans[++top]=row[i];\n        for(int j=r[i];j!=i;j=r[j]){\n            remove(col[j]);\n        }\n        if(dfs())return 1;\n        for(int j=l[i];j!=i;j=l[j]){\n            resume(col[j]);\n        }\n        top--;\n    }\n    resume(p);//\u6062\u590dp\u5217\n    return 0;\n}\nsigned main(){\n    n=729,m=324;\n\n    init();\n    for(int i=0;i&lt;9;i++){\n        for(int j=0;j&lt;9;j++){\n            a[i][j]=rd;\n            for(int k=1;k&lt;=9;k++){\n                int hh=idx,tt=idx;//\u5bf9\u4e8eDLX\u7684\u6bcf\u4e00\u884c\u90fd\u8981\u521d\u59cb\u5316\n                if((!a[i][j])||a[i][j]==k){\n                    int r=i*81+j*9+k;\n                    add(hh,tt,r,i*9+j+1);\n                    add(hh,tt,r,81+i*9+k);\n                    add(hh,tt,r,81*2+j*9+k);\n                    add(hh,tt,r,81*3+(i/3*3/3)*9+k);\n                }//else \u7559\u51fa\u7a7a\u884c\n            }\n        }\n    }\n    // cout&lt;&lt;endl;\n    // cerr&lt;&lt;\"OK\";\n    dfs();\n\n    // if(dfs()){\n    //  for(int i=1;i&lt;=top;i++){\n    //         cout&lt;&lt;ans[i]&lt;&lt;' ';\n    //     }\n    // }else cout&lt;&lt;\"No Solution!\";\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#4-noi2005","title":"\u4f8b\u9898 #4 [NOI2005] \u667a\u6167\u73e0\u6e38\u620f","text":"<p>www.luogu.com.cn</p> <p>\u9898\u76ee\u63cf\u8ff0\uff08\u4e0d\u5168\uff09</p> <p></p> <p>\u73b0\u7ed9\u51fa\u4e00\u4e2a\u76d8\u4ef6\u7684\u521d\u59cb\u5e03\u5c40\uff0c\u6c42\u4e00\u79cd\u53ef\u884c\u7684\u667a\u6167\u73e0\u6446\u653e\u65b9\u6848\uff0c\u4f7f\u6240\u6709\u7684\u96f6\u4ef6 \u90fd\u80fd\u653e\u8fdb\u76d8\u4ef6\u4e2d\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#_8","title":"\u601d\u8def","text":"<p>\u548c\u6570\u72ec\u4e00\u6837\uff0c\u628a\u6bcf\u4e00\u79cd\u60c5\u51b5\u90fd\u8f6c\u6362\u4e3a\u884c\uff0c\u6bcf\u4e00\u4e2a\u683c\u5b50\u5bf9\u5e94\u4e00\u5217\uff0c\u5e76\u4e14\u4f7f\u7528\u5176\u5b83\u5217\u6765\u4fdd\u8bc1\u5176\u4ed6\u7684\u7ea6\u675f\u6761\u4ef6\u3002</p> <p>e.g. \u4ee5\u7b2ci\u884c\u4e3a\u4f8b</p> <p>\u75281~55\u5217\uff08j\u5217\uff09\u8868\u793a\u7b2ci\u884c\u8fd9\u79cd\u653e\u6cd5\u662f\u5426\u5360\u7528\u4e86\u7b2cj\u4e2a\u683c\u5b50\u3002</p> <p>\u7528\u540e12\u5217\uff08j\u5217\uff09\u8868\u793a\u7b2ci\u884c\u8fd9\u79cd\u653e\u6cd5\u4f7f\u7528\u7684\u76d8\u4ef6\u4e3a\u7b2cj\u4ef6\u3002</p> <p>\u4e3b\u8981\u9ebb\u70e6\u5728\u4e8e\u521d\u59cb\u5316\u6240\u6709\u884c\uff0c\u5373\u6240\u6709\u60c5\u51b5\u3002\u662f\u4e2a\u5927\u6a21\u62df\uff0c\u6545\u4e0d\u5199\u4ee3\u7801\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#3-noip2009","title":"\u4f8b\u9898 #3 [NOIP2009 \u63d0\u9ad8\u7ec4] \u9776\u5f62\u6570\u72ec","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>\u6b64\u4e3a\u8fdc\u53e4\u9898\uff0c\u4e0d\u4fdd\u8bc1\u5b58\u5728\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f\u7b26\u5408\u8981\u6c42\u7684\u8f93\u5165\u6570\u636e\u7684\u7a0b\u5e8f\u3002</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5c0f\u57ce\u548c\u5c0f\u534e\u90fd\u662f\u70ed\u7231\u6570\u5b66\u7684\u597d\u5b66\u751f\uff0c\u6700\u8fd1\uff0c\u4ed6\u4eec\u4e0d\u7ea6\u800c\u540c\u5730\u8ff7\u4e0a\u4e86\u6570\u72ec\u6e38\u620f\uff0c\u597d\u80dc\u7684\u4ed6\u4eec\u60f3\u7528\u6570\u72ec\u6765\u4e00\u6bd4\u9ad8\u4f4e\u3002\u4f46\u666e\u901a\u7684\u6570\u72ec\u5bf9\u4ed6\u4eec\u6765\u8bf4\u90fd\u8fc7\u4e8e\u7b80\u5355\u4e86\uff0c\u4e8e\u662f\u4ed6\u4eec\u5411 Z \u535a\u58eb\u8bf7\u6559\uff0cZ \u535a\u58eb\u62ff\u51fa\u4e86\u4ed6\u6700\u8fd1\u53d1\u660e\u7684\u201c\u9776\u5f62\u6570\u72ec\u201d\uff0c\u4f5c\u4e3a\u8fd9\u4e24\u4e2a\u5b69\u5b50\u6bd4\u8bd5\u7684\u9898\u76ee\u3002</p> <p>\u9776\u5f62\u6570\u72ec\u7684\u65b9\u683c\u540c\u666e\u901a\u6570\u72ec\u4e00\u6837\uff0c\u5728 \\(9\\) \u683c\u5bbd\u4e14 \\(9\\) \u683c\u9ad8\u7684\u5927\u4e5d\u5bab\u683c\u4e2d\u6709 \\(9\\) \u4e2a \\(3\\) \u683c\u5bbd\u4e14 \\(3\\) \u683c\u9ad8\u7684\u5c0f\u4e5d\u5bab\u683c\uff08\u7528\u7c97\u9ed1\u8272\u7ebf\u9694\u5f00\u7684\uff09\u3002\u5728\u8fd9\u4e2a\u5927\u4e5d\u5bab\u683c\u4e2d\uff0c\u6709\u4e00\u4e9b\u6570\u5b57\u662f\u5df2\u77e5\u7684\uff0c\u6839\u636e\u8fd9\u4e9b\u6570\u5b57\uff0c\u5229\u7528\u903b\u8f91\u63a8\u7406\uff0c\u5728\u5176\u4ed6\u7684\u7a7a\u683c\u4e0a\u586b\u5165 \\(1\\) \u5230 \\(9\\) \u7684\u6570\u5b57\u3002\u6bcf\u4e2a\u6570\u5b57\u5728\u6bcf\u4e2a\u5c0f\u4e5d\u5bab\u683c\u5185\u4e0d\u80fd\u91cd\u590d\u51fa\u73b0\uff0c\u6bcf\u4e2a\u6570\u5b57\u5728\u6bcf\u884c\u3001\u6bcf\u5217\u4e5f\u4e0d\u80fd\u91cd\u590d\u51fa\u73b0\u3002\u4f46\u9776\u5f62\u6570\u72ec\u6709\u4e00\u70b9\u548c\u666e\u901a\u6570\u72ec\u4e0d\u540c\uff0c\u5373\u6bcf\u4e00\u4e2a\u65b9\u683c\u90fd\u6709\u4e00\u4e2a\u5206\u503c\uff0c\u800c\u4e14\u5982\u540c\u4e00\u4e2a\u9776\u5b50\u4e00\u6837\uff0c\u79bb\u4e2d\u5fc3\u8d8a\u8fd1\u5219\u5206\u503c\u8d8a\u9ad8\u3002\uff08\u5982\u56fe\uff09</p> <p></p> <p>\u4e0a\u56fe\u5177\u4f53\u7684\u5206\u503c\u5206\u5e03\u662f\uff1a\u6700\u91cc\u9762\u4e00\u683c\uff08\u9ec4\u8272\u533a\u57df\uff09\u4e3a \\(10\\) \u5206\uff0c\u9ec4\u8272\u533a\u57df\u5916\u9762\u7684\u4e00\u5708\uff08\u7ea2\u8272\u533a\u57df\uff09\u6bcf\u4e2a\u683c\u5b50\u4e3a \\(9\\) \u5206\uff0c\u518d\u5916\u9762\u4e00\u5708\uff08\u84dd\u8272\u533a\u57df\uff09\u6bcf\u4e2a\u683c\u5b50\u4e3a \\(8\\) \u5206\uff0c\u84dd\u8272\u533a\u57df\u5916\u9762\u4e00\u5708\uff08\u68d5\u8272\u533a\u57df\uff09\u6bcf\u4e2a\u683c\u5b50\u4e3a \\(7\\) \u5206\uff0c\u6700\u5916\u9762\u4e00\u5708\uff08\u767d\u8272\u533a\u57df\uff09\u6bcf\u4e2a\u683c\u5b50\u4e3a \\(6\\) \u5206\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\u6bd4\u8d5b\u7684\u8981\u6c42\u662f\uff1a\u6bcf\u4e2a\u4eba\u5fc5\u987b\u5b8c\u6210\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6570\u72ec\uff08\u6bcf\u4e2a\u7ed9\u5b9a\u6570\u72ec\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u586b\u6cd5\uff09\uff0c\u800c\u4e14\u8981\u4e89\u53d6\u66f4\u9ad8\u7684\u603b\u5206\u6570\u3002\u800c\u8fd9\u4e2a\u603b\u5206\u6570\u5373\u6bcf\u4e2a\u65b9\u683c\u4e0a\u7684\u5206\u503c\u548c\u5b8c\u6210\u8fd9\u4e2a\u6570\u72ec\u65f6\u586b\u5728\u76f8\u5e94\u683c\u4e0a\u7684\u6570\u5b57\u7684\u4e58\u79ef\u7684\u603b\u548c</p> <p>\u603b\u5206\u6570\u5373\u6bcf\u4e2a\u65b9\u683c\u4e0a\u7684\u5206\u503c\u548c\u5b8c\u6210\u8fd9\u4e2a\u6570\u72ec\u65f6\u586b\u5728\u76f8\u5e94\u683c\u4e0a\u7684\u6570\u5b57\u7684\u4e58\u79ef\u7684\u603b\u548c\u3002\u5982\u56fe\uff0c\u5728\u4ee5\u4e0b\u7684\u8fd9\u4e2a\u5df2\u7ecf\u586b\u5b8c\u6570\u5b57\u7684\u9776\u5f62\u6570\u72ec\u6e38\u620f\u4e2d\uff0c\u603b\u5206\u6570\u4e3a \\(2829\\)\u3002\u6e38\u620f\u89c4\u5b9a\uff0c\u5c06\u4ee5\u603b\u5206\u6570\u7684\u9ad8\u4f4e\u51b3\u51fa\u80dc\u8d1f\u3002</p> <p></p> <p>\u7531\u4e8e\u6c42\u80dc\u5fc3\u5207\uff0c\u5c0f\u57ce\u627e\u5230\u4e86\u5584\u4e8e\u7f16\u7a0b\u7684\u4f60\uff0c\u8ba9\u4f60\u5e2e\u4ed6\u6c42\u51fa\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u9776\u5f62\u6570\u72ec\uff0c\u80fd\u591f\u5f97\u5230\u7684\u6700\u9ad8\u5206\u6570\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%88%9E%E9%93%BE/#_9","title":"\u601d\u8def","text":"<p>\u548c\u4e0a\u9762\u6570\u72ec\u90a3\u9053\u9898\u51e0\u4e4e\u5dee\u4e0d\u591a\u3002\u8fd9\u91cc\u8981\u679a\u4e3e\u6240\u6709\u60c5\u51b5\u7136\u540e\u53d6max\u800c\u4e0d\u662f\u627e\u5230\u4e00\u79cd\u5c31return\u3002</p> <p>\u6ce8\u610f\u65e0\u89e3\u60c5\u51b5\u3002</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n// #define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n#define rep(i, a, b) for(int i = a; i &lt;= b; ++i)\n#define per(i, a, b) for(int i = a; i &gt;= b; --i)\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\nconst int N = 2e6 + 5;\nconst int M = 1e3 + 5;\nconst int MOD = 998244353;\nconst int INF = 1e9+5;\n\nint n, m;\nint l[N], r[N],u[N],d[N];//\u56db\u4e2a\u65b9\u5411\u7684\u6307\u9488\nint row[N],col[N];//\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u884c/\u5217\nint s[N];//\u6bcf\u4e00\u5217\u7684\u8282\u70b9\u6570\u91cf\nint ans[N];//\u6807\u8bb0\u9009\u62e9\u4e86\u54ea\u4e9b\u884c\nint idx,top;\nint a[M][M];\nint w[M][M];\nint aans;\nbool able;\n\nvoid init(){//\u521d\u59cb\u5316\u7b2c0\u884c\u7684\u5217\u8868\u5934\n    for(int i=0;i&lt;=m;i++){\n        l[i]=i-1,r[i]=i+1;\n        u[i]=d[i]=i;\n    }\n    l[0]=m,r[m]=0;\n    idx=m/\u8282\u70b9\u5206\u914dcnt\n}\n\nvoid add(int &amp;hh,int &amp;tt,int x,int y){\n    row[idx]=x,col[idx]=y;s[y]++;//\u66f4\u65b0\u70b9\u7684\u4fe1\u606f\uff0c\u5217\u7684\u8282\u70b9\u6570\u91cf\n    u[idx]=y,d[idx]=d[y],u[d[y]]=idx;d[y]=idx;\n    r[hh]=l[tt]=idx,r[idx]=tt,l[idx]=hh;\n    tt=idx++;\n}\n\nvoid remove(int p){\n    r[l[p]]=r[p];l[r[p]]=l[p];\n    for(int i=d[p];i!=p;i=d[i]){\n        for(int j=r[i];j!=i;j=r[j]){\n            u[d[j]]=u[j],d[u[j]]=d[j];\n            s[col[j]]--;\n        }\n    }\n\n}\n\nvoid resume(int p){\n    for(int i=u[p];i!=p;i=u[i]){\n        for(int j=l[i];j!=i;j=l[j]){\n            u[d[j]]=d[u[j]]=j;\n            s[col[j]]++;\n        }\n    }\n    r[l[p]]=l[r[p]]=p;\n}\n\n\nbool dfs(){\n    if(!r[0]){\n        // cerr&lt;&lt;\"N\";  \n        for(int i=1;i&lt;=top;i++){\n            int x=(ans[i]-1)/9/9;\n            int y=(ans[i]-1)/9%9;\n            int v=(ans[i])%9;\n            if(!v)v=9;\n            a[x][y]=v;\n        }\n        int res=0;\n        for(int i=0;i&lt;9;i++){\n            for(int j=0;j&lt;9;j++)res+=w[i][j]*a[i][j];\n        }\n        aans=max(res,aans);\n        able=1;\n        return 1;\n    }\n    int p=r[0];\n    for(int i=r[0];i;i=r[i]){\n        if(s[i]&lt;s[p])p=i;//\u627e\u52301\u6700\u5c11\u7684\uff0c\u8fd8\u5b58\u5728\u7684\u90a31\u5217\n    }\n    remove(p);//\u5220\u9664p\u5217\n\n    for(int i=d[p];i!=p;i=d[i]){//\u679a\u4e3e\u9009\u62e9\u90a3\u4e2a1\u5e76\u4e14\u5220\u9664\u90a3\u4e2a1\u6240\u5728\u7684\u884c\n        ans[++top]=row[i];\n        for(int j=r[i];j!=i;j=r[j]){\n            remove(col[j]);\n        }\n        // if(dfs())return 1; \u8981\u679a\u4e3e\u6240\u6709\u60c5\u51b5\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0dreturn\u4e86\n        dfs();\n        for(int j=l[i];j!=i;j=l[j]){\n            resume(col[j]);\n        }\n        top--;\n    }\n    resume(p);//\u6062\u590dp\u5217\n    return 0;\n}\n\nvoid prework(){\n    for(int i=0;i&lt;9;i++)for(int j=0;j&lt;9;j++)w[i][j]=6;\n    for(int i=1;i&lt;8;i++)for(int j=1;j&lt;8;j++)w[i][j]=7;\n    for(int i=2;i&lt;7;i++)for(int j=2;j&lt;7;j++)w[i][j]=8;\n    for(int i=3;i&lt;6;i++)for(int j=3;j&lt;6;j++)w[i][j]=9;\n    for(int i=4;i&lt;5;i++)for(int j=4;j&lt;5;j++)w[i][j]=10;\n\n}\nsigned main(){\n    n=729,m=324;\n\n    prework();\n\n    init();\n    for(int i=0;i&lt;9;i++){\n        for(int j=0;j&lt;9;j++){\n            a[i][j]=rd;\n            for(int k=1;k&lt;=9;k++){\n                int hh=idx,tt=idx;//\u5bf9\u4e8eDLX\u7684\u6bcf\u4e00\u884c\u90fd\u8981\u521d\u59cb\u5316\n                if((!a[i][j])||a[i][j]==k){\n                    int r=i*81+j*9+k;\n                    add(hh,tt,r,i*9+j+1);\n                    add(hh,tt,r,81+i*9+k);\n                    add(hh,tt,r,81*2+j*9+k);\n                    add(hh,tt,r,81*3+(i/3*3/3)*9+k);\n                }//else \u7559\u51fa\u7a7a\u884c\n            }\n        }\n    }\n    // cerr&lt;&lt;\"OK\";\n    dfs();\n    if(!able)cout&lt;&lt;-1&lt;&lt;endl;\n    else cout&lt;&lt;aans&lt;&lt;endl;\n\n    // if(dfs()){\n    //  for(int i=1;i&lt;=top;i++){\n    //         cout&lt;&lt;ans[i]&lt;&lt;' ';\n    //     }\n    // }else cout&lt;&lt;\"No Solution!\";\n}\n</code></pre> <ul> <li> <p>\u5bf9\u4e8e \\(40\\%\\) \u7684\u6570\u636e\uff0c\u6570\u72ec\u4e2d\u975e \\(0\\) \u6570\u7684\u4e2a\u6570\u4e0d\u5c11\u4e8e \\(30\\)\uff1b</p> </li> <li> <p>\u5bf9\u4e8e \\(80\\%\\) \u7684\u6570\u636e\uff0c\u6570\u72ec\u4e2d\u975e \\(0\\) \u6570\u7684\u4e2a\u6570\u4e0d\u5c11\u4e8e \\(26\\)\uff1b</p> </li> <li> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u6570\u72ec\u4e2d\u975e \\(0\\) \u6570\u7684\u4e2a\u6570\u4e0d\u5c11\u4e8e \\(24\\)\u3002</p> </li> </ul> <p>NOIP 2009 \u63d0\u9ad8\u7ec4 \u7b2c\u4e09\u9898</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E8%B7%B3%E8%B7%83%E8%A1%A8/","title":"\u8df3\u8dc3\u8868\uff08\u8df3\u8868\uff09","text":"<p>\u4e00\u4e2a\\(O(\\log n)\\)\u67e5\u8be2\u4e0e\u4fee\u6539\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\\(O(2n)\\)\u7684\u7ef4\u62a4\u5e8f\u5217\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u636e\u8bf4\u53ef\u4ee5\u4ee3\u66ff\u5e73\u8861\u6811\u3002\u4e14\u8fc7\u677f\u5b50 \u7ee7vector\u5e73\u8861\u6811\u540e\u53c8\u4e00\u795e\u64cd\u4f5c</p> <p></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E6%A0%88/","title":"\u5355\u8c03\u6808","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E6%A0%88/#_2","title":"\u5355\u8c03\u6808\u7b80\u4ecb","text":"<p>\u5355\u8c03\u6808\uff08Monotone Stack\uff09\uff1a\u4e00\u79cd\u7279\u6b8a\u7684\u6808\u3002\u5728\u6808\u7684\u300c\u5148\u8fdb\u540e\u51fa\u300d\u89c4\u5219\u57fa\u7840\u4e0a\uff0c\u8981\u6c42\u300c\u4ece \u6808\u9876 \u5230 \u6808\u5e95 \u7684\u5143\u7d20\u662f\u5355\u8c03\u9012\u589e\uff08\u6216\u8005\u5355\u8c03\u9012\u51cf\uff09\u300d\u3002\u5176\u4e2d\u6ee1\u8db3\u4ece\u6808\u9876\u5230\u6808\u5e95\u7684\u5143\u7d20\u662f\u5355\u8c03\u9012\u589e\u7684\u6808\uff0c\u53eb\u505a\u300c\u5355\u8c03\u9012\u589e\u6808\u300d\u3002\u6ee1\u8db3\u4ece\u6808\u9876\u5230\u6808\u5e95\u7684\u5143\u7d20\u662f\u5355\u8c03\u9012\u51cf\u7684\u6808\uff0c\u53eb\u505a\u300c\u5355\u8c03\u9012\u51cf\u6808\u300d\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E6%A0%88/#1","title":"\u4f8b\u9898 #1","text":"<p>\u5927\u610f</p> <p>\u7ed9\u5b9a\u5e8f\u5217\\(a\\)\uff0c\u6c42\u6bcf\u4e2a\\(a_i\\)\u5b83\u524d\u9762\u7684\u7b2c\u4e8c\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4e0b\u6807\u3002</p> <p>\u5bf9\u4e8e\u8fd9\u79cd\u95ee\u9898\uff0c\u6211\u4eec\u5e94\u8be5\u60f3\u5230\u4f7f\u7528\u5355\u8c03\u6808\u6765\u5b9e\u73b0\u3002</p> <p>\u5355\u8c03\u6808\u53ea\u80fd\u5904\u7406\\(a_i\\)\u524d\u9762\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u5b57\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8dd1\u4e24\u8fb9\u5355\u8c03\u6808\u3002\u7b2c\u4e00\u904d\u8bb0\u5f55\\(a_i\\)\u524d\u9762\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u5b57\uff0c\u8bb0\u5176\u4e0b\u6807\u4e3a\\(v_i\\)\uff0c\u7b2c\u4e8c\u6b21\u6211\u4eec\u627e\u5230\\(a_{v_i}\\)\u524d\u9762\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u5b57\uff0c\u7136\u540e\u6211\u4eec\u4ece\\(a_1\\)\u626b\u63cf\u5230\\(a_n\\)\uff0c\u8f93\u51fa\\(a_{v_i}\\)\u524d\u9762\u7b2c\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u5b57\u5373\u53ef\u3002</p> <p>Code</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\u5934\u6587\u4ef6\n#include&lt;bits/stdc++.h&gt;\n\n//\u6570\u636e\u7c7b\u578b\n#define ll long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n//\u547d\u540d\u7a7a\u95f4\nusing namespace std;\n//\u5e38\u91cf\nconst int N=1e6+5;\nconst int M=1e6+5;\nconst int MOD=903250223;\nconst int INF=1e9;\n//\u53d8\u91cf\nint n,b,c,a[N],y[N],tmp,k,cnt,mxr;\nint stk[N],ans[N],top;\n\nvector&lt;int&gt; v[N];\nint main() {\n    scanf(\"%d\",&amp;n);\n    for(int i=1; i&lt;=n; i++) {\n        cin&gt;&gt;a[i];\n        while(top&amp;&amp;a[i]&gt;a[stk[top]])top--;\n        v[stk[top]].push_back(i);//\u8bb0\u5f55\u524d\u9762\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\n        stk[++top]=i;\n    }\n    top=0;//\u6e05\u7a7a\u6808\n    for(int i=1; i&lt;=n; i++) {\n        for(int j=0; j&lt;v[i].size(); j++) {\n            while(top&amp;&amp;a[v[i][j]]&gt;a[stk[top]])top--;//\u5355\u8c03\u6808\n            ans[v[i][j]]=stk[top];//\u7531\u4e4b\u524d\u8bb0\u5f55\u7684\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u5f80\u524d\u627e\u5230\u7b2c2\u4e2a\u6bd4\u5b83\u5927\u7684\n        }\n        stk[++top]=i;\n    }\n    for(int i=1; i&lt;=n; i++)printf(\"%d\\n\",ans[i]+1);\n\n#ifdef PAUSE_ON_EXIT\n    system(\"pause\");\n#endif\n\n    return 0;\n\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E6%A0%88/#2-city-game","title":"\u4f8b\u9898 #2 City Game","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>Bob\u7231\u4e0a\u4e86\u4e00\u4e2a\u7b56\u7565\u6e38\u620f\uff08Simcity\uff1f\uff09\u6e38\u620f\u4e2d\u4e00\u4e2a\u57ce\u5e02\u7531k\u4e2a\u5730\u533a\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5730\u533a\u90fd\u662f\u4e00\u5757\u957fN\u00d7\u5bbdM\u5927\u5c0f\u7684\u7f51\u683c\u77e9\u5f62,\u5176\u4e2d\u53ef\u80fd\u6709\u4e9b\u7f51\u683c\u5df2\u88ab\u5360\u7528\uff0c\u7528R\u8868\u793a;\u6709\u4e9b\u5219\u662f\u7a7a\u5730\uff0c\u7528F\u8868\u793a\u3002</p> <p>\u6e38\u620f\u4e2d\u53ef\u4ee5\u5728\u7a7a\u7740\u7684\u7a7a\u95f4\u4e0a\u5efa\u4e00\u4e2a\u77e9\u5f62\u7684\u5efa\u7b51\uff0c\u540c\u65f6\u6bcf\u4e2a\u5efa\u7b51\u6309\u5b83\u6240\u5360\u7684\u7a7a\u5730\u7f51\u683c\u6570\u6765\u6536\u79df\uff0c\u6bcf\u5360\u7528\u4e00\u4e2a\u7f51\u683c\u53ef\u6536\u79df\u91d13\u7f8e\u5143\u3002Bob\u60f3\u77e5\u9053\u6bcf\u4e2a\u5730\u533a\u4e2d\u6700\u5927\u9762\u79ef\u5efa\u7b51\u7269\u80fd\u6536\u591a\u5c11\u79df\u91d1\u3002</p> <p>n,m (n,m&lt;= 1000)</p> <p>\u8981\u6c42O(nm)\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T stk,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; stk;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e3 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\nint a[N][N],h[N][N];\nint top;\n\npii stk[N];\n\nvoid solve(){\n    int n=rd,m=rd;\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            char c;\n            cin&gt;&gt;c;\n            if(c=='F')a[i][j]=1;\n        }\n    }\n\n\n    itn ans=0;\n\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            if(a[i][j])h[i][j]=h[i-1][j]+1;\n        }\n    }\n\n    for(int i=1;i&lt;=n;i++){\n        top=0;\n        stk[++top]=mp(h[i][1],1);\n        for(int j=2;j&lt;=m;j++){\n            int w=0;\n            while(top&amp;&amp;h[i][j]&lt;=stk[top].pf){\n                w+=stk[top].ps;\n                ans=max(ans,stk[top].pf*w);\n                top--;\n            }\n\n            stk[++top]=mp(h[i][j],w+1);\n        }\n\n        int w=0;\n        while(top){\n            w+=stk[top].ps;\n            ans=max(ans,stk[top--].pf*w);\n        }\n    }\n\n    cout&lt;&lt;ans*3&lt;&lt;endl;\n    memset(a,0,sizeof a);\n    memset(h,0,sizeof h);\n\n\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=rd;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/","title":"\u5355\u8c03\u961f\u5217","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/#_2","title":"\u5355\u8c03\u961f\u5217\u7684\u4f5c\u7528","text":"<p>\u5355\u8c03\u961f\u5217\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\u4e2d\u7684\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u3002\u5355\u8c03\u961f\u5217\u7684\u7279\u70b9\u662f\u961f\u5217\u4e2d\u7684\u5143\u7d20\u4ece\u5934\u5230\u5c3e\u5355\u8c03\u9012\u589e\u6216\u9012\u51cf\u3002</p> <p>\u5355\u8c03\u961f\u5217\u7684\u5e38\u89c1\u5e94\u7528\u662f\u6c42\u89e3\u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u95ee\u9898\u3002\u5177\u4f53\u7684\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u904d\u5386\u5e8f\u5217\uff0c\u6bcf\u6b21\u5c06\u4e00\u4e2a\u5143\u7d20\u5165\u961f\u3002</p> </li> <li> <p>\u5982\u679c\u65b0\u5165\u961f\u7684\u5143\u7d20\u6bd4\u961f\u5c3e\u5143\u7d20\u5927\uff08\u6216\u5c0f\uff09\uff0c\u5219\u5c06\u961f\u5c3e\u5143\u7d20\u51fa\u961f\uff0c\u76f4\u5230\u961f\u5217\u6ee1\u8db3\u5355\u8c03\u6027\u3002</p> </li> <li> <p>\u5982\u679c\u961f\u9996\u5143\u7d20\u5df2\u7ecf\u4e0d\u5728\u6ed1\u52a8\u7a97\u53e3\u5185\uff0c\u5219\u5c06\u961f\u9996\u5143\u7d20\u51fa\u961f\u3002</p> </li> <li> <p>\u6bcf\u6b21\u5f62\u6210\u4e00\u4e2a\u6ed1\u52a8\u7a97\u53e3\u65f6\uff0c\u8bb0\u5f55\u961f\u9996\u5143\u7d20\u4f5c\u4e3a\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/#1","title":"\u4f8b\u9898 #1 \u73af\u5f62\u6700\u5927\u5b50\u5e8f\u548c","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/#_3","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u73af\uff0cA[1],A[2],A[3],...A[n],\u5176\u4e2dA[1]\u7684\u5de6\u8fb9\u662fA[n]. \u6c42\u4e00\u4e2a\u6700\u5927\u7684\u8fde\u7eed\u548c\uff0c\u957f\u5ea6\u4e0d\u8d85\u8fc7K\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/#_4","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570N\u548cK(1&lt;=N&lt;=100000 , 1&lt;=K&lt;=N) \u63a5\u4e0b\u6765\u4e00\u884c\uff0cn\u4e2a\u6574\u6570[-1000,1000]</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/#_5","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927\u8fde\u7eed\u548c\u4ee5\u53ca\u8d77\u59cb\u4f4d\u7f6e\u548c\u7ec8\u6b62\u4f4d\u7f6e\u3002 \u5982\u679c\u6709\u591a\u4e2a\u7ed3\u679c\uff0c\u8f93\u51fa\u8d77\u59cb\u4f4d\u7f6e\u6700\u5c0f\u7684\uff0c\u5982\u679c\u8fd8\u662f\u6709\u591a\u7ec4\u7ed3\u679c\uff0c\u8f93\u51fa\u957f\u5ea6\u6700\u77ed\u7684\u3002</p> <p>100%\u7684\u6570\u636e\uff0cn\u2264100000</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\nint a[N];\nint sum;\nlist&lt;int&gt; q;\nint qz[N];\n\nint n,K;\n\ninline int mod(int x){\n    if(x&gt;n)return x-n;\n    return x;\n}\n\n\nvoid solve(){\n    n=rd,K=rd;\n    for(int i=1;i&lt;=n;i++){\n        a[i]=a[i+n]=rd;\n    }\n\n    int ans=a[1];\n    int ansl=1,ansr=1;\n\n    int l=1;\n    int sum=0;\n    for(int i=1;i&lt;=2*n;i++){\n        qz[i]=qz[i-1]+a[i];\n    }\n\n    for(int i=1;i&lt;=2*n;i++){\n        while(q.size()&amp;&amp;q.front()&lt;i-K)q.pop_front();\n        if(q.size()){\n            if(qz[i]-qz[q.front()]&gt;ans){\n                ans=qz[i]-qz[q.front()];\n                ansl=q.front()+1;\n                ansr=i;\n            }else if(qz[i]-qz[q.front()]==ans&amp;&amp;i-q.front()&lt;ansr-ansl){\n                ans=qz[i]-qz[q.front()];\n                ansl=q.front()+1;\n                ansr=i;\n            }\n        }\n\n        while(q.size()&amp;&amp;qz[q.back()]&gt;qz[i])q.pop_back();\n        q.push_back(i);\n\n\n    }\n    cout&lt;&lt;ans&lt;&lt;' '&lt;&lt;mod(ansl)&lt;&lt;' '&lt;&lt;mod(ansr)&lt;&lt;endl;\n\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/","title":"\u6808","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/#_2","title":"\u6808\u7684\u57fa\u672c\u6982\u5ff5","text":"<p>\u6808\uff08Stack\uff09\uff1a\u662f\u53ea\u5141\u8bb8\u5728\u4e00\u7aef\u8fdb\u884c\u63d2\u5165\u6216\u5220\u9664\u7684\u7ebf\u6027\u8868\u3002\u9996\u5148\u6808\u662f\u4e00\u79cd\u7ebf\u6027\u8868\uff0c\u4f46\u9650\u5b9a\u8fd9\u79cd\u7ebf\u6027\u8868\u53ea\u80fd\u5728\u67d0\u4e00\u7aef\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002</p> <p></p> <p>\u6808\u9876\uff08Top\uff09\uff1a\u7ebf\u6027\u8868\u5141\u8bb8\u8fdb\u884c\u63d2\u5165\u5220\u9664\u7684\u90a3\u4e00\u7aef\u3002</p> <p>\u6808\u5e95\uff08Bottom\uff09\uff1a\u56fa\u5b9a\u7684\uff0c\u4e0d\u5141\u8bb8\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u7684\u53e6\u4e00\u7aef\u3002</p> <p>\u7a7a\u6808\uff1a\u4e0d\u542b\u4efb\u4f55\u5143\u7d20\u7684\u7a7a\u8868\u3002</p> <p>\u6808\u53c8\u79f0\u4e3a\u540e\u8fdb\u5148\u51fa\uff08Last In First Out\uff09\u7684\u7ebf\u6027\u8868\uff0c\u7b80\u79f0LIFO\u7ed3\u6784</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/#1-csp-s-2021","title":"\u4f8b\u9898 #1 [CSP-S 2021] \u56de\u6587","text":"<p>\u7ed9\u5b9a\u6b63\u6574\u6570 \\(n\\) \u548c\u6574\u6570\u5e8f\u5217 \\(a_1, a_2, \\ldots, a_{2 n}\\)\uff0c\u5728\u8fd9 \\(2 n\\) \u4e2a\u6570\u4e2d\uff0c\\(1, 2, \\ldots, n\\) \u5206\u522b\u5404\u51fa\u73b0\u6070\u597d \\(2\\) \u6b21\u3002\u73b0\u5728\u8fdb\u884c \\(2 n\\) \u6b21\u64cd\u4f5c\uff0c\u76ee\u6807\u662f\u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u540c\u6837\u4e3a \\(2 n\\) \u7684\u5e8f\u5217 \\(b_1, b_2, \\ldots, b_{2 n}\\)\uff0c\u521d\u59cb\u65f6 \\(b\\) \u4e3a\u7a7a\u5e8f\u5217\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8fdb\u884c\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\u4e4b\u4e00\uff1a</p> <ol> <li> <p>\u5c06\u5e8f\u5217 \\(a\\) \u7684\u5f00\u5934\u5143\u7d20\u52a0\u5230 \\(b\\) \u7684\u672b\u5c3e\uff0c\u5e76\u4ece \\(a\\) \u4e2d\u79fb\u9664\u3002</p> </li> <li> <p>\u5c06\u5e8f\u5217 \\(a\\) \u7684\u672b\u5c3e\u5143\u7d20\u52a0\u5230 \\(b\\) \u7684\u672b\u5c3e\uff0c\u5e76\u4ece \\(a\\) \u4e2d\u79fb\u9664\u3002</p> </li> </ol> <p>\u6211\u4eec\u7684\u76ee\u7684\u662f\u8ba9 \\(b\\) \u6210\u4e3a\u4e00\u4e2a**\u56de\u6587\u6570\u5217**\uff0c\u5373\u4ee4\u5176\u6ee1\u8db3\u5bf9\u6240\u6709 \\(1 \\le i \\le n\\)\uff0c\u6709 \\(b_i = b_{2 n + 1 - i}\\)\u3002\u8bf7\u4f60\u5224\u65ad\u8be5\u76ee\u7684\u662f\u5426\u80fd\u8fbe\u6210\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u8bf7\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u64cd\u4f5c\u65b9\u6848\uff0c\u5177\u4f53\u5728\u3010\u8f93\u51fa\u683c\u5f0f\u3011\u4e2d\u8bf4\u660e\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/#_3","title":"\u601d\u8def","text":"<p>\u600e\u4e48\u6837\u7684\u60c5\u51b5\u662f\u4e0d\u5408\u6cd5\u7684\u5462\uff1f</p> <p>cabacb \u8fd9\u79cd\u60c5\u51b5\u5f88\u660e\u663e\u4e0d\u5408\u6cd5\u5427</p> <p>\u90a3\u4e48\uff0c\u627e\u51fa\u4e0e \\(a_1\\) \u7684\u552f\u4e00\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8bb0\u4f5c \\(p\\)\u3002\u5219\u5e8f\u5217\u88ab\u5212\u5206\u4e3a\u4e24\u6bb5\uff0c\\(a[2\\cdots p-1]\\) \u548c \\(a[p+1\\cdots2n]\\)\u3002\u53ef\u4ee5\u5c06\u8fd9\u4e24\u6bb5\u5206\u522b\u770b\u6210\u4e24\u4e2a\u6808\uff1a\u6808 \\(T\\_1\\)\uff1a\\(a[2\\cdots p-1]\\) \u7684\u6808\u9876\u4e3a \\(2\\)\uff0c\u6808\u5e95\u4e3a \\(p-1\\)\uff1b\u6808 \\(T\\_2\\)\uff1a\\(a[p+1\\cdots 2n]\\) \u7684\u6808\u9876\u4e3a \\(2n\\)\uff0c\u6808\u5e95\u4e3a \\(p+1\\)\u3002</p> <p>\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\u6bcf\u6b21\u53ef\u4ee5\u53d6\u8d70\u8fd9\u4e24\u4e2a\u6808\u4e4b\u4e00\u7684\u6808\u9876\uff0c\u4ee4\u6700\u7ec8\u5f97\u5230\u7684\u4e32\u662f\u56de\u6587\u4e32\u3002</p> <p>\u81ea\u7136\uff0c\u53ea\u6709\u5b58\u5728\u67d0\u4e2a\u6570 \\(x\\)\uff0c\u65e2\u5728\u6808\u9876\uff0c\u53c8\u5728\u6808\u5e95\u624d\u80fd\u53d6\u8d70\u3002\u5426\u5219\u65e0\u89e3\u3002\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff1a</p> <ul> <li> <p>\u5982\u679c\u6570 \\(x\\) \u5728\u6808 \\(T_1\\) \u7684\u6808\u9876\u548c\u6808 \\(T_2\\) \u7684\u6808\u5e95\uff0c\u53ef\u4ee5\u5148\u53d6\u8d70 \\(T_1\\) \u6808\u9876\uff0c\u5f53\u6808\u53d6\u7a7a\u540e\uff0c\u518d\u53d6\u7a7a \\(T_2\\)\uff0c\u8fd9\u6837\u7684\u65b9\u6848\u663e\u7136\u662f\u5408\u6cd5\u7684\u3002</p> </li> <li> <p>\u5982\u679c\u6570 \\(x\\) \u5728\u6808 \\(T_2\\) \u6808\u9876\u548c\u6808 \\(T_1\\) \u7684\u6808\u5e95\uff0c\u53ef\u4ee5\u5148\u53d6\u8d70 \\(T_2\\) \u6808\u9876\uff0c\u5f53 \\(T_2\\) \u88ab\u53d6\u7a7a\u540e\uff0c\u518d\u53d6\u7a7a \\(T_1\\)\uff0c\u663e\u7136\u4e5f\u662f\u5408\u6cd5\u7684\u3002</p> </li> </ul> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u4ece\u4e24\u4e2a\u6808\u4e2d\u76f4\u63a5\u6d88\u9664\u6389\u6570 \\(x\\) \u7684\u5f71\u54cd\uff0c\u5f52\u7eb3\u6784\u9020\u65b9\u6848\u3002\u7531\u4e8e\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u6bcf\u6b21\u4f18\u5148\u53d6 \\(T\\_1\\) \u7684\u6808\u9876\u3002\u5982\u679c\u8fc7\u7a0b\u4e2d\u627e\u4e0d\u5230\u53ef\u4ee5\u53d6\u7684\u6808\u9876\uff0c\u5219\u65e0\u89e3\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=2e6+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,p,q,T,ans;\nint a[N],b,s,x,p1,p2;\n\nchar res[N];\n\nbool work(int l1,int r1,int l2,int r2,int i){\n    if(i==n)return 1;\n\n    if(l1&lt;=r1&amp;&amp;((l2&lt;=r2&amp;&amp;a[l1]==a[l2])||(l1&lt;r1&amp;&amp;a[l1]==a[r1]))){\n        if(l1&lt;r1&amp;&amp;a[l1]==a[r1]){\n            res[i]='L'; res[2*(n-1)-i+1]='L';\n            return work(l1+1,r1-1,l2,r2,i+1);\n        }else{\n            res[i]='L'; res[2*(n-1)-i+1]='R';\n            return work(l1+1,r1,1+l2,r2,i+1);\n        }\n    }else if(l2&lt;=r2&amp;&amp;((l1&lt;=r1&amp;&amp;a[r2]==a[r1])||(l2&lt;r2&amp;&amp;a[l2]==a[r2]))) {\n        if(l2&lt;r2&amp;&amp;a[l2]==a[r2]) {\n            res[i]='R'; res[2*(n-1)-i+1]='R';\n            return work(l1,r1,l2+1,r2-1,i+1);\n        }\n        else {\n            res[i]='R'; res[2*(n-1)-i+1]='L';\n            return work(l1,r1-1,l2,r2-1,i+1);\n        }\n    }\n    else return 0;\n\n}\nsigned main(){\n    cin&gt;&gt;T;\n    while(T--){\n\n        for(int i=0;i&lt;=n*2;i++)res[i]=0;\n        cin&gt;&gt;n;\n//      n&lt;&lt;=1;\n        for(int i=1;i&lt;=n*2;i++){\n            cin&gt;&gt;a[i];\n        }\n        for(int i=1;i&lt;=n&lt;&lt;1;i++){\n            if(i==1)continue;\n            if(a[i]==a[1]){\n                p1=i;break;\n            }\n        }\n\n        for(int i=1;i&lt;=n&lt;&lt;1;i++){\n            if(i==n&lt;&lt;1)continue;\n            if(a[i]==a[n&lt;&lt;1]){\n                p2=i;break;\n            }\n        }\n\n        if(work(2,p1-1,p1+1,2*n,1))printf(\"L%sL\\n\",res+1);\n        else if(work(1,p2-1,p2+1,2*n-1,1))printf(\"R%sL\\n\",res+1);\n        else cout&lt;&lt;-1&lt;&lt;endl;\n\n\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/#2","title":"\u4f8b\u9898 #2 \u62ec\u53f7\u753b\u5bb6","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>Candela \u662f\u4e00\u540d\u6f2b\u753b\u5bb6\uff0c\u5979\u6709\u4e00\u4e2a\u5947\u7279\u7684\u7231\u597d\uff0c\u5c31\u662f\u5728\u7eb8\u4e0a\u753b\u62ec\u53f7\u3002\u8fd9\u4e00\u5929\uff0c\u521a\u521a\u8d77\u5e8a\u7684 Candela \u753b\u4e86\u4e00\u6392\u62ec\u53f7\u5e8f\u5217\uff0c\u5176\u4e2d\u5305\u542b\u5c0f\u62ec\u53f7 <code>()</code>\u3001\u4e2d\u62ec\u53f7 <code>[]</code> \u548c\u5927\u62ec\u53f7 <code>{}</code>\uff0c\u603b\u957f\u5ea6\u4e3a \\(N\\)\u3002\u8fd9\u6392\u968f\u610f\u7ed8\u5236\u7684\u62ec\u53f7\u5e8f\u5217\u663e\u5f97\u6742\u4e71\u65e0\u7ae0\uff0c\u4e8e\u662f Candela \u5b9a\u4e49\u4e86\u4ec0\u4e48\u6837\u7684\u62ec\u53f7\u5e8f\u5217\u662f\u7f8e\u89c2\u7684\uff1a</p> <ol> <li> <p>\u7a7a\u7684\u62ec\u53f7\u5e8f\u5217\u662f\u7f8e\u89c2\u7684\uff1b</p> </li> <li> <p>\u82e5\u62ec\u53f7\u5e8f\u5217 A \u662f\u7f8e\u89c2\u7684\uff0c\u5219\u62ec\u53f7\u5e8f\u5217 <code>(A)</code>\u3001<code>[A]</code>\u3001<code>{A}</code> \u4e5f\u662f\u7f8e\u89c2\u7684\uff1b</p> </li> <li> <p>\u82e5\u62ec\u53f7\u5e8f\u5217 A\u3001B \u90fd\u662f\u7f8e\u89c2\u7684\uff0c\u5219\u62ec\u53f7\u5e8f\u5217 <code>AB</code> \u4e5f\u662f\u7f8e\u89c2\u7684\uff1b</p> </li> </ol> <p>\u4f8b\u5982 <code>[(){}]()</code> \u662f\u7f8e\u89c2\u7684\u62ec\u53f7\u5e8f\u5217\uff0c\u800c <code>)({)[}](</code> \u5219\u4e0d\u662f\u3002</p> <p>\u73b0\u5728 Candela \u60f3\u5728\u5979\u7ed8\u5236\u7684\u62ec\u53f7\u5e8f\u5217\u4e2d\uff0c\u627e\u51fa\u5176\u4e2d\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u6ee1\u8db3\u8fd9\u6bb5\u5b50\u5e8f\u5217\u662f\u7f8e\u89c2\u7684\uff0c\u5e76\u4e14\u957f\u5ea6\u5c3d\u91cf\u5927\u3002\u4f60\u80fd\u5e2e\u5e2e\u5979\u5417\uff1f</p> <p>\u7b97\u6cd5\u8981\u6c42O(n)\u3002</p> <p>\u4e00\u5b9a\u8981\u5728\u8111\u6d77\u91cc\u6709\u6808\u7684\u56fe\u50cf\uff0c\u5145\u5206\u5229\u7528\u6808\u7ef4\u62a4\u4fe1\u606f\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nchar stk[N];\nitn top;\nint id[N];\n\nvoid solve(){\n    id[0]=-1;\n    int ans=0;\n    string s;\n    cin&gt;&gt;s;\n    for(itn i=0;i&lt;s.size();i++){\n        char c=s[i];\n        if(c==')'){\n            if(stk[top]=='(')ans=max(ans,i-id[top-1]),top--;\n            else stk[++top]=')',id[top]=i;;\n        }if(c=='}'){\n            if(stk[top]=='{')ans=max(ans,i-id[top-1]),top--;\n            else stk[++top]='}',id[top]=i;;\n        }if(c==']'){\n            if(stk[top]=='[')ans=max(ans,i-id[top-1]),top--;\n            else stk[++top]=']',id[top]=i;;\n        }if(c=='['){\n            stk[++top]='[';\n            id[top]=i;\n        }if(c=='('){\n            stk[++top]='(';\n            id[top]=i;\n        }if(c=='{'){\n            stk[++top]='{';\n            id[top]=i;\n        }\n\n        // for(int i=1;i&lt;=top;i++)cerr&lt;&lt;stk[i];\n        // cdbg(ans);\n    }\n\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/","title":"\u94fe\u8868","text":"<p>\u94fe\u8868\u901a\u8fc7\u6307\u9488\u6307\u793a\u5f53\u524d\u5143\u7d20\u7684\u4e0a\u4e00\u4e2a/\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u4f46\u5728\u5f53\u524d\u6307\u9488\u4f4d\u7f6e\u63d2\u5165/\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u7684\u590d\u6742\u5ea6\u662fO(1)\u7684\u3002</p> <p>\u94fe\u8868\u5206\u4e3a\u5355\u5411\u94fe\u8868\u548c\u53cc\u5411\u94fe\u8868\uff0c\u533a\u522b\u5728\u4e8e\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5177\u6709pre\u6307\u9488\u548cnxt\u6307\u9488\u4e2d\u7684\u51e0\u4e2a\u3002</p> <p></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#1","title":"\u4f8b\u9898 #1 \u79fb\u52a8\u76d2\u5b50","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u4f60\u6709n\u4e2a\u76d2\u5b50\u5728\u684c\u5b50\u4e0a\u7684\u4e00\u6761\u7ebf\u4e0a\u4ece\u5de6\u5230\u53f3\u7f16\u53f7\u4e3a1\u2026\u2026n\u3002\u4f60\u7684\u4efb\u52a1\u662f\u6a21\u62df\u56db\u79cd\u64cd\u4f5c</p> <p>1 X Y \u79fb\u52a8\u76d2\u5b50\u7f16\u53f7X\u5230\u76d2\u5b50\u7f16\u53f7Y\u7684\u5de6\u8fb9\uff08\u5982\u679cX\u5df2\u7ecf\u5728Y\u7684\u5de6\u8fb9\u4e86\u5c31\u5ffd\u7565\uff09</p> <p>2 X Y \u79fb\u52a8\u76d2\u5b50\u7f16\u53f7X\u5230\u76d2\u5b50\u7f16\u53f7Y\u7684\u53f3\u8fb9\uff08\u5982\u679cX\u5df2\u7ecf\u5728Y\u7684\u53f3\u8fb9\u4e86\u5c31\u5ffd\u7565\uff09</p> <p>3 X Y \u4ea4\u6362\u76d2\u5b50\u7f16\u53f7X\u4e0e\u76d2\u5b50\u7f16\u53f7Y\u7684\u4f4d\u7f6e</p> <p>4 \u5c06\u6574\u6761\u7ebf\u53cd\u8f6c</p> <p>\u64cd\u4f5c\u4fdd\u8bc1\u5408\u6cd5\uff0cX\u4e0d\u7b49\u4e8eY</p> <p>\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5982\u679cn=6\uff0c\u64cd\u4f5c 1 1 4\u7136\u540e\u5c31\u53d8\u6210\u4e862 3 1 4 5 6\uff1b\u518d\u64cd\u4f5c 2 3 5\u5c31\u53d8\u6210\u4e86 2 1 4 5 3 6\uff1b\u518d\u64cd\u4f5c 3 1 6 \u5c31\u53d8\u6210 2 6 4 5 3 1\uff1b\u6700\u540e\u64cd\u4f5c4\uff0c\u5c31\u53d8\u6210\u4e86 1 3 5 4 6 2</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_2","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u5305\u542b\u4e24\u4e2a\u6574\u6570n,m\uff081\u2264n,m&lt;100,000\uff09, \u63a5\u4e0b\u6765\u662fm\u884c\u6570\u636e\uff0c\u8868\u793a\u64cd\u4f5c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_3","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u4ed6\u4eec\u5947\u6570\u4f4d\u7f6e\u7684\u7f16\u53f7\u7684\u548c</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_4","title":"\u6837\u4f8b","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_5","title":"\u8f93\u5165","text":"<pre><code>6 4\n1 1 4\n2 3 5\n3 1 6\n4\n\n\n6 3\n1 1 4\n2 3 5\n3 1 6\n\n\n\n\n100000 1\n4\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_6","title":"\u8f93\u51fa","text":"<pre><code>12\n9\n2500050000\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/#_7","title":"\u6570\u636e\u8303\u56f4\u4e0e\u63d0\u793a","text":"<p>50%\u7684\u6570\u636e\uff0cn,m\u22641000</p> <p>100%\u7684\u6570\u636e\uff0cn,m\u2264100000</p> <p>\u94fe\u8868</p> <p>\u00b7</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nint nxt[N],pre[N];\n\n\n// \u94fe\u8868\n\nvoid solve(){\n    int n=rd,m=rd;\n    for(int i=1;i&lt;=n;i++){\n        pre[i]=i-1;\n        nxt[i]=i+1;\n    }\n\n    int flg=0;\n    int h=1,t=n;\n    for(int i=1;i&lt;=m;i++){\n        // cdbg(i,h,t);\n        int op=rd;\n        if((op==1||op==2)&amp;&amp;flg){\n            op=(op==1)?2:1;\n        }\n        if(op==1){\n            int x=rd,y=rd; \n            if(pre[y]==x)continue;\n            if(h==x)h=nxt[x];\n            if(t==x)t=pre[x];\n            if(h==y)h=x;\n            // del\n            nxt[pre[x]]=nxt[x];\n            pre[nxt[x]]=pre[x];\n            // add\n            pre[x]=pre[y];\n            nxt[pre[y]]=x;\n            nxt[x]=y;\n            pre[y]=x;\n        }if(op==2){\n            int x=rd,y=rd;\n            if(nxt[y]==x)continue;\n            if(h==x)h=nxt[x];\n            if(t==x)t=pre[x];\n            if(t==y)t=x;\n            // del\n            nxt[pre[x]]=nxt[x];\n            pre[nxt[x]]=pre[x];\n            // add\n            pre[x]=y;\n            pre[nxt[y]]=x;\n            nxt[x]=nxt[y];\n            nxt[y]=x;\n\n        }if(op==3){\n            int x=rd,y=rd;\n            if(x==h)h=y;\n            if(x==t)t=y;\n            if(y==h)h=x;\n            if(y==t)t=x;\n\n            nxt[pre[x]]=y;\n            pre[nxt[x]]=y;\n\n            nxt[pre[y]]=x;\n            pre[nxt[y]]=x;\n\n            swap(pre[x],pre[y]);\n            swap(nxt[x],nxt[y]);\n\n\n        }if(op==4){\n            // swap(h,t);\n            flg^=1;\n        }\n    }\n    int ans=0;\n\n    // cdbg(h,t);\n\n    if(flg){\n        int cur=t;\n        for(int i=1;i&lt;=n;i++){\n            // cdbg(cur);\n            if(i&amp;1){\n                ans+=cur;\n            }\n            cur=pre[cur];\n        }\n    }else{\n        int cur=h;\n        for(int i=1;i&lt;=n;i++){\n        // cdbg(cur);\n            if(i&amp;1){\n                ans+=cur;\n            }\n            cur=nxt[cur];\n        }\n    }\n\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%98%9F%E5%88%97/","title":"\u961f\u5217","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%80%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%98%9F%E5%88%97/#_2","title":"\u961f\u5217\u7684\u57fa\u672c\u6982\u5ff5","text":"<p>1\u3001\u961f\u5217\u7684\u5b9a\u4e49</p> <p>\u961f\u5217\uff08queue\uff09\u662f\u53ea\u5141\u8bb8\u5728\u4e00\u7aef\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c\uff0c\u800c\u5728\u53e6\u4e00\u7aef\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\u7684\u7ebf\u6027\u8868\u3002</p> <p>\u961f\u5217\u662f\u4e00\u79cd\u5148\u8fdb\u5148\u51fa\uff08First In First Out\uff09\u7684\u7ebf\u6027\u8868\uff0c\u7b80\u79f0FIFO\u3002\u5141\u8bb8\u63d2\u5165\u7684\u4e00\u7aef\u79f0\u4e3a\u961f\u5c3e\uff0c\u5141\u8bb8\u5220\u9664\u7684\u4e00\u7aef\u79f0\u4e3a\u961f\u5934\u3002</p> <p></p> <p>\u961f\u5934\uff08Front\uff09\uff1a\u5141\u8bb8\u5220\u9664\u7684\u4e00\u7aef\uff0c\u53c8\u79f0\u961f\u9996\u3002</p> <p>\u961f\u5c3e\uff08Rear\uff09\uff1a\u5141\u8bb8\u63d2\u5165\u7684\u4e00\u7aef\u3002</p> <p>\u7a7a\u961f\u5217\uff1a\u4e0d\u5305\u542b\u4efb\u4f55\u5143\u7d20\u7684\u7a7a\u8868\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/FHQ%2BTreap/","title":"FHQ Treap","text":"<p>163 \u666e\u901a\u5e73\u8861\u6811 FHQ Treap_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/FHQ%2BTreap/#split","title":"\u91cd\u8981\u64cd\u4f5c split","text":"<pre><code>//\u5206\u88c2 \u6839\u636ev\u5c06\u6811\u5212\u5206\u4e3a2\u4e2a\u5b50\u6811 \nvoid split(int i,int v,int &amp;x,int &amp;y){//i\u5f53\u524d\u8282\u70b9\uff0cv\u5212\u5206\u6570\u503c\uff0c \u8fd4\u56de\u65f6x\u4f1a\u6307\u5411\u5de6treap\u7684\u6839\uff0cy\u6307\u5411\u53f3treap\u7684\u6839\n    if(!i){//\u5230\u8fbe\u6811\u53f6 \n        x=y=0;return ;\n     }\n     if(tr[i].val&lt;=v){//\u5982\u679c\u8fd9\u4e2a\u70b9\u7684val&lt;=v,\u90a3\u4e48\u5b83\u7684\u5de6\u5b50\u6811\u4e00\u5b9a\u90fd&lt;=v,\u4f46\u662f\u53f3\u5b50\u6811\u7684root\u867d\u7136&gt;v,\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u7684\u513f\u5b50\u4eec\u662f\u5426\u90fd&gt;v,\u6240\u4ee5\u9700\u8981\u9012\u5f52\u53f3\u5b50\u6811 \n        x=i;\n        split(tr[i].r,v,tr[i].r,y);//\u9012\u5f52\u5b9e\u73b0 \n     }else{\n        y=i;\n        split(tr[i].l,v,x,tr[i].l);\n     }\n    pushup(i);\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/FHQ%2BTreap/#merge","title":"\u91cd\u8981\u64cd\u4f5c merge","text":"<pre><code>//\u5408\u5e76 \u5206\u88c2\u7684\u9006\u8fc7\u7a0b.\u9012\u5f52\u7f1d\u54082\u4e2a\u5206\u88c2\u7684treap \nint merge(int x,int y){// x,y\u5206\u522b\u662f\u5de6\u53f3treap\u7684\u6839 \n    if(!x||!y){\n        return x+y;\n    } \n    if(tr[x].key&lt;=tr[y].key){//\u5982\u679cx\u7684key&lt;=y\u7684key,\u90a3\u4e48y\u5c31\u4f5c\u4e3ax\u7684\u5b50\u6811,\u4e14\u662f\u53f3\u5b50\u6811,\u9012\u5f52\u5408\u5e76x\u539f\u6765\u7684\u53f3\u5b50\u6811\u548cy\n        tr[x].r=merge(tr[x].r,y);\n        pushup(x);return x;\n    }else{\n        tr[y].l=merge(x,tr[y].l);\n        pushup(y);return y;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/FHQ%2BTreap/#_1","title":"\u5176\u4ed6\u64cd\u4f5c","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/FHQ%2BTreap/#_2","title":"\u63d2\u5165","text":"<pre><code>int addnode(int v){\n    tr[++idx].val=v;\n    tr[idx].key=rand();\n    tr[idx].size=1;\n    return idx;//\u8fd4\u56de\u8fd9\u4e2a\u70b9\u5728\u6570\u7ec4\u91cc\u7684\u5e8f\u53f7 \n} \n</code></pre> <p>\u6ce8\u610f\uff01\u4e0a\u65b9\u4ee3\u7801\u4ec5\u4ec5\u662f\u52a0\u70b9\uff0c\u6ca1\u6709\u63d2\u5165\uff01</p> <pre><code>void insert(int v){\n    int x,y,z;\n    split(root,v,x,y);\n    z=addnode(v);\n    root=merge(merge(x,z),y);//\u76f8\u5f53\u4e8ez\u662f\u4e00\u4e2a1\u4e2a\u8282\u70b9\u7684\u6811,\u628a\u5b83\u5148\u548cx\u5408\u5e76(\u56e0\u4e3ax\u7684val\u5747&lt;=v,\u4fdd\u8bc1\u4e86\u5b83\u7684\u5927\u5c0f\u987a\u5e8f,\u81f3\u4e8e\u5b83\u4f1a\u88ab\u653e\u5728x\u7684\u6839\u6216\u8005\u5176\u4ed6\u5730\u65b9,\u51ed\u501fkey\u6765\u786e\u5b9a),\u518d\u548cy\u5408\u5e76 \n}\n</code></pre> <p>\u63d2\u5165</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/FHQ%2BTreap/#_3","title":"\u67e5\u8be2","text":"<pre><code>int getk(int i,int k){//\u83b7\u53d6\u4e2d\u5e8f\u6392\u5e8f\u7b2ck\u4e2a\u503c\u7684\u7f16\u53f7 \n    if(k&lt;=tr[tr[i].l].size)return getk(tr[i].l,k);//\u8bf4\u660e\u8981\u627e\u5230\u70b9\u5728\u5de6\u5b50\u6811,\u90a3\u4e48\u53bb\u5de6\u5b50\u6811\u627e\u7b2ck\u4e2a \n    if(k==tr[tr[i].l].size/\u627e\u5230\u4e86 \n    return getk(tr[i].r,k-tr[tr[i].l].size-1);//\u5426\u5219 \u8bf4\u660e\u8981\u627e\u5230\u70b9\u5728\u53f3\u5b50\u6811,\u90a3\u4e48\u53bb\u5de6\u5b50\u6811\u627e\u7b2c(k-size\u5de6\u5b50\u6811)\u4e2a(\u5de6\u5b50\u6811\u5df2\u7ecf\u6709size\u4e2a\u4e86,\u90a3\u4e48\u8981\u627e\u6574\u4e2a\u7684\u7b2ck\u4e2a,\u53ea\u8981\u627e\u53f3\u5b50\u6811\u7684\u7b2c(k-size\u5de6\u5b50\u6811)\u4e2a\u5373\u53ef) \n}\n</code></pre> <p>\u4e0a\u65b9\u4ee3\u7801\u4e3a\u63d2\u5165\u4ee3\u7801\u7684base</p> <pre><code>int getval(int k){//\u67e5\u8be2\u6392\u540d\u4e3ak\u7684\u8282\u70b9\u7684\u503c\n    int p=getk(root,k);\n    return tr[p].val;\n}\n</code></pre> <p>\u67e5\u8be2\u6392\u540d\u4e3ak\u7684\u8282\u70b9\u7684\u503c</p> <pre><code>void getpre(int v){//\u627e\u5230v\u7684\u524d\u9a71 (\u5373&lt;v\u7684\u6700\u5927\u7684\u90a3\u4e2a\u70b9)\n    int x,y;//x,y\u53ea\u662f\u6682\u65f6\u5b58\u653e\u4e00\u4e0b\u5288\u5f00\u76842\u4e2a\u5b50\u6811\u7684\u6839,\u540e\u9762\u8fd8\u8981\u5408\u5e76 \n    split(root,v-1,x,y);//\u5288\u5f00,\u53d8\u6210&lt;v(x)\u548c&gt;=v(y) 2\u4e2a\u6811 \n    int p=getk(x,tr[x].size);//\u5728\u5b50\u6811x\u91cc\u9762\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5c31\u662f &lt;v(x)\u7684\u6700\u5927\u7684\u90a3\u4e2a\u70b9\n    cout&lt;&lt;tr[p].val&lt;&lt;endl;\n    root=merge(x,y);//\u522b\u5fd8\u4e86\u5408\u5e76 \n}   \n</code></pre> <p>\u627e\u5230v\u7684\u524d\u9a71</p> <pre><code>void getsuc(int v){//\u627e\u5230v\u7684\u540e\u9a71 (\u5373&gt;v\u7684\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9)\n    int x,y;\n    split(root,v,x,y);//\u5288\u5f00,\u53d8\u6210&lt;=v(x)\u548c&gt;v(y) 2\u4e2a\u6811 \n    int p=getk(y,1);//\u5728\u5b50\u6811y\u91cc\u9762\u627e\u5230\u7b2c\u4e00\u4e2a\u5c31\u662f &gt;v(x)\u7684\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9\n    cout&lt;&lt;tr[p].val&lt;&lt;endl;//cout&lt;&lt;\"OK\";\n    root=merge(x,y);//\u522b\u5fd8\u4e86\u5408\u5e76 \n}   \n</code></pre> <p>\u627e\u5230v\u7684\u540e\u9a71</p> <pre><code>void getrank(int v){//\u67e5\u8be2val=v\u7684\u70b9\u7684\u6392\u540d(\u4ece\u5c0f\u5230\u5927) \u5982\u679c\u6709\u91cd\u590d\u7684val=v\u7684\u8282\u70b9\u53ea\u8ba1\u7b2c\u4e00\u4e2a,\u6392\u5e8f\u4e0d\u53bb\u91cd \n    int x,y;\n    split(root,v-1,x,y);//\u5288\u5f00,\u53d8\u6210&lt;v(x)\u548c&gt;=v(y) 2\u4e2a\u6811 \n    cout&lt;&lt;tr[x].size/\u5b50\u6811x\u7684\u5927\u5c0f\u5c31\u662fval=v\u7684\u70b9\u524d\u9762\u6709\u51e0\u4e2a\u70b9 \n    root=merge(x,y);\n}\n</code></pre> <p>\u67e5\u8be2val=v\u7684\u70b9\u7684\u6392\u540d(\u4ece\u5c0f\u5230\u5927)</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/FHQ%2BTreap/#_4","title":"\u5220\u9664","text":"<pre><code>void del(int v){\n    int x,y,z;//\u5c06\u6765\u4f1a\u5206\u522b\u6307\u54113\u68f5\u6811,\u4ed6\u4eec\u7684\u8282\u70b9val\u5206\u522b\u662f&lt;v,=v,&gt;v \n    split(root,v,x,z);//\u6b64\u65f6\u5206\u6210\u4e862\u68f5\u6811,x\u6307\u5411\u7684\u6811\u662f&lt;=v\u7684,y\u5219\u662f&gt;v\u7684 \n    split(x,v-1,x,y);//\u518d\u628ax\u5206\u62102\u68f5\u6811,\u628a&lt;v(x)\u7684\u548c=v(y)\u7684\u62ce\u51fa\u6765 \n    y=merge(tr[y].l,tr[y].r);//\u628ay\u53d8\u6210y\u7684\u5de6\u53f3\u5b50\u6811\u5408\u5e76,\u76f8\u5f53\u4e8e\u628a\u6839\u629b\u5f03\u4e86 \n    root=merge(merge(x,y),z);//\u91cd\u65b0\u5408\u5e76  \n} \n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/FHQ%2BTreap/#2","title":"\u4f8b\u9898 #2\u3010\u6a21\u677f\u3011\u666e\u901a\u5e73\u8861\u6811","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u60a8\u9700\u8981\u5199\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff08\u53ef\u53c2\u8003\u9898\u76ee\u6807\u9898\uff09\uff0c\u6765\u7ef4\u62a4\u4e00\u4e9b\u6570\uff0c\u5176\u4e2d\u9700\u8981\u63d0\u4f9b\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ol> <li> <p>\u63d2\u5165 \\(x\\) \u6570</p> </li> <li> <p>\u5220\u9664 \\(x\\) \u6570(\u82e5\u6709\u591a\u4e2a\u76f8\u540c\u7684\u6570\uff0c\u5e94\u53ea\u5220\u9664\u4e00\u4e2a)</p> </li> <li> <p>\u67e5\u8be2 \\(x\\) \u6570\u7684\u6392\u540d(\u6392\u540d\u5b9a\u4e49\u4e3a\u6bd4\u5f53\u524d\u6570\u5c0f\u7684\u6570\u7684\u4e2a\u6570 \\(+1\\) )</p> </li> <li> <p>\u67e5\u8be2\u6392\u540d\u4e3a \\(x\\) \u7684\u6570</p> </li> <li> <p>\u6c42 \\(x\\) \u7684\u524d\u9a71(\u524d\u9a71\u5b9a\u4e49\u4e3a\u5c0f\u4e8e \\(x\\)\uff0c\u4e14\u6700\u5927\u7684\u6570)</p> </li> <li> <p>\u6c42 \\(x\\) \u7684\u540e\u7ee7(\u540e\u7ee7\u5b9a\u4e49\u4e3a\u5927\u4e8e \\(x\\)\uff0c\u4e14\u6700\u5c0f\u7684\u6570)</p> </li> </ol> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e3a \\(n\\)\uff0c\u8868\u793a\u64cd\u4f5c\u7684\u4e2a\u6570,\u4e0b\u9762 \\(n\\) \u884c\u6bcf\u884c\u6709\u4e24\u4e2a\u6570 \\(\\text{opt}\\) \u548c \\(x\\)\uff0c\\(\\text{opt}\\) \u8868\u793a\u64cd\u4f5c\u7684\u5e8f\u53f7( \\(1 \\leq \\text{opt} \\leq 6\\) )</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5bf9\u4e8e\u64cd\u4f5c \\(3,4,5,6\\) \u6bcf\u884c\u8f93\u51fa\u4e00\u4e2a\u6570\uff0c\u8868\u793a\u5bf9\u5e94\u7b54\u6848</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n \\le 10^5\\)\uff0c\\(|x| \\le 10^7\\)</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/FHQ%2BTreap/#_5","title":"\u5b8c\u6574\u4ee3\u7801&amp;\u6ce8\u91ca","text":"<pre><code>- \u6ce8\u610f\u6ca1\u6709`return`\u7684\u51fd\u6570\u4e00\u5b9a\u8981\u5199`void`\u7c7b\u578b\n</code></pre> <pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int N=1e5+5;\n\nstruct node{\n    int l,r,val,key,size;\n}tr[N];\nint n,root,idx;  //root\u8bb0\u5f55\u6839\u7684\u7f16\u53f7 \uff0cidx\u662f\u5bf9\u65b0\u7684\u8282\u70b9\u8fdb\u884c\u7f16\u53f7\u7684\u53d8\u91cf \n\nint addnode(int v){\n    tr[++idx].val=v;\n    tr[idx].key=rand();\n    tr[idx].size=1;\n    return idx;//\u8fd4\u56de\u8fd9\u4e2a\u70b9\u5728\u6570\u7ec4\u91cc\u7684\u5e8f\u53f7 \n} \nvoid pushup(int i){//\u5411\u4e0a\u66f4\u65b0\u5b50\u6811\u5927\u5c0f \n    tr[i].size=tr[tr[i].l].size+tr[tr[i].r].size+1; \n}\n//\u5206\u88c2 \u6839\u636ev\u5c06\u6811\u5212\u5206\u4e3a2\u4e2a\u5b50\u6811 \nvoid split(int i,int v,int &amp;x,int &amp;y){//i\u5f53\u524d\u8282\u70b9\uff0cv\u5212\u5206\u6570\u503c\uff0c \u8fd4\u56de\u65f6x\u4f1a\u6307\u5411\u5de6treap\u7684\u6839\uff0cy\u6307\u5411\u53f3treap\u7684\u6839\n    if(!i){//\u5230\u8fbe\u6811\u53f6 \n        x=y=0;return ;\n     }\n     if(tr[i].val&lt;=v){//\u5982\u679c\u8fd9\u4e2a\u70b9\u7684val&lt;=v,\u90a3\u4e48\u5b83\u7684\u5de6\u5b50\u6811\u4e00\u5b9a\u90fd&lt;=v,\u4f46\u662f\u53f3\u5b50\u6811\u7684root\u867d\u7136&gt;v,\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u7684\u513f\u5b50\u4eec\u662f\u5426\u90fd&gt;v,\u6240\u4ee5\u9700\u8981\u9012\u5f52\u53f3\u5b50\u6811 \n        x=i;\n        split(tr[i].r,v,tr[i].r,y);//\u9012\u5f52\u5b9e\u73b0 \n     }else{\n        y=i;\n        split(tr[i].l,v,x,tr[i].l);\n     }\n    pushup(i);\n}\n//\u5408\u5e76 \u5206\u88c2\u7684\u9006\u8fc7\u7a0b.\u9012\u5f52\u7f1d\u54082\u4e2a\u5206\u88c2\u7684treap \nint merge(int x,int y){// x,y\u5206\u522b\u662f\u5de6\u53f3treap\u7684\u6839 \n    if(!x||!y){\n        return x+y;\n    } \n    if(tr[x].key&lt;=tr[y].key){//\u5982\u679cx\u7684key&lt;=y\u7684key,\u90a3\u4e48y\u5c31\u4f5c\u4e3ax\u7684\u5b50\u6811,\u4e14\u662f\u53f3\u5b50\u6811,\u9012\u5f52\u5408\u5e76x\u539f\u6765\u7684\u53f3\u5b50\u6811\u548cy\n        tr[x].r=merge(tr[x].r,y);\n        pushup(x);return x;\n    }else{\n        tr[y].l=merge(x,tr[y].l);\n        pushup(y);return y;\n    }\n}\nvoid insert(int v){\n    int x,y,z;\n    split(root,v,x,y);\n    z=addnode(v);\n    root=merge(merge(x,z),y);//\u76f8\u5f53\u4e8ez\u662f\u4e00\u4e2a1\u4e2a\u8282\u70b9\u7684\u6811,\u628a\u5b83\u5148\u548cx\u5408\u5e76(\u56e0\u4e3ax\u7684val\u5747&lt;=v,\u4fdd\u8bc1\u4e86\u5b83\u7684\u5927\u5c0f\u987a\u5e8f,\u81f3\u4e8e\u5b83\u4f1a\u88ab\u653e\u5728x\u7684\u6839\u6216\u8005\u5176\u4ed6\u5730\u65b9,\u51ed\u501fkey\u6765\u786e\u5b9a),\u518d\u548cy\u5408\u5e76 \n}\nvoid del(int v){\n    int x,y,z;//\u5c06\u6765\u4f1a\u5206\u522b\u6307\u54113\u68f5\u6811,\u4ed6\u4eec\u7684\u8282\u70b9val\u5206\u522b\u662f&lt;v,=v,&gt;v \n    split(root,v,x,z);//\u6b64\u65f6\u5206\u6210\u4e862\u68f5\u6811,x\u6307\u5411\u7684\u6811\u662f&lt;=v\u7684,y\u5219\u662f&gt;v\u7684 \n    split(x,v-1,x,y);//\u518d\u628ax\u5206\u62102\u68f5\u6811,\u628a&lt;v(x)\u7684\u548c=v(y)\u7684\u62ce\u51fa\u6765 \n    y=merge(tr[y].l,tr[y].r);//\u628ay\u53d8\u6210y\u7684\u5de6\u53f3\u5b50\u6811\u5408\u5e76,\u76f8\u5f53\u4e8e\u628a\u6839\u629b\u5f03\u4e86 \n    root=merge(merge(x,y),z);//\u91cd\u65b0\u5408\u5e76  \n} \nint getk(int i,int k){//\u83b7\u53d6\u4e2d\u5e8f\u6392\u5e8f\u7b2ck\u4e2a\u503c\u7684\u7f16\u53f7 \n    if(k&lt;=tr[tr[i].l].size)return getk(tr[i].l,k);//\u8bf4\u660e\u8981\u627e\u5230\u70b9\u5728\u5de6\u5b50\u6811,\u90a3\u4e48\u53bb\u5de6\u5b50\u6811\u627e\u7b2ck\u4e2a \n    if(k==tr[tr[i].l].size/\u627e\u5230\u4e86 \n    return getk(tr[i].r,k-tr[tr[i].l].size-1);//\u5426\u5219 \u8bf4\u660e\u8981\u627e\u5230\u70b9\u5728\u53f3\u5b50\u6811,\u90a3\u4e48\u53bb\u5de6\u5b50\u6811\u627e\u7b2c(k-size\u5de6\u5b50\u6811)\u4e2a(\u5de6\u5b50\u6811\u5df2\u7ecf\u6709size\u4e2a\u4e86,\u90a3\u4e48\u8981\u627e\u6574\u4e2a\u7684\u7b2ck\u4e2a,\u53ea\u8981\u627e\u53f3\u5b50\u6811\u7684\u7b2c(k-size\u5de6\u5b50\u6811)\u4e2a\u5373\u53ef) \n} \nint getpre(int v){//\u627e\u5230v\u7684\u524d\u9a71 (\u5373&lt;v\u7684\u6700\u5927\u7684\u90a3\u4e2a\u70b9)\n    int x,y;//x,y\u53ea\u662f\u6682\u65f6\u5b58\u653e\u4e00\u4e0b\u5288\u5f00\u76842\u4e2a\u5b50\u6811\u7684\u6839,\u540e\u9762\u8fd8\u8981\u5408\u5e76 \n    split(root,v-1,x,y);//\u5288\u5f00,\u53d8\u6210&lt;v(x)\u548c&gt;=v(y) 2\u4e2a\u6811 \n    int p=getk(x,tr[x].size);//\u5728\u5b50\u6811x\u91cc\u9762\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5c31\u662f &lt;v(x)\u7684\u6700\u5927\u7684\u90a3\u4e2a\u70b9\n    cout&lt;&lt;tr[p].val&lt;&lt;endl;\n    root=merge(x,y);//\u522b\u5fd8\u4e86\u5408\u5e76 \n}   \nint getsuc(int v){//\u627e\u5230v\u7684\u540e\u9a71 (\u5373&gt;v\u7684\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9)\n    int x,y;\n    split(root,v,x,y);//\u5288\u5f00,\u53d8\u6210&lt;=v(x)\u548c&gt;v(y) 2\u4e2a\u6811 \n    int p=getk(y,1);//\u5728\u5b50\u6811y\u91cc\u9762\u627e\u5230\u7b2c\u4e00\u4e2a\u5c31\u662f &gt;v(x)\u7684\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9\n    cout&lt;&lt;tr[p].val&lt;&lt;endl;//cout&lt;&lt;\"OK\";\n    root=merge(x,y);//\u522b\u5fd8\u4e86\u5408\u5e76 \n}   \nvoid getrank(int v){//\u67e5\u8be2val=v\u7684\u70b9\u7684\u6392\u540d(\u4ece\u5c0f\u5230\u5927) \u5982\u679c\u6709\u91cd\u590d\u7684val=v\u7684\u8282\u70b9\u53ea\u8ba1\u7b2c\u4e00\u4e2a,\u6392\u5e8f\u4e0d\u53bb\u91cd \n    int x,y;\n    split(root,v-1,x,y);//\u5288\u5f00,\u53d8\u6210&lt;v(x)\u548c&gt;=v(y) 2\u4e2a\u6811 \n    cout&lt;&lt;tr[x].size/\u5b50\u6811x\u7684\u5927\u5c0f\u5c31\u662fval=v\u7684\u70b9\u524d\u9762\u6709\u51e0\u4e2a\u70b9 \n    root=merge(x,y);\n}\nvoid getval(int k){//\u67e5\u8be2\u6392\u540d\u4e3ak\u7684\u8282\u70b9\u7684\u503c\n    int p=getk(root,k);\n    cout&lt;&lt;tr[p].val&lt;&lt;endl;\n\n}\n\n\nsigned main(){\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        int opt,x;\n        cin&gt;&gt;opt&gt;&gt;x;\n        if(opt==1){\n            insert(x);\n        }if(opt==2){\n            del(x);\n        }if(opt==3){\n            getrank(x);\n        }if(opt==4){\n            getval(x);\n        }if(opt==5){\n            getpre(x);\n        }if(opt==6){\n            getsuc(x);\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/","title":"Splay","text":"<p>161 \u666e\u901a\u5e73\u8861\u6811 Splay_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u90a3\u4e48\u6709\u4ec0\u4e48\u529e\u6cd5\u8ba9BST\u4e0d\u9000\u8fd8\u6210\u4e00\u6761\u94fe\u5462\uff1f\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u5e73\u8861\u6811\u4e86</p> <p></p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u4ecb\u7ecdSplay\u7684\u5404\u79cd\u64cd\u4f5c</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#_1","title":"\u8282\u70b9\u4fe1\u606f","text":"<pre><code>struct node{\n    int s[2],fa,v,cnt,size;\n    //\u5de6\u53f3\u513f\u5b50,\u7236\u4eb2,\u8282\u70b9\u6743\u503c,\u503c\u7684\u6570\u91cf,\u5b50\u6811\u5927\u5c0f\n    void init(int p1,int v1){\n        fa=p1,v=v1;cnt=size=1;\n    }\n}tr[N];\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#_2","title":"\u91cd\u8981\u64cd\u4f5c\uff1a\u65cb\u8f6c","text":"<p>\u8981\u6c42\uff1a\u4fdd\u5e8f\uff08\u4fdd\u8bc1\u4e2d\u5e8f\u904d\u5386\u987a\u5e8f\u4e0d\u53d8\uff09\uff0c\u4fe1\u606f\u6b63\u786e</p> <p>\u53f3\u65cb</p> <p></p> <p>\u5c06\u539f\u6765x\u7684\u7236\u4eb2y\u4f5c\u4e3ax\u7684\u513f\u5b50\uff0c\u7136\u540e\u5c06x\u7684\u53f3\u513f\u5b50\u53d8\u6210y\u7684\u5de6\u513f\u5b50</p> <p>\u5de6\u65cb</p> <p></p> <p>Code</p> <pre><code>void rotate(int x){\n    int y=t[x].fa,z=t[y].fa;\n    int k=(tr[y].s[1]==x);//\u8fd9\u91cc\u5f88\u91cd\u8981!\u5982\u679ctrue,\u8bf4\u660ex\u4e3ay\u7684\u5de6\u513f\u5b50,\u5e94\u8be5\u7ee7\u7eed\u5de6\u65cb\n    //\u4ee5\u4e0b\u4ee3\u7801\u5de6\u53f3\u65cb\u901a\u7528,\u6211\u4eec\u4ee5\u53f3\u65cb\u4e3a\u4f8b\n    tr[y].s[k]=tr[x].s[k^1];//\u5c06y\u7684\u5de6\u513f\u5b50\u8bbe\u7f6e\u4e3ax\u7684\u53f3\u513f\u5b50(1)\n    tr[tr[y].s[k]].fa=y;\n    tr[x].s[k^1]=y;//\u5c06x\u7684\u53f3\u513f\u5b50\u8bbe\u7f6e\u4e3ay(2)\n    tr[y].fa=x;\n    tr[z].s[(tr[z].s[1]==y)]=x;//\u81ea\u52a8\u5224\u65ad\u539f\u6765\u7684y\u662fz\u7684\u5de6/\u53f3\u513f\u5b50\n    tr[x].fa=z;//\u66f4\u65b0z\u7684\u513f\u5b50,x\u7684\u65b0\u7236\u4eb2(3)\n    pushup(x);pushup(y);//\u522b\u5fd8\u4e86\u4fee\u6539\u4fe1\u606f\n}\n</code></pre> <p>\u5982\u56fe</p> <p></p> <p>Pushup</p> <pre><code>void pushup(int x){//\u7531\u5de6\u53f3\u513f\u5b50\u4fe1\u606f\u66f4\u65b0\u7236\u4eb2\u7684\u4fe1\u606f\n    tr[x].size=tr[tr[x].s[0]].size/\u513f\u5b50\u7684size(\u5b50\u6811\u548c)\u52a0\u4e0a\u81ea\u5df1\u7684\u5927\u5c0f\n    //size\u5b58\u7684\u662f\u4ee5x\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u4fe1\u606f\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#splay_1","title":"\u6838\u5fc3\u64cd\u4f5c\uff1asplay","text":"<p>\u76ee\u7684\uff1a\u8bbf\u95ee\u4e00\u4e2a\u8282\u70b9\u5e76\u4e14\u5c06\u5176\u65cb\u8f6c\u5230\u6839\u8282\u70b9</p> <p>\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u6cd5\u7684\u7ec4\u5408\u6765\u5b9e\u73b0\u76ee\u7684</p> <p></p> <p>\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u4ec5\u4ec5\u7528\u5355\u65cb\u5462\uff1f</p> <p>\u7ed3\u5408\u5b9e\u4f8b\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u4ec5\u4ec5\u7528\u5355\u65cb\uff0c\u4e8c\u53c9\u6811\u7684\u72b6\u51b5\u4e0d\u4f1a\u5f97\u5230\u6539\u5584\u3002</p> <p></p> <p>Code</p> <pre><code>void splay(int x,int k){//\u5c06x\u65cb\u8f6c\u5230k\u4e0b\u65b9\n    while(tr[x].fa!=k){\n        int y=tr[x].fa,z=tr[y].fa;\n        //\u7b2c\u4e00\u6b21\u65cb\u8f6c,\u8981\u5206\u60c5\u51b5\n        if(z!=k)//\u82e5z=k,\u8bf4\u660e\u53ea\u9700\u8981\u505a\u5355\u65cb\u4e86(\u8bf4\u660e\u76ee\u6807\u70b9\u5c31\u4e3ax\u7684\u7236\u4eb2)\n            if((tr[y].s[0]==x)^(tr[z].s[0]==y)){//\u82e5y\u4e3az\u5de6,x\u4e3ay\u5de6\u6216\u8005y\u4e3az\u53f3,x\u4e3ay\u53f3,\u5f02\u6216\u548c\u5747\u4e3a0,\u8868\u793a\u662f\u76f4\u7ebf\u578b\n                rotate(x);\n            }else rotate(y);\n        //\u7b2c\u4e8c\u6b21\u65cb\u8f6c,\u90fd\u662f\u65cb\u8f6cx \n        rotata(x);\n    }\n    if(k==0)rt=x;//\u5982\u679ck=0\u8bf4\u660ex\u88ab\u65cb\u8f6c\u5230\u4e86\u6839\u8282\u70b9\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#_3","title":"\u5176\u4ed6\u64cd\u4f5c","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#find","title":"find\u67e5\u627e","text":"<p>\u76ee\u6807\uff1a\u67e5\u627e\u503cv\u6240\u5728\u7684\u8282\u70b9\u5e76\u4e14\u5c06\u5176\u65cb\u8f6c\u81f3\u6839\u8282\u70b9</p> <pre><code>void find(int v){\n    int x=rt;\n    while(tr[x].s[v&gt;tr[x].v]&amp;&amp;v!=tr[x].v){//\u5982\u679c:\u627e\u5230\u7684\u70b9\u6ca1\u6709\u7b26\u5408\u8981\u6c42\u7684\u513f\u5b50(\u5373\u8d70\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u4f46v\u662f\u4e0d\u5b58\u5728\u7684)\u6216\u8005\u627e\u5230\u4e86v\n        x=tr[x].s[v&gt;tr[x].v];//\u5982\u679cv&gt;tr[x].v,\u90a3\u4e48\u5c31\u8d70\u53f3\u513f\u5b50\n    }\n    splay(x,0);//\u5c06v\u6216\u8005\u6700\u9760\u8fd1v\u7684\u90a3\u4e2a\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#getlower","title":"getlower\u6c42\u524d\u9a71","text":"<pre><code>int getlower(int v){\n    find(v);\n    int x=rt;//rt\u5373v\n    if(tr[x].v&lt;v)return x;//\u82e5true,\u8bf4\u660e\u5728find\u4e2d\u5c31\u6ca1\u6709\u627e\u5230v,\u800c\u662f\u627e\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u82e5\u8fd9\u4e2a\u70b9\u7684v&lt;v,\u90a3\u4e48\u5b83\u5c31\u662fv\u7684\u524d\u9a71\n    x=tr[x].s[0];//\u5148\u8d70\u5230v\u7684\u5de6\u5b50\u6811\n    while(tr[x].s[1])x=tr[x].s[1];//\u7136\u540e\u4e0d\u65ad\u8d70\u53f3\u513f\u5b50\n    return x;\n}\n</code></pre> <p>\u89e3\u8bf4</p> <p></p> <p>\u6211\u4eec\u8981\u627e\u5230\u5c0f\u4e8e\u6839\u8282\u70b9v\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6839\u636eBST\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u5148\u5f80v\u7684\u5de6\u513f\u5b50\u8d70\uff0c\u73b0\u5728\u5f53\u524d\u70b9\u7684\u5b50\u6811\u90fd\u662f&lt;v\u7684\u4e86\uff0c\u5728\u5176\u4e2d\u627e\u6700\u5927\u7684\uff0c\u5373\u4e0d\u65ad\u5f80\u53f3\u513f\u5b50\u8d70</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#getbigger","title":"getbigger\u6c42\u540e\u7ee7","text":"<p>\u539f\u7406\u4e0e\u524d\u9a71\u76f8\u540c</p> <p>Code</p> <pre><code>int getbigger(int v){\n    find(v);\n    int x=rt;//rt\u5373v\n    if(tr[x].v&gt;v)return x;//\u82e5true,\u8bf4\u660e\u5728find\u4e2d\u5c31\u6ca1\u6709\u627e\u5230v,\u800c\u662f\u627e\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u82e5\u8fd9\u4e2a\u70b9\u7684v&gt;v,\u90a3\u4e48\u5b83\u5c31\u662fv\u7684\u540e\u7ee7\n    x=tr[x].s[1];//\u5148\u8d70\u5230v\u7684\u53f3\u5b50\u6811\n    while(tr[x].s[0])x=tr[x].s[0];//\u7136\u540e\u4e0d\u65ad\u8d70\u5de6\u513f\u5b50\n    return x;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#del","title":"Del\u5220\u9664\u8282\u70b9","text":"<p>\u6211\u4eec\u8003\u8651\u5230\u76f4\u63a5\u5220\u9664\u8282\u70b9\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4f46\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u6211\u4eec\u53c8\u89c2\u5bdf\u5230\uff0c\u5728\u4e0b\u56fe\u8fd9\u4e2a\u5e38\u89c1\u7684\u7ed3\u6784\u4e2d\uff0cson\u8282\u70b9\u65e2\u6ee1\u8db3son&gt;x\u53c8\u6ee1\u8db3son&lt;y\u3002\u5728\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u6c42\u51fason\u7684\u524d\u9a71\u548c\u540e\u7ee7\uff0c\u90a3\u4e48\u53ea\u8981\u6211\u4eec\u628ason\u7684\u524d\u9a71\u548c\u540e\u7ee7\u5411\u4e0a\u65cb\u8f6c\uff0c\u5c31\u53ef\u4ee5\u628ason\u79fb\u5230\u53f6\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u5c31\u65b9\u4fbf\u5220\u9664\u4e86</p> <p></p> <p>Code</p> <pre><code>void del(int v){\n    int pre=getlower(v),nxt=getbigger(v);\n    splay(pre,0);splay(nxt,pre);//\u5c06pre\u65cb\u8f6c\u5230\u6839\u8282\u70b9,\u5c06nxt\u65cb\u8f6c\u5230pre\u7684\u4e0b\u65b9,\u53ea\u8981\u5c31\u6784\u9020\u51fa\u4e86\u5982\u56fe\u6240\u793a\u7684\u56fe\u50cf\n    int del=tr[nxt].s[0];\n    if(tr[del].cnt&gt;1)tr[del].cnt--,splay(del,0);//\u8fd9\u91cc\u8fdb\u884csplay\u4e3b\u8981\u662f\u4e3a\u4e86pushup\n    else tr[nxt].s[0]=0,splay(nxt,0);//\u76f4\u63a5\u6e05\u7a7anxt\u7684\u5de6\u513f\u5b50,\u5e76\u4e14\u66f4\u65b0\u5b83\n}\n</code></pre> <p>\u6ce8\u610f\uff0c\u56e0\u4e3a\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u9700\u8981\u6c42\u51fa\u5b83\u7684\u524d\u9a71\u548c\u540e\u7ee7\uff0c\u6211\u4eec\u5c31\u5728\u5e73\u8861\u6811\u4e2d\u63d2\u5165\u4e00\u4e2a\u65e0\u7a77\u5c0f\u548c\u4e00\u4e2a\u65e0\u7a77\u5927\uff0c\u91cd\u8981\u5c31\u80fd\u4fdd\u8bc1\u4e00\u5b9a\u80fd\u627e\u5230\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u524d\u9a71\u548c\u540e\u7ee7</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#getrank","title":"Getrank\u67e5\u8be2\u6392\u540d","text":"<p>\u76f4\u63a5\u5c06v\u65cb\u8f6c\u5230\u6839\u8282\u70b9\uff0c\u7136\u540e\u8fd4\u56de\u5176\u5de6\u5b50\u6811\u7684\u5927\u5c0f\u5373\u53ef \u4f1a\u88abHAck</p> <pre><code>int getrank(int v){\n    // find(v);\n    // return tr[tr[rt].s[0]].size;//\u6ca1\u6709\u52a0\u4e0a1\u7684\u539f\u56e0\u662f\u6811\u4e0a\u8fd8\u6709\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u8282\u70b9\n    //\u4e0d\u80fd\u7528\u4e0a\u9762\u7684\u4ee3\u7801\uff01\uff01\u4f1aWA\u4e00\u4e2a\u70b9\n    insert(v);\n    int res=tr[tr[rt].s[0]].size;\n    del(v);\n    return res;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#getval","title":"Getval\u67e5\u8be2\u6743\u503c","text":"<pre><code>int getval(int k){//\u67e5\u8be2\u7b2ck\u5c0f\u7684\u70b9\u7684\u6743\u503c\n    int x=rt;\n    k++;//\u56e0\u4e3a\u6709\u4e00\u4e2a\u65e0\u7a77\u5c0f,\u6240\u4ee5\u5b9e\u9645\u4e0a\u8981\u67e5\u8be2\u7684\u70b9\u662f\u7b2ck+1\u5c0f\u7684\n    while(1){\n        if(tr[tr[x].s[0]].size/\u8d70\u53f3\u8fb9\n            x=tr[x].s[1];k-=tr[tr[x].s[0]].size+tr[x].cnt;\n        }else{\n            if(tr[[x].s[0]].size&gt;=k)x=tr[x].s[0];//\u8d70\u5de6\u8fb9,\u82e5\u4e3atrue\u8bf4\u660e\u7b2ck\u5c0f\u7684\u5728\u5de6\u8fb9,\u5426\u5219\u8bf4\u660e\u5373\u4e0d\u662f\u53f3\u8fb9,\u5de6\u8fb9\u4e5f\u6ca1\u6709,\u90a3\u5c31\u662f\u5b83\u81ea\u5df1\u4e86\n            else break;\n        }\n\n    }\n    splay(x);//splay\u4ec5\u4ec5\u662f\u7528\u6765\u6574\u7406\u5e73\u8861\u6811\u7684,\u9632\u6b62\u5176\u9000\u5316\u4e3a\u94fe\n    return tr[x].v;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#insert","title":"Insert\u63d2\u5165\u4e00\u4e2a\u503c","text":"<p>Code</p> <pre><code>void insert(int v){\n     int x=rt,p=0;\n     while(x&amp;&amp;tr[x].v!=v){\n        p=x;x=tr[x].s[v&gt;tr[x].v];//\u8d70\u5230\u6700\u9760\u8fd1v\u7684\u4f4d\u7f6e\uff0c\u5982\u679cv\u5b58\u5728\u90a3\u4e48x\u505c\u5728v\u4e0a\uff0c\u5426\u5219x\u8d70\u5230\u6ee1\u8db3v\u63d2\u5165\u7684\u4f4d\u7f6e\u7684\u7a7a\u8282\u70b9\n     }\n     if(x)tr[x].cnt++;//x\u539f\u6765\u5c31\u5b58\u5728\u4e86\n     else{//\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\n        x=++idx;\n        tr[p].s[v&gt;tr[p].v]=x;//p\u662fx\u7684\u7236\u8282\u70b91\n        tr[x].init(p,v);//\u521d\u59cb\u5316\u8fd9\u4e2a\u70b9\uff0c\u7236\u4eb2\u4e3ap\uff0c\u6743\u503c\u4e3av\n     }\n     splay(x,0);//splay\u9632\u6b62\u9000\u5316\u6210\u94fe\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Splay/#ac","title":"\u5b8c\u6574\u4ee3\u7801<code>AC</code>","text":"<pre><code>/*\nCode by Ntsc_Hodaka\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define pii pair&lt;int,int&gt;\n\n///----///\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n///----///\nconst int N = 1e7 + 5;\nconst int M = 1e7 + 5;\nconst int INF = 1e9 + 5;\nconst double eps=1e-7;\n\nstruct node{\n    int s[2],fa,v,cnt,size;\n    //\u5de6\u53f3\u513f\u5b50,\u7236\u4eb2,\u8282\u70b9\u6743\u503c,\u503c\u7684\u6570\u91cf,\u5b50\u6811\u5927\u5c0f\n    void init(int p1,int v1){\n        fa=p1,v=v1;cnt=size=1;\n    }\n}tr[N];\n\nbool f1;\n///----///\nint n,rt,idx;\n///----///\nbool f2;\n\nvoid pushup(int x){//\u7531\u5de6\u53f3\u513f\u5b50\u4fe1\u606f\u66f4\u65b0\u7236\u4eb2\u7684\u4fe1\u606f\n    tr[x].size=tr[tr[x].s[0]].size/\u513f\u5b50\u7684size(\u5b50\u6811\u548c)\u52a0\u4e0a\u81ea\u5df1\u7684\u5927\u5c0f\n    //size\u5b58\u7684\u662f\u4ee5x\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u4fe1\u606f\n}\n\n\nvoid rotate(int x){\n    int y=tr[x].fa,z=tr[y].fa;\n    int k=(tr[y].s[1]==x);//\u8fd9\u91cc\u5f88\u91cd\u8981!\u5982\u679ctrue,\u8bf4\u660ex\u4e3ay\u7684\u5de6\u513f\u5b50,\u5e94\u8be5\u7ee7\u7eed\u5de6\u65cb\n    tr[y].s[k]=tr[x].s[k^1];//\u5c06y\u7684\u5de6\u513f\u5b50\u8bbe\u7f6e\u4e3ax\u7684\u53f3\u513f\u5b50(1)\n    tr[tr[x].s[k^1]].fa=y;\n    tr[x].s[k^1]=y;//\u5c06x\u7684\u53f3\u513f\u5b50\u8bbe\u7f6e\u4e3ay(2)\n    tr[y].fa=x;\n    tr[z].s[(tr[z].s[1]==y)]=x;//\u81ea\u52a8\u5224\u65ad\u539f\u6765\u7684y\u662fz\u7684\u5de6/\u53f3\u513f\u5b50\n    tr[x].fa=z;//\u66f4\u65b0z\u7684\u513f\u5b50,x\u7684\u65b0\u7236\u4eb2(3)\n    pushup(y);pushup(x);//\u522b\u5fd8\u4e86\u4fee\u6539\u4fe1\u606f\n}\n\nvoid splay(int x,int k){//\u5c06x\u65cb\u8f6c\u5230k\u4e0b\u65b9\n    while(tr[x].fa!=k){\n        int y=tr[x].fa,z=tr[y].fa;\n        //\u7b2c\u4e00\u6b21\u65cb\u8f6c,\u8981\u5206\u60c5\u51b5\n        if(z!=k)//\u82e5z=k,\u8bf4\u660e\u53ea\u9700\u8981\u505a\u5355\u65cb\u4e86(\u8bf4\u660e\u76ee\u6807\u70b9\u5c31\u4e3ax\u7684\u7236\u4eb2)\n            if((tr[y].s[0]==x)^(tr[z].s[0]==y)){//\u82e5y\u4e3az\u5de6,x\u4e3ay\u5de6\u6216\u8005y\u4e3az\u53f3,x\u4e3ay\u53f3,\u5f02\u6216\u548c\u5747\u4e3a0,\u8868\u793a\u662f\u76f4\u7ebf\u578b\n                rotate(x);\n            }else rotate(y);\n        //\u7b2c\u4e8c\u6b21\u65cb\u8f6c,\u90fd\u662f\u65cb\u8f6cx \n        rotate(x);\n    }\n    if(k==0)rt=x;//\u5982\u679ck=0\u8bf4\u660ex\u88ab\u65cb\u8f6c\u5230\u4e86\u6839\u8282\u70b9\n}\n\n\nvoid find(int v){\n    int x=rt;\n    while(tr[x].s[v&gt;tr[x].v]&amp;&amp;v!=tr[x].v){//\u5982\u679c:\u627e\u5230\u7684\u70b9\u6ca1\u6709\u7b26\u5408\u8981\u6c42\u7684\u513f\u5b50(\u5373\u8d70\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u4f46v\u662f\u4e0d\u5b58\u5728\u7684)\u6216\u8005\u627e\u5230\u4e86v\n        x=tr[x].s[v&gt;tr[x].v];//\u5982\u679cv&gt;tr[x].v,\u90a3\u4e48\u5c31\u8d70\u53f3\u513f\u5b50\n    }\n    splay(x,0);//\u5c06v\u6216\u8005\u6700\u9760\u8fd1v\u7684\u90a3\u4e2a\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9\n}\n\nint getlower(int v){//\u6ce8\u610f\u8fd4\u56de\u7684\u662f\u4e0b\u6807\uff01\n    find(v);\n    int x=rt;//rt\u5373v\n    if(tr[x].v&lt;v)return x;//\u82e5true,\u8bf4\u660e\u5728find\u4e2d\u5c31\u6ca1\u6709\u627e\u5230v,\u800c\u662f\u627e\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u82e5\u8fd9\u4e2a\u70b9\u7684v&lt;v,\u90a3\u4e48\u5b83\u5c31\u662fv\u7684\u524d\u9a71\n    x=tr[x].s[0];//\u5148\u8d70\u5230v\u7684\u5de6\u5b50\u6811\n    while(tr[x].s[1])x=tr[x].s[1];//\u7136\u540e\u4e0d\u65ad\u8d70\u53f3\u513f\u5b50\n    splay(x,0);\n    return x;\n}\n\n\nint getbigger(int v){//\u6ce8\u610f\u8fd4\u56de\u7684\u662f\u4e0b\u6807\uff01\n    find(v);\n    int x=rt;//rt\u5373v\n    if(tr[x].v&gt;v)return x;//\u82e5true,\u8bf4\u660e\u5728find\u4e2d\u5c31\u6ca1\u6709\u627e\u5230v,\u800c\u662f\u627e\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u82e5\u8fd9\u4e2a\u70b9\u7684v&gt;v,\u90a3\u4e48\u5b83\u5c31\u662fv\u7684\u540e\u7ee7\n    x=tr[x].s[1];//\u5148\u8d70\u5230v\u7684\u53f3\u5b50\u6811\n    while(tr[x].s[0])x=tr[x].s[0];//\u7136\u540e\u4e0d\u65ad\u8d70\u5de6\u513f\u5b50\n    splay(x,0);\n    return x;\n}\n\nvoid insert(int v){\n     int x=rt,p=0;\n     while(x&amp;&amp;tr[x].v!=v){\n        p=x;x=tr[x].s[v&gt;tr[x].v];//\u8d70\u5230\u6700\u9760\u8fd1v\u7684\u4f4d\u7f6e\uff0c\u5982\u679cv\u5b58\u5728\u90a3\u4e48x\u505c\u5728v\u4e0a\uff0c\u5426\u5219x\u8d70\u5230\u6ee1\u8db3v\u63d2\u5165\u7684\u4f4d\u7f6e\u7684\u7a7a\u8282\u70b9\n     }\n     if(x)tr[x].cnt++;//x\u539f\u6765\u5c31\u5b58\u5728\u4e86\n     else{//\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\n        x=++idx;\n        if(p)tr[p].s[v&gt;tr[p].v]=x;//p\u662fx\u7684\u7236\u8282\u70b91\n        tr[x].init(p,v);//\u521d\u59cb\u5316\u8fd9\u4e2a\u70b9\uff0c\u7236\u4eb2\u4e3ap\uff0c\u6743\u503c\u4e3av\n     }\n     splay(x,0);//splay\u9632\u6b62\u9000\u5316\u6210\u94fe\n}\n\nvoid del(int v){\n    int pre=getlower(v),nxt=getbigger(v);\n    splay(pre,0);splay(nxt,pre);//\u5c06pre\u65cb\u8f6c\u5230\u6839\u8282\u70b9,\u5c06nxt\u65cb\u8f6c\u5230pre\u7684\u4e0b\u65b9,\u53ea\u8981\u5c31\u6784\u9020\u51fa\u4e86\u5982\u56fe\u6240\u793a\u7684\u56fe\u50cf\n    int del=tr[nxt].s[0];\n    if(tr[del].cnt&gt;1)tr[del].cnt--,splay(del,0);//\u8fd9\u91cc\u8fdb\u884csplay\u4e3b\u8981\u662f\u4e3a\u4e86pushup\n    else tr[nxt].s[0]=0,splay(nxt,0);//\u76f4\u63a5\u6e05\u7a7anxt\u7684\u5de6\u513f\u5b50,\u5e76\u4e14\u66f4\u65b0\u5b83\n}\n\n\nint getrank(int v){\n    // find(v);\n    // return tr[tr[rt].s[0]].size;//\u6ca1\u6709\u52a0\u4e0a1\u7684\u539f\u56e0\u662f\u6811\u4e0a\u8fd8\u6709\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u8282\u70b9\n    //\u4e0d\u80fd\u7528\u4e0a\u9762\u7684\u4ee3\u7801\uff01\uff01\u4f1aWA\u4e00\u4e2a\u70b9\n    insert(v);\n    int res=tr[tr[rt].s[0]].size;\n    del(v);\n    return res;\n}\n\nint getval(int k){//\u67e5\u8be2\u7b2ck\u5c0f\u7684\u70b9\u7684\u6743\u503c\n    int x=rt;\n    k++;//\u56e0\u4e3a\u6709\u4e00\u4e2a\u65e0\u7a77\u5c0f,\u6240\u4ee5\u5b9e\u9645\u4e0a\u8981\u67e5\u8be2\u7684\u70b9\u662f\u7b2ck+1\u5c0f\u7684\n    while(1){\n        if(k&lt;=tr[tr[x].s[0]].size)x=tr[x].s[0];//\u5982\u679ck&lt;=\u5de6\u513f\u5b50\u7684size,\u90a3\u4e48\u5c31\u8d70\u5de6\u513f\u5b50\n        else if(tr[tr[x].s[0]].size/\u8d70\u53f3\u8fb9\n            k-=tr[tr[x].s[0]].size/!!\n        }else{\n            // if(tr[y].size&gt;=k)x=y;//\u8d70\u5de6\u8fb9,\u82e5\u4e3atrue\u8bf4\u660e\u7b2ck\u5c0f\u7684\u5728\u5de6\u8fb9,\u5426\u5219\u8bf4\u660e\u5373\u4e0d\u662f\u53f3\u8fb9,\u5de6\u8fb9\u4e5f\u6ca1\u6709,\u90a3\u5c31\u662f\u5b83\u81ea\u5df1\u4e86\n             break;\n        }\n\n    }\n    splay(x,0);//splay\u4ec5\u4ec5\u662f\u7528\u6765\u6574\u7406\u5e73\u8861\u6811\u7684,\u9632\u6b62\u5176\u9000\u5316\u4e3a\u94fe\n    return tr[x].v;\n}\n\n\n\nsigned main() {\n    // freopen(\"P5431_1.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n    cin&gt;&gt;n;\n    insert(-INF);insert(INF);//\u63d2\u5165\u4e24\u4e2a\u65e0\u7a77\u5c0f\u7684\u70b9\n    for(int i=1;i&lt;=n;i++){\n        int opt,x;\n        cin&gt;&gt;opt&gt;&gt;x;\n        if(opt==1){\n            insert(x);\n        }if(opt==2){\n            del(x);\n        }if(opt==3){\n            cout&lt;&lt;getrank(x)&lt;&lt;endl;\n        }if(opt==4){\n            cout&lt;&lt;getval(x)&lt;&lt;endl;\n        }if(opt==5){\n            cout&lt;&lt;tr[getlower(x)].v&lt;&lt;endl;\n        }if(opt==6){\n            cout&lt;&lt;tr[getbigger(x)].v&lt;&lt;endl;\n        }\n    }\n\n\n    return 0;\n}\n\n/*\n\u4e0d\u8981\u628a&amp;&amp;\u5199\u6210&amp;\u554a\uff01TT\n*/\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/Treap/","title":"Treap","text":"<pre><code>struct Treap {//treap\u6a21\u677f\uff0c\u6709\u9700\u8981\u53ef\u4ee5copy\n    int tot, rt;\n    struct node {\n        int val, ch[2], rd, cnt, sz;\n        void Init(int Val) { val = Val, rd = rand() % 233; sz = cnt = 1; ch[1] = ch[0] = 0; }\n    }tr[N];\n    void pushup(int nod) { tr[nod].sz = tr[tr[nod].ch[0]].sz + tr[tr[nod].ch[1]].sz + tr[nod].cnt; }\n    void rotate(int &amp;nod, int d) {\n        int k = tr[nod].ch[d]; tr[nod].ch[d] = tr[k].ch[d ^ 1]; tr[k].ch[d ^ 1] = nod;\n        pushup(nod); pushup(k); nod = k; \n    }\n    void ins(int &amp;nod, int val) {\n        if (!nod) { nod = ++ tot; tr[nod].Init(val); }\n        else {\n            tr[nod].sz ++; \n            if (tr[nod].val == val) { tr[nod].cnt ++; return; }\n            int d = val &gt; tr[nod].val; \n            ins(tr[nod].ch[d], val);\n            if (tr[nod].rd &gt; tr[tr[nod].ch[d]].rd) rotate(nod, d);\n        }\n    }\n    void del(int &amp;nod, int val) {\n        if (!nod) return;\n        if (tr[nod].val == val) {\n            if (tr[nod].cnt &gt; 1) { tr[nod].cnt --, tr[nod].sz --; return; } \n            int d = tr[tr[nod].ch[0]].rd &gt; tr[tr[nod].ch[1]].rd;\n            if (!tr[nod].ch[1] || !tr[nod].ch[0]) nod = tr[nod].ch[1] + tr[nod].ch[0];\n            else rotate(nod, d), del(nod, val);\n        }\n        else tr[nod].sz --, del(tr[nod].ch[tr[nod].val &lt; val], val);\n    }\n    int pre(int nod, int val) {\n        if (!nod) return -inf;\n        if (tr[nod].val &gt; val) return pre(tr[nod].ch[0], val);\n        else return max(tr[nod].val, pre(tr[nod].ch[1], val));\n    }\n    int suc(int nod, int val) {\n        if (!nod) return inf;\n        if (tr[nod].val &lt; val) return suc(tr[nod].ch[1], val);\n        else return min(tr[nod].val, suc(tr[nod].ch[0], val));\n    }\n    int Get_Min(int nod) {\n        if (!nod) return inf;\n        return min(tr[nod].val, Get_Min(tr[nod].ch[0]));\n    }\n}tp;\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%85%B6%E5%AE%83%E5%B9%B3%E8%A1%A1%E6%A0%91/","title":"\u5176\u5b83\u5e73\u8861\u6811","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%85%B6%E5%AE%83%E5%B9%B3%E8%A1%A1%E6%A0%91/#pbds","title":"pbds\u4e2d\u7684\u5e73\u8861\u6811","text":"<p>\u8bf7\u53c2\u8003</p> <p>pbds\u5e93\u5b66\u4e60\u7b14\u8bb0(\u4f18\u5148\u961f\u5217\u3001\u5e73\u8861\u6811\u3001\u54c8\u5e0c\u8868)-CSDN\u535a\u5ba2</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%85%B6%E5%AE%83%E5%B9%B3%E8%A1%A1%E6%A0%91/#vector","title":"\u5e73\u8861\u6811\u7684vector\u4f2a\u505a\u6cd5","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%85%B6%E5%AE%83%E5%B9%B3%E8%A1%A1%E6%A0%91/#1-x","title":"1. \u63d2\u5165\u6570\u503c x\u3002","text":"<p>\u6211\u4eec\u8fd0\u7528\u521a\u521a\u5b66\u5230\u7684\u77e5\u8bc6\uff0c\u4f7f\u7528 <code>lower_bound()</code> \u6765\u5f97\u5230\u5e94\u8be5\u63d2\u5165\u7684\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668\uff0c\u7136\u540e\u4f7f\u7528 <code>insert()</code> \u51fd\u6570\u6765\u63d2\u5165\uff0c\u662f\u4e00\u4e2a\u57fa\u7840\u7684\u64cd\u4f5c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%85%B6%E5%AE%83%E5%B9%B3%E8%A1%A1%E6%A0%91/#2-x","title":"2. \u5220\u9664\u6570\u503c x\u3002","text":"<p>\u4eff\u7167\u4e0a\u4f8b\u6613\u5f97\uff0c\u4f7f\u7528 <code>lower_bound()</code> \u6765\u5f97\u5230\u5e94\u8be5\u5220\u9664\u7684\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668\uff0c\u7136\u540e\u4f7f\u7528 <code>erase()</code> \u51fd\u6570\u5220\u9664\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%85%B6%E5%AE%83%E5%B9%B3%E8%A1%A1%E6%A0%91/#3-x","title":"3. \u67e5\u8be2\u6570\u503c x \u7684\u6392\u540d\u3002","text":"<p>\u7531\u4e8e\u6574\u4e2a\u5e8f\u5217\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u53ef\u4ee5\u67e5\u627e x \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u770b\u5176\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002\u8fd9\u6837\u65e2\u7136\u662f\u67e5\u627e\u4f4d\u7f6e\uff0c\u6211\u4eec\u660e\u663e\u53ef\u4ee5 <code>lower_bound()</code> \u4e00\u6ce2\u561b~ \u7136\u540e\u5462\uff0c\u7528\u5f97\u5230\u7684\u8fed\u4ee3\u5668\u51cf\u53bb\u5f00\u5934\u7684\u8fed\u4ee3\u5668\uff0c\u5c31\u662f\u5f97\u5230\u7684\u6392\u540d\u4e86\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%85%B6%E5%AE%83%E5%B9%B3%E8%A1%A1%E6%A0%91/#4-x","title":"4. \u67e5\u8be2\u6392\u540d\u4e3a x \u7684\u6570\u503c\u3002","text":"<p>\u8f93\u51fa\u5728\u7b2c x \u4f4d\u4e0a\u7684\u6570\u3002\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%85%B6%E5%AE%83%E5%B9%B3%E8%A1%A1%E6%A0%91/#5-x","title":"5. \u6c42\u6570\u503c x \u7684\u524d\u9a71\u540e\u7ee7\u3002","text":"<p>\u524d\u9a71\u53ef\u4ee5\u7528 <code>lower_bound()</code> \u6765\u6c42\uff0c\u7136\u540e\u5c31\u662f\u8fd9\u4e2a\u8fed\u4ee3\u5668\u524d\u4e00\u4e2a\u7684\u4f4d\u7f6e\u3002\u6ce8\u610f\u8981\u7528\u661f\u53f7\u89e3\u5f15\u7528\u3002</p> <p>\u540e\u7ee7\u76f4\u63a5\u7528 <code>upper_bound()</code> \u5c31\u53ef\u4ee5\u4e86~</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nvector&lt;int&gt; s;\nvector&lt;int&gt;::iterator vit;\nint rks;\nint main() {\n    int t;\n    cin &gt;&gt; t;\n    while(t --) {\n        int cmd, x;\n        cin &gt;&gt; cmd &gt;&gt; x;\n        if(cmd == 1) {\n            vit = lower_bound(s.begin(), s.end(), x);\n            s.insert(vit, x);\n        } else if(cmd == 2) {\n            vit = lower_bound(s.begin(), s.end(), x);\n            s.erase(vit);\n        } else if(cmd == 3) {\n            rks = lower_bound(s.begin(),s.end(),x)-s.begin();\n            cout &lt;&lt; rks + 1 &lt;&lt; endl;\n        } else if(cmd == 4) {\n            cout &lt;&lt; s[x - 1] &lt;&lt; endl;\n        } else if(cmd == 5) {\n            vit = lower_bound(s.begin(), s.end(), x);\n            cout &lt;&lt; (*(--vit)) &lt;&lt; endl;\n        } else if(cmd == 6) {\n            vit = upper_bound(s.begin(), s.end(), x);\n            cout &lt;&lt; (*vit) &lt;&lt; endl;\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E5%B9%B3%E8%A1%A1%E6%A0%91/","title":"\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E5%B9%B3%E8%A1%A1%E6%A0%91/#fhq-treap","title":"FHQ Treap + \u53ef\u6301\u4e45\u5316","text":"<p>\u666e\u901aFHQ Treap\u52a0\u4e0a\u4e00\u70b9\u53ef\u6301\u4e45\u5316\u7684\u4e1c\u897f\u5982\u4e0b\uff1a(\u6253\u4e0a\u6ce8\u91ca\u7684\u4ee3\u7801\u662f\u53ef\u6301\u4e45\u5316\u7684\u7279\u6b8a\u64cd\u4f5c)</p> <pre><code>int merge(int x, int y) {\n    if(!x || !y) return x + y;\n    if(t[x].key &lt; t[y].key) {\n        int rt = newnode(); //\n        t[rt] = t[x];       //\n        t[rt].s[1] = merge(t[rt].s[1], y);\n        pushup(rt);\n        return rt;\n    } else {\n        int rt = newnode(); //\n        t[rt] = t[y];       //\n        t[rt].s[0] = merge(x, t[rt].s[0]);\n        pushup(rt);\n        return rt;\n    }\n}\nvoid split(int rt, int k, int &amp;x, int &amp;y) {\n    if(!rt) x = y = 0;\n    else {\n        if(t[rt].w &lt;= k) {\n            x = newnode(); //\n            t[x] = t[rt];  //\n            split(t[x].s[1], k, t[x].s[1], y);\n            pushup(x);\n        } else {\n            y = newnode(); //\n            t[y] = t[rt];  //\n            split(t[y].s[0], k, x, t[y].s[0]);\n            pushup(y);\n        } \n    }\n}\n</code></pre> <p>\u7136\u540e\u5f00\u4e2aroot[]\u6570\u7ec4\uff0c\u5b58\u5404\u4e2a\u7248\u672c\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u6ce8\u610f\u4e0b\u7a7a\u95f4\u5f97\u5f0050\u500d\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E5%B9%B3%E8%A1%A1%E6%A0%91/#_2","title":"\u5176\u4ed6\u53ef\u6301\u4e45\u5316\u6269\u5c55\u5e73\u8861\u6811","text":"<p>\u53ef\u6301\u4e45\u5316\u8981\u6c42\u662f\u5e73\u8861\u6811\u5f97\u7528\u975e\u65cb\u6765\u5199\uff08FHQ\uff09\uff0c\u6240\u4ee5\u5176\u5b9e\u4f1a\u4e86\u4e0a\u9762\u7684\u53ef\u6301\u4e45\u5316FHQ\uff0c\u53d8\u5f62\u4e5f\u5c31\u7b80\u5355\u4e86\u3002</p> <p>\u6240\u4ee5\u8fd9\u91cc\u53ea\u662f\u63d0\u4e00\u63d0\uff1a</p> <ul> <li>\u53ef\u6301\u4e45\u5316\u6587\u827a\u5e73\u8861\u6811</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%90%8E%E7%BC%80%E5%B9%B3%E8%A1%A1%E6%A0%91/","title":"\u540e\u7f00\u5e73\u8861\u6811","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%90%8E%E7%BC%80%E5%B9%B3%E8%A1%A1%E6%A0%91/#_2","title":"\u9898\u76ee","text":"<p>\"\u540e\u7f00\u5e73\u8861\u6811\"\u8fd9\u4e2a\u540d\u5b57\u6b63\u786e\u6027\u5b58\u7591\uff0c\u7531\u4e8e clj \u7ed9\u7684\"\u91cd\u91cf\u5e73\u8861\u6811\"\u5b9a\u4e49\u6709\u6b67\u4e49\u3002</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>init</code>\uff0c\u8981\u6c42\u4f60\u652f\u6301\u4e09\u4e2a\u64cd\u4f5c\uff1a</p> <ol> <li> <p>\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u540e\u9762\u63d2\u5165\u82e5\u5e72\u4e2a\u5b57\u7b26\u3002</p> </li> <li> <p>\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u540e\u9762\u5220\u9664\u82e5\u5e72\u4e2a\u5b57\u7b26\u3002</p> </li> <li> <p>\u8be2\u95ee\u5b57\u7b26\u4e32 \\(s\\) \u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u4e86\u51e0\u6b21\uff08\u4f5c\u4e3a\u8fde\u7eed\u5b50\u4e32\uff09\uff1f</p> </li> </ol> <p>\u4f60\u5fc5\u987b\u5728\u7ebf\u652f\u6301\u8fd9\u4e9b\u64cd\u4f5c\u3002</p> <p>\u6570\u636e\u5b57\u7b26\u4e32\u53d8\u5316\u957f\u5ea6\u4ee5\u53ca\u521d\u59cb\u957f\u5ea6\u548c $ \\le 8 \\times 10^5$\uff0c\u8be2\u95ee\u6b21\u6570 \\(\\le 10^5\\)\uff0c\u8be2\u95ee\u603b\u957f\u5ea6 \\(\\le 3 \\times 10^6\\)\u3002</p> <p>\u5b57\u7b26\u96c6\u4e3a\u5927\u5199\u5b57\u6bcd\uff0c\u6ce8\u610f <code>ADD</code> \u548c <code>QUERY</code> \u64cd\u4f5c\u7684\u5b57\u7b26\u4e32\u90fd\u9700\u8981\u89e3\u538b\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%90%8E%E7%BC%80%E5%B9%B3%E8%A1%A1%E6%A0%91/#_3","title":"\u540e\u7f00\u5e73\u8861\u6811","text":"<p>\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u4e0d\u770b\u9898\u89e3\u4e0d\u592a\u5bb9\u6613\u60f3\u5230\u505a\u6cd5\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5f88\u5bb9\u6613\u7406\u89e3\u3002</p> <p>\u5e73\u8861\u6811\u5236\u4f5c\u7684\u4e00\u4ef6\u4e8b\u662f\u6bd4\u8f83\u6811\u4e0a\u8282\u70b9\u7684\u503c\u7684\u5927\u5c0f\u3002\u90a3\u4e48\u540e\u7f00\u5e73\u8861\u6811\u5c31\u662f\u628a\u6811\u4e0a\u7684\u8282\u70b9\u66ff\u6362\u4e3a\u6587\u672c\u4e32\u7684\u6240\u6709\u540e\u7f00\u6765\u6bd4\u8f83\u3002</p> <p>\u5982 abababc</p> <p></p> <p>\u64cd\u4f5c\u8fd8\u662f\u548c\u5e73\u8861\u6811\u4e00\u6837\uff0c\u5b83\u53ef\u4ee5\u7ef4\u62a4\u7684\u662f\u5bf9\u6587\u672c\u4e32\u7684**\u524d\u9762**\u589e\u51cf\u5b57\u7b26\uff0c\u5728\u7ebf\u67e5\u8be2\u5b50\u4e32\u4e2a\u6570\u7684\u95ee\u9898\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%B9%B3%E8%A1%A1%E6%A0%91%E4%BE%8B%E9%A2%98/","title":"\u5e73\u8861\u6811\u4f8b\u9898","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E5%B9%B3%E8%A1%A1%E6%A0%91%E4%BE%8B%E9%A2%98/#1","title":"\u7ec3\u4e60 #1 \u9b3c\u5b50\u8fdb\u6751","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>\u5c0f\u5361\u6b63\u5728\u65b0\u5bb6\u7684\u5ba2\u5385\u4e2d\u770b\u7535\u89c6\u3002\u7535\u89c6\u91cc\u6b63\u5728\u64ad\u653e\u653e\u4e86\u5343\u516b\u767e\u6b21\u4f9d\u65e7\u91cd\u64ad\u7684\u300a\u4eae\u5251\u300b\uff0c\u5267\u4e2d\u674e\u4e91\u9f99\u5e26\u9886\u7684\u72ec\u7acb\u56e2\u5728\u4e00\u4e2a\u53bf\u57ce\u9047\u5230\u4e86\u4e00\u4e2a\u9b3c\u5b50\u5c0f\u961f\uff0c\u4e8e\u662f\u72ec\u7acb\u56e2\u4e0e\u9b3c\u5b50\u5c55\u5f00\u6e38\u51fb\u6218\u3002</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u53bf\u57ce\u91cc\u6709 \\(n\\) \u4e2a\u7528\u5730\u9053\u76f8\u8fde\u7684\u623f\u5b50\uff0c\u7b2c \\(i\\) \u4e2a\u53ea\u4e0e\u7b2c \\(i-1\\) \u548c\u7b2c \\(i+1\\) \u4e2a\u76f8\u8fde\u3002\u8fd9\u65f6\u6709 \\(m\\) \u4e2a\u6d88\u606f\u4f9d\u6b21\u4f20\u6765\uff1a</p> <ol> <li> <p>\u82e5\u6d88\u606f\u4e3a <code>D x</code>\uff1a\u9b3c\u5b50\u5c06 \\(x\\) \u53f7\u623f\u5b50\u6467\u6bc1\u4e86\uff0c\u5730\u9053\u88ab\u5835\u4e0a\u3002</p> </li> <li> <p>\u82e5\u6d88\u606f\u4e3a <code>R</code> \uff1a\u6751\u6c11\u4eec\u5c06\u9b3c\u5b50\u4e0a\u4e00\u4e2a\u6467\u6bc1\u7684\u623f\u5b50\u4fee\u590d\u4e86\u3002</p> </li> <li> <p>\u82e5\u6d88\u606f\u4e3a <code>Q x</code>\uff1a\u6709\u4e00\u540d\u58eb\u5175\u88ab\u56f4\u5835\u5728 \\(x\\) \u53f7\u623f\u5b50\u4e2d\u3002</p> </li> </ol> <p>\u674e\u4e91\u9f99\u6536\u5230\u4fe1\u606f\u5f88\u7d27\u5f20\uff0c\u4ed6\u60f3\u77e5\u9053\u6bcf\u4e00\u4e2a\u88ab\u56f4\u5835\u7684\u58eb\u5175\u80fd\u591f\u5230\u8fbe\u7684\u623f\u5b50\u6709\u51e0\u4e2a\u3002</p> <pre><code>/*\nCode by Ntsc_Hodaka\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define pii pair&lt;int,int&gt;\n\n///----///\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n///----///\nconst int N = 1e5 + 5;\nconst int M = 1e7 + 5;\nconst int INF = 1e9 + 5;\nconst double eps=1e-7;\n\nstruct node{\n    int s[2],fa,v,cnt,size;\n    //\u5de6\u53f3\u513f\u5b50,\u7236\u4eb2,\u8282\u70b9\u6743\u503c,\u503c\u7684\u6570\u91cf,\u5b50\u6811\u5927\u5c0f\n    void init(int p1,int v1){\n        fa=p1,v=v1;cnt=size=1;\n    }\n}tr[N];\n\nbool f1;\n///----///\nint n,rt,idx;\nint m,stk[N],top;\nint vis[N];\n///----///\nbool f2;\n\nvoid pushup(int x){//\u7531\u5de6\u53f3\u513f\u5b50\u4fe1\u606f\u66f4\u65b0\u7236\u4eb2\u7684\u4fe1\u606f\n    tr[x].size=tr[tr[x].s[0]].size/\u513f\u5b50\u7684size(\u5b50\u6811\u548c)\u52a0\u4e0a\u81ea\u5df1\u7684\u5927\u5c0f\n    //size\u5b58\u7684\u662f\u4ee5x\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u4fe1\u606f\n}\n\n\nvoid rotate(int x){\n    int y=tr[x].fa,z=tr[y].fa;\n    int k=(tr[y].s[1]==x);//\u8fd9\u91cc\u5f88\u91cd\u8981!\u5982\u679ctrue,\u8bf4\u660ex\u4e3ay\u7684\u5de6\u513f\u5b50,\u5e94\u8be5\u7ee7\u7eed\u5de6\u65cb\n    tr[y].s[k]=tr[x].s[k^1];//\u5c06y\u7684\u5de6\u513f\u5b50\u8bbe\u7f6e\u4e3ax\u7684\u53f3\u513f\u5b50(1)\n    tr[tr[x].s[k^1]].fa=y;\n    tr[x].s[k^1]=y;//\u5c06x\u7684\u53f3\u513f\u5b50\u8bbe\u7f6e\u4e3ay(2)\n    tr[y].fa=x;\n    tr[z].s[(tr[z].s[1]==y)]=x;//\u81ea\u52a8\u5224\u65ad\u539f\u6765\u7684y\u662fz\u7684\u5de6/\u53f3\u513f\u5b50\n    tr[x].fa=z;//\u66f4\u65b0z\u7684\u513f\u5b50,x\u7684\u65b0\u7236\u4eb2(3)\n    pushup(y);pushup(x);//\u522b\u5fd8\u4e86\u4fee\u6539\u4fe1\u606f\n}\n\nvoid splay(int x,int k){//\u5c06x\u65cb\u8f6c\u5230k\u4e0b\u65b9\n    while(tr[x].fa!=k){\n        int y=tr[x].fa,z=tr[y].fa;\n        //\u7b2c\u4e00\u6b21\u65cb\u8f6c,\u8981\u5206\u60c5\u51b5\n        if(z!=k)//\u82e5z=k,\u8bf4\u660e\u53ea\u9700\u8981\u505a\u5355\u65cb\u4e86(\u8bf4\u660e\u76ee\u6807\u70b9\u5c31\u4e3ax\u7684\u7236\u4eb2)\n            if((tr[y].s[0]==x)^(tr[z].s[0]==y)){//\u82e5y\u4e3az\u5de6,x\u4e3ay\u5de6\u6216\u8005y\u4e3az\u53f3,x\u4e3ay\u53f3,\u5f02\u6216\u548c\u5747\u4e3a0,\u8868\u793a\u662f\u76f4\u7ebf\u578b\n                rotate(x);\n            }else rotate(y);\n        //\u7b2c\u4e8c\u6b21\u65cb\u8f6c,\u90fd\u662f\u65cb\u8f6cx \n        rotate(x);\n    }\n    if(k==0)rt=x;//\u5982\u679ck=0\u8bf4\u660ex\u88ab\u65cb\u8f6c\u5230\u4e86\u6839\u8282\u70b9\n}\n\n\nvoid find(int v){\n    int x=rt;\n    while(tr[x].s[v&gt;tr[x].v]&amp;&amp;v!=tr[x].v){//\u5982\u679c:\u627e\u5230\u7684\u70b9\u6ca1\u6709\u7b26\u5408\u8981\u6c42\u7684\u513f\u5b50(\u5373\u8d70\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u4f46v\u662f\u4e0d\u5b58\u5728\u7684)\u6216\u8005\u627e\u5230\u4e86v\n        x=tr[x].s[v&gt;tr[x].v];//\u5982\u679cv&gt;tr[x].v,\u90a3\u4e48\u5c31\u8d70\u53f3\u513f\u5b50\n    }\n    splay(x,0);//\u5c06v\u6216\u8005\u6700\u9760\u8fd1v\u7684\u90a3\u4e2a\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9\n}\n\nint getlower(int v){\n    find(v);\n    int x=rt;//rt\u5373v\n    if(tr[x].v&lt;v)return x;//\u82e5true,\u8bf4\u660e\u5728find\u4e2d\u5c31\u6ca1\u6709\u627e\u5230v,\u800c\u662f\u627e\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u82e5\u8fd9\u4e2a\u70b9\u7684v&lt;v,\u90a3\u4e48\u5b83\u5c31\u662fv\u7684\u524d\u9a71\n    x=tr[x].s[0];//\u5148\u8d70\u5230v\u7684\u5de6\u5b50\u6811\n    while(tr[x].s[1])x=tr[x].s[1];//\u7136\u540e\u4e0d\u65ad\u8d70\u53f3\u513f\u5b50\n    splay(x,0);\n    return x;\n}\n\n\nint getbigger(int v){\n    find(v);\n    int x=rt;//rt\u5373v\n    if(tr[x].v&gt;v)return x;//\u82e5true,\u8bf4\u660e\u5728find\u4e2d\u5c31\u6ca1\u6709\u627e\u5230v,\u800c\u662f\u627e\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u82e5\u8fd9\u4e2a\u70b9\u7684v&gt;v,\u90a3\u4e48\u5b83\u5c31\u662fv\u7684\u540e\u7ee7\n    x=tr[x].s[1];//\u5148\u8d70\u5230v\u7684\u53f3\u5b50\u6811\n    while(tr[x].s[0])x=tr[x].s[0];//\u7136\u540e\u4e0d\u65ad\u8d70\u5de6\u513f\u5b50\n    splay(x,0);\n    return x;\n}\n\nvoid insert(int v){\n     int x=rt,p=0;\n     while(x&amp;&amp;tr[x].v!=v){\n        p=x;x=tr[x].s[v&gt;tr[x].v];//\u8d70\u5230\u6700\u9760\u8fd1v\u7684\u4f4d\u7f6e\uff0c\u5982\u679cv\u5b58\u5728\u90a3\u4e48x\u505c\u5728v\u4e0a\uff0c\u5426\u5219x\u8d70\u5230\u6ee1\u8db3v\u63d2\u5165\u7684\u4f4d\u7f6e\u7684\u7a7a\u8282\u70b9\n     }\n     if(x)tr[x].cnt++;//x\u539f\u6765\u5c31\u5b58\u5728\u4e86\n     else{//\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\n        x=++idx;\n        if(p)tr[p].s[v&gt;tr[p].v]=x;//p\u662fx\u7684\u7236\u8282\u70b91\n        tr[x].init(p,v);//\u521d\u59cb\u5316\u8fd9\u4e2a\u70b9\uff0c\u7236\u4eb2\u4e3ap\uff0c\u6743\u503c\u4e3av\n     }\n     splay(x,0);//splay\u9632\u6b62\u9000\u5316\u6210\u94fe\n}\n\nvoid del(int v){\n    int pre=getlower(v),nxt=getbigger(v);\n    splay(pre,0);splay(nxt,pre);//\u5c06pre\u65cb\u8f6c\u5230\u6839\u8282\u70b9,\u5c06nxt\u65cb\u8f6c\u5230pre\u7684\u4e0b\u65b9,\u53ea\u8981\u5c31\u6784\u9020\u51fa\u4e86\u5982\u56fe\u6240\u793a\u7684\u56fe\u50cf\n    int del=tr[nxt].s[0];\n    if(tr[del].cnt&gt;1)tr[del].cnt--,splay(del,0);//\u8fd9\u91cc\u8fdb\u884csplay\u4e3b\u8981\u662f\u4e3a\u4e86pushup\n    else tr[nxt].s[0]=0,splay(nxt,0);//\u76f4\u63a5\u6e05\u7a7anxt\u7684\u5de6\u513f\u5b50,\u5e76\u4e14\u66f4\u65b0\u5b83\n}\n\n\nint getrank(int v){\n    // find(v);\n    // return tr[tr[rt].s[0]].size;//\u6ca1\u6709\u52a0\u4e0a1\u7684\u539f\u56e0\u662f\u6811\u4e0a\u8fd8\u6709\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u8282\u70b9\n    //\u4e0d\u80fd\u7528\u4e0a\u9762\u7684\u4ee3\u7801\uff01\uff01\u4f1aWA\u4e00\u4e2a\u70b9\n    insert(v);\n    int res=tr[tr[rt].s[0]].size;\n    del(v);\n    return res;\n}\n\nint getval(int k){//\u67e5\u8be2\u7b2ck\u5c0f\u7684\u70b9\u7684\u6743\u503c\n    int x=rt;\n    k++;//\u56e0\u4e3a\u6709\u4e00\u4e2a\u65e0\u7a77\u5c0f,\u6240\u4ee5\u5b9e\u9645\u4e0a\u8981\u67e5\u8be2\u7684\u70b9\u662f\u7b2ck+1\u5c0f\u7684\n    while(1){\n        if(k&lt;=tr[tr[x].s[0]].size)x=tr[x].s[0];//\u5982\u679ck&lt;=\u5de6\u513f\u5b50\u7684size,\u90a3\u4e48\u5c31\u8d70\u5de6\u513f\u5b50\n        else if(tr[tr[x].s[0]].size/\u8d70\u53f3\u8fb9\n            k-=tr[tr[x].s[0]].size/!!\n        }else{\n            // if(tr[y].size&gt;=k)x=y;//\u8d70\u5de6\u8fb9,\u82e5\u4e3atrue\u8bf4\u660e\u7b2ck\u5c0f\u7684\u5728\u5de6\u8fb9,\u5426\u5219\u8bf4\u660e\u5373\u4e0d\u662f\u53f3\u8fb9,\u5de6\u8fb9\u4e5f\u6ca1\u6709,\u90a3\u5c31\u662f\u5b83\u81ea\u5df1\u4e86\n             break;\n        }\n\n    }\n    splay(x,0);//splay\u4ec5\u4ec5\u662f\u7528\u6765\u6574\u7406\u5e73\u8861\u6811\u7684,\u9632\u6b62\u5176\u9000\u5316\u4e3a\u94fe\n    return tr[x].v;\n}\n\n\n\nsigned main() {\n    // freopen(\"P5431_1.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n    cin&gt;&gt;n&gt;&gt;m;\n    insert(0);insert(n+1);\n    while(m--){\n        char op;int x;\n        cin&gt;&gt;op;\n        if(op=='D'){\n            cin&gt;&gt;x;\n            stk[++top]=x;\n            vis[stk[top]]=1;\n            insert(x);\n        }if(op=='R'){\n            del(stk[top]);\n            vis[stk[top--]]=0;\n        }if(op=='Q'){\n            cin&gt;&gt;x;\n            if(vis[x])cout&lt;&lt;0&lt;&lt;endl;\n            else cout&lt;&lt;tr[getbigger(x)].v-tr[getlower(x)].v-1&lt;&lt;endl;\n//          cerr&lt;&lt;x&lt;&lt;\" bg:\"&lt;&lt;getbigger(x)&lt;&lt;\" lo:\"&lt;&lt;getlower(x)&lt;&lt;endl;\n        }\n    }\n\n\n    return 0;\n}\n\n/*\n\u4e0d\u8981\u628a&amp;&amp;\u5199\u6210&amp;\u554a\uff01TT\n*/\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E6%96%87%E8%89%BA%E5%B9%B3%E8%A1%A1%E6%A0%91/","title":"\u6587\u827a\u5e73\u8861\u6811","text":"<p>\u60a8\u9700\u8981\u5199\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff08\u53ef\u53c2\u8003\u9898\u76ee\u6807\u9898\uff09\uff0c\u6765\u7ef4\u62a4\u4e00\u4e2a\u6709\u5e8f\u6570\u5217\u3002</p> <p>\u5176\u4e2d\u9700\u8981\u63d0\u4f9b\u4ee5\u4e0b\u64cd\u4f5c\uff1a\u7ffb\u8f6c\u4e00\u4e2a\u533a\u95f4\uff0c\u4f8b\u5982\u539f\u6709\u5e8f\u5e8f\u5217\u662f \\(5\\ 4\\ 3\\ 2\\ 1\\)\uff0c\u7ffb\u8f6c\u533a\u95f4\u662f \\([2,4]\\) \u7684\u8bdd\uff0c\u7ed3\u679c\u662f \\(5\\ 2\\ 3\\ 4\\ 1\\)\u3002</p> <p>\u6211\u4eec\u4ee5FHQ\u4e3e\u4f8b\u3002</p> <p>\u56e0\u4e3a\u662f\u533a\u95f4\u7684\u65cb\u8f6c\uff0c\u7c7b\u4f3c\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u4e00\u4e2a\u61d2\u6807\u8bb0</p> <pre><code>struct node{\n    int l,r,val,key,size,tag;\n}tr[N];\n</code></pre> <p>\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u4e0b\u4f20\u6807\u8bb0\u7684\u4e1c\u897f\u3002</p> <p>\u6211\u4eec\u9700\u8981\u5728\u5206\u88c2\u3001\u5408\u5e76\u3001\u8f93\u51fa\u65f6\u4e0b\u4f20\u6807\u8bb0\u5e76\u66f4\u65b0\u3002</p> <pre><code>void pushdown(int x){\n    if(!tr[x].tag)return ;\n    swap(tr[x].l,tr[x].r);//\u65cb\u8f6c\u5b50\u6811\n    tr[tr[x].l].tag^=1;\n    tr[tr[x].r].tag^=1;//\u8003\u8651\u65cb\u8f6c\u7684\u6027\u8d28\u4f20\u9012tag,\u5373\u5947\u6570\u6b21\u7ffb\u8f6c-&gt;\u8981\u7ffb\u8f6c.\u5076\u6570\u6b21\u7ffb\u8f6c-&gt;\u4e0d\u9700\u8981\u7ffb\u8f6c\n    tr[p].tag=0;\n}\n</code></pre> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u95ee\u4e86\uff0c\u8fd9\u6837\u5199\u548c\u7ebf\u6bb5\u6811\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u6709\u4e00\u4e9b\u65cb\u8f6c\u7684\u9898\u76ee\u786e\u5b9e\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u505a\u3002\u6211\u4eec\u8003\u5bdf\u7ebf\u6bb5\u6811\u4e0e\u5e73\u8861\u65f6\u7684\u533a\u522b\uff1a\u5e73\u8861\u6811\u7684\u8282\u70b9\u4e0a\u5b58\u50a8\u7684\u662f\u6570\u7ec4\u4e2d\u7684\u4e00\u4e2a\u503c\uff0c\u800c\u7ebf\u6bb5\u6811\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u533a\u95f4\u7684\u4fe1\u606f\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E6%96%87%E8%89%BA%E5%B9%B3%E8%A1%A1%E6%A0%91/#_2","title":"\u5206\u88c2","text":"<p>\u5728\u5e73\u8861\u6811\u6a21\u677f\u4e2d\uff0c\u6211\u4eec\u6309\u7167\u5f53\u524d\u8282\u70b9\u7684\u6743\u503c\u6765\u8fdb\u884c\u5206\u88c2\u3002\u800c\u5728\u6587\u827a\u5e73\u8861\u6811\u4e2d\uff0c\u6211\u4eec\u6309\u7167\u5176\u6392\u540d\u6765\u5206\u88c2\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u7684\u6587\u827a\u5e73\u8861\u6811\u7ef4\u62a4\u7684\u662f\u533a\u95f4\u7684\u7ffb\u8f6c\uff0c\u533a\u95f4\u5bf9\u5e94\u7740\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\uff0c\u800c\u4e0b\u6807\u5bf9\u5e94\u7740\u6bcf\u4e2a\u70b9\u7684\u6392\u540d\u3002\u6ce8\u610f\u8fd9\u91cc\u7684\u6392\u540d\u4e0d\u662f\u503c\u7684\u5927\u5c0f\u6392\u540d\uff0c\u800c\u662f\u5bf9\u5e73\u8861\u6811\u8fdb\u884c\u4e2d\u5e8f\u904d\u5386\u7684\u6392\u540d\u3002</p> <pre><code>void split(int i,int k,int &amp;x,int &amp;y){//i\u5f53\u524d\u8282\u70b9\uff0cv\u5212\u5206\u6570\u503c\uff0c \u8fd4\u56de\u65f6x\u4f1a\u6307\u5411\u5de6treap\u7684\u6839\uff0cy\u6307\u5411\u53f3treap\u7684\u6839\n    if(!i){//\u5230\u8fbe\u6811\u53f6 \n        x=y=0;return ;\n     }\n\n     pushdown(i);\n     if(tr[tr[i].l].size&lt;k){//\u5982\u679c\u8fd9\u4e2a\u70b9\u7684val&lt;=v,\u90a3\u4e48\u5b83\u7684\u5de6\u5b50\u6811\u4e00\u5b9a\u90fd&lt;=v,\u4f46\u662f\u53f3\u5b50\u6811\u7684root\u867d\u7136&gt;v,\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u7684\u513f\u5b50\u4eec\u662f\u5426\u90fd&gt;v,\u6240\u4ee5\u9700\u8981\u9012\u5f52\u53f3\u5b50\u6811 \n        k-=tr[tr[i].l].size/\u8d70\u53f3\u5b50\u6811,\u90a3\u4e48\u5c31\u8981\u628a\u6392\u540d\u51cf\u53bb\u5de6\u5b50\u6811\u7684\u5927\u5c0f.\u8bb0\u5f97\u66f4\u65b0k\n         x=i;\n        split(tr[i].r,k,tr[i].r,y);//\u9012\u5f52\u5b9e\u73b0 \n     }else{\n        y=i;\n        split(tr[i].l,k,x,tr[i].l);\n     }\n    pushup(i);\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E6%96%87%E8%89%BA%E5%B9%B3%E8%A1%A1%E6%A0%91/#_3","title":"\u5408\u5e76","text":"<p>\u52a0\u4e0apushdown\u5373\u53ef\u3002</p> <pre><code>int merge(int x,int y){// x,y\u5206\u522b\u662f\u5de6\u53f3treap\u7684\u6839 \n    if(!x||!y){\n        return x+y;\n    } \n    if(tr[x].key&lt;tr[y].key){//\u5982\u679cx\u7684key&lt;y\u7684key,\u90a3\u4e48y\u5c31\u4f5c\u4e3ax\u7684\u5b50\u6811,\u4e14\u662f\u53f3\u5b50\u6811,\u9012\u5f52\u5408\u5e76x\u539f\u6765\u7684\u53f3\u5b50\u6811\u548cy\n         pushdown(x);\n        tr[x].r=merge(tr[x].r,y);\n        pushup(x);return x;\n    }else{\n        pushdown(y);\n        tr[y].l=merge(x,tr[y].l);\n        pushup(y);return y;\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E6%96%87%E8%89%BA%E5%B9%B3%E8%A1%A1%E6%A0%91/#_4","title":"\u8f93\u51fa","text":"<p>\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u6570\u7ec4\uff0c\u8f93\u51fa\u5e94\u8be5\u4f7f\u7528\u4e2d\u5e8f\u904d\u5386</p> <pre><code>void oup(int x){\n    //\u4e2d\u5e8f\u904d\u5386\u6765\u8f93\u51fa\n    if(!x)return ;\n    pushdown(x);//\u6ce8\u610f\u5148\u4e0b\u4f20\u6807\u8bb0\uff0c\u548c\u7ebf\u6bb5\u6811\u7684query\u4e00\u6837\n    oup(tr[x].l);\n    cout&lt;&lt;tr[x].val&lt;&lt;' ';\n    oup(tr[x].r);\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E6%96%87%E8%89%BA%E5%B9%B3%E8%A1%A1%E6%A0%91/#main","title":"\u64cd\u4f5c <code>main()</code>","text":"<pre><code>        cin&gt;&gt;l&gt;&gt;r;\n\n        split(rt,r,x,z);//\u5206\u88c2\u4e3a[1,r][r+1,n],\u6839\u8282\u70b9\u5206\u522b\u4e3ax,z\n        split(x,l-1,x,y);//\u628a[1,r]\u5206\u88c2\u4e3a[1,l-1][l,r],\u6839\u8282\u70b9\u5206\u522b\u4e3ax,y\n        //\u90a3\u4e48\u73b0\u5728y\u5b50\u6811\u5c31\u662f[l,r]\u5566\n        tr[y].tag^=1;//\u6ce8\u610f\u4e0d\u662f=1\n        rt=merge(merge(x,y),z);\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E6%96%87%E8%89%BA%E5%B9%B3%E8%A1%A1%E6%A0%91/#code","title":"Code","text":"<pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n\u6587\u827a\u5e73\u8861\u6811\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int N=1e5+5; \n\nstruct node{\n    int l,r,val,key,size,tag;\n}tr[N];\nint n,m,root,idx;  //root\u8bb0\u5f55\u6839\u7684\u7f16\u53f7 \uff0cidx\u662f\u5bf9\u65b0\u7684\u8282\u70b9\u8fdb\u884c\u7f16\u53f7\u7684\u53d8\u91cf \n\nint addnode(int v){\n    tr[++idx].val=v;\n    tr[idx].key=rand();\n    tr[idx].size=1;\n    return idx;//\u8fd4\u56de\u8fd9\u4e2a\u70b9\u5728\u6570\u7ec4\u91cc\u7684\u5e8f\u53f7 \n} \nvoid pushup(int i){//\u5411\u4e0a\u66f4\u65b0\u5b50\u6811\u5927\u5c0f \n    tr[i].size=tr[tr[i].l].size+tr[tr[i].r].size+1; \n}\n\nvoid pushdown(int x){\n    if(!tr[x].tag)return ;\n    swap(tr[x].l,tr[x].r);//\u65cb\u8f6c\u5b50\u6811\n    tr[tr[x].l].tag^=1;\n    tr[tr[x].r].tag^=1;//\u8003\u8651\u65cb\u8f6c\u7684\u6027\u8d28\u4f20\u9012tag,\u5373\u5947\u6570\u6b21\u7ffb\u8f6c-&gt;\u8981\u7ffb\u8f6c.\u5076\u6570\u6b21\u7ffb\u8f6c-&gt;\u4e0d\u9700\u8981\u7ffb\u8f6c\n    tr[x].tag=0;\n}\n//\u5206\u88c2 \u6839\u636ev\u5c06\u6811\u5212\u5206\u4e3a2\u4e2a\u5b50\u6811 \nvoid split(int i,int k,int &amp;x,int &amp;y){//i\u5f53\u524d\u8282\u70b9\uff0cv\u5212\u5206\u6570\u503c\uff0c \u8fd4\u56de\u65f6x\u4f1a\u6307\u5411\u5de6treap\u7684\u6839\uff0cy\u6307\u5411\u53f3treap\u7684\u6839\n    if(!i){//\u5230\u8fbe\u6811\u53f6 \n        x=y=0;return ;\n     }\n\n     pushdown(i);\n     if(tr[tr[i].l].size&lt;k){//\u5982\u679c\u8fd9\u4e2a\u70b9\u7684val&lt;=v,\u90a3\u4e48\u5b83\u7684\u5de6\u5b50\u6811\u4e00\u5b9a\u90fd&lt;=v,\u4f46\u662f\u53f3\u5b50\u6811\u7684root\u867d\u7136&gt;v,\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u5b83\u7684\u513f\u5b50\u4eec\u662f\u5426\u90fd&gt;v,\u6240\u4ee5\u9700\u8981\u9012\u5f52\u53f3\u5b50\u6811 \n        k-=tr[tr[i].l].size/\u8d70\u53f3\u5b50\u6811,\u90a3\u4e48\u5c31\u8981\u628a\u6392\u540d\u51cf\u53bb\u5de6\u5b50\u6811\u7684\u5927\u5c0f.\u8bb0\u5f97\u66f4\u65b0k\n         x=i;\n        split(tr[i].r,k,tr[i].r,y);//\u9012\u5f52\u5b9e\u73b0 \n     }else{\n        y=i;\n        split(tr[i].l,k,x,tr[i].l);\n     }\n    pushup(i);\n}\n//\u5408\u5e76 \u5206\u88c2\u7684\u9006\u8fc7\u7a0b.\u9012\u5f52\u7f1d\u54082\u4e2a\u5206\u88c2\u7684treap \nint merge(int x,int y){// x,y\u5206\u522b\u662f\u5de6\u53f3treap\u7684\u6839 \n    if(!x||!y){\n        return x+y;\n    } \n    if(tr[x].key&lt;tr[y].key){//\u5982\u679cx\u7684key&lt;y\u7684key,\u90a3\u4e48y\u5c31\u4f5c\u4e3ax\u7684\u5b50\u6811,\u4e14\u662f\u53f3\u5b50\u6811,\u9012\u5f52\u5408\u5e76x\u539f\u6765\u7684\u53f3\u5b50\u6811\u548cy\n         pushdown(x);\n        tr[x].r=merge(tr[x].r,y);\n        pushup(x);return x;\n    }else{\n        pushdown(y);\n        tr[y].l=merge(x,tr[y].l);\n        pushup(y);return y;\n    }\n}\nvoid insert(int v){\n    int x,y,z;\n    split(root,v,x,y);\n    z=addnode(v);\n    root=merge(merge(x,z),y);//\u76f8\u5f53\u4e8ez\u662f\u4e00\u4e2a1\u4e2a\u8282\u70b9\u7684\u6811,\u628a\u5b83\u5148\u548cx\u5408\u5e76(\u56e0\u4e3ax\u7684val\u5747&lt;=v,\u4fdd\u8bc1\u4e86\u5b83\u7684\u5927\u5c0f\u987a\u5e8f,\u81f3\u4e8e\u5b83\u4f1a\u88ab\u653e\u5728x\u7684\u6839\u6216\u8005\u5176\u4ed6\u5730\u65b9,\u51ed\u501fkey\u6765\u786e\u5b9a),\u518d\u548cy\u5408\u5e76 \n}\nvoid del(int v){\n    int x,y,z;//\u5c06\u6765\u4f1a\u5206\u522b\u6307\u54113\u68f5\u6811,\u4ed6\u4eec\u7684\u8282\u70b9val\u5206\u522b\u662f&lt;v,=v,&gt;v \n    split(root,v,x,z);//\u6b64\u65f6\u5206\u6210\u4e862\u68f5\u6811,x\u6307\u5411\u7684\u6811\u662f&lt;=v\u7684,y\u5219\u662f&gt;v\u7684 \n    split(x,v-1,x,y);//\u518d\u628ax\u5206\u62102\u68f5\u6811,\u628a&lt;v(x)\u7684\u548c=v(y)\u7684\u62ce\u51fa\u6765 \n    y=merge(tr[y].l,tr[y].r);//\u628ay\u53d8\u6210y\u7684\u5de6\u53f3\u5b50\u6811\u5408\u5e76,\u76f8\u5f53\u4e8e\u628a\u6839\u629b\u5f03\u4e86 \n    root=merge(merge(x,y),z);//\u91cd\u65b0\u5408\u5e76  \n} \nint getk(int i,int k){//\u83b7\u53d6\u4e2d\u5e8f\u6392\u5e8f\u7b2ck\u4e2a\u503c\u7684\u7f16\u53f7 \n    if(k&lt;=tr[tr[i].l].size)return getk(tr[i].l,k);//\u8bf4\u660e\u8981\u627e\u5230\u70b9\u5728\u5de6\u5b50\u6811,\u90a3\u4e48\u53bb\u5de6\u5b50\u6811\u627e\u7b2ck\u4e2a \n    if(k==tr[tr[i].l].size/\u627e\u5230\u4e86 \n    return getk(tr[i].r,k-tr[tr[i].l].size-1);//\u5426\u5219 \u8bf4\u660e\u8981\u627e\u5230\u70b9\u5728\u53f3\u5b50\u6811,\u90a3\u4e48\u53bb\u5de6\u5b50\u6811\u627e\u7b2c(k-size\u5de6\u5b50\u6811)\u4e2a(\u5de6\u5b50\u6811\u5df2\u7ecf\u6709size\u4e2a\u4e86,\u90a3\u4e48\u8981\u627e\u6574\u4e2a\u7684\u7b2ck\u4e2a,\u53ea\u8981\u627e\u53f3\u5b50\u6811\u7684\u7b2c(k-size\u5de6\u5b50\u6811)\u4e2a\u5373\u53ef) \n} \nint getpre(int v){//\u627e\u5230v\u7684\u524d\u9a71 (\u5373&lt;v\u7684\u6700\u5927\u7684\u90a3\u4e2a\u70b9)\n    int x,y;//x,y\u53ea\u662f\u6682\u65f6\u5b58\u653e\u4e00\u4e0b\u5288\u5f00\u76842\u4e2a\u5b50\u6811\u7684\u6839,\u540e\u9762\u8fd8\u8981\u5408\u5e76 \n    split(root,v-1,x,y);//\u5288\u5f00,\u53d8\u6210&lt;v(x)\u548c&gt;=v(y) 2\u4e2a\u6811 \n    int p=getk(x,tr[x].size);//\u5728\u5b50\u6811x\u91cc\u9762\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5c31\u662f &lt;v(x)\u7684\u6700\u5927\u7684\u90a3\u4e2a\u70b9\n    cout&lt;&lt;tr[p].val&lt;&lt;endl;\n    root=merge(x,y);//\u522b\u5fd8\u4e86\u5408\u5e76 \n}   \nint getsuc(int v){//\u627e\u5230v\u7684\u540e\u9a71 (\u5373&gt;v\u7684\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9)\n    int x,y;\n    split(root,v,x,y);//\u5288\u5f00,\u53d8\u6210&lt;=v(x)\u548c&gt;v(y) 2\u4e2a\u6811 \n    int p=getk(y,1);//\u5728\u5b50\u6811y\u91cc\u9762\u627e\u5230\u7b2c\u4e00\u4e2a\u5c31\u662f &gt;v(x)\u7684\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9\n    cout&lt;&lt;tr[p].val&lt;&lt;endl;//cout&lt;&lt;\"OK\";\n    root=merge(x,y);//\u522b\u5fd8\u4e86\u5408\u5e76 \n}   \nvoid getrank(int v){//\u67e5\u8be2val=v\u7684\u70b9\u7684\u6392\u540d(\u4ece\u5c0f\u5230\u5927) \u5982\u679c\u6709\u91cd\u590d\u7684val=v\u7684\u8282\u70b9\u53ea\u8ba1\u7b2c\u4e00\u4e2a,\u6392\u5e8f\u4e0d\u53bb\u91cd \n    int x,y;\n    split(root,v-1,x,y);//\u5288\u5f00,\u53d8\u6210&lt;v(x)\u548c&gt;=v(y) 2\u4e2a\u6811 \n    cout&lt;&lt;tr[x].size/\u5b50\u6811x\u7684\u5927\u5c0f\u5c31\u662fval=v\u7684\u70b9\u524d\u9762\u6709\u51e0\u4e2a\u70b9 \n    root=merge(x,y);\n}\nvoid getval(int k){//\u67e5\u8be2\u6392\u540d\u4e3ak\u7684\u8282\u70b9\u7684\u503c\n    int p=getk(root,k);\n    cout&lt;&lt;tr[p].val&lt;&lt;endl;\n\n}\n\nvoid oup(int x){\n    //\u4e2d\u5e8f\u904d\u5386\u6765\u8f93\u51fa\n    if(!x)return ;\n    pushdown(x);\n    oup(tr[x].l);\n    cout&lt;&lt;tr[x].val&lt;&lt;' ';\n    oup(tr[x].r);\n}\n\n\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n\n    for(int i=1;i&lt;=n;i++){\n        root=merge(root,addnode(i));\n    }\n    for(int i=1;i&lt;=m;i++){\n        int l,r;\n        int x,y,z;\n        cin&gt;&gt;l&gt;&gt;r;\n\n        split(root,r,x,z);//\u5206\u88c2\u4e3a[1,r][r+1,n],\u6839\u8282\u70b9\u5206\u522b\u4e3ax,z\n        split(x,l-1,x,y);//\u628a[1,r]\u5206\u88c2\u4e3a[1,l-1][l,r],\u6839\u8282\u70b9\u5206\u522b\u4e3ax,y\n        //\u90a3\u4e48\u73b0\u5728y\u5b50\u6811\u5c31\u662f[l,r]\u5566\n        tr[y].tag^=1;//\u6ce8\u610f\u4e0d\u662f=1\n        root=merge(merge(x,y),z);\n    }\n\n    oup(root);\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E6%A0%91/%E6%96%87%E8%89%BA%E5%B9%B3%E8%A1%A1%E6%A0%91/#_5","title":"\u53d8\u5f62\uff1a\u533a\u95f4\u4fee\u6539\u5e73\u8861\u6811","text":"<p>\u5199\u4e00\u4e2a\u652f\u6301\u533a\u95f4\u52a0\u7684\u5e73\u8861\u6811</p> <p>\u7ec3\u4e60 | \u8fd9\u4eba\u600e\u4e48\u5929\u5929\u5237\u9898\u554a' Hitchhiking in the Baltic States</p> <pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n\u6587\u827a\u5e73\u8861\u6811\u6539\n/*////////ACACACACACACAC///////////\n\nvoid pushdown(int x){\n    if(!tr[x].tag)return ;\n    tr[tr[x].l].val+=tr[x].tag;\n    tr[tr[x].r].val+=tr[x].tag;\n    tr[tr[x].l].tag+=tr[x].tag;\n    tr[tr[x].r].tag+=tr[x].tag;//\u8003\u8651\u65cb\u8f6c\u7684\u6027\u8d28\u4f20\u9012tag,\u5373\u5947\u6570\u6b21\u7ffb\u8f6c-&gt;\u8981\u7ffb\u8f6c.\u5076\u6570\u6b21\u7ffb\u8f6c-&gt;\u4e0d\u9700\u8981\u7ffb\u8f6c\n    tr[x].tag=0;\n}\nvoid changeadd(int l,int r,int v){\n    int x,y,z;\n\n    split(root,r,x,z);//\u5206\u88c2\u4e3a[1,r][r+1,n],\u6839\u8282\u70b9\u5206\u522b\u4e3ax,z\n    split(x,l-1,x,y);//\u628a[1,r]\u5206\u88c2\u4e3a[1,l-1][l,r],\u6839\u8282\u70b9\u5206\u522b\u4e3ax,y\n    //\u90a3\u4e48\u73b0\u5728y\u5b50\u6811\u5c31\u662f[l,r]\u5566\n    tr[y].tag+=v;\n    tr[y].val+=v;\n    root=merge(merge(x,y),z);\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/01%E7%BA%BF%E6%AE%B5%E6%A0%91/","title":"01\u7ebf\u6bb5\u6811","text":"<p>www.luogu.com.cn</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/01%E7%BA%BF%E6%AE%B5%E6%A0%91/#1-tjoi2009","title":"\u4f8b\u9898 #1 [TJOI2009] \u5f00\u5173","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u73b0\u6709 \\(n\\) \u76cf\u706f\u6392\u6210\u4e00\u6392\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u7f16\u53f7\u4e3a\uff1a\\(1\\)\uff0c\\(2\\)\uff0c\u2026\u2026\uff0c\\(n\\)\u3002\u7136\u540e\u4f9d\u6b21\u6267\u884c \\(m\\) \u9879\u64cd\u4f5c\u3002</p> <p>\u64cd\u4f5c\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ol> <li> <p>\u6307\u5b9a\u4e00\u4e2a\u533a\u95f4 \\([a,b]\\)\uff0c\u7136\u540e\u6539\u53d8\u7f16\u53f7\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u706f\u7684\u72b6\u6001\uff08\u628a\u5f00\u7740\u7684\u706f\u5173\u4e0a\uff0c\u5173\u7740\u7684\u706f\u6253\u5f00\uff09\uff1b</p> </li> <li> <p>\u6307\u5b9a\u4e00\u4e2a\u533a\u95f4 \\([a,b]\\)\uff0c\u8981\u6c42\u4f60\u8f93\u51fa\u8fd9\u4e2a\u533a\u95f4\u5185\u6709\u591a\u5c11\u76cf\u706f\u662f\u6253\u5f00\u7684\u3002</p> </li> </ol> <p>\u706f\u5728\u521d\u59cb\u65f6\u90fd\u662f\u5173\u7740\u7684\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6574\u6570 \\(n\\) \u548c \\(m\\)\uff0c\u5206\u522b\u8868\u793a\u706f\u7684\u6570\u76ee\u548c\u64cd\u4f5c\u7684\u6570\u76ee\u3002</p> <p>\u63a5\u4e0b\u6765\u6709 \\(m\\) \u884c\uff0c\u6bcf\u884c\u6709\u4e09\u4e2a\u6574\u6570\uff0c\u4f9d\u6b21\u4e3a\uff1a\\(c\\)\u3001\\(a\\)\u3001\\(b\\)\u3002\u5176\u4e2d \\(c\\) \u8868\u793a\u64cd\u4f5c\u7684\u79cd\u7c7b\u3002</p> <ul> <li> <p>\u5f53 \\(c\\) \u7684\u503c\u4e3a \\(0\\) \u65f6\uff0c\u8868\u793a\u662f\u7b2c\u4e00\u79cd\u64cd\u4f5c\u3002</p> </li> <li> <p>\u5f53 \\(c\\) \u7684\u503c\u4e3a \\(1\\) \u65f6\uff0c\u8868\u793a\u662f\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u3002</p> </li> </ul> <p>\\(a\\) \u548c \\(b\\) \u5219\u5206\u522b\u8868\u793a\u4e86\u64cd\u4f5c\u533a\u95f4\u7684\u5de6\u53f3\u8fb9\u754c\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u6bcf\u5f53\u9047\u5230\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u65f6\uff0c\u8f93\u51fa\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6b64\u65f6\u5728\u67e5\u8be2\u7684\u533a\u95f4\u4e2d\u6253\u5f00\u7684\u706f\u7684\u6570\u76ee\u3002</p> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1 \\(2\\le n\\le 10^5\\)\uff0c\\(1\\le m\\le 10^5\\)\uff0c\\(1\\le a,b\\le n\\)\uff0c\\(c\\in\\{0,1\\}\\)\u3002</p> <p>\u7ebf\u6bb5\u6811\u7ef4\u62a401\u7ffb\u8f6ctag\u3002</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=4e5+5;\nconst int M=5e4+5;\nconst int INF=2e18+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\nint m;\nint n,tr[N],tag[N];\n\nbool f2;\n\nvoid pushup(int x){\n    tr[x]=tr[x&lt;&lt;1]+tr[x&lt;&lt;1|1];\n}\nvoid addtag(int x,int l,int r){\n    tr[x]=r-l+1-tr[x];\n    tag[x]^=1;\n}\nvoid pushdown(int x,int l,int r){\n    int mid=l+r&gt;&gt;1;\n    if(!tag[x])return ;\n    addtag(x&lt;&lt;1,l,mid);\n    addtag(x&lt;&lt;1|1,mid+1,r);\n    tag[x]=0;\n}\nvoid change(int x,int l,int r,int pl,int pr){\n    if(l&gt;=pl&amp;&amp;r&lt;=pr){\n        addtag(x,l,r);\n//      cerr&lt;&lt;\"ck\";\n        return ;\n    }\n    pushdown(x,l,r);\n    int mid=l+r&gt;&gt;1;\n    if(pl&lt;=mid)change(x&lt;&lt;1,l,mid,pl,pr);\n    if(pr&gt;mid)change(x&lt;&lt;1|1,mid+1,r,pl,pr);\n    pushup(x);\n}\n\nint query(int x,int l,int r,int pl,int pr,int tg){\n    if(l&gt;=pl&amp;&amp;r&lt;=pr){\n        return tr[x];\n    }\n    pushdown(x,l,r);\n    int res=0;\n    int mid=l+r&gt;&gt;1;\n    if(pl&lt;=mid)res+=query(x&lt;&lt;1,l,mid,pl,pr,tg^tag[x]);\n    if(pr&gt;mid)res+=query(x&lt;&lt;1|1,mid+1,r,pl,pr,tg^tag[x]);\n    return res;\n}\nsigned main(){\n    n=rd,m=rd;\n    for(int i=1;i&lt;=m;i++){\n        int op=rd;\n        int a=rd,b=rd;\n        if(op){\n            cout&lt;&lt;query(1,1,n,a,b,0)&lt;&lt;endl;\n        }else{\n            change(1,1,n,a,b);\n        }\n    }\n    return 0;\n}\n/*\n\n\n*/\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%B8%BB%E5%B8%AD%E6%A0%91/","title":"\u4e3b\u5e2d\u6811","text":"<p>166 \u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\uff08\u4e3b\u5e2d\u6811\uff09_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u4e3b\u5e2d\u6811\u5168\u79f0\u662f\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811</p> <p>\u6ce8\u610f\uff1a\u5728\u67d0\u4e9b\u7a0b\u5ea6\u4e0a\uff0c\u4e3b\u5e2d\u6811\u2260\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811</p> <p>\u5b9a\u4e49\uff1a\u6743\u503c\u7ebf\u6bb5\u6811</p> <p>\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u662f\u533a\u95f4l<sub>r\u7684\u6700\u5927\u503c\u7b49\uff0c\u800c\u503c\u57df\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u662f\u5728\u533a\u95f41</sub>n\u4e2d\u5927\u5c0f\u5728[l,r]\u8303\u56f4\u5185\u7684\u6570\u7684\u4e2a\u6570</p> <p></p> <p>\u5b9a\u4e49\uff1a\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811</p> <p></p> <p>\u7b80\u5355\u505a\u6cd5\uff1a\u66b4\u529b\u5730\u6bcf\u6b21\u4fee\u6539\u90fd\u5f00\u4e00\u68f5\u65b0\u7684\u7ebf\u6bb5\u6811</p> <p></p> <p>\u8fd9\u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u6709\u4f18\u5316\u65b9\u6cd5</p> <p></p> <p>\u6ce8\u91ca\uff1a\u5806\u5f0f\u5b58\u50a8\u6cd5\u5373\u7236\u8282\u70b9\u4e3ai\uff0c\u5b50\u8282\u70b9\u4e3a\\(2 \\times i\\) \u548c \\(2\\times i+1\\)\u7684\u5b58\u50a8\u65b9\u6cd5</p> <p></p> <p>\u52a8\u6001\u5f00\u70b9\u89e3\u8bf4\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5e94\u8be5\u4fdd\u5b58\u5de6\u53f3\u513f\u5b50\u7684\u7f16\u53f7\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5386\u53f2\u7248\u672c\uff0c\u8fd8\u5e94\u8be5\u4fdd\u5b58\u6839\u8282\u70b9\u7684\u7f16\u53f7\u3002</p> <p>\u89e3\u8bf4\uff1a\u6bcf\u4e00\u6b21\u4fee\u6539\u4e00\u5b9a\u4f1a\u6539\u52a8\u6839\u8282\u70b9\uff0c\u56e0\u6b64\u6bcf\u4e00\u4e2a\u5386\u53f2\u7248\u672c\u7684\u6839\u8282\u70b9\u90fd\u4e0d\u540c\u3002\u4e5f\u5c31\u662f\u8bf4\u6839\u8282\u70b9\u662f\u6bcf\u4e00\u4e2a\u5386\u53f2\u7248\u672c\u7684\u5165\u53e3</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%B8%BB%E5%B8%AD%E6%A0%91/#_2","title":"\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811","text":"<p>\u7ed3\u6784</p> <pre><code>struct node{\n    int lc,rc,v;\n}tr[4*N];\n</code></pre> <p>\u5efa\u6811</p> <p></p> <pre><code>void build(int &amp;x,int l,int r){\n    x=++idx;\n    if(l==r)return;\n    build(tr[x].lc,l,l+r&gt;&gt;1);\n    build(tr[x].rc,(l+r&gt;&gt;1)+1,r);\n}\n</code></pre> <p>\u6ce8\u610f\uff0c\u5982\u679c\u6700\u5f00\u59cb\u7684\u72b6\u6001\u5c31i\u662f\u4e00\u68f5\u7a7a\u6811\uff0c\u540e\u9762\u624d\u6162\u6162\u628a\u6570\u5b57\u63d2\u5165\u8fdb\u6765\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u5199build</p> <p>\u63d2\u5165</p> <p></p> <pre><code>void insert(int pre,int &amp;now,int l,int r,int v){\n    now=+/\u52a8\u6001\u5f00\u70b9.\u65b0\u63d2\u5165\u4e00\u4e2a\u70b9 \u4e3a\u4e86\u53ef\u4ee5\u65b9\u4fbf\u7684\u7528\u8fd9\u4e2anow\u66f4\u65b0\u4e0a\u4e00\u4e2a\u51fd\u6570\u7a7a\u95f4\u7684tr[now].lc(\u6216rc),\u6211\u4eec\u5c31\u5f15\u7528\u4e00\u4e0b\n    tr[now]=tr[pre];//\u590d\u5236\u65e7\u70b9\u7684\u4fe1\u606f\n    tr[now].v++;//\u70b9\u6743+1,\u56e0\u4e3a\u63d2\u5165\u7684\u6811\u5728now\u7684\u533a\u95f4\u5185\n    if(l==r)return;\n    int mid=l+r&gt;&gt;1;\n    if(v&lt;=mid)insert(tr[pre].lc,tr[now].lc,l,mid,v);\n    else insert(tr[pre].rc,tr[now].rc,mid+1,r,v);\n}\n</code></pre> <p>pre\u6307\u7684\u662f\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u70b9\u7684\u7f16\u53f7\uff0cnow\u6307\u7684\u662f\u65b0\u7684\u7f16\u53f7\uff08\u4f1a\u52a8\u6001\u5f00\u70b9\uff0c\u4f20\u5165\u7684\u4e00\u4e2a\u662f\u7a7a\uff0c\u7136\u540e\u5728\u51fd\u6570\u4e2d\u4f1a\u5bf9\u5176\u8fdb\u884c\u8d4b\u503c\uff09</p> <p>\u5982\u679c\u8981\u63d2\u5165\u4e00\u4e2a\u70b9\uff0c\u8bf7\u5199</p> <pre><code>insert(rt[i-1],rt[i],1,n,v);//rt\u8bb0\u5f55\u7b2ci\u4e2a\u7248\u672c\u7684\u6839\u8282\u70b9,v\u662f\u8981\u63d2\u5165\u7684\u503c\n</code></pre> <p>\u67e5\u8be2</p> <p></p> <p>\u5982\u56fe\uff0c\u5047\u8bbe\u6211\u4eec\u5728\u7a7a\u6811\u4e0a\u63d2\u5165\u4e868\u4e2a\u6570\uff0c\u73b0\u5728\u6211\u8981\u67e5\u8be2\u63d2\u5165\u7b2c6\u4e2a\u6570\u65f6\u7684\u7b2c5\u5c0f\u7684\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u4ecert[6]\u8fdb\u5165\u7b2c6\u4e2a\u7248\u672c\u7684\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u4e8c\u5206</p> <p>\u4e8c\u5206\u65b9\u6cd5\uff1a\u6211\u4eec\u5148\u5230\u6839\u8282\u70b9\uff0c\u53d1\u73b0\u5de6\u5b50\u6811\u5728[1,2]\u67094\u4e2a\u6570\uff0c\u90a3\u4e48\u7b2c5\u4e2a\u6570\u5c31\u5728\u53f3\u5b50\u6811\u3002\u8fdb\u5165\u53f3\u5b50\u6811\uff0c\u5c06\u76ee\u68075\u51cf\u53bb\u6839\u8282\u70b9\u5de6\u5b50\u6811\u7684\u5927\u5c0f4\u5f971\uff0c\u7136\u540e\u770b\u73b0\u5728\u7684\u5de6\u5b50\u6811\u5927\u5c0f\uff0c\u4e3a1\uff0c\u90a3\u4e48\u5c31\u8fdb\u5165\u5de6\u5b50\u6811\u3002\u7ee7\u7eed\u4e8c\u5206\u4e0b\u53bb\u76f4\u5230l==r\uff0c\u6b64\u65f6l\u5c31\u662f\u7b54\u6848</p> <p></p> <p>\u6269\u5c55</p> <p></p> <pre><code>query(int pre,int now,int l,int r,int k){//\u67e5\u8be2\u533a\u95f4l~r\u4e2d\u7b2ck\u5927\u7684\u6570\n    if(l==r)return l;\n    int mid=l+r&gt;&gt;1;\n    int s=tr[tr[now].lc].v-tr[tr[pre].lc].v;//note\n    if(k&lt;=s)return query(tr[pre].lc,tr[now].lc,l,mid,k);\n    return query(tr[pre].rc,tr[now].rc,mid+1,r,k);\n}\n</code></pre> <p>\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u8fd9\u4e00\u884c\u4ee3\u7801</p> <pre><code>    int s=tr[tr[now].lc].v-tr[tr[pre].lc].s;//note\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u5462\uff1f\u6211\u4eec\u7ed3\u5408\u4e00\u4e2a\u4f8b\u5b50\uff08\u5bfc\u5e08\u306e\u4f1f\u5927\u6837\u4f8b\uff09</p> <p></p> <p>\u6211\u4eec\u67e5\u8be2\u4e0b\u68073~6\u4e4b\u95f4\u7b2c4\u5927\u7684\u6570\uff08\u5f88\u660e\u663e\u662f3\u5bf9\u5427\uff09</p> <p></p> <p>\u5f53\u6211\u4eec\u51fd\u6570\u8d70\u5230\u6839\u8282\u70b9\u65f6\uff0ctr[tr[pre].lc].v\u4ee3\u8868\u4e86i=2\u65f61<sub>2\u503c\u57df\u5185\u6570\u5b57\u7684\u4e2a\u6570\uff0ctr[tr[now].lc].v\u4ee3\u8868\u4e86i=6\u65f61</sub>2\u503c\u57df\u5185\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u5c06\u5b83\u4eec\u505a\u5dee\u540e\uff0c\u5c31\u5f97\u5230\u4e86\u4e0b\u68072+1=3<sub>6\u8303\u56f4\u5185\u503c\u57df1</sub>2\u7684\u6570\u7684\u4e2a\u6570\u5566\uff01\uff08\u524d\u7f00\u548c\u601d\u60f3\uff09</p> <p></p> <pre><code>query(int pre,int now,int l,int r,int k){//\u67e5\u8be2\u533a\u95f4l~r\u4e2d\u7b2ck\u5927\u7684\u6570\n    if(l==r)return l;\n    int mid=l+r&gt;&gt;1;\n    int s=tr[tr[now].lc].v-tr[tr[pre].lc].v;//note\n    if(k&lt;=s)return query(tr[pre].lc,tr[now].lc,l,mid,k);\n    return query(tr[pre].rc,tr[now].rc,mid/\u6ce8\u610f\u662fk-s,\u56e0\u4e3a\u5de6\u5b50\u6811\u5df2\u7ecf\u6709s\u4e2a\u4e86,\u6240\u4ee5\u53ea\u8981\u5728\u53f3\u5b50\u6811\u627e\u7b2ck-s\u4e2a\u5373\u53ef\n}\n</code></pre> <p>\u6ce8\u610f</p> <p>\u5728\u503c\u57df\u7ebf\u6bb5\u6811\u4e2d\uff0c\u8282\u70b9\u7684[l,r]\u6307\u7684\u662f\u6570\u5b57\u5927\u5c0f\u5728l<sub>r\u4e4b\u95f4\u7684\u6570\u5b57\u7684\u4e2a\u6570\uff0c\u9664\u975e\u4f7f\u7528\u4e3b\u5e2d\u6811\uff0c\u5426\u5219\u7ef4\u62a4\u7684\u90fd\u662f1</sub>n\u7684\u533a\u95f4\uff0c\u4e0d\u80fd\u6c42\u51fa\u7279\u70b9\u5b50\u533a\u95f4\u7684\u95ee\u9898\u3002</p> <p>\u8fd8\u6709\u5c31\u662f\uff0c\u4e00\u822c\u9898\u76ee\u4e2d\u7684\u503c\u57df\u53ef\u80fd\u8f83\u5927\uff0c\u800c\u6570\u5b57\u6570\u91cf\u4e0d\u591a\uff0c\u6240\u4ee5\u9700\u8981\u79bb\u6563\u5316</p> <p></p> <p>\u79bb\u6563\u5316\u7684\u4ee3\u7801\u5c31\u4e0d\u5199\u4e86\uff0c\u8d34\u8d34~\uff08\u60f3\u548cChargcy\u8d34\u8d34...\uff09\uff08bushi\uff0c\u8d34\u56fe\u7247</p> <p></p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%B8%BB%E5%B8%AD%E6%A0%91/#_3","title":"\u6a21\u677f","text":"<p>www.luogu.com.cn</p> <p>\u5982\u9898\uff0c\u4f60\u9700\u8981\u7ef4\u62a4\u8fd9\u6837\u7684\u4e00\u4e2a\u957f\u5ea6\u4e3a N \u7684\u6570\u7ec4\uff0c\u652f\u6301\u5982\u4e0b\u51e0\u79cd\u64cd\u4f5c</p> <ol> <li> <p>\u5728\u67d0\u4e2a\u5386\u53f2\u7248\u672c\u4e0a\u4fee\u6539\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u503c</p> </li> <li> <p>\u8bbf\u95ee\u67d0\u4e2a\u5386\u53f2\u7248\u672c\u4e0a\u7684\u67d0\u4e00\u4f4d\u7f6e\u7684\u503c</p> </li> </ol> <p>\u89c1\u4e0b\u65b9\uff1a\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\uff08\u6570\u7ec4\uff09</p> <p>www.luogu.com.cn</p> <p>\u8fd9\u662f\u4e2a\u975e\u5e38\u7ecf\u5178\u7684\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\u5165\u95e8\u9898\u2014\u2014\u9759\u6001\u533a\u95f4\u7b2c \\(k\\) \u5c0f\u3002</p> <p>\u6570\u636e\u5df2\u7ecf\u8fc7\u52a0\u5f3a\uff0c\u8bf7\u4f7f\u7528\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u540c\u65f6\u8bf7\u6ce8\u610f\u5e38\u6570\u4f18\u5316\u3002</p> <p>\u5982\u9898\uff0c\u7ed9\u5b9a \\(n\\) \u4e2a\u6574\u6570\u6784\u6210\u7684\u5e8f\u5217 \\(a\\)\uff0c\u5c06\u5bf9\u4e8e\u6307\u5b9a\u7684\u95ed\u533a\u95f4 \\([l, r]\\) \u67e5\u8be2\u5176\u533a\u95f4\u5185\u7684\u7b2c \\(k\\) \u5c0f\u503c\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\u8868\u793a\u7b54\u6848\u3002</p> <ul> <li>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u6ee1\u8db3 \\(1 \\leq n,m \\leq 2\\times 10^5\\)\uff0c\\(|a_i| \\leq 10^9\\)\uff0c\\(1 \\leq l \\leq r \\leq n\\)\uff0c\\(1 \\leq k \\leq r - l + 1\\)\u3002</li> </ul> <pre><code>/*\nCB Ntsc\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n\nconst int N = 1e6 + 5;\nconst int INF = 1e9 + 5;\nconst int MOD = 1e9 + 7;\nbool f1;\nint top[N], fa[N], a[N], rt[N];\nint q, n, m, ans, idx, T;\nvector&lt;int&gt; b;\nbool f2;\n\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\nstruct node{\n    int lc,rc,v;\n}tr[4*N];\n\nvoid build(int &amp;x,int l,int r){\n    x=++idx;\n    if(l==r)return;\n    build(tr[x].lc,l,l+r&gt;&gt;1);\n    build(tr[x].rc,(l+r&gt;&gt;1)+1,r);\n}\n\nvoid insert(int pre,int &amp;now,int l,int r,int v){\n    now=+/\u52a8\u6001\u5f00\u70b9.\u65b0\u63d2\u5165\u4e00\u4e2a\u70b9 \u4e3a\u4e86\u53ef\u4ee5\u65b9\u4fbf\u7684\u7528\u8fd9\u4e2anow\u66f4\u65b0\u4e0a\u4e00\u4e2a\u51fd\u6570\u7a7a\u95f4\u7684tr[now].lc(\u6216rc),\u6211\u4eec\u5c31\u5f15\u7528\u4e00\u4e0b\n    tr[now]=tr[pre];//\u590d\u5236\u65e7\u70b9\u7684\u4fe1\u606f\n    tr[now].v++;//\u70b9\u6743+1,\u56e0\u4e3a\u63d2\u5165\u7684\u6811\u5728now\u7684\u533a\u95f4\u5185\n    if(l==r)return;\n    int mid=l+r&gt;&gt;1;\n    if(v&lt;=mid)insert(tr[pre].lc,tr[now].lc,l,mid,v);\n    else insert(tr[pre].rc,tr[now].rc,mid+1,r,v);\n}\n\nint query(int pre,int now,int l,int r,int k){//\u67e5\u8be2\u533a\u95f4l~r\u4e2d\u7b2ck\u5927\u7684\u6570\n    if(l==r)return l;\n    int mid=l+r&gt;&gt;1;\n    int s=tr[tr[now].lc].v-tr[tr[pre].lc].v;//note\n    if(k&lt;=s)return query(tr[pre].lc,tr[now].lc,l,mid,k);\n    return query(tr[pre].rc,tr[now].rc,mid/\u6ce8\u610f\u662fk-s,\u56e0\u4e3a\u5de6\u5b50\u6811\u5df2\u7ecf\u6709s\u4e2a\u4e86,\u6240\u4ee5\u53ea\u8981\u5728\u53f3\u5b50\u6811\u627e\u7b2ck-s\u4e2a\u5373\u53ef\n}\n\nsigned main() {\n    // freopen(\"chfran.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n    n=rd;m=rd;\n    for(int i=1;i&lt;=n;i++){\n        a[i]=rd;\n        b.push_back(a[i]);\n    }\n    sort(b.begin(),b.end());\n    b.erase(unique(b.begin(),b.end()),b.end());\n\n    int len=b.size();\n\n    build(rt[0],1,len);\n    for(int i=1;i&lt;=n;i++){\n        int id=lower_bound(b.begin(),b.end(),a[i])-b.begin()+1;\n        insert(rt[i-1],rt[i],1,len,id);\n    }\n    while(m--){\n        int l=rd,r=rd,k=rd;\n        int id=query(rt[l-1],rt[r],1,len,k)-1;\n        printf(\"%lld\\n\",b[id]);\n    }\n\n\n}\n\n/*\n1\n2 5 1 \n0 0 1 \n0 0 4 \n\n*/\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%B8%BB%E5%B8%AD%E6%A0%91/#noip","title":"NOIP\u771f\u9898","text":"<p>www.luogu.com.cn</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>HH \u6709\u4e00\u4e32\u7531\u8d1d\u58f3\u7ec4\u6210\u7684\u9879\u94fe\u3002</p> <p>\u4ed6\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u67d0\u4e00\u6bb5\u8d1d\u58f3\u4e2d\uff0c\u5305\u542b\u4e86\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u8d1d\u58f3\uff1f</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570 \\(n\\)\uff0c\u8868\u793a\u9879\u94fe\u957f\u5ea6\u3002 \u7b2c\u4e8c\u884c \\(n\\) \u4e2a\u6b63\u6574\u6570 \\(a_i\\)\uff0c\u8868\u793a\u9879\u94fe\u4e2d\u7b2c \\(i\\) \u4e2a\u8d1d\u58f3\u7684\u79cd\u7c7b\u3002</p> <p>\u7b2c\u4e09\u884c\u4e00\u4e2a\u6574\u6570 \\(m\\)\uff0c\u8868\u793a HH \u8be2\u95ee\u7684\u4e2a\u6570\u3002 \u63a5\u4e0b\u6765 \\(m\\) \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 \\(l,r\\)\uff0c\u8868\u793a\u8be2\u95ee\u7684\u533a\u95f4\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa \\(m\\) \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u4f9d\u6b21\u8868\u793a\u8be2\u95ee\u5bf9\u5e94\u7684\u7b54\u6848\u3002</p> <p>\u3010\u6570\u636e\u8303\u56f4\u3011</p> <p>\u5bf9\u4e8e \\(20\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m\\leq 5000\\)\uff1b \u5bf9\u4e8e \\(40\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m\\leq 10^5\\)\uff1b \u5bf9\u4e8e \\(60\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m\\leq 5\\times 10^5\\)\uff1b \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m,a_i \\leq 10^6\\)\uff0c\\(1\\le l \\le r \\le n\\)\u3002</p> <p>\u672c\u9898\u53ef\u80fd\u9700\u8981\u8f83\u5feb\u7684\u8bfb\u5165\u65b9\u5f0f\uff0c\u6700\u5927\u6570\u636e\u70b9\u8bfb\u5165\u6570\u636e\u7ea6 20MB</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%B8%BB%E5%B8%AD%E6%A0%91/#_4","title":"\u533a\u95f4\u4e8c\u7ef4\u4fe1\u606f\u7edf\u8ba1 | \u6570\u989c\u8272","text":"<p>\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u5165\u6570\u636e\u3002 \u8f93\u5165\u7b2c 1 \u884c\u4e24\u4e2a\u6b63\u6574\u6570 \\(n\\),\\(m\\)\u3002</p> <p>\u8f93\u5165\u7b2c 2 \u884c \\(n\\) \u4e2a\u6b63\u6574\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6570\u8868\u793a\u7b2c \\(i\\) \u53ea\u5154\u5b50\u7684\u989c\u8272 \\(a_i\\)\u3002</p> <p>\u8f93\u5165\u63a5\u4e0b\u6765 \\(m\\) \u884c\uff0c\u6bcf\u884c\u4e3a\u4ee5\u4e0b\u4e24\u79cd\u4e2d\u7684\u4e00\u79cd\uff1a</p> <ul> <li> <p>\u201c\\(1\\ l_j\\ r_j\\ c_j\\)\u201d \uff1a\u8be2\u95ee\u5728\u533a\u95f4 \\([l_j,r_j]\\) \u91cc\u6709\u591a\u5c11\u53ea\u989c\u8272\u4e3a \\(c_j\\) \u7684\u5154\u5b50\uff1b</p> </li> <li> <p>\u201c\\(2\\ x_j\\)\u201d\uff1a \\(x_j\\) \u548c \\(x_j+1\\) \u4e24\u53ea\u5154\u5b50\u4ea4\u6362\u4e86\u4f4d\u7f6e\u3002</p> </li> </ul> <p>\u6570\u636e\u8303\u56f4\u5747\u4e3a3e5</p> <p>\u6211\u4eec\u7528vector+\u4e8c\u5206\u5373\u53ef\u3002vector[i]\u4e2d\u8bb0\u5f55\u989c\u8272i\u7684\u70b9\u7684\u4e0b\u6807\u4ece\u5c0f\u5230\u5927\u3002\u6bcf\u6b21\u5728vector[\\(c_j\\)]\u4e2d\u4e8c\u5206\u67e5\u627e\u503c\u5728\\([l_j,r_j]\\)\u8303\u56f4\u5185\u7684\u4e0a\u4e0b\u754c\u5373\u53ef\u3002\u4fee\u6539\u65f6\u4e8c\u5206\u5b9a\u4f4d\u5230vector[\\(col_{x}\\)]\u548cvector[\\(col_{x+1}\\)]\u7684\u4f4d\u7f6e\u4fee\u6539\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%B8%BB%E5%B8%AD%E6%A0%91/#_5","title":"\u5e26\u4fee\u4e3b\u5e2d\u6811","text":"<p>\u6211\u4eec\u6ce8\u610f\u5230\u5982\u679c\u628a\u4e3b\u5e2d\u6811\u6309\u5176\u6839\u6765\u4ee3\u8868\uff0c\u90a3\u4e48\u5176\u5b9e\u5b83\u662f\u4e00\u4e2a\u7ebf\u6027\u7ed3\u6784\uff0c\u4e14\u6ee1\u8db3\u7c7b\u4f3c\u524d\u7f00\u548c\u7684\u6027\u8d28\u3002\u6240\u4ee5\u6211\u4eec\u8981\u4fee\u6539\uff0c\u5c31\u9700\u8981\u4fee\u6539\u4e00\u8fde\u4e32\u540e\u7f00\u7684\u503c\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u628a\u4e3b\u5e2d\u6811\u7684\u6839\u6302\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u4fee\u6539\u65f6\u53ea\u9700\u8981\u4fee\u6539\\(\\log n\\)\u68f5\u6811\u5373\u53ef\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%B8%BB%E5%B8%AD%E6%A0%91/#dynamic-rankings","title":"Dynamic Rankings","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709 \\(n\\) \u4e2a\u6570\u7684\u5e8f\u5217 \\(a_1,a_2 \\dots a_n\\)\uff0c\u9700\u8981\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li> <p><code>Q l r k</code> \u8868\u793a\u67e5\u8be2\u4e0b\u6807\u5728\u533a\u95f4 \\([l,r]\\) \u4e2d\u7684\u7b2c \\(k\\) \u5c0f\u7684\u6570</p> </li> <li> <p><code>C x y</code> \u8868\u793a\u5c06 \\(a_x\\) \u6539\u4e3a \\(y\\)</p> </li> </ul> <p>\u5bf9\u4e8e \\(10\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m \\le 100\\)\uff1b \u5bf9\u4e8e \\(20\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m \\le 1000\\)\uff1b \u5bf9\u4e8e \\(50\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m \\le 10^4\\)\uff1b \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m \\le 10^5\\)\uff0c\\(1 \\le l \\le r \\le n\\)\uff0c\\(1 \\le k \\le r-l+1\\)\uff0c\\(1\\le x \\le n\\)\uff0c\\(0 \\le a_i,y \\le 10^9\\)\u3002</p> <p>\u8bf7\u6ce8\u610f\u5e38\u6570\u4f18\u5316\uff0c\u4f46\u5199\u6cd5\u6b63\u5e38\u7684\u6574\u4f53\u4e8c\u5206\u548c\u6811\u5957\u6811\u90fd\u53ef\u4ee5\u4ee5\u5927\u7ea6 \\(1000\\text{ms}\\) \u6bcf\u4e2a\u70b9\u7684\u65f6\u95f4\u901a\u8fc7\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%B8%BB%E5%B8%AD%E6%A0%91/#_6","title":"\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811","text":"<p>\u6211\u4eec\u53d1\u73b0\uff0c\u4e3b\u5e2d\u6811\uff08\u6216\u8005\u8bf4\u4e3b\u5e2d\u6811\u5728\u6c42\u533a\u95f4k\u5927\u503c\u65f6\uff09\u662f\u6ee1\u8db3\u524d\u7f00\u548c\u6027\u8d28\u7684\uff0c\u5373\u4e3a\u4e86\u6c42\u51fa[l,r]\u4e2d\u5728\u67d0\u4e2a\u503c\u57df\u5185\u7684\u6570\u5b57\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u7528r\u7248\u672c\u7684\u7ebf\u6bb5\u6811\u4fe1\u606f\u51cf\u53bbl-1\u7248\u672c\u7684\u7ebf\u6bb5\u6811\u4fe1\u606f\u5f97\u5230\u7684\u3002</p> <p>\u73b0\u5728\u8003\u8651\u4fee\u6539\uff0c\u82e5\u6211\u4eec\u8981\u4fee\u6539\u4f4d\u7f6ex\u4e0a\u7684\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u66b4\u529b\u7684\u5199\u6cd5\u662f\u8981\u4fee\u6539\u5728[x,r]\u4e0a\u7684\u6240\u6709\u70b9\u3002\u5b9e\u9645\u4e0a\u5c31\u662f\u4fee\u6539\u4e00\u6574\u4e2a\u540e\u7f00\u3002</p> <p>\u8fd9\u5c31\u50cf\u6781\u4e86\u66b4\u529b\u4fee\u6539\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u5b57\u3002\u4e8e\u662f\u4e3a\u4e86\u4f18\u5316\u8fd9\u4e2a\u6d41\u7a0b\uff0c\u9996\u5148\u6211\u4eec\u8ba4\u8bc6\u5230\u539f\u6765\u7684\u4e3b\u5e2d\u6811\u7684rt[]\u662f\u7ebf\u6027\u7ed3\u6784\uff0c\u4e3a\u4e86\u5feb\u6377\u7684\u533a\u95f4\u4fee\u6539\uff0c\u6211\u4eec\u76f8\u6bd4\u5e94\u8be5\u4f7f\u7528\u6811\u72b6\u7ed3\u6784\u3002\u6240\u4ee5\u6211\u4eec\u628art[]\u6784\u5efa\u4e3a\u4e00\u9897\u7ebf\u6bb5\u6811/\u6811\u72b6\u6570\u7ec4\uff0c\u5373\u6211\u4eec\u628art[]\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u653e\u5230\u7ebf\u6bb5\u6811/\u6811\u72b6\u6570\u7ec4\u4e0a\u53bb\u3002</p> <p>\u90a3\u4e48\u73b0\u5728\u6839\u636ert[]\u7684\u6570\u636e\u7ed3\u6784\u7684\u6539\u53d8\uff0crt[]\u8bb0\u5f55\u7684\u4fe1\u606f\u4e5f\u8981\u505a\u51fa\u6539\u53d8\u3002\u4ee5\u6811\u72b6\u6570\u7ec4\u4e3a\u4f8b\uff1a</p> <ul> <li> <p>rt_2\u8bb0\u5f55\u7684\u662f\u52a0\u5165\u4e86[1,2]\u7684\u6570\u5b57\u7684\u6743\u503c\u7ebf\u6bb5\u6811</p> </li> <li> <p>rt_3\u8bb0\u5f55\u7684\u662f\u52a0\u5165\u4e86[3,3]\u7684\u6570\u5b57\u7684\u6743\u503c\u7ebf\u6bb5\u6811</p> </li> <li> <p>rt_4\u8bb0\u5f55\u7684\u662f\u52a0\u5165\u4e86[1,4]\u7684\u6570\u5b57\u7684\u6743\u503c\u7ebf\u6bb5\u6811</p> </li> <li> <p>rt_5\u8bb0\u5f55\u7684\u662f\u52a0\u5165\u4e86[5,5]\u7684\u6570\u5b57\u7684\u6743\u503c\u7ebf\u6bb5\u6811</p> </li> <li> <p>...</p> </li> </ul> <p>\u73b0\u5728\uff0c\u6211\u4eec\u8981\u5728\u4f4d\u7f6ex\u4e0a\u505a\u4fee\u6539\uff0c\u524d\u9762\u4e5f\u8bf4\u4e86\u5176\u5b9e\u5c31\u662f\u4fee\u6539\u540e\u7f00\u3002\u5012\u8fc7\u6765\uff0c\u5176\u5b9e\u5c31\u662f\u4fee\u6539\u524d\u7f00\u3002\u90a3\u4e48\u4fee\u6539\u524d\u7f00\u7b80\u5355\u554a\uff01\u4e0d\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u561b\uff01\u6240\u4ee5\u8981\u5728\u4f4d\u7f6ex\u4e0a\u505a\u4fee\u6539\uff0c\u6211\u4eec\u5c31\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u4fee\u6539\\log\u7ea7\u522b\u7684rt[]\u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\\log\u68f5\u7ebf\u6bb5\u6811\u7684\u4fe1\u606f\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u51cf\u5c11\u4e3aO(n\\log^2 n)</p> <p>\u67e5\u8be2\u65f6\uff0c\u4f9d\u65e7\u662fR\u4f4d\u7f6e\u51cf\u53bbL-1\u4f4d\u7f6e\uff0c\u8fd9\u65f6\u5019\u4e0d\u518d\u662f\u4e24\u68f5\u7ebf\u6bb5\u6811\u4f5c\u5dee\uff0c\u800c\u662flog\u68f5\u7ebf\u6bb5\u6811\u4e0elog\u68f5\u7ebf\u6bb5\u6811\u4f5c\u5dee\uff1b\u8df3\u7684\u65f6\u5019\uff0clog\u4e2a\u8282\u70b9\u4e00\u8d77\u8df3\u5230\u5de6\u5b50\u6811/\u53f3\u5b50\u6811</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%B8%BB%E5%B8%AD%E6%A0%91/#_7","title":"\u6a21\u677f","text":"<pre><code>/*\nCB Ntsc111\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define ull unsigned int\n#define pii pair&lt;int, int&gt;\n#define pf to\n#define ps second\n#define int long long\n\n#define err cerr &lt;&lt; \"Error\"\n#define rd read()\n\n#define ot write\n#define nl putchar('\\n')\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int N = 10005;\nstruct segment_tree {\n  int v;\n  int ls, rs;\n} t[N * 400]; // \u7ebf\u6bb5\u6811\u5f00n log n\u5927\u5c0f\nstruct operation {\n  bool b;\n  int l, r, k;\n  int pos, t;\n} q[N]; // \u79bb\u7ebf\nint n, m, a[N], o[N &lt;&lt; 1], rt[N], len, tot, temp[2][20], cnt[2];\nchar opt;\nvoid change(int &amp;now, int l, int r, int pos, int val) {\n  if (!now)\n    now = ++tot;\n  t[now].v += val;\n  if (l == r)\n    return;\n  int mid = (l + r) &gt;&gt; 1;\n  if (pos &lt;= mid)\n    change(t[now].ls, l, mid, pos, val);\n  else\n    change(t[now].rs, mid + 1, r, pos, val);\n}\nvoid Modify(int x, int val) {\n  int k = lower_bound(o + 1, o + len + 1, a[x]) - o;\n  for (int i = x; i &lt;= n; i += i &amp; -i)\n    change(rt[i], 1, len, k, val); // \u5904\u7406\u51fa\u9700\u8981\u4fee\u6539\u54ealog\u68f5\u4e3b\u5e2d\u6811\n}\nint query(int l, int r, int k) {\n  if (l == r)\n    return l;\n  int mid = (l + r) &gt;&gt; 1, sum = 0;\n  for (int i = 1; i &lt;= cnt[1]; i++)\n    sum += t[t[temp[1][i]].ls].v;\n  for (int i = 1; i &lt;= cnt[0]; i++)\n    sum -= t[t[temp[0][i]].ls].v;\n  if (k &lt;= sum) {\n    for (int i = 1; i &lt;= cnt[1]; i++)\n      temp[1][i] = t[temp[1][i]].ls;\n    for (int i = 1; i &lt;= cnt[0]; i++)\n      temp[0][i] = t[temp[0][i]].ls;\n    return query(l, mid, k);\n  } else {\n    for (int i = 1; i &lt;= cnt[1]; i++)\n      temp[1][i] = t[temp[1][i]].rs;\n    for (int i = 1; i &lt;= cnt[0]; i++)\n      temp[0][i] = t[temp[0][i]].rs;\n    return query(mid + 1, r, k - sum);\n  }\n}\nint Query(int l, int r, int k) {\n  memset(temp, 0, sizeof(temp));\n  cnt[0] = cnt[1] = 0;\n  for (int i = r; i; i -= i &amp; -i)\n    temp[1][++cnt[1]] = rt[i];\n  for (int i = l - 1; i; i -= i &amp; -i)\n    temp[0][++cnt[0]] = rt[i];\n  return query(1, len, k);\n}\nsigned main() {\n  n = rd, m = rd;\n  for (int i = 1; i &lt;= n; i++)\n    a[i] = rd, o[++len] = a[i];\n  for (int i = 1; i &lt;= m; i++) {\n    cin &gt;&gt; opt;\n    q[i].b = (opt == 'Q');\n    if (q[i].b)\n      q[i].l = rd, q[i].r = rd, q[i].k = rd;\n    else\n      q[i].pos = rd, q[i].t = rd, o[++len] = q[i].t;\n  }\n  sort(o + 1, o + len + 1);\n  len = unique(o + 1, o + len + 1) - o - 1;\n  for (int i = 1; i &lt;= n; i++)\n    Modify(i, 1);\n  for (int i = 1; i &lt;= m; i++) {\n    if (q[i].b)\n      printf(\"%lld\\n\", o[Query(q[i].l, q[i].r, q[i].k)]);\n    else {\n      Modify(q[i].pos, -1);\n      a[q[i].pos] = q[i].t;\n      Modify(q[i].pos, 1);\n    }\n  }\n  return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/","title":"\u4e8c\u7ef4\u7ebf\u6bb5\u6811","text":"<p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | \u4e8c\u7ef4\u7ebf\u6bb5\u6811&amp;\u6811\u72b6\u6570\u7ec4</p> <p>01\u7ebf\u6bb5\u6811</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#_1","title":"\u4e8c\u7ef4\u4fe1\u606f\u7ef4\u62a4","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#_2","title":"\u4e8c\u7ef4\u7ebf\u6bb5\u6811","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u7ef4\u62a4\u591a\u7ef4\u5ea6\u5b66\u4e60\u7684\u6570\u636e\u7ed3\u6784\u3002\u5982\u679c\u6ca1\u6709\u8f7b\u8d28\u5728\u7ebf\u7684\u8981\u6c42\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528CDQ\u5206\u6cbb\u6765\u4ee3\u66ff\u3002\u6216\u8005\u5916\u9762\u4e5f\u53ef\u4ee5\u4f7f\u7528K-D\u6811\u6765\u7ef4\u62a4\u3002</p> <p>\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u2014\u2014\u6211\u4eec\u5728\u4e3b\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\u90fd\u5efa\u7acb\u4e00\u4e2a\u5b50\u7ebf\u6bb5\u6811\u3002\u6211\u4eec\u8003\u8651\u4e0b\u9762\u7684\u95ee\u9898</p> <p>\u7ed9\u5b9a\u4e00\u4e2a n\u00d7m \u7684\u77e9\u9635\uff0c\u521d\u59cb\u65f6\u5143\u7d20\u5747\u4e3a 0\uff0c\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e0b\u64cd\u4f5c\uff1a</p> <pre><code>1. `1 x y k`\uff0c\u5c06\u77e9\u9635\u4e2d (x,y) \u4f4d\u7f6e\u7684\u5143\u7d20\u52a0\u4e0a k\u3002\n\n2. `2 x1 y1 x2 y2`\uff0c\u67e5\u8be2\u5de6\u4e0a\u89d2\u4e3a (x1,y1)\uff0c\u53f3\u4e0b\u89d2\u4e3a (x2,y2) \u7684\u77e9\u9635\u4e2d\u7684\u5143\u7d20\u548c\u3002\n</code></pre> <p>\u90a3\u4e48\u5982\u679c\u4f7f\u7528\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u2014\u2014\u7b2c\u4e00\u7ef4\u7ef4\u62a4\u884c\uff0c\u7b2c\u4e8c\u7ef4\u7ef4\u62a4\u5217\uff0c\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u627e\u5230\u5bf9\u5e94\u884c\u7684\u8282\u70b9\uff0c\u7136\u540e\u5728\u5176\u5b50\u7ebf\u6bb5\u6811\u4e0a\u627e\u5230\u5bf9\u5e94\u5217\u5373\u53ef\u3002\u5bf9\u5e94\u67e5\u8be2\uff0c\u6211\u4eec\u6311\u9009\u51fa\u53ef\u4ee5\u62fc\u51d1\u51fa\u8be2\u95ee\u884c\u7684\u8282\u70b9\uff0c\u7136\u540e\u5728\u8fd9\u4e9b\u8282\u70b9\u4e2d\u5206\u522b\u67e5\u8be2\u5bf9\u5e94\u5217\u7684\u548c\u4fe1\u606f\u3002\u65f6\u95f4\u590d\u6742\u5ea6\\(O(n\\log^2 n)\\)</p> <p>\u5982\u679c\u662f\u533a\u95f4\u4fee\u6539\uff0c\u6211\u4eec\u5219\u9700\u8981\u7ef4\u62a4\u4e9b\u8bb8tag\u4e86\u3002\u5728\u4e3b\u7ebf\u6bb5\u6811\u4e2d\u6bcf\u6b21\u4e0b\u4f20\u6807\u8bb0\u65f6\uff0c\u90fd\u8981\u5bf9\u67d0\u4e2a\u5b50\u7ebf\u6bb5\u6811\u8fdb\u884c\u4fee\u6539\u3002\u8fd9\u79cd\u4fee\u6539\u4f1a\u4fee\u6539\u5b50\u7ebf\u6bb5\u6811\u4e2d\u7684\u6240\u6709\u70b9\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u5dee\u4e3a\\(O(n\\log n)\\)\u65e0\u6cd5\u63a5\u53d7\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651**\u6807\u8bb0\u6c38\u4e45\u5316**\u3002</p> <p>\u5927\u6982\u6765\u8bf4\uff0c\u5c31\u662f\u6807\u8bb0\u4e0d\u4e0b\u4f20\uff0c\u4e0d\u5220\u9664\u3002\u6211\u4eec\u5728\u67e5\u8be2\u65f6\uff0c\u9047\u5230\u4e86\u4e00\u4e2a\u6807\u8bb0\u5c31\u76f4\u63a5\u4fee\u6539\\(res\\)\u7684\u503c\u3002\u4f46\u662f\u6807\u8bb0\u6c38\u4e45\u5316\u4f1a\u6709\u5f88\u591a\u9650\u5236\uff0c\u5c40\u9650\u6027\u5f88\u5927\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#_3","title":"\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4","text":"<p>\u6811\u72b6\u6570\u7ec4\u672c\u662f\u7528\u6765\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6c42\u548c\u7684\u3002\u8fd9\u91cc\u6211\u4eec\u8ba9\u5b83\u652f\u6301\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u3002</p> <ul> <li> <p><code>L a b c d delta</code> \u2014\u2014 \u4ee3\u8868\u5c06 \\((a,b),(c,d)\\) \u4e3a\u9876\u70b9\u7684\u77e9\u5f62\u533a\u57df\u5185\u7684\u6240\u6709\u6570\u5b57\u52a0\u4e0a \\(delta\\)\u3002</p> </li> <li> <p><code>k a b c d</code>     \u2014\u2014 \u4ee3\u8868\u6c42 \\((a,b),(c,d)\\) \u4e3a\u9876\u70b9\u7684\u77e9\u5f62\u533a\u57df\u5185\u6240\u6709\u6570\u5b57\u7684\u548c\u3002</p> </li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#_4","title":"\u4e00\u7ef4\u6811\u72b6\u6570\u7ec4\u7684\u533a\u95f4\u4fee\u6539&amp;\u533a\u95f4\u67e5\u8be2","text":"<p>\u9996\u5148\u6211\u4eec\u8003\u8651\u6811\u72b6\u6570\u7ec4\u600e\u6837\u5b9e\u73b0\u4e00\u7ef4\u7684\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u3002\u5bf9\u5e94\u4e00\u7ef4\u7684\u533a\u95f4\u4fee\u6539\uff0c\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u672c\u8eab\u53ea\u652f\u6301\u5355\u70b9\u4fee\u6539\u4f46\u662f\u4f1a\u81ea\u52a8\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u533a\u95f4\u4fee\u6539\u5c31\u4f7f\u7528\u5dee\u5206\u7684\u5f62\u5f0f\u3002</p> <p>\u5982\u679c\u6211\u4eec\u8981\u628a[l,r]\u90fd+k\uff0c\u90a3\u4e48\u6211\u4eec\u4fee\u6539\u6811\u72b6\u6570\u7ec4c_l\u52a0\u4e0ak,c_{r+1}\u51cf\u53bbk\u3002\u6b64\u65f6\u6811\u72b6\u6570\u7ec4\u4e0a\u6b63\u662f\u539f\u6570\u7ec4\u3002</p> <p>\u90a3\u4e48\u73b0\u5728\u5982\u679c\u6211\u4eec\u8981\u6c42[l,r]\u4e4b\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\\(query(l)\\sim query(r)\\)\u90fd\u52a0\u8d77\u6765\u3002</p> <p>\u4f4d\u7f6ep\u7684\u503c\\(=\\sum_{j = 1}^{p} c[j]\\)</p> <p>\u4f4d\u7f6ep\u7684\u524d\u7f00\u548c $\\sum_{i = 1}^{p} a[i] = \\sum_{i = 1}^{p} \\sum_{j = 1}^{i} c[j] $</p> <p>\u5728\u7b49\u5f0f\u6700\u53f3\u4fa7\u7684\u5f0f\u5b50\\((\\sum_{i = 1}^{p} \\sum_{j = 1}^{i} c[j])\\)\u4e2d\uff0c(\\(c[1]\\)) \u88ab\u7528\u4e86(\\(p\\))\u6b21\uff0c(\\(c[2]\\))\u88ab\u7528\u4e86(p - 1)\u6b21\u2026\u2026\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\uff1a</p> <p>\u4f4d\u7f6ep\u7684\u524d\u7f00\u548c =</p> <p>$\\sum_{i = 1}^{p} \\sum_{j = 1}^{i} d[j] = \\sum_{i = 1}^{p} d[i] * (p - i + 1) = (p + 1) \\times \\sum_{i = 1}^{p}c[i] - \\sum_{i = 1}^{p}c[i]\\times i $</p> <p>\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4\u7684\u524d\u7f00\u548c\uff1a \u4e00\u4e2a\u6570\u7ec4\u662f (\\(sum1[i] = c[i]\\))\uff0c \u53e6\u4e00\u4e2a\u6570\u7ec4\u662f (\\(sum2[i] = c[i] \\times i\\))\u3002</p> <p>\u67e5\u8be2</p> <p>\u4f4d\u7f6ep\u7684\u524d\u7f00\u548c\u5373\uff1a (p + 1) * sum1\u6570\u7ec4\u4e2dp\u7684\u524d\u7f00\u548c - sum2\u6570\u7ec4\u4e2dp\u7684\u524d\u7f00\u548c\u3002</p> <p>\u533a\u95f4[l, r]\u7684\u548c\u5373\uff1a\u4f4d\u7f6er\u7684\u524d\u7f00\u548c - \u4f4d\u7f6el\u7684\u524d\u7f00\u548c\u3002</p> <p>\u4fee\u6539</p> <p>\u5bf9\u4e8esum1\u6570\u7ec4\u7684\u4fee\u6539\u540c\u95ee\u98982\u4e2d\u5bf9d\u6570\u7ec4\u7684\u4fee\u6539\u3002</p> <p>\u5bf9\u4e8esum2\u6570\u7ec4\u7684\u4fee\u6539\u4e5f\u7c7b\u4f3c\uff0c\u6211\u4eec\u7ed9 sum2[l] \u52a0\u4e0a l * x\uff0c\u7ed9 sum2[r + 1] \u51cf\u53bb (r + 1) * x\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#_5","title":"\u6269\u5c55\u5230\u4e8c\u7ef4\u60c5\u51b5","text":"<p>\u5728\u4e00\u7ef4\u6811\u72b6\u6570\u7ec4\u4e2d\uff0c\u6211\u4eec\u7528<code>c[x]</code>\u8bb0\u5f55\u53f3\u7aef\u70b9\u4e3ax\uff0c\u957f\u5ea6\u4e3a<code>lowbit(x)</code>\u7684\u533a\u95f4\u7684\u533a\u95f4\u548c\u3002\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u7c7b\u4f3c\u5730\u5b9a\u4e49<code>c[x][y]</code>\u4e3a\u53f3\u4e0b\u7aef\u70b9\u4e3a\\((x,y)\\)\uff0c\u9ad8\u4e3a<code>lowbit(x)</code>\uff0c\u5bbd\u4e3a<code>lowbit(y)</code>\u7684\u533a\u95f4\u7684\u533a\u95f4\u548c\u3002</p> <p>\u533a\u95f4\u4fee\u6539</p> <p>\u6211\u4eec\u56de\u5fc6\u4e00\u4e0b\u6211\u4eec\u662f\u5982\u4f55\u5bf9\u4e00\u7ef4\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u7684\u3002\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u5dee\u5206\u64cd\u4f5c\uff0c\u662f\u4e3a\u4e86\u4f7f\u5f97\u5230\u7684\u5dee\u5206\u6570\u7ec4\u524d\u7f00\u548c\u5c31\u7b49\u4e8e\u5bf9\u5e94\u4f4d\u7f6e\u5143\u7d20\u7684\u503c\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fd0\u7528\u7c7b\u6bd4\u601d\u60f3\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5dee\u5206\u5462\uff1f</p> <p>\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e8c\u7ef4\u7684\u524d\u7f00\u548c\u3002</p> <p>\\(sum[i][j]=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1]+a[i][j]\\)</p> <p>\u67e5\u8be2\u5de6\u4e0a\u89d2\u70b9\\((x1,y1)\\)\uff0c\u53f3\u4e0b\u89d2\u70b9\\((x2,y2)\\)\u7684\u533a\u95f4\u548c\u5219\u662f\uff1a\\(sum[x2][y2]-sum[x1-1][y2]-sum[x2][y1-1]+sum[x1-1][y1-1]\\)</p> <p>\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u5dee\u5206\u6570\u7ec4\\(d[i][j]\\)\u7b49\u4e8e\\(a[i][j]\\)\u548c\\(a[i-1][j]+a[i][j-1]-a[i-1][j-1]\\)\u7684\u5dee\u3002</p> <p>\u8fd9\u4e9b\u90fd\u662f\u5dee\u5206\u57fa\u672c\u64cd\u4f5c\u4e86\u3002</p> <p>\u533a\u95f4\u67e5\u8be2</p> <p>\u6839\u636e\u5dee\u5206\u6570\u7ec4\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u70b9(x,y)\uff0c\u5b83\u7684\u4e8c\u7ef4\u524d\u7f00\u548c\u5c31\u662f:</p> <p>\\(\\sum_{i=1}^x\\sum_{j=1}^y\\sum_{h=1}^i\\sum_{k=1}^j d[h][k]\\)</p> <p>\u4f46\u6211\u4eec\u7c7b\u6bd4\u4e00\u4e0b\u4e00\u7ef4\u6811\u72b6\u6570\u7ec4\u7684\u533a\u95f4\u6c42\u548c\uff0c\u6211\u4eec\u4ea6\u53ef\u4ee5\u7edf\u8ba1\u6bcf\u4e2a\\(d[h][k]\\)\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\\(d[1][1]\\)\u51fa\u73b0\u4e86\\((x\\times y)\\)\u6b21\uff0c\\(d[1][2]\\)\u51fa\u73b0\u4e86\\(x\\times(y-1)\\)\u6b21\u2026\u2026\\(d[h][k]\\)\u51fa\u73b0\u4e86\\((x-h+1)\\times (y-k+1)\\)\u6b21\u3002</p> <p>\u5219\u539f\u5f0f\u6574\u7406\u5f97\uff1a</p> <p>\\(\\sum_{i=1}^x\\sum_{j=1}^y d[i][j]\\times (x-i+1)\\times (y-j+1)\\)</p> <p>\u5206\u89e3\u5f97\uff1a</p> <p>\\(\\sum_{i=1}^x\\sum_{j=1}^y d[i][j]\\times [(xy-xj+x)+(-yi+ij-i)+(y-j+1)]\\)</p> <p>\u6700\u540e\u5f97\uff1a</p> <p>\\(\\sum_{i=1}^x\\sum_{j=1}^y d[i][j]\\times (xy+x+y+1)-d[i][j]\\times i(y+1)-d[i][j]\\times j(x+1)+d[i][j]\\times i\\times j\\)</p> <p>\u6839\u636e\u6211\u4eec\u6700\u540e\u5206\u89e3\u51fa\u6765\u7684\u516c\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u56db\u4e2a\u6570\u7ec4\\(d[i][j],d[i][j]\\times i,d[i][j]\\times j,d[i][j]\\times ij\\)\uff0c\u4ece\u800c\u5b9e\u73b0\u533a\u95f4\u67e5\u8be2\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#1","title":"\u4f8b\u9898 #1\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u8f93\u5165\u6570\u636e\u7684\u7b2c\u4e00\u884c\u4e3a <code>X n m</code>\uff0c\u4ee3\u8868\u77e9\u9635\u5927\u5c0f\u4e3a \\(n\\times m\\)\u3002 \u4ece\u8f93\u5165\u6570\u636e\u7684\u7b2c\u4e8c\u884c\u5f00\u59cb\u5230\u6587\u4ef6\u5c3e\u7684\u6bcf\u4e00\u884c\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li> <p><code>L a b c d delta</code> \u2014\u2014 \u4ee3\u8868\u5c06 \\((a,b),(c,d)\\) \u4e3a\u9876\u70b9\u7684\u77e9\u5f62\u533a\u57df\u5185\u7684\u6240\u6709\u6570\u5b57\u52a0\u4e0a \\(delta\\)\u3002</p> </li> <li> <p><code>k a b c d</code>     \u2014\u2014 \u4ee3\u8868\u6c42 \\((a,b),(c,d)\\) \u4e3a\u9876\u70b9\u7684\u77e9\u5f62\u533a\u57df\u5185\u6240\u6709\u6570\u5b57\u7684\u548c\u3002</p> </li> </ul> <p>\u8bf7\u6ce8\u610f\uff0c\\(k\\) \u4e3a\u5c0f\u5199\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#_6","title":"\u601d\u8def","text":"<p>\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u6a21\u677f\u3002</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n// #define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n// #define nl putc('\\n')\n#define ot write\n#define nl putchar('\\n')\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nbool f1;\nconst int INF = 1e9;\nconst int N = 2e3+50;\nconst int M = 10;\nint MOD = 10;\n\nint n,m;\nint ans = INF;\n\nstruct BIT{\n    int c[N][N];\n    void change(int x,int y,int v) {\n        if(!x||!y)  return ;\n        for(int i=x;i&lt;=n;i+=i&amp;-i)    \n            for(int j=y;j&lt;=m;j+=j&amp;-j)    \n                c[i][j]+=v;\n    }\n    int query(int x,int y) {\n        int res=0,i,j;\n        for(i=x;i;i-=i&amp;-i) \n            for(j=y;j;j-=j&amp;-j)  \n                res+=c[i][j];\n        return res;\n    }\n}c1,c2,c3,c4;\nchar str[2];\nvoid change(int x,int y,int v){\n    c1.change(x,y,v*x*y);\n    c2.change(x,y,v*x);\n    c3.change(x,y,v*y);\n    c4.change(x,y,v);\n}\nint query(int x,int y){\n    int res=c1.query(x,y);\n    res+=y*(c2.query(x,m)-c2.query(x,y));\n    res+=x*(c3.query(n,y)-c3.query(x,y));\n    res+=x*y*(c4.query(n,m)-c4.query(x,m)-c4.query(n,y)+c4.query(x,y));\n    return res;\n}\nsigned main(){\n    scanf(\"X %d %d\",&amp;n,&amp;m);\n    int i,a,b,c,d,e;\n    while(scanf(\"%s%d%d%d%d\",str,&amp;a,&amp;b,&amp;c,&amp;d)!=EOF){\n        if(str[0]=='L') {\n        // cerr&lt;&lt;\"OK\";\n            scanf(\"%d\",&amp;e);\n            change(a-1,b-1,e),change(a-1,d,-e),change(c,b-1,-e),change(c,d,e);\n        }\n        else printf(\"%d\\n\",query(a-1,b-1)-query(a-1,d)-query(c,b-1)+query(c,d));\n    }\n    return 0;\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\le n \\le 2048\\)\uff0c\\(1 \\le m \\le 2048\\)\uff0c\\(-500 \\le delta \\le 500\\)\uff0c\u64cd\u4f5c\u4e0d\u8d85\u8fc7 \\(2\\times 10^5\\) \u4e2a\uff0c\u4fdd\u8bc1\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u53ca\u6700\u7ec8\u7ed3\u679c\u5747\u4e0d\u8d85\u8fc7 \\(32\\) \u4f4d\u5e26\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u7684\u8868\u793a\u8303\u56f4\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#2-noi2012","title":"\u4f8b\u9898 #2 [NOI2012] \u9b54\u5e7b\u68cb\u76d8","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5c06\u8981\u8bfb\u4e8c\u5e74\u7ea7\u7684\u5c0f Q \u4e70\u4e86\u4e00\u6b3e\u65b0\u578b\u76ca\u667a\u73a9\u5177\u2014\u2014\u9b54\u5e7b\u68cb\u76d8\uff0c\u5b83\u662f\u4e00\u4e2a \\(N\\) \u884c \\(M\\) \u5217\u7684\u7f51\u683c\u68cb\u76d8\uff0c\u6bcf\u4e2a\u683c\u5b50\u4e2d\u5747\u6709\u4e00\u4e2a\u6b63\u6574\u6570\u3002\u68cb\u76d8\u5b88\u62a4\u8005\u5728\u68cb\u76d8\u7684\u7b2c \\(X\\) \u884c\u7b2c \\(Y\\) \u5217\uff08\u884c\u4e0e\u5217\u5747\u4ece \\(1\\) \u5f00\u59cb\u7f16\u53f7\uff09\u5e76\u4e14\u59cb\u7ec8\u4e0d\u4f1a\u79fb\u52a8\u3002\u68cb\u76d8\u5b88\u62a4\u8005\u4f1a\u8fdb\u884c\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li> <p>\uff08a\uff09\u8be2\u95ee\uff1a\u4ed6\u4f1a\u4ee5\u81ea\u5df1\u6240\u5728\u4f4d\u7f6e\u4e3a\u57fa\u7840\uff0c\u5411\u56db\u5468\u968f\u673a\u6269\u5c55\u51fa\u4e00\u5757\u5927\u5c0f\u4e0d\u5b9a\u7684\u77e9\u5f62\u533a\u57df\uff0c\u5411\u4f60\u8be2\u95ee\u8fd9\u4e00\u533a\u57df\u5185\u6240\u6709\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u662f\u591a\u5c11\u3002</p> </li> <li> <p>\uff08b\uff09\u4fee\u6539\uff1a\u4ed6\u4f1a\u968f\u610f\u6311\u9009\u68cb\u76d8\u4e0a\u7684\u4e00\u5757\u77e9\u5f62\u533a\u57df\uff0c\u5c06\u8fd9\u4e00\u533a\u57df\u5185\u7684\u6240\u6709\u6570\u540c\u65f6\u52a0\u4e0a\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6574\u6570\u3002</p> </li> </ul> <p>\u6e38\u620f\u8bf4\u660e\u4e66\u4e0a\u9644\u6709\u8fd9\u6837\u4e00\u53e5\u8bdd\u201c\u806a\u660e\u7684\u5c0f\u670b\u53cb\uff0c\u5f53\u4f60\u8fde\u7eed\u7b54\u5bf9 \\(19930324\\) \u6b21\u8be2\u95ee\u540e\u4f1a\u5f97\u5230\u4e00\u4e2a\u60ca\u559c\u5662\uff01\u201d\u3002\u5c0f Q \u5341\u5206\u60f3\u5f97\u5230\u8fd9\u4e2a\u60ca\u559c\uff0c\u4e8e\u662f\u6bcf\u5929\u90fd\u5728\u73a9\u8fd9\u4e2a\u73a9\u5177\u3002\u4f46\u7531\u4e8e\u4ed6\u7c97\u5fc3\u5927\u610f\uff0c\u7ecf\u5e38\u7b97\u9519\u6570\uff0c\u96be\u4ee5\u8fbe\u5230\u8fd9\u4e2a\u76ee\u6807\u3002\u4e8e\u662f\u4ed6\u6765\u5411\u4f60\u5bfb\u6c42\u5e2e\u52a9\uff0c\u5e0c\u671b\u4f60\u5e2e\u4ed6\u5199\u4e00\u4e2a\u7a0b\u5e8f\u6765\u56de\u7b54\u68cb\u76d8\u5b88\u62a4\u8005\u7684\u8be2\u95ee\uff0c\u5e76\u4fdd\u8bc1 \\(100\\%\\) \u7684\u6b63\u786e\u7387\u3002</p> <p>\u4e3a\u4e86\u7b80\u5316\u95ee\u9898\uff0c\u4f60\u7684\u7a0b\u5e8f\u53ea\u9700\u8981\u5b8c\u6210\u68cb\u76d8\u5b88\u62a4\u8005\u7684 \\(T\\) \u6b21\u64cd\u4f5c\uff0c\u5e76\u4e14\u95ee\u9898\u4fdd\u8bc1\u4efb\u4f55\u65f6\u523b\u68cb\u76d8\u4e0a\u7684\u6570\u5b57\u5747\u4e3a\u4e0d\u8d85\u8fc7 \\(2^{62} - 1\\) \u7684\u6b63\u6574\u6570\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#_7","title":"\u601d\u8def","text":"<p>\u7b80\u6d01\u660e\u4e86\u4e00\u9053\u9ed1\u9898\u3002</p> <ul> <li> <p>\u8be2\u95ee\uff1a\u8be2\u95ee\u4e00\u4e2a\u77e9\u5f62\u5185\u7684gcd</p> </li> <li> <p>\u4fee\u6539\uff1a\u628a\u4e00\u4e2a\u77e9\u5f62\u5185\u7684\u6570+k</p> </li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#_8","title":"\u4e00\u7ef4\u60c5\u51b5","text":"<p>\u4e8c\u7ef4\u95ee\u9898\uff0c\u9996\u5148\u8003\u8651\u4e00\u7ef4\u7684\u60c5\u51b5\u3002\u5982\u679c\u662f\u4e00\u7ef4\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u4e00\u60f3\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4gcd\u67e5\u8be2\uff0c\u5f88\u4e0d\u597d\u505a\u3002\u8fd9\u91cc\u76f4\u63a5\u7ed9\u51fa\u5bf9\u7b56\u2014\u2014\u6211\u4eec\u53d1\u73b0gcd\u6ee1\u8db3gcd(a,b)=gcd(a-b,b)\uff0c\u540c\u6837\u7684\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4a_i,i\\in[l,r]\uff0c\u6211\u4eec\u6709gcd(a_l,\\dots,a_r)=gcd(a_i,a_{i+1}-a_i,a_{i+2}-a_{i+1},\\dots)\uff0c\u8fd9\u8bf4\u660e\u4e00\u4e2a\u533a\u95f4\u7684gcd=\u8fd9\u4e2a\u533a\u95f4\u7684\u5dee\u5206\u6570\u7ec4\u7684gcd\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\u5373\u53ef\u3002\u73b0\u5728\u5c31\u662f\u5355\u70b9\u3001\u4fee\u6539\u67e5\u8be2\u533a\u95f4gcd\u4e86\uff0c\u662f\u53ef\u884c\u7684\u3002</p> <p>\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u5982\u679c\u662f\u5728\u539f\u6570\u7ec4\u4e2d\u622a\u53d6\u7684\u533a\u95f4[l,r]\uff0c\u90a3\u4e48\u5176\u5dee\u5206\u6570\u7ec4\u7684\u6709\u3001\u7b2c\u4e00\u9879\u662fa_l-a_{l-1}/\u4f46\u662f\u6211\u4eec\u662f\u4e0d\u5141\u8bb8\u51fa\u73b0a_{l-1}\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8ea_l\u8fd9\u4e00\u9879\uff0c\u6211\u4eec\u8981\u5355\u72ec\u7ef4\u62a4\u5176\u503c\u3002\u8fd9\u4e2a\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u7ebf\u6bb5\u6811\uff08\u5355\u70b9\u67e5\u8be2\u533a\u95f4\u4fee\u6539\uff09\u5b8c\u6210\u3002</p> <p>\u597d\u4e86\uff0c\u4e00\u7ef4\u7684\u60c5\u51b5\u89e3\u51b3\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u8003\u8651\u4e8c\u7ef4\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#_9","title":"\u4e8c\u7ef4\u60c5\u51b5","text":"<p>\u6211\u4eec\u8bbe\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfbxOy\u4e2d\u77e9\u5f62\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a(x,y)\uff0c\u957f\u4e3aa\uff0c\u5bbd\u4e3ab\u3002\u90a3\u4e48\u4e00\u79cd\u65b9\u6cd5\u662f\u5efa\u7acbN\u4e2a\u7ebf\u6bb5\u6811\uff0c\u5bf9\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u7684[x,x+b]\u533a\u95f4\u6c42gcd\u540e\u7edf\u8ba1\u7b54\u6848\u3002\u8ba1\u7b97\u5f97\u77e5\u590d\u6742\u5ea6O(TN\\log M)\u65e0\u6cd5\u901a\u8fc7\u6781\u9650\u6570\u636e\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u629b\u5f03\u53d6\u5de7\u505a\u6cd5\uff0c\u8001\u8001\u5b9e\u5b9e\u7684\u5199\u6211\u4eec\u7684\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u5427\u3002\u5373\u6211\u4eec\u628a\u539f\u56fe\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u5dee\u5206\uff0c\u4f9d\u65e7\u6309\u7167\u4e4b\u524d\u4e00\u7ef4\u7684\u60c5\u51b5\u4e0b\u7684\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u6765\u505a\u3002</p> <p>\u522b\u5fd8\u4e86\uff0c\u5728\u4e00\u7ef4\u4e2d\u6211\u4eec\u8981\u7279\u6b8a\u5904\u7406\u533a\u95f4\u7684\u7b2c\u4e00\u4e2a\u6570\u5373a_l\uff0c\u90a3\u4e48\u5728\u4e8c\u7ef4\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u7279\u6b8a\u5904\u7406\u54ea\u4e9b\u5462\uff1f</p> <p>\\(\\begin{aligned} &amp;a_{x,y}\\qquad\\qquad\\qquad\\quad a_{x,2}-a_{x,1}\\qquad\\qquad\\qquad\\quad a_{x,3}-a_{x,2}\\qquad\\qquad\\quad~~~ \\dots \\\\\\\\ &amp;a_{2,y}-a_{1,y}\\qquad a_{2,2}-a_{2,1}-a_{1,2}+a_{1,1}\\qquad a_{2,3}-a_{2,2}-a_{1,3}+a_{1,2}\\qquad \\dots \\\\\\\\ &amp;a_{3,y}-a_{2,y}\\qquad a_{3,2}-a_{3,1}-a_{2,2}+a_{2,1}\\qquad a_{3,3}-a_{3,2}-a_{2,3}+a_{2,2}\\qquad \\dots \\end{aligned}\\)</p> <p>\u5f88\u660e\u663e\u53ef\u4ee5\u770b\u51fa\u6211\u4eec\u8981\u7279\u6b8a\u7ef4\u62a4\u7b2c1\u884c\u548c\u7b2c1\u5217\u3002</p> <p>\u8fd9\u65f6\u8981\u6ce8\u610f\uff0c\u5728\u4e00\u7ef4\u4e2d\uff0c\u6211\u4eec\u533a\u95f4[l,r]\u7684gcd\u662f\u7531\u5dee\u5206\u7ebf\u6bb5\u6811\u7684[l+1,r]\u533a\u95f4\u7684\u7b54\u6848\uff08gcd\uff09\u548ca_l\u53d6gcd\u5f97\u5230\u7684\uff0c\u5bf9\u4e8e\u4e8c\u7ef4\uff0c\u6211\u4eec\u7684\u7b54\u6848\u5e94\u8be5\u662f\u4ee5\u4e0b\u56db\u4e2a\u6570\u636e\u53d6gcd\u5f97\u5230\u7684\u3002</p> <ul> <li> <p>\u4e8c\u7ef4\u5dee\u5206\u7ebf\u6bb5\u6811[(x+1,y+1)(x+b,y+a)]</p> </li> <li> <p>\u4e00\u7ef4\u5dee\u5206\u7ebf\u6bb5\u6811\uff08\u7ef4\u62a4\u884c\u5dee\u5206\uff0c\u5373\u5f62\u5982a_{x,i}-a_{x,i-1}\u7684\u6570\u636e\uff09[y+1,y+a]</p> </li> <li> <p>\u4e00\u7ef4\u5dee\u5206\u7ebf\u6bb5\u6811\uff08\u7ef4\u62a4\u5217\u5dee\u5206\uff0c\u5373\u5f62\u5982a_{x,i}-a_{x-1,i}\u7684\u6570\u636e\uff09[x+1,x+b]</p> </li> <li> <p>\u7ef4\u62a4\u5355\u70b9\u7684\u7ebf\u6bb5\u6811\uff08\u7ef4\u62a4a_{x,y}\uff09\u6c42\u51fa\u7684a_{x,y}</p> </li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/#_10","title":"\u4e8c\u7ef4\u7ebf\u6bb5\u6811","text":"<p>\u8fd9\u91cc\u518d\u63d0\u4e00\u63d0\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u3002\u56e0\u4e3a\u672c\u9898\u7ebf\u6bb5\u6811\u8f83\u591a\u4e14\u6811\u5957\u6811\u65b9\u6cd5\u9700\u8981\u5199\u5185\u5b58\u5206\u914d\uff0c\u4f46\u662f\u56db\u5206\u6811\u672c\u8d28\u662f\u4e00\u7ef4\u7ebf\u6bb5\u6811\uff0c\u5bb9\u6613\u88ab\u5361\uff08\u867d\u7136\u672c\u9898\u4e0d\u5361\uff09\uff0c\u6211\u4eec\u5199\u6811\u5957\u6811\u3002</p> <p>\u56db\u5206\u6811\uff08\u4e0b\uff09</p> <p></p> <p>\u56db\u5206\u6811\u5199\u6cd5\u53ef\u53c2\u8003\uff1a</p> <p>www.luogu.com.cn</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E7%BB%84/","title":"\u53ef\u6301\u4e45\u5316\u6570\u7ec4","text":"<p>\u5982\u9898\uff0c\u4f60\u9700\u8981\u7ef4\u62a4\u8fd9\u6837\u7684\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(N\\) \u7684\u6570\u7ec4\uff0c\u652f\u6301\u5982\u4e0b\u51e0\u79cd\u64cd\u4f5c</p> <ol> <li> <p>\u5bf9\u4e8e\u64cd\u4f5c1\uff0c\u683c\u5f0f\u4e3a\\(v_i \\ 1 \\ p_i \\ {value}_i\\)\uff0c\u5373\u4e3a\u5728\u7248\u672c\\(v_i\\)\u7684\u57fa\u7840\u4e0a\uff0c\u5c06 \\(a_{p_i}\\) \u4fee\u6539\u4e3a \\({value}_i\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u64cd\u4f5c2\uff0c\u683c\u5f0f\u4e3a\\(v_i \\ 2 \\ p_i\\)\uff0c\u5373\u8bbf\u95ee\u7248\u672c\\(v_i\\)\u4e2d\u7684 \\(a_{p_i}\\)\u7684\u503c\uff0c\u6ce8\u610f\uff1a\u751f\u6210\u4e00\u6837\u7248\u672c\u7684\u5bf9\u8c61\u5e94\u4e3a \\(v_i\\)\u3002</p> </li> </ol> <p>\u6b64\u5916\uff0c\u6bcf\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff08\u5bf9\u4e8e\u64cd\u4f5c2\uff0c\u5373\u4e3a\u751f\u6210\u4e00\u4e2a\u5b8c\u5168\u4e00\u6837\u7684\u7248\u672c\uff0c\u4e0d\u4f5c\u4efb\u4f55\u6539\u52a8\uff09\uff0c\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7248\u672c\u3002\u7248\u672c\u7f16\u53f7\u5373\u4e3a\u5f53\u524d\u64cd\u4f5c\u7684\u7f16\u53f7\uff08\u4ece1\u5f00\u59cb\u7f16\u53f7\uff0c\u7248\u672c0\u8868\u793a\u521d\u59cb\u72b6\u6001\u6570\u7ec4\uff09</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E7%BB%84/#_2","title":"\u4ee3\u7801","text":"<p>\u8fd8\u662f\u5f88\u7b80\u5355\u7684\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . FancyKnowledge .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\n#include&lt;bits/stdc++.h&gt;\n\n//\n#define int long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n#define err(fmt, ...) fprintf(stderr, \"[%d] : \" fmt \"\\n\", __LINE__, ##__VA_ARGS__)\n///*\n#define pr pair&lt;double,int&gt;\n#define pf first\n#define ps second\n#define pb push_back\n//*/\n\n//\nusing namespace std;\n//\nconst int N=1e6+5;\nconst int M=1e3;\nint MOD=1e9+7;\nconst int MMOD=903250223;\nconst int INF=1e9;\nconst int IINF=1e18;\nconst db eps=1e-9;\n//\nint n,m,a[N],b,q,sw,k,ans,res,tmp,cnt,mul[N];\nint  rt[N];\nint vcnt;//\u7248\u672c\u8ba1\u6570\nint L;\n\nstruct node{\n    int lc,rc,v;\n}tr[N&lt;&lt;5];//16\u500d\u7a7a\u95f4\n\nvoid pushup(int x){\n    //\n}\n\nvoid build(int &amp;x,int l,int r){\n    x=++cnt;\n    if(l==r){\n        tr[x].v=a[l];\n        return ;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(tr[x].lc,l,mid);\n    build(tr[x].rc,mid+1,r);\n}\n\nvoid insert(int pre,int &amp;now,int l,int r,int p,int v){\n    now=+/\u5efa\u7acb\u65b0\u8282\u70b9\n    if(l==r){\n        tr[now].v=v;\n        return ;\n    }\n    int mid=l+r&gt;&gt;1;\n//  tr[now]=tr[pre];\n//  tr[now].v=tr[pre].v;//\u66f4\u65b0,\u56e0\u4e3a\u5982\u4e0b\n    if(p&lt;=mid){\n        tr[now].rc=tr[pre].rc;//\u4e5f\u53ef\u4ee5\u5728\u4e00\u5f00\u59cb\u590d\u5236\u65e7\u7684\u70b9\u7684\u4fe1\u606f\n        insert(tr[pre].lc,tr[now].lc,l,mid,p,v);\n    }\n    else {\n        tr[now].lc=tr[pre].lc;\n        insert(tr[pre].rc,tr[now].rc,mid+1,r,p,v);\n    }\n\n//  pushup(now);\n}\n\nint query(int x,int l,int r,int p){\n    if(l==r)return tr[x].v;\n\n    int mid=l+r&gt;&gt;1;\n    if(p&lt;=mid)return query(tr[x].lc,l,mid,p);\n    return query(tr[x].rc,mid+1,r,p);\n}\n\nsigned main(){\n\n//  freopen(\".in\",\"r\",stdin);\n//  freopen(\".out\",\"w\",stdout);\n//  freopen(\".txt\",\"w\",stderr);\n\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;i++){\n//      cin&gt;&gt;a[i];\n        scanf(\"%lld\",&amp;a[i]);\n    }\n\n    build(rt[0],1,n);\n\n    while(m--){\n        int v,op,loc,val;\n//      cin&gt;&gt;v&gt;&gt;op&gt;&gt;loc;\n        scanf(\"%lld%lld%lld\",&amp;v,&amp;op,&amp;loc);\n        if(op==1){\n            scanf(\"%lld\",&amp;val);\n            insert(rt[v],rt[++vcnt],1,n,loc,val);\n//          cerr&lt;&lt;\"rt\"&lt;&lt;vcnt&lt;&lt;\"]=\"&lt;&lt;tr[rt[vcnt]].rc&lt;&lt;endl;\n        }else{\n            cout&lt;&lt;query(rt[v],1,n,loc)&lt;&lt;endl;\n            rt[++vcnt]=rt[v];\n        }\n    }\n\n    return 0;\n}\n\n//check your long long and the size of memery!!!\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E7%BB%84/#k","title":"\u6811\u4e0a\u7248\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u6c42k\u5c0f\uff08\u6811\u4e0a\u4e3b\u5e2d\u6811\uff09","text":"<p>www.luogu.com.cn</p> <p>\u6a21\u578b</p> <p>\u6c42\u6811\u4e0a\u4ecex-y\u8def\u5f84\u4e0a\u7684\u5730k\u5c0f\u503c</p> <p>\u505a\u6cd5</p> <p>\u6211\u4eec\u8003\u8651\u8fdb\u884c\u6811\u4e0a\u5dee\u5206\u3002\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9x\u7ef4\u62a4\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811t_x\uff0c\u4ee3\u8868\u7740\u4ecex\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u6570\u503c\u53d1\u5e03\u60c5\u51b5\u3002</p> <p>\u5bf9\u4e8e\u6811\u7684\u6784\u5efa\uff0c\u6211\u4eec\u8fd9\u6837\uff1a\u5728x\u7684\u7236\u4eb2\u7684\u7248\u672c\u57fa\u7840\u4e0a\u52a0\u5165x\uff0c\u5c31\u5f62\u6210\u4e86x\u7248\u672c\u7684\u7ebf\u6bb5\u6811\u3002</p> <p>\u5bf9\u4e8e\u67e5\u8be2\uff0c\u6211\u4eec\u5de5\u5177\u6811\u4e0a\u5dee\u5206\u5f97\u51fa\u4ee3\u8868\u94fex-y\u7684\u6811\u5e94\u8be5\u662f\\(t_x+t_y-t_{lca}-t_{fa(lca)}\\)\uff0c\u4e8e\u662f\u6211\u4eec4\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u5373\u53ef\u3002</p> <p>\u65f6\u523b\u8bb0\u4f4f\uff0c\u4e3b\u5e2d\u6811\u7684\u529f\u80fd\u662f\u8ba9\u4f60\u5feb\u901f\u6c42\u51fa\u7279\u5b9a\u533a\u95f4\u5185\u67d0\u503c\u57df\u8303\u56f4\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u65b9\u4fbf\u4e8c\u5206\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u8bb0\u5f55\u7b54\u6848\uff01</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E5%90%89%E5%8F%B8%E6%9C%BA%E7%BA%BF%E6%AE%B5%E6%A0%91/","title":"\u5409\u53f8\u673a\u7ebf\u6bb5\u6811","text":"<p>\u8be6\u89e3</p> <p>www.luogu.com.cn</p> <p>\u591a\u4e2a\u4f8b\u9898</p> <p>www.luogu.com.cn</p> <p>\u9898\u578b\uff1a\u533a\u95f4\u6700\u503c\u7b3c\u7edf\u5730\u6307\u6c42\u533a\u95f4\u7684\u6700\u503c\u4ee5\u53ca\u533a\u95f4\u6240\u6709\u6570\u5bf9 x \u53d6\u6700\u503c\uff08\u5373\u4ee4 \\(a_i\u200b=\\max/\\min(a_i\u200b,x)\\)\uff09\u8fd9\u4e00\u7c7b\u7684\u67e5\u8be2\u4e0e\u4fee\u6539\u64cd\u4f5c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E5%90%89%E5%8F%B8%E6%9C%BA%E7%BA%BF%E6%AE%B5%E6%A0%91/#hdu5306-gorgeous-sequence","title":"HDU5306 Gorgeous Sequence","text":"<p>\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217 a\uff1a </p> <ul> <li> <p>0 l r t \\(\\forall l\\le i\\le r,\\ a_i=\\min(a_i,t)\\)\u3002</p> </li> <li> <p>1 l r \u8f93\u51fa\u533a\u95f4 [l,r] \u4e2d\u7684\u6700\u5927\u503c\u3002 </p> </li> <li> <p>2 l r \u8f93\u51fa\u533a\u95f4\u548c\u3002 </p> </li> <li> <p>\u591a\u7ec4\u6570\u636e\uff0c\\(T\\le 100,n\\le 10^6,\\sum m\\le 10^6\\)\u3002 </p> </li> </ul> <p>\u5f15\u7528\u81ea OI wiki</p> <p>\u533a\u95f4\u53d6 min\uff0c\u610f\u5473\u7740\u53ea\u5bf9\u90a3\u4e9b\u5927\u4e8e t \u7684\u6570\u6709\u66f4\u6539\u3002\u56e0\u6b64\u8fd9\u4e2a\u64cd\u4f5c\u7684\u5bf9\u8c61\u4e0d\u518d\u662f\u6574\u4e2a\u533a\u95f4\uff0c\u800c\u662f\u300c\u8fd9\u4e2a\u533a\u95f4\u4e2d\u5927\u4e8e t \u7684\u6570\u300d\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6709\u8fd9\u6837\u7684\u601d\u8def\uff1a</p> <p>\u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u8be5\u533a\u95f4\u7684\u6700\u5927\u503c Mx1\u3001\u6b21\u5927\u503c Mx2\u3001\u533a\u95f4\u548c Sum \u4ee5\u53ca\u6700\u5927\u503c\u7684\u4e2a\u6570 Cnt\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u533a\u95f4\u5bf9 t \u53d6 \\min \u7684\u64cd\u4f5c\u3002 \u5982\u679c \\(Mx1\\le t\\)\uff0c\u663e\u7136\u8fd9\u4e2a t \u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u76f4\u63a5\u8fd4\u56de\uff1b \u5982\u679c \\(Mx2&lt;t\\le Mx1\\)\uff0c\u90a3\u4e48\u8fd9\u4e2a t \u5c31\u80fd\u66f4\u65b0\u5f53\u524d\u533a\u95f4\u4e2d\u7684\u6700\u5927\u503c\u3002\u4e8e\u662f\u6211\u4eec\u8ba9\u533a\u95f4\u548c\u52a0\u4e0a Cnt(t-Mx1)\uff0c\u7136\u540e\u66f4\u65b0 Mx1 \u4e3a t\uff0c\u5e76\u6253\u4e00\u4e2a\u6807\u8bb0\u3002 \u5982\u679c \\(t\\le Mx2\\)\uff0c\u90a3\u4e48\u8fd9\u65f6\u4f60\u53d1\u73b0\u4f60\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u4e2a\u6570\u6d89\u53ca\u5230\u66f4\u65b0\u7684\u95ee\u9898\u3002\u4e8e\u662f\u6211\u4eec\u7684\u7b56\u7565\u5c31\u662f\uff0c\u66b4\u529b\u9012\u5f52\u5411\u4e0b\u64cd\u4f5c\u3002\u7136\u540e\u4e0a\u4f20\u4fe1\u606f\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E5%90%89%E5%8F%B8%E6%9C%BA%E7%BA%BF%E6%AE%B5%E6%A0%91/#3","title":"\u7ebf\u6bb5\u6811 3","text":"<p>\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6570\u5217 \\(A\\)\uff0c\u540c\u65f6\u5b9a\u4e49\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4 \\(B\\)\uff0c\\(B\\) \u5f00\u59cb\u4e0e \\(A\\) \u5b8c\u5168\u76f8\u540c\u3002\u63a5\u4e0b\u6765\u8fdb\u884c\u4e86 \\(m\\) \u6b21\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6709\u4e94\u79cd\u7c7b\u578b\uff0c\u6309\u4ee5\u4e0b\u683c\u5f0f\u7ed9\u51fa\uff1a</p> <ul> <li> <p><code>1 l r k</code>\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\(i\\in[l,r]\\)\uff0c\u5c06 \\(A_i\\) \u52a0\u4e0a \\(k\\)\uff08\\(k\\) \u53ef\u4ee5\u4e3a\u8d1f\u6570\uff09\u3002</p> </li> <li> <p><code>2 l r v</code>\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\(i\\in[l,r]\\)\uff0c\u5c06 \\(A_i\\) \u53d8\u6210 \\(\\min(A_i,v)\\)\u3002</p> </li> <li> <p><code>3 l r</code>\uff1a\u6c42 \\(\\sum_{i=l}^{r}A_i\\)\u3002</p> </li> <li> <p><code>4 l r</code>\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\(i\\in[l,r]\\)\uff0c\u6c42 \\(A_i\\) \u7684\u6700\u5927\u503c\u3002</p> </li> <li> <p><code>5 l r</code>\uff1a\u5bf9\u4e8e\u6240\u6709\u7684 \\(i\\in[l,r]\\)\uff0c\u6c42 \\(B_i\\) \u7684\u6700\u5927\u503c\u3002</p> </li> </ul> <p>\u5728\u6bcf\u4e00\u6b21\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u90fd\u8fdb\u884c\u4e00\u6b21\u66f4\u65b0\uff0c\u8ba9 \\(B_i\\gets\\max(B_i,A_i)\\)\u3002</p> <ul> <li>\u5bf9\u4e8e\u5168\u90e8\u6d4b\u8bd5\u6570\u636e\uff0c\u4fdd\u8bc1 \\(1\\leq n,m\\leq 5\\times 10^5\\)\uff0c\\(-5\\times10^8\\leq A_i\\leq 5\\times10^8\\)\uff0c\\(op\\in[1,5]\\)\uff0c\\(1 \\leq l\\leq r \\leq n\\)\uff0c\\(-2000\\leq k\\leq 2000\\)\uff0c\\(-5\\times10^8\\leq v\\leq 5\\times10^8\\)\u3002</li> </ul>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E5%90%89%E5%8F%B8%E6%9C%BA%E7%BA%BF%E6%AE%B5%E6%A0%91/#_2","title":"\u63d0\u793a","text":"<p>\u672c\u9898\u8f93\u5165\u91cf\u8f83\u5927\uff0c\u8bf7\u4f7f\u7528\u5408\u7406\u9ad8\u6548\u7684\u8bfb\u5165\u65b9\u6cd5\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E5%90%89%E5%8F%B8%E6%9C%BA%E7%BA%BF%E6%AE%B5%E6%A0%91/#_3","title":"\u4ee3\u7801\u5206\u6790","text":"<p>\u6570\u636e</p> <pre><code>struct node{\n    int mx1a,cnt,mx2a,sum,mx1b;//a\u7684\u6700\u5927\u503c\uff0ca\u7684\u6700\u5927\u503c\u7684\u4e2a\u6570\uff0ca\u7684\u6b21\u5927\u503c\uff0c\u533a\u95f4\u548c\uff0cb\u7684\u6700\u5927\u503c\n    int tg1,tg2,tg3,tg4;//4\u4e2atag\u5206\u522b\u662f\u5bf9\u5e94mx1a,mx2a,tg1\u7684max,t2\u7684max\n}t[N&lt;&lt;2];\n</code></pre> <p>\u96be\u70b9\uff1atag\u5bf9\u503c\u7684\u66f4\u65b0</p> <pre><code>void tagModify(int t1,int t2,int t3,int t4,int x,int l,int r){\n    t[x].sum+=t1*t[x].cnt+t2*(r-l+1-t[x].cnt);\n    t[x].mx1b=max(t[x].mx1b,t[x].mx1a+t3);\n    t[x].mx1a+=t1;\n\n    if(t[x].mx2a!=-INF)t[x].mx2a+=t2;\n\n\n    t[x].tg3=max(t[x].tg1+t3,t[x].tg3);\n    t[x].tg4=max(t[x].tg2+t4,t[x].tg4);\n    t[x].tg1+=t1;t[x].tg2+=t2;\n}\n</code></pre> <p>\u96be\u70b9\uff1a\u4e24\u79cd\u64cd\u4f5c</p> <ul> <li>\u533a\u95f4\u52a0\u64cd\u4f5c</li> </ul> <p>\u7ebf\u6bb5\u6811\u6846\u67b6\u5c31\u7701\u7565\u4e86\uff0c\u6211\u4eec\u53ea\u770b\u5f53\u627e\u5230\u4e86\u8981\u4fee\u6539\u7684\u8282\u70b9\u65f6\u5bf9\u8282\u70b9\u7684\u4fee\u6539</p> <pre><code>void tagAdd(int x,int v,int l,int r){\n    t[x].sum+=v*t[x].cnt+v*(r-l+1-t[x].cnt);\n    t[x].mx1a+=v;\n    t[x].mx1b=max(t[x].mx1b,t[x].mx1a);\n    if(t[x].mx2a!=-INF)t[x].mx2a+=v;\n\n    t[x].tg1+=v;t[x].tg2+=v;\n    t[x].tg3=max(t[x].tg1,t[x].tg3);\n    t[x].tg4=max(t[x].tg2,t[x].tg4);\n}\n</code></pre> <ul> <li>\u533a\u95f4min\u4fee\u6539\u64cd\u4f5c</li> </ul> <p>\u6ce8\u610f\u56e0\u4e3a\u5409\u53f8\u673a\u7684\u7279\u6b8a\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u591a\u4e00\u4e9b\u7ea6\u675f\u6761\u4ef6\u3002</p> <pre><code>void changeMin(int x,int l,int r,int pl,int pr,int v){\n    if(pl&gt;r||pr&lt;l||v&gt;=t[x].mx1a)return ;//\u6ce8\u610f\u591a\u4e86\u6761\u4ef6\uff01\uff01\uff01\n    if(l&gt;=pl&amp;&amp;r&lt;=pr&amp;&amp;t[x].mx2a&lt;v){//\u6ce8\u610f\u591a\u4e86\u6761\u4ef6\uff01\uff01\uff01\n        tagMin(x,v);\n        return ;\n    }\n    pushdown(x,l,r);\n    int mid=(l+r)&gt;&gt;1;\n    changeMin(x&lt;&lt;1,l,mid,pl,pr,v);\n    changeMin(x&lt;&lt;1|1,mid+1,r,pl,pr,v);\n    pushup(x);\n}\n</code></pre> <p>\u96be\u5ea6\uff1apushdown\u6807\u8bb0\u4e0b\u4f20\u64cd\u4f5c</p> <pre><code>void pushdown(int x,int l,int r){\n    int mid=l+r&gt;&gt;1;\n\n    int mx=max(t[x&lt;&lt;1].mx1a,t[x&lt;&lt;1|1].mx1a);\n    if(t[x&lt;&lt;1].mx1a==mx)tagModify(t[x].tg1,t[x].tg2,t[x].tg3,t[x].tg4,x&lt;&lt;1,l,mid);\n    else tagModify(t[x].tg2,t[x].tg2,t[x].tg4,t[x].tg4,x&lt;&lt;1,l,mid);\n\n    if(t[x&lt;&lt;1|1].mx1a==mx)tagModify(t[x].tg1,t[x].tg2,t[x].tg3,t[x].tg4,x&lt;&lt;1|1,mid+1,r);\n    else tagModify(t[x].tg2,t[x].tg2,t[x].tg4,t[x].tg4,x&lt;&lt;1|1,mid+1,r);\n\n    //\u6e05\u7a7atag\n    t[x].tg1=t[x].tg2=t[x].tg3=t[x].tg4=0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E5%90%89%E5%8F%B8%E6%9C%BA%E7%BA%BF%E6%AE%B5%E6%A0%91/#code-ac","title":"Code <code>AC</code>","text":"<pre><code>/*\nCB Ntsc\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n\nconst int N = 1e6 + 5;\nconst int M = 16;\nconst int INF = 2e9 + 5;\nconst int MOD = 9999973;\n\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\nbool f1;\nint tr[N&lt;&lt;2],a[N],pos[N];\nint q, n, m, ans, T;\nbool f2;\n\nstruct node{\n    int mx1a,cnt,mx2a,sum,mx1b;\n    int tg1,tg2,tg3,tg4;//4\u4e2atag\u5206\u522b\u662f\u5bf9\u5e94mx1a,mx2a\n}t[N&lt;&lt;2];\n\n\n//\u6807\u8bb0\u4f20\u9012\n\nvoid pushup(int x){\n    //\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u533a\u95f4\u548c\n    t[x].sum=t[x&lt;&lt;1].sum+t[x&lt;&lt;1|1].sum;\n    t[x].mx1a=max(t[x&lt;&lt;1].mx1a,t[x&lt;&lt;1|1].mx1a);\n    t[x].mx1b=max(t[x&lt;&lt;1].mx1b,t[x&lt;&lt;1|1].mx1b);\n    //\u7ef4\u62a4\u6b21\u5927\u503c\u53ca\u6700\u5927\u503c\u7684\u4e2a\u6570\n    if(t[x&lt;&lt;1].mx1a==t[x&lt;&lt;1|1].mx1a){\n        t[x].cnt=t[x&lt;&lt;1].cnt+t[x&lt;&lt;1|1].cnt;\n        t[x].mx2a=max(t[x&lt;&lt;1].mx2a,t[x&lt;&lt;1|1].mx2a);\n    }else if(t[x&lt;&lt;1].mx1a&gt;t[x&lt;&lt;1|1].mx1a){\n        t[x].cnt=t[x&lt;&lt;1].cnt;\n        t[x].mx2a=max(t[x&lt;&lt;1].mx2a,t[x&lt;&lt;1|1].mx1a);\n    }else{\n        t[x].cnt=t[x&lt;&lt;1|1].cnt;\n        t[x].mx2a=max(t[x&lt;&lt;1].mx1a,t[x&lt;&lt;1|1].mx2a);\n    }\n}\n\nvoid tagModify(int t1,int t2,int t3,int t4,int x,int l,int r){\n    t[x].sum+=t1*t[x].cnt+t2*(r-l+1-t[x].cnt);\n    t[x].mx1b=max(t[x].mx1b,t[x].mx1a+t3);\n    t[x].mx1a+=t1;\n\n    if(t[x].mx2a!=-INF)t[x].mx2a+=t2;\n\n\n    t[x].tg3=max(t[x].tg1+t3,t[x].tg3);\n    t[x].tg4=max(t[x].tg2+t4,t[x].tg4);\n    t[x].tg1+=t1;t[x].tg2+=t2;\n}\n\n\nvoid pushdown(int x,int l,int r){\n    int mid=l+r&gt;&gt;1;\n\n    int mx=max(t[x&lt;&lt;1].mx1a,t[x&lt;&lt;1|1].mx1a);\n    if(t[x&lt;&lt;1].mx1a==mx)tagModify(t[x].tg1,t[x].tg2,t[x].tg3,t[x].tg4,x&lt;&lt;1,l,mid);\n    else tagModify(t[x].tg2,t[x].tg2,t[x].tg4,t[x].tg4,x&lt;&lt;1,l,mid);\n\n    if(t[x&lt;&lt;1|1].mx1a==mx)tagModify(t[x].tg1,t[x].tg2,t[x].tg3,t[x].tg4,x&lt;&lt;1|1,mid+1,r);\n    else tagModify(t[x].tg2,t[x].tg2,t[x].tg4,t[x].tg4,x&lt;&lt;1|1,mid+1,r);\n\n    //\u6e05\u7a7atag\n    t[x].tg1=t[x].tg2=t[x].tg3=t[x].tg4=0;\n}\n\n//\u521d\u59cb\u5316\n\nvoid build(int x,int l,int r){\n    if(l==r){\n        t[x].sum=t[x].mx1a=t[x].mx1b=a[l];\n        t[x].cnt=1;\n        t[x].mx2a=-INF;\n        return ;\n    }\n    int mid=(l+r)&gt;&gt;1;\n    build(x&lt;&lt;1,l,mid);\n    build(x&lt;&lt;1|1,mid+1,r);\n\n    pushup(x);\n\n}\n\n//\u4fee\u6539\u90e8\u5206\n\nvoid tagAdd(int x,int v,int l,int r){\n    t[x].sum+=v*t[x].cnt+v*(r-l+1-t[x].cnt);\n    t[x].mx1a+=v;\n    t[x].mx1b=max(t[x].mx1b,t[x].mx1a);\n    if(t[x].mx2a!=-INF)t[x].mx2a+=v;\n\n    t[x].tg1+=v;t[x].tg2+=v;\n    t[x].tg3=max(t[x].tg1,t[x].tg3);\n    t[x].tg4=max(t[x].tg2,t[x].tg4);\n}\n\nvoid changeAdd(int x,int l,int r,int pl,int pr,int v){\n    if(pl&gt;r||pr&lt;l)return ;\n    if(l&gt;=pl&amp;&amp;r&lt;=pr){\n        tagAdd(x,v,l,r);\n        return ;\n    }\n    pushdown(x,l,r);\n    int mid=(l+r)&gt;&gt;1;\n    changeAdd(x&lt;&lt;1,l,mid,pl,pr,v);\n    changeAdd(x&lt;&lt;1|1,mid+1,r,pl,pr,v);\n    pushup(x);\n\n}\n\nvoid tagMin(int x,int v){\n    int tmp=t[x].mx1a-v;\n    t[x].sum-=t[x].cnt*tmp;\n    t[x].mx1a=v;\n    t[x].tg1-=tmp;\n}\n\nvoid changeMin(int x,int l,int r,int pl,int pr,int v){\n    if(pl&gt;r||pr&lt;l||v&gt;=t[x].mx1a)return ;//\u6ce8\u610f\u591a\u4e86\u6761\u4ef6\uff01\uff01\uff01\n    if(l&gt;=pl&amp;&amp;r&lt;=pr&amp;&amp;t[x].mx2a&lt;v){//\u6ce8\u610f\u591a\u4e86\u6761\u4ef6\uff01\uff01\uff01\n        tagMin(x,v);\n        return ;\n    }\n    pushdown(x,l,r);\n    int mid=(l+r)&gt;&gt;1;\n    changeMin(x&lt;&lt;1,l,mid,pl,pr,v);\n    changeMin(x&lt;&lt;1|1,mid+1,r,pl,pr,v);\n    pushup(x);\n}\n\n//\u67e5\u8be2\u90e8\u5206\n\nint querySum(int x,int l,int r,int pl,int pr){\n    if(pl&gt;r||pr&lt;l)return 0;\n    if(l&gt;=pl&amp;&amp;r&lt;=pr)return t[x].sum;\n    pushdown(x,l,r);\n    int mid=(l+r)&gt;&gt;1;\n    return querySum(x&lt;&lt;1,l,mid,pl,pr)+querySum(x&lt;&lt;1|1,mid+1,r,pl,pr);\n}\n\nint queryMaxA(int x,int l,int r,int pl,int pr){\n    if(pl&gt;r||pr&lt;l)return -INF;\n    if(l&gt;=pl&amp;&amp;r&lt;=pr)return t[x].mx1a;\n    pushdown(x,l,r);\n    int mid=(l+r)&gt;&gt;1;\n    return max(queryMaxA(x&lt;&lt;1,l,mid,pl,pr),queryMaxA(x&lt;&lt;1|1,mid+1,r,pl,pr));\n}\n\n\nint queryMaxB(int x,int l,int r,int pl,int pr){\n    if(pl&gt;r||pr&lt;l)return -INF;\n    if(l&gt;=pl&amp;&amp;r&lt;=pr)return t[x].mx1b;\n    pushdown(x,l,r);\n    int mid=(l+r)&gt;&gt;1;\n    return max(queryMaxB(x&lt;&lt;1,l,mid,pl,pr),queryMaxB(x&lt;&lt;1|1,mid+1,r,pl,pr));\n}\n\n// void updateB(int x,int l,int r){\n//     if(l==r){\n//         tb[x].v=max(tb[x].v,ta[x].v);\n//         return ;\n//     }\n\n//     int mid=(l+r)&gt;&gt;1;\n//     updateB(x&lt;&lt;1,l,mid);\n//     updateB(x&lt;&lt;1|1,mid+1,r);\n//     tb[x].mx=max(tb[x&lt;&lt;1].mx,tb[x&lt;&lt;1|1].mx);\n// }\n\n\nsigned main() {\n    // freopen(\"P6242_1.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n    // cerr&lt;&lt;1.00*(&amp;f2-&amp;f1)/1024/1024&lt;&lt;endl;\n    n=rd;m=rd;\n    for(int i=1;i&lt;=n;i++)a[i]=rd;\n\n    build(1,1,n);\n    // int c=0;\n    while(m--){\n        // cerr&lt;&lt;\"id=\"&lt;&lt;++c&lt;&lt;' ';\n        int op=rd,l=rd,r=rd;\n        if(op==1){\n            int k=rd;\n            changeAdd(1,1,n,l,r,k);\n        }if(op==2){\n            int v=rd;\n            changeMin(1,1,n,l,r,v);\n        }if(op==3){\n            cout&lt;&lt;querySum(1,1,n,l,r)&lt;&lt;endl;\n\n        }if(op==4){\n            cout&lt;&lt;queryMaxA(1,1,n,l,r)&lt;&lt;endl;\n        }if(op==5){\n            cout&lt;&lt;queryMaxB(1,1,n,l,r)&lt;&lt;endl;\n\n        }\n\n    }\n    return 0;\n}\n\n/*\n1\n2 5 1 \n0 0 1 \n0 0 4 \n\n*/\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%89%AB%E6%8F%8F%E7%BA%BF/","title":"\u626b\u63cf\u7ebf","text":"<p>www.bilibili.com</p> <p>\u6c42 \\(n\\) \u4e2a\u56db\u8fb9\u5e73\u884c\u4e8e\u5750\u6807\u8f74\u7684\u77e9\u5f62\u7684\u9762\u79ef\u5e76\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\le n \\le {10}^5\\)\uff0c\\(0 \\le x_1 &lt; x_2 \\le {10}^9\\)\uff0c\\(0 \\le y_1 &lt; y_2 \\le {10}^9\\)\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%89%AB%E6%8F%8F%E7%BA%BF/#_2","title":"\u626b\u63cf\u7ebf","text":"<p>\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u7ed3\u6784\u3002\u7ebf\u6bb5\u6811\u8282\u70b9\u5212\u5206\u5982\u56fe\u3002</p> <p>\u7136\u540e\u6211\u4eec\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u7684\u662f\u5f53\u524d\u8282\u70b9\u7684**\u76ee\u524d\u88ab\u8986\u76d6\u7684\u533a\u95f4**\u7684\u957f\u5ea6len\u4ee5\u53ca**\u662f\u5426\u88ab\u8986\u76d6**flg\u3002\u4e3a\u4e86\u7ef4\u62a4\u662f\u5426\u88ab\u8986\u76d6\uff0c\u6211\u4eec\u8fd8\u8981\u7ef4\u62a4**\u88ab\u8986\u76d6\u7684\u6b21\u6570**cnt\u3002</p> <p>\u7136\u540e\u6211\u4eec\u4ece\u4e0b\u5f80\u4e0a\u5f00\u59cb\u679a\u4e3e\u626b\u63cf\u7ebf\uff08\u7ea2\u8272\u7684\u7ebf\uff09</p> <p>\u5f53\u6211\u4eec\u9047\u5230\u77e9\u5f62\u4e0b\u754c\u7ebf\uff08\u59821,2,3\uff09\u65f6\uff0c\u6211\u4eec\u628a\u5f53\u524d\u77e9\u5f62\uff08\u5373\u5bf9\u5e94\u4e0b\u754c\u7684\u77e9\u5f62\uff09\u8986\u76d6\u4e86\u7684\u533a\u95f4+1\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u88ab\u8986\u76d6\u3002\u7136\u540e\u6211\u4eec\u8fdb\u884c\u4e00\u6b21query()\uff0c\u5f53\u8bbf\u95ee\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679cflg=1\uff0c\u5219res\u52a0\u4e0alen\u3002\uff08\u6ce8\u610f\u8fd9\u91cc\u7684len\u662f\u8981pushup\u7ef4\u62a4\u7684\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u8282\u70b9\u4ee3\u8868\u662f\u54ea\u4e9b\u8282\u70b9\u7684\u7956\u5148\u5c31\u628a\u533a\u95f4\u76f8\u52a0\uff09\u3002\u6c42\u51fares\u540e\uff0c\u6211\u4eec\u628a\u7b54\u6848\u52a0\u4e0ares\\times h\uff0c\u8fd9\u91cc\u7684h\u662f\u5f53\u524d\u626b\u63cf\u7ebf\u4e0e\u4e0a\u9762\u76f8\u90bb\u7684\u626b\u63cf\u7ebf\u7684\u9ad8\u5ea6\u5dee\u3002</p> <p>\u5f53\u6211\u4eec\u9047\u5230\u77e9\u5f62\u4e0a\u754c\u7ebf\uff08\u59824,5,6\uff09\u65f6\uff0c\u6211\u4eec\u628a\u5f53\u524d\u77e9\u5f62\uff08\u5373\u5bf9\u5e94\u4e0b\u754c\u7684\u77e9\u5f62\uff09\u8986\u76d6\u4e86\u7684\u533a\u95f4-1\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u88ab\u8986\u76d6\u3002\u7136\u540e\u6211\u4eec\u8fdb\u884c\u4e00\u6b21query()\uff0c\u540c\u7406\u3002</p> <p>\u5f53\u4e00\u4e2a\u8282\u70b9\u7684cnt\u88ab\u51cf\u62100\u65f6\uff0c\u6211\u4eec\u5c06\u5176flg=0\u3002\u53cd\u4e4b\u5f53\u6211\u4eec\u628a\u4e00\u4e2acnt=0\u7684\u8282\u70b9cnt+1\u65f6\uff0c\u6211\u4eec\u8981\u5c06\u5176flg=1\u3002\uff08\u5176\u5b9e\u53ef\u4ee5\u4e0d\u9700\u8981flg\uff09</p> <p>\u6700\u540e\u7684ans\u5373\u4e3a\u7b54\u6848</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%89%AB%E6%8F%8F%E7%BA%BF/#pushup","title":"pushup","text":"<p>\u5728pushup\u4e2d\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u4e09\u4e2a\u4fe1\u606f\u3002</p> <pre><code>if(tr[x].cnt)tr[x].len=X[tr[x].r+1]-X[tr[x].l];\n    else tr[x].len=tr[x&lt;&lt;1].len+tr[x&lt;&lt;1|1].len;\n</code></pre> <p>\u8bbe\u5f53\u524d\u8282\u70b9\u4e3ax\uff0c\u513f\u5b50\u4e3as1,s2\u3002</p> <ul> <li> <p>x.cnt&gt;0\uff0c\u5219\u8bf4\u660e\u5f53\u524d\u8282\u70b9\u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u6211\u4eec\u4e0d\u7ba1\u8fd9\u4e48\u591a\uff0c\u76f4\u63a5\u628alen\u4fee\u6539\u4e3a\u5f53\u524d\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u7684\u957f\u5ea6\u5373\u53ef\u3002</p> </li> <li> <p>x.cnt=0\uff0c\u5219\u5408\u5e76s1,s2\u7684len\u5373\u53ef\u3002</p> </li> </ul> <p>\u867d\u7136\u662f\u533a\u95f4\u4fee\u6539\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u67e5\u8be2\u5168\u5c40\u503c\uff08\u5373tr[1]\uff09\u6240\u4ee5\u4e0d\u9700\u8981pushdown\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%89%AB%E6%8F%8F%E7%BA%BF/#_3","title":"\u4ee3\u7801","text":"<pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\n#define lb lower_bound\nusing namespace std;\n\nconst int N=2e5+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,p,q,T,X[N&lt;&lt;1],ans;\n\nstruct line{\n    int x1,x2,y;\n    int tag;\n}lne[N&lt;&lt;1];//\u6ce8\u610f4\u500d\u7684\u7ebf \n\nstruct node{\n    int l,r,cnt,len;\n}tr[N&lt;&lt;3];//\u6ce8\u610f16\u500d\u7a7a\u95f4\u7ebf\u6bb5\u6811 \n\nvoid pushup(int x){\n    if(tr[x].cnt)tr[x].len=X[tr[x].r+1]-X[tr[x].l];\n    else tr[x].len=tr[x&lt;&lt;1].len+tr[x&lt;&lt;1|1].len;\n}\n\nvoid change(int x,int pl,int pr,int tag){\n    if(tr[x].l&gt;pr||tr[x].r&lt;pl)return ;\n    if(tr[x].l&gt;=pl&amp;&amp;tr[x].r&lt;=pr){\n        tr[x].cnt+=tag;\n        pushup(x);\n        return ;\n\n    }\n    change(x&lt;&lt;1,pl,pr,tag);\n    change(x&lt;&lt;1|1,pl,pr,tag);\n    pushup(x);\n} \n\n\nvoid build(int x,int l,int r){\n    tr[x]={l,r,0,0};\n//  tr[x].r=r;\n    if(l==r){\n\n        return ;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(x&lt;&lt;1,l,mid);\n    build(x&lt;&lt;1|1,mid+1,r);\n//  pushup();\n}\n\nbool cmp(line a,line b){\n    return a.y&lt;b.y;\n}\n\nsigned main(){\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        int x,y,a,b;\n        cin&gt;&gt;x&gt;&gt;y&gt;&gt;a&gt;&gt;b;\n        lne[i]={x,a,y,1};//\u4e0b\u8fb9\u754c \n        lne[i/\u4e0a\u8fb9\u754c\n        X[i]=x,X[i+n]=a; \n    }\n    n&lt;&lt;=1;\n    sort(lne+1,lne+n+1,cmp);\n    sort(X+1,X+n+1); \n    int sz=unique(X+1,X+n+1)-(X+1);\n    build(1,1,sz-1);\n\n    for(int i=1;i&lt;n;i++){\n        //i!=n\u56e0\u4e3a\u5f53\u524d\u662f\u8ba1\u7b97i~i+1 \u7684 \n        int l=lb(X+1,X+sz+1,lne[i].x1)-X;\n        int r=lb(X+1,X+sz+1,lne[i].x2)-X;\n        change(1,l,r-1,lne[i].tag);//\u6ce8\u610f\u504f\u79fb\u6620\u5c04\u4f20\u53c2\n        ans+=tr[1].len*(lne[i+1].y-lne[i].y); \n    }\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%9D%8E%E8%B6%85%E7%BA%BF%E6%AE%B5%E6%A0%91/","title":"\u674e\u8d85\u7ebf\u6bb5\u6811","text":"<p>\u8981\u6c42\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e0b\u7ef4\u62a4\u4e24\u4e2a\u64cd\u4f5c\uff1a</p> <ol> <li> <p>\u5728\u5e73\u9762\u4e0a\u52a0\u5165\u4e00\u6761\u7ebf\u6bb5\u3002\u8bb0\u7b2c \\(i\\) \u6761\u88ab\u63d2\u5165\u7684\u7ebf\u6bb5\u7684\u6807\u53f7\u4e3a \\(i\\)\u3002</p> </li> <li> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6570 \\(k\\)\uff0c\u8be2\u95ee\u4e0e\u76f4\u7ebf \\(x = k\\) \u76f8\u4ea4\u7684\u7ebf\u6bb5\u4e2d\uff0c\u4ea4\u70b9\u7eb5\u5750\u6807\u6700\u5927\u7684\u7ebf\u6bb5\u7684\u7f16\u53f7\u3002</p> </li> </ol> <p>\u672c\u9898\u8f93\u5165\u5f3a\u5236\u5728\u7ebf\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%9D%8E%E8%B6%85%E7%BA%BF%E6%AE%B5%E6%A0%91/#_2","title":"\u601d\u8def","text":"<p>\u5148\u770b\u770b\u9898\u76ee\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u662f\u4ec0\u4e48\uff1f\u662f\u5bf9\u4e8e\u6bcf\u4e2a \\(x\\)\uff0c\u5176\u4e0a\u65b9\u6700\u9ad8\u7684\u7ebf\u6bb5\u662f\u90a3\u4e00\u6761\u3002\u6211\u4eec\u60f3\u5230\uff0c\u5f53\u6211\u4eec\u5f80\u56fe\u4e2d\u52a0\u5165\u4e00\u6761\u65b0\u7684\u7ebf\u6bb5\u65f6\uff0c\u5047\u5982\u8fd9\u6761\u7ebf\u6bb5\u5728\u67d0\u4e2a\u533a\u95f4\u662f\u6700\u9ad8\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u628a\u8fd9\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u90fd\u4fee\u6539\u4e3a\u8fd9\u4e2a\u7ebf\u6bb5\u3002\u6240\u4ee5\u5f88\u660e\u663e\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u3002</p> <p>\u4f46\u662f\u9996\u5148\u8981\u660e\u786e\u4e00\u70b9\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u6761\u7ebf\u6bb5\u53ef\u80fd\u8981\u4fee\u6539\u591a\u4e2a\u533a\u95f4\uff0c\u4e5f\u6709\u53ef\u80fd\u4e00\u4e2a\u533a\u95f4\u90fd\u4e0d\u4fee\u6539\u3002</p> <p></p> <p></p> <p>\u6211\u4eec\u4ece\u7ebf\u6bb5\u6811\u7684\u6a21\u677f\u4e0a\u6765\u4fee\u6539\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%9D%8E%E8%B6%85%E7%BA%BF%E6%AE%B5%E6%A0%91/#_3","title":"\u4fee\u6539","text":"<p>\u9996\u5148\u662f\u4fee\u6539\u51fd\u6570\u3002\u8fd9\u91cc\u6211\u4eec\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u6dfb\u52a0\u4e00\u6761\u7ebf\u6bb5\uff0c\u7136\u540e\u4fee\u6539\u5bf9\u5e94\u7684\u503c\u3002</p> <pre><code>void change(int x,int l,int r,int ql,int qr,int v){\n    if(l&gt;=ql&amp;&amp;r&lt;=qr){\n        pushup(x,l,r,v);return ;\n    }\n    int mid=(l+r)&gt;&gt;1;\n    if(ql&lt;=mid)change(x&lt;&lt;1,l,mid,ql,qr,v);\n    if(qr&gt;mid)change(x&lt;&lt;1|1,mid+1,r,ql,qr,v);\n}\n</code></pre> <p>\u8fd9\u91cc\u7684\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u7b80\u6d01\u7684\u3002\u6ce8\u610f\u8fd9\u91cc\u5e94\u8be5\u662f\u62ff\u533a\u95f4\u4fee\u6539\u7684\u7ebf\u6bb5\u6811\u6a21\u677f\u6765\u4fee\u6539\uff08\u6ce8\u610f\u6700\u540e\u4e24\u884c\uff09\u800c\u4e0d\u662f\u5355\u70b9\u4fee\u6539\u7684\u3002</p> <p>\u89e3\u91ca\u4e00\u4e0b\u8fd9\u91cc\u7684 \\(v\\)\uff0c\u8fd9\u91cc\u7684 \\(v\\) \u662f\u63d2\u5165\u7684\u7ebf\u6bb5\u662f\u7f16\u53f7\u3002\u6211\u4eec\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53 <code>line{k,b}</code> \u6765\u8bb0\u5f55\u6bcf\u4e00\u6761\u7ebf\u6bb5\u7684 \\(k,b\\)\uff0c\u7136\u540e\u6211\u4eec\u4f7f\u7528\u6570\u7ec4 <code>lne[]</code> \u6765\u8bb0\u5f55\u6240\u6709\u7ebf\u6bb5\u3002</p> <p>\u5f53\u6211\u4eec\u8bbf\u95ee\u5230\u4e00\u4e2a\u533a\u95f4\u5728\u8981\u4fee\u6539\u7684\u533a\u95f4 \\([  ql,qr]\\) \u4e4b\u5185\u65f6\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4fee\u6539\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u4fe1\u606f\u4e86\u3002\u6211\u4eec\u4f7f\u7528  <code>pushup()</code> \u51fd\u6570\u6765\u4fee\u6539\uff08\u5b9e\u9645\u4e0a\u53eb\u505a <code>update</code> \u66f4\u597d\uff0c\u4f46\u7531\u4e8e\u662f\u7ebf\u6bb5\u6811\u6539\u7684\uff0c\u6211\u4eec\u59d1\u4e14\u53eb\u4ed6 <code>pushup</code>\uff09\u3002</p> <pre><code>void pushup(int x,int l,int r,int u){//ok\n    int &amp;v=s[x];\n    int mid=(l+r)&gt;&gt;1,bmid=cmp(cal(u,mid),cal(v,mid));\n    if(bmid==1||(!bmid&amp;&amp;u&lt;v))swap(u,v);\n\n    int bl=cmp(cal(u,l),cal(v,l));\n    int br=cmp(cal(u,r),cal(v,r));\n\n    if(bl==1||(!bl&amp;&amp;u&lt;v))pushup(x&lt;&lt;1,l,mid,u);\n    if(br==1||(!br&amp;&amp;u&lt;v))pushup(x&lt;&lt;1|1,mid+1,r,u);  \n}\n</code></pre> <p>\u8fd9\u91cc\u7684 <code>s[]</code> \u6570\u7ec4\u5c31\u76f8\u5f53\u4e8e\u7ebf\u6bb5\u6811\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u5728\u6211\u7684\u7ebf\u6bb5\u6811\u677f\u5b50\u91cc\u5c31\u662f <code>tr[]</code> \u6570\u7ec4\u3002\u6211\u4eec\u8fd9\u9897\u7ebf\u6bb5\u6811\u8bb0\u5f55\u7684\u662f\u201c\u533a\u95f4\u6700\u9ad8\u7684\u7ebf\u6bb5\u7684\u7f16\u53f7\u201d\uff0c\u6240\u4ee5 \\(s\\) \u4e2d\u8bb0\u5f55\u7684\u4fe1\u606f\u662f\u7ebf\u6bb5\u7684\u7f16\u53f7\u3002\u90a3\u4e48\u8fd9\u91cc\u7684 \\(x\\) \u5c31\u662f\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\u7684\u7f16\u53f7\uff0c<code>s[x]</code> \u5c31\u662f\u539f\u6765\u8fd9\u4e2a\u8282\u70b9\u4e0a\u8bb0\u5f55\u7684\u7ebf\u6bb5\u7684\u7f16\u53f7\u3002\u6211\u4eec\u8981\u6bd4\u8f83\u8fd9\u4e2a\u5c31\u7ebf\u6bb5 \\(v\\) \u548c\u6211\u4eec\u65b0\u52a0\u5165\u7684\u7ebf\u6bb5 \\(u\\) \u7684\u9ad8\u5ea6\u5173\u7cfb\uff0c\u5e76\u4e14\u8003\u8651\u66f4\u65b0 <code>s[x]</code>\u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4e24\u4e2a\u8f85\u52a9\u51fd\u6570\u3002</p> <pre><code>int cmp(double x, double y) {\n  if (x-y&gt;eps) return 1;\n  if (y-x&gt;eps) return -1;\n  return 0;\n}\n\ndb cal(int id,int p){//\n    return 1.00*lne[id].b/\u8ba1\u7b97\u76f4\u7ebfid\u5728x=p\u5904\u7684y\n}\n</code></pre> <p>\u7b2c\u4e00\u4e2a\u662f\u6bd4\u8f83\u5927\u5c0f\u7684\u3002\u8fd9\u4e2a\u4e0d\u7528\u8bf4\u4e86\uff0c\u56e0\u4e3a\u5c0f\u6570\u8fd0\u7b97\u4f1a\u51fa\u73b0\u7cbe\u5ea6\u95ee\u9898\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u6211\u6765\u89e3\u91ca\u4e00\u4e0b\uff0c\u5176\u5b9e\u4e5f\u6ca1\u4ec0\u4e48\uff0c\u5c31\u662f\u6211\u4eec\u4f20\u5165\u7ebf\u6bb5\u7684\u7f16\u53f7\u548c\u5f53\u524d\u7684 \\(x\\)\uff0c\u8ba1\u7b97\u8fd9\u6761\u7ebf\u6bb5\u5728 \\(x=p\\) \u65f6\u7684 \\(y\\) \u503c\uff08\u5373\u9ad8\u5ea6\u503c\uff09\u3002</p> <p>\u6211\u4eec\u518d\u56de\u5230 <code>pushup</code> \u51fd\u6570 \u3002</p> <p></p> <p>\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u5148\u8ba1\u7b97\u5f53 \\(x=mid\\) \u65f6\u4e24\u4e2a\u7ebf\u6bb5\u7684\u9ad8\u5ea6\u5173\u7cfb\u3002\u5047\u8bbe\u7ebf\u6bb5 \\(u\\)\uff08\u8bb0\u4f4f\u5728\u8be5\u4f8b\u5b50\u91cc \\(u\\) \u662f\u65b0\u52a0\u5165\u7684\u7ebf\u6bb5\uff09\u5728 \\(x =mid\\) \u65f6\u7684\u9ad8\u5ea6\u5927\u4e8e \\(v\\) \u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a \\(u,v\\) \u4ea4\u6362\u4e00\u4e0b\uff0c\u6709\u5229\u4e8e\u51cf\u5c11\u8ba8\u8bba\u60c5\u51b5\u3002\u6ce8\u610f\u8fd9\u91cc\u4e0d\u4ec5\u4ec5\u662f\u7b80\u5355\u4ea4\u6362\u503c\uff0c\u800c\u662f\u628a\u6620\u5c04\u5173\u7cfb\u4e5f\u4ea4\u6362\u4e86\u3002</p> <p></p> <p>\u5728\u4ea4\u6362\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u9ed8\u8ba4 \\(u\\) \u5728 \\(x=mid\\) \u5904\u6bd4 \\(v\\) \u4f4e\u4e86\u3002\u90a3\u4e48\u8fd9\u65f6\u6211\u4eec\u6765\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u3002\u6211\u4eec\u8bb0\u5f55 \\(4\\) \u4e2a\u7aef\u70b9\u7684\u9ad8\u5ea6\u503c \\(ul,ur,vl,vr\\)\u3002</p> <p></p> <ul> <li> <p>\u5f53 \\(vl\u2265ul\\) \u4e14 \\(vr\u2265ur\\) \u65f6\uff0c\u5728 \\([l,r]\\) \u4e2d \\(u\\) \u80af\u5b9a\u4e0d\u5982 \\(v\\)\u3002\u76f8\u53cd\u4e5f\u5982\u6b64\u3002</p> </li> <li> <p>\u5f53 \\(vl&gt;ul\\) \u4f46\u662f \\(vr&lt;ur\\) \u65f6\uff0c\u90a3\u4e48\u8bf4\u660e\u7ebf\u6bb5 \\(u,v\\) \u5728 \\([mid,r]\\) \u533a\u95f4\u5185\u80af\u5b9a\u6709\u4ea4\u70b9\u3002\u8fd9\u65f6\u533a\u95f4 \\([l,mid]\\) \u7684\u7b54\u6848\u5e94\u8be5\u4e0d\u53d8\uff08\u4f46\u7531\u4e8e\u6211\u4eec\u4e0d\u77e5\u9053 \\(u,v\\) \u6709\u6ca1\u6709\u4ea4\u6362\u8fc7\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u4fee\u6539\u4e00\u4e0b\u3002\u4fee\u6539\u4e5f\u5f88\u7b80\u5355\uff0c\u5bf9\u5e94\u533a\u95f4\u4fee\u6539\u7684\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u628a \\([l,mid]\\) \u6253\u4e0a tag\uff09\uff0c\u533a\u95f4 \\([mid,r]\\) \u6211\u4eec\u5e94\u8be5\u9012\u5f52\u4e0b\u53bb\u3002\uff08\u5982\u4e0a\u56fe\uff09</p> </li> </ul> <p></p> <ul> <li>\u5f53 \\(ul&gt;vl\\) \u4f46\u662f \\(vr&gt;ur\\) \u65f6\uff0c\u90a3\u4e48\u8bf4\u660e\u7ebf\u6bb5 \\(u,v\\) \u5728 \\([l,mid]\\) \u533a\u95f4\u5185\u80af\u5b9a\u6709\u4ea4\u70b9\u3002\u8fd9\u65f6\u533a\u95f4 \\([mid,r]\\) \u7684\u7b54\u6848\u5e94\u8be5\u4e0d\u53d8\uff08\u4f46\u7531\u4e8e\u6211\u4eec\u4e0d\u77e5\u9053 \\(u,v\\) \u6709\u6ca1\u6709\u4ea4\u6362\u8fc7\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u4fee\u6539\u4e00\u4e0b\u3002\u4fee\u6539\u4e5f\u5f88\u7b80\u5355\uff0c\u5bf9\u5e94\u533a\u95f4\u4fee\u6539\u7684\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u628a \\([mid,r]\\) \u6253\u4e0a tag\uff09\uff0c\u533a\u95f4 \\([l,mid]\\) \u6211\u4eec\u5e94\u8be5\u9012\u5f52\u4e0b\u53bb\u3002\uff08\u5982\u4e0a\u56fe\uff09</li> </ul> <p>\u6ce8\u610f\u5728\u8ba8\u8bba\u65f6\u6211\u4eec\u8981\u6ce8\u610f\u5230\u5728 \\(x=mid\\) \u5904 \\(v\\) \u6bd4 \\(u\\) \u9ad8\u8fd9\u4e2a\u5927\u524d\u63d0\u54c8\u3002</p> <p>\u8fd8\u6709\u4e24\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5373\u6709\u4e00\u4e2a\u7aef\u70b9\u91cd\u5408\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u77e5\u9053 \\(u,v\\) \u6709\u6ca1\u6709\u4ea4\u6362\u8fc7\u4e86\u3002\u6211\u4eec\u8003\u5bdf\u4e0b\u9762\u7684\u4ee3\u7801\u3002</p> <pre><code>    if(bl==1||(!bl&amp;&amp;u&lt;v))pushup(x&lt;&lt;1,l,mid,u);\n</code></pre> <p>\u6211\u4eec\u628a <code>!bl&amp;&amp;u&lt;v</code> \u8fd9\u79cd\u60c5\u51b5\u548c <code>bl==1</code>\uff08\u5373 \\(ul&gt;vl\\)\uff09\u7684\u60c5\u51b5\u653e\u5728\u4e00\u8d77\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u65b0\u52a0\u5165\u7684\u7ebf\u6bb5\u7684\u7f16\u53f7\u4e00\u5b9a\u662f\u5927\u4e8e\u4e4b\u524d\u7684\u7ebf\u6bb5\u7684\u7f16\u53f7\u7684\uff0c\u6240\u4ee5\u5982\u679c \\(u&lt;v\\)\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e \\(v\\) \u662f\u65b0\u7ebf\u6bb5\u3002\u5982\u4e0b\u3002\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5f80\u5de6\u8fb9\u7684\u533a\u95f4\u9012\u5f52\u3002</p> <p></p> <p>\u53e6\u5916\u4e00\u79cd\u60c5\u51b5\u7c7b\u4f3c\uff0c\u8bf7\u5927\u5bb6\u81ea\u5df1\u60f3\u4e00\u60f3\u5427\uff01</p> <p>\u90a3\u4e48\u73b0\u5728 \\(6\\) \u79cd\u60c5\u51b5\u6211\u4eec\u90fd\u8ba8\u8bba\u8fc7\u4e86\uff0c\u8bf7\u4ed4\u7ec6\u7406\u89e3\u9e2d\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%9D%8E%E8%B6%85%E7%BA%BF%E6%AE%B5%E6%A0%91/#_4","title":"\u67e5\u8be2","text":"<p>\u73b0\u5728\u6211\u4eec\u6765\u770b\u67e5\u8be2\u7684\u90e8\u5206\u3002</p> <pre><code>pr query(int x,int l,int r,int q){\n    if(q&lt;l||q&gt;r){\n        return {0,0};\n    }\n    db res=cal(s[x],q);\n    if(l==r)return {res,s[x]};\n    int mid=(l+r)&gt;&gt;1;\n\n    return pmax({res,s[x]},pmax(query(x&lt;&lt;1|1,mid+1,r,q),query(x&lt;&lt;1,l,mid,q)));\n}\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u91cc\u548c\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u8fd8\u662f\u6709\u4e00\u70b9\u533a\u522b\u7684\u3002\u8fd9\u91cc\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a <code>pair&lt;double,int&gt;</code> \u5206\u522b\u662f\u5728 \\(x=q\\) \u65f6\u7684\u6700\u9ad8\u7684\u7ebf\u6bb5\u7684\u9ad8\u5ea6\u548c\u7ebf\u6bb5\u7684\u7f16\u53f7\u3002</p> <p>\u9996\u5148\u5bf9\u4e8e\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u5373\u8be2\u95ee\u7684 \\(x\\) \u5728\u8303\u56f4\u4e4b\u5916\uff0c\u6211\u4eec\u76f4\u63a5\u8fd4\u56de\u6700\u5c0f\u503c \\(-inf\\) \u6216\u8005 \\(0\\)\uff08\u56e0\u4e3a\u672c\u9898\u6c42\u6700\u5927\u503c\uff09\u5373\u53ef\uff0c\u540c\u65f6\u8fd4\u56de \\(id=0\\) \u8868\u793a\u4e0d\u5b58\u5728\u8fd9\u6761\u7ebf\u6bb5\u3002</p> <p>\u7136\u540e\u6211\u4eec\u5c31\u9700\u8981\u8ba1\u7b97\u5f53\u524d\u8fd9\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u7ebf\u6bb5\u5728 \\(x=q\\) \u65f6\u7684\u9ad8\u5ea6\u4e86\uff0c\u6211\u4eec\u8bb0\u4e3a \\(res\\)\u3002\u5047\u5982 \\(l=r\\)\uff0c\u90a3\u4e48\u8bf4\u660e\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u53f6\u5b50\u8282\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de \\(res\\) \u5373\u53ef\u3002\u4f46\u662f\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u8003\u8651\u5f53\u524d\u8282\u70b9\u7684\u7ebf\u6bb5\u5462\uff1f\u76f4\u63a5\u9012\u5f52\u4e0b\u53bb\u4e0d\u5c31\u884c\u4e86\uff1f</p> <p>\u6ce8\u610f\uff01\u8fd9\u91cc\u6211\u4eec\u53ef\u6ca1\u6709 <code>pushdown</code> \u64cd\u4f5c\uff01\u6240\u4ee5\u4e5f\u8bb8\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u4e86\u65b0\u52a0\u5165\u7684\u9ad8\u5ea6\u66f4\u9ad8\u7684\u7ebf\u6bb5\uff0c\u4f46\u662f\u53f6\u5b50\u8282\u70b9\u5e76\u6ca1\u6709\u66f4\u65b0\uff01\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u91c7\u7eb3\u975e\u53f6\u5b50\u8282\u70b9\u4f46\u4e5f\u5c5e\u4e8e\u533a\u95f4\u5185\u7684\u8282\u70b9\u4fe1\u606f\u3002\u5f53\u7136\uff0c\u65e2\u7136\u8fd9\u4e2a\u8282\u70b9 \\([l,r]\\) \u8bb0\u5f55\u4e86\u8fd9\u4e2a\u7ebf\u6bb5\uff0c\u5c31\u8bf4\u660e\u518d\u67d0\u4e2a\u65f6\u523b\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6700\u9ad8\u70b9\u90fd\u5728\u8fd9\u4e2a\u7ebf\u6bb5\u4e0a\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u7ebf\u6bb5\u4e00\u5b9a\u8986\u76d6\u4e86\u8fd9\u4e2a\u533a\u95f4\uff0c\u90a3\u4e48\u5bf9\u4e8e \\(x=q\\) \u4e5f\u4e00\u5b9a\u7ecf\u8fc7\u4e86\u8fd9\u6761\u7ebf\u6bb5\u3002\u4f46\u662f\u81f3\u4e8e\u8fd9\u6761\u7ebf\u6bb5\u662f\u5426\u662f\u6700\u7ec8\u7b54\u6848\u6211\u4eec\u6682\u65f6\u8fd8\u4e0d\u77e5\u9053\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u6761\u7ebf\u6bb5\u4e00\u5b9a\u6709\u6210\u4e3a\u7b54\u6848\u7684\u53ef\u80fd\u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u8fd8\u9700\u8981\u5f15\u5165\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570 <code>pmax()</code>\u3002</p> <pre><code>pr pmax(pr a,pr b){//\n    if(cmp(a.pf,b.pf)==-1)return b;\n    if(cmp(a.pf,b.pf)==1)return a;\n    if(a.ps&lt;b.ps)return a;\n    return b;\n}\n</code></pre> <p>\u8fd9\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u662f\u4f20\u5165\u4e24\u4e2a\u7ebf\u6bb5 \\(a,b\\)\uff08\u6ce8\u610f\u8fd9\u91cc\u4f20\u5165\u7684\u7ebf\u6bb5 \\(a,b\\) \u4e3a <code>pair&lt;double,int&gt;</code> \u7c7b\u578b\uff0c\u5373\u5df2\u7ecf\u8ba1\u7b97\u597d\u4e86\u5f53 \\(x=q\\) \u65f6\u7684\u9ad8\u5ea6\u503c\u4e86\uff0c\u5b58\u653e\u5728 <code>pair</code> \u7684 <code>.first</code> \u4e2d\uff09\uff0c\u6211\u4eec\u6bd4\u8f83\u4e24\u4e2a\u7ebf\u6bb5\u7684 <code>.first</code>\uff08\u4ee3\u7801\u4e2d <code>define</code> \u4e3a <code>pf</code>\uff09\uff0c\u8fd4\u56de\u9ad8\u7684\u90a3\u4e2a\u5373\u53ef\u3002\u8bf7\u6ce8\u610f\u56de\u987e <code>cmp</code> \u51fd\u6570\u3002</p> <p>\u5f53\u7136\uff0c\u9898\u76ee\u8981\u6c42\u201c\u82e5\u6709\u591a\u6761\u7ebf\u6bb5\u4e0e\u67e5\u8be2\u76f4\u7ebf\u7684\u4ea4\u70b9\u7eb5\u5750\u6807\u90fd\u662f\u6700\u5927\u7684\uff0c\u5219\u8f93\u51fa\u7f16\u53f7\u6700\u5c0f\u7684\u7ebf\u6bb5\u201d\uff0c\u6240\u4ee5\u5c31\u6709\u4e86\u6700\u540e\u4e24\u884c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%9D%8E%E8%B6%85%E7%BA%BF%E6%AE%B5%E6%A0%91/#_5","title":"\u5176\u4ed6","text":"<p>\u73b0\u5728\u7ebf\u6bb5\u6811\u90e8\u5206\u5df2\u7ecf\u8bb2\u5b8c\u4e86\uff0c\u6211\u4eec\u6700\u540e\u8003\u5bdf\u52a0\u7ebf\u6bb5\u7684\u51fd\u6570\uff08\u4e0d\u662f\u5728\u7ebf\u6bb5\u6811\u4e2d\uff0c\u800c\u662f\u628a\u7ebf\u6bb5\u52a0\u5165 <code>lne[]</code> \u6570\u7ec4\u4e2d\uff09\u3002</p> <pre><code>void add(int x,int y,int a,int b){\n    if(x==a){\n        lne[++cnt].k=0,lne[cnt].b=max(y,b);\n    }else{\n        lne[+/(a-x),lne[cnt].b=y-lne[cnt].k*x;\n    }\n}\n</code></pre> <p>\u8fd9\u91cc\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u4e3a \\((x,y)(a,b)\\)\uff0c\u6ce8\u610f \\(x=a\\) \u7684\u7279\u6b8a\u60c5\u51b5\u3002\u5176\u4ed6\u5c31\u662f\u8ba1\u7b97\u659c\u7387\u548c\u622a\u8ddd\u7684\u5e38\u89c4\u64cd\u4f5c\u4e86\uff0c\u521d\u4e2d\u77e5\u8bc6\u5373\u53ef\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%9D%8E%E8%B6%85%E7%BA%BF%E6%AE%B5%E6%A0%91/#_6","title":"\u4ee3\u7801","text":"<pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . FancyKnowledge .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\u5934\u6587\u4ef6\n#include&lt;bits/stdc++.h&gt;\n\n//\u6570\u636e\u7c7b\u578b\n#define int long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n#define pr pair&lt;double,int&gt; \n#define pf first\n#define ps second\n//\u547d\u540d\u7a7a\u95f4\nusing namespace std;\n//\u5e38\u91cf\nconst int N=4e5+5;\nconst int M=1e3;\nconst int MOD=1e9+1;\nconst int INF=1e9;\nconst db eps=1e-9;\n//\u53d8\u91cf\nint n,m,a,b,c,s[N],y[N],lans,res,tmp,cnt,web[M][M];\n\nstruct line{\n    db k,b;\n}lne[N];\n\nvoid add(int x,int y,int a,int b){\n    if(x==a){\n        lne[+/why max?\n\n    }else{\n        lne[+/(a-x),lne[cnt].b=y-lne[cnt].k*x;\n    }\n}\n\nint cmp(double x, double y) {\n  if (x-y&gt;eps) return 1;\n  if (y-x&gt;eps) return -1;\n  return 0;\n}\n\ndb cal(int id,int p){//\n    return 1.00*lne[id].b/\u8ba1\u7b97\u76f4\u7ebfid\u5728x=p\u5904\u7684y\n}\n\npr pmax(pr a,pr b){//\n    if(cmp(a.pf,b.pf)==-1)return b;\n    if(cmp(a.pf,b.pf)==1)return a;\n    if(a.ps&lt;b.ps)return a;\n    return b;\n\n}\n\nvoid pushup(int x,int l,int r,int u){//ok\n    int &amp;v=s[x];\n    int mid=(l+r)&gt;&gt;1,bmid=cmp(cal(u,mid),cal(v,mid));\n    if(bmid==1||(!bmid&amp;&amp;u&lt;v))swap(u,v);\n\n    int bl=cmp(cal(u,l),cal(v,l));\n    int br=cmp(cal(u,r),cal(v,r));\n\n    if(bl==1||(!bl&amp;&amp;u&lt;v))pushup(x&lt;&lt;1,l,mid,u);\n    if(br==1||(!br&amp;&amp;u&lt;v))pushup(x&lt;&lt;1|1,mid+1,r,u);\n\n\n}\n\n\nvoid change(int x,int l,int r,int ql,int qr,int v){//ok\n    if(l&gt;=ql&amp;&amp;r&lt;=qr){\n        pushup(x,l,r,v);return ;\n    }\n    int mid=(l+r)&gt;&gt;1;\n    if(ql&lt;=mid)change(x&lt;&lt;1,l,mid,ql,qr,v);\n    if(qr&gt;mid)change(x&lt;&lt;1|1,mid+1,r,ql,qr,v);\n}\n\n\npr query(int x,int l,int r,int q){//ok\n//  cerr&lt;&lt;\"query l=\"&lt;&lt;l&lt;&lt;\" r=\"&lt;&lt;r&lt;&lt;endl;\n    if(q&lt;l||q&gt;r){\n        return {0,0};\n    }\n    db res=cal(s[x],q);\n    if(l==r)return {res,s[x]};\n    int mid=(l+r)&gt;&gt;1;\n\n    return pmax({res,s[x]},pmax(query(x&lt;&lt;1|1,mid+1,r,q),query(x&lt;&lt;1,l,mid,q)));\n}\n\n\nvoid solve(){\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;i++){\n        int op,x,y,a,b,k;\n        cin&gt;&gt;op;\n        if(op){\n            cin&gt;&gt;x&gt;&gt;y&gt;&gt;a&gt;&gt;b;\n            x=(x+lans-1+39989)%39989+1;\n            y=(y/\u6ce8\u610f\u52a0\u4e0a\u4e00\u4e2aMOD\n            a=(a+lans-1+39989)%39989+1;\n            b=(b+lans-1+MOD)%MOD+1;\n            if(x&gt;a)swap(x,a),swap(y,b);\n            add(x,y,a,b);\n            change(1,1,39989,x,a,cnt);\n        }else{\n            cin&gt;&gt;k;\n\n//          cerr&lt;&lt;\"query k=\"&lt;&lt;(k+lans-1+39989)%39989+1&lt;&lt;endl;\n            lans=query(1,1,39989,(k+lans-1+39989)%39989+1).ps;\n            cout&lt;&lt;lans&lt;&lt;endl;\n        }\n    }\n}\n\nsigned main(){\n    int T;\n    //  cin&gt;&gt;T;\n    T=1;\n    while(T--){\n        solve();\n    }\n\n    return 0;\n}\n</code></pre> <p>\u6ce8\u610f\u8fd9\u662f\u7ebf\u6bb5\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u76f4\u7ebf\uff0c\u6211\u4eec\u628a <code>change(1,1,39989,x,a,cnt);</code> \u4e2d\u7684 \\(x,a\\) \u4fee\u6539\u4e3a\u8be2\u95ee\u7684 \\(x\\) \u7684\u503c\u57df\u5373\u53ef\u3002\u539f\u6765\u7684 \\(x,a\\) \u4e3a\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u7684 \\(x\\) \u503c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E6%9D%8E%E8%B6%85%E7%BA%BF%E6%AE%B5%E6%A0%91/#jsoi2008-blue-mary","title":"\u7ec3\u4e60[JSOI2008] Blue Mary \u5f00\u516c\u53f8","text":"<p>\u7b2c\u4e00\u884c \uff1a\u4e00\u4e2a\u6574\u6570 \\(N\\)\uff0c\u8868\u793a\u65b9\u6848\u548c\u8be2\u95ee\u7684\u603b\u6570\u3002</p> <p>\u63a5\u4e0b\u6765 \\(N\\) \u884c\uff0c\u6bcf\u884c\u5f00\u5934\u4e00\u4e2a\u5355\u8bcd <code>Query</code> \u6216 <code>Project</code>\u3002</p> <p>\u82e5\u5355\u8bcd\u4e3a <code>Query</code>\uff0c\u5219\u540e\u63a5\u4e00\u4e2a\u6574\u6570 \\(T\\)\uff0c\u8868\u793a Blue Mary \u8be2\u95ee\u7b2c \\(T\\) \u5929\u7684\u6700\u5927\u6536\u76ca\u3002</p> <p>\u82e5\u5355\u8bcd\u4e3a <code>Project</code>\uff0c\u5219\u540e\u63a5\u4e24\u4e2a\u5b9e\u6570 \\(S, P\\)\uff0c\u8868\u793a\u8be5\u79cd\u8bbe\u8ba1\u65b9\u6848\u7b2c\u4e00\u5929\u7684\u6536\u76ca \\(S\\)\uff0c\u4ee5\u53ca\u4ee5\u540e\u6bcf\u5929\u6bd4\u4e0a\u4e00\u5929\u591a\u51fa\u7684\u6536\u76ca \\(P\\)\u3002</p> <p>\u5206\u6790</p> <p>\u672c\u9898\u5373\u4e0d\u65ad\u52a0\u5165\u76f4\u7ebf \\(y=S+P\\times(x-1)\\)\uff0c\u6c42\u5bf9\u4e8e\u67d0\u4e2a \\(x\\) \u5728\u6240\u6709\u76f4\u7ebf\u4e2d\u6700\u9ad8\u7684 \\(y\\) \u503c\u4e3a\uff1f</p> <p>\u4ee3\u7801</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . FancyKnowledge .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\u5934\u6587\u4ef6\n#include&lt;bits/stdc++.h&gt;\n\n//\u6570\u636e\u7c7b\u578b\n#define int long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n#define pr pair&lt;double,int&gt; \n#define pf first\n#define ps second\n//\u547d\u540d\u7a7a\u95f4\nusing namespace std;\n//\u5e38\u91cf\nconst int N=4e5+5;\nconst int M=1e3;\nconst int MOD=1e9+1;\nconst int INF=1e9;\nconst int MT=5e4;\nconst db eps=1e-9;\n//\u53d8\u91cf\nint n,m,a,b,c,s[N],y[N],lans,res,tmp,cnt,web[M][M];\n\nstruct line{\n    db k,b;\n}lne[N];\n\nvoid add(db s,db p){\n    lne[++cnt].k=p,lne[cnt].b=s-p;\n\n}\n\nint cmp(double x, double y) {\n  if (x-y&gt;eps) return 1;\n  if (y-x&gt;eps) return -1;\n  return 0;\n}\n\ndb cal(int id,int p){//\n    return 1.00*lne[id].b/\u8ba1\u7b97\u76f4\u7ebfid\u5728x=p\u5904\u7684y\n}\n\npr pmax(pr a,pr b){//\n    if(cmp(a.pf,b.pf)==-1)return b;\n    if(cmp(a.pf,b.pf)==1)return a;\n    if(a.ps&lt;b.ps)return a;\n    return b;\n\n}\n\nvoid pushup(int x,int l,int r,int u){//ok\n    int &amp;v=s[x];\n    int mid=(l+r)&gt;&gt;1,bmid=cmp(cal(u,mid),cal(v,mid));\n    if(bmid==1||(!bmid&amp;&amp;u&lt;v))swap(u,v);\n\n    int bl=cmp(cal(u,l),cal(v,l));\n    int br=cmp(cal(u,r),cal(v,r));\n\n    if(bl==1||(!bl&amp;&amp;u&lt;v))pushup(x&lt;&lt;1,l,mid,u);\n    if(br==1||(!br&amp;&amp;u&lt;v))pushup(x&lt;&lt;1|1,mid+1,r,u);\n\n\n}\n\n\nvoid change(int x,int l,int r,int ql,int qr,int v){//ok\n    if(l&gt;=ql&amp;&amp;r&lt;=qr){\n        pushup(x,l,r,v);return ;\n    }\n    int mid=(l+r)&gt;&gt;1;\n    if(ql&lt;=mid)change(x&lt;&lt;1,l,mid,ql,qr,v);\n    if(qr&gt;mid)change(x&lt;&lt;1|1,mid+1,r,ql,qr,v);\n}\n\n\npr query(int x,int l,int r,int q){//ok\n//  cerr&lt;&lt;\"query l=\"&lt;&lt;l&lt;&lt;\" r=\"&lt;&lt;r&lt;&lt;endl;\n    if(q&lt;l||q&gt;r){\n        return {0,0};\n    }\n    db res=cal(s[x],q);\n    if(l==r)return {res,s[x]};\n    int mid=(l+r)&gt;&gt;1;\n\n    return pmax({res,s[x]},pmax(query(x&lt;&lt;1|1,mid+1,r,q),query(x&lt;&lt;1,l,mid,q)));\n}\n\n\nvoid solve(){\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;i++){\n        string s;\n        int T;\n        db S,P;\n        cin&gt;&gt;s;\n        if(s==\"Project\"){\n            cin&gt;&gt;S&gt;&gt;P;\n\n            add(S,P);\n            change(1,1,MT,1,MT,cnt);\n        }else{\n            cin&gt;&gt;T;\n            lans=query(1,1,MT,T).pf;\n            cout&lt;&lt;lans/100&lt;&lt;endl;\n        }\n    }\n}\n\nsigned main(){\n    solve();\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91/","title":"\u7ebf\u6bb5\u6811","text":"<p>\u7ebf\u6bb5\u6811\u5206\u88c2</p> <p>01\u7ebf\u6bb5\u6811</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91/#_1","title":"\u7ebf\u6bb5\u6811","text":"<p>\u8463\u6653\u5bfc\u5e08\u7684\u7b2c\u4e00\u5802\u8bfe\uff01</p> <p>https://blog.csdn.net/weixin_43914593/article/details/108221534</p> <p>https://ntsc-yrx.github.io/2022/07/09/CPP%E8%BF%9B%E9%98%B6-%E7%BA%BF%E6%AE%B5%E6%A0%91/</p> <p>\u7ebf\u6bb5\u6811</p> <p>\u7ebf\u6bb5\u6811\u662f\u4e00\u79cd\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u4e0e\u533a\u95f4\u6811\u76f8\u4f3c\uff0c\u5b83\u5c06\u4e00\u4e2a\u533a\u95f4\u5212\u5206\u6210\u4e00\u4e9b\u5355\u5143\u533a\u95f4\uff0c\u6bcf\u4e2a\u5355\u5143\u533a\u95f4\u5bf9\u5e94\u7ebf\u6bb5\u6811\u4e2d\u7684\u4e00\u4e2a\u53f6\u7ed3\u70b9\u3002 \u4f7f\u7528\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5feb\u901f\u7684\u67e5\u627e\u67d0\u4e00\u4e2a\u8282\u70b9\u5728\u82e5\u5e72\u6761\u7ebf\u6bb5\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(log N)\\)\u3002\u800c\u672a\u4f18\u5316\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\\(2N\\)\uff0c\u5b9e\u9645\u5e94\u7528\u65f6\u4e00\u822c\u8fd8\u8981\u5f00\\(4N\\)\u7684\u6570\u7ec4\u4ee5\u514d\u8d8a\u754c\uff0c\u56e0\u6b64\u6709\u65f6\u9700\u8981\u79bb\u6563\u5316\u8ba9\u7a7a\u95f4\u538b\u7f29\u3002</p> <p>\u5b9e\u73b0</p> <p>\u6211\u4eec\u770b\u5230\u4e0b\u56fe\u3002\u8fd9\u662f\u4e00\u98971~8\u7684\u7ebf\u6bb5\u6811\u3002</p> <p></p> <p>\u5bf9\u4e8e\u6700\u57fa\u672c\u7684\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u9700\u8981\u652f\u6301\u4ee5\u4e0b\u51e0\u4e2a\u64cd\u4f5c\u3002</p> <ul> <li> <p>query \u67e5\u8be2</p> </li> <li> <p>change \u4fee\u6539</p> </li> </ul> <p>\u6211\u4eec\u5148\u6765\u770b\u7b2c\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u4f7f\u7528\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6c42\u548c\uff1f</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\u3002\u6211\u4eec\u9700\u8981\u5c06[3,3]\u589e\u52a0a\uff0c\u6211\u4eec\u8981\u505a\u54ea\u4e9b\u4e8b\u60c5\u5462\uff1f</p> <p>\u7b54\u6848\u662f\uff1a\u6211\u4eec\u9700\u8981\u5c06\u4ece[3,3]\u5230\u6839\u8282\u70b9\u7684\u8fde\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u589e\u52a0a\uff0c\u5bf9\u4e0d\u5bf9\uff1f</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5b9e\u73b0\u4e86\u3002\u5df2\u77e5\u7ebf\u6bb5\u6811\u662f\u4e00\u9897\u5b8c\u5168\u4e8c\u53c9\u6811\uff0ci\u7684\u5de6\u513f\u5b50\u5c31\u662f2i,\u53f3\u513f\u5b50\u5c31\u662f2i+1.</p> <p>\u6211\u4eec\u9700\u8981\u5199\u51fa\u4e0b\u9762\u7684\u4ee3\u7801 (\u6211\u4eec\u5c06\u7ebf\u6bb5\u6811\u5b58\u5728\u6570\u7ec4tree[]\u4e2d\uff0c\u5927\u5c0f\u5e94\u8be5\u5f00\u5230\u8282\u70b9\u6570\u6700\u5927\u503c\u76844\u500d)</p> <pre><code>void change(int now,int l,int r,int goal,int v){\n\n}\n</code></pre> <p>\u56e0\u4e3a\u4fee\u6539\u662f\u9012\u5f52\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u9700\u8981\u4f20\u5165\u4e0b\u5217\u53c2\u6570\uff1a</p> <ul> <li> <p>\u5f53\u524d\u6240\u5904\u5728\u7684\u4f4d\u7f6e\uff08\u6570\u7ec4\u4e0b\u6807\uff09</p> </li> <li> <p>\u5f53\u524d\u8282\u70b9\u7684l\uff0cr\uff08\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u4fe1\u606f\u5b58\u5728\u5f53\u524d\u8282\u70b9\u4e2d\uff0c\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u4e0a\u9762\u4ee3\u7801\u4e00\u6837\u76f4\u63a5\u4f20\u4e0b\u53bb\uff09</p> </li> <li> <p>\u76ee\u6807\u8282\u70b9</p> </li> <li> <p>\u8981\u66f4\u6539\u7684\u503c</p> </li> </ul> <p>\u597d\u7684\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u505a\u4ec0\u4e48\u5462\uff1f \u6211\u4eec\u7684\u9012\u5f52\u8d77\u70b9\u662f</p> <pre><code>change(1,1,n,goal,v)\n</code></pre> <p>\u5f80\u4e0b \u6211\u4eec\u8981\u4e0d\u65ad\u4e8c\u5206\u5411\u4e0b\u67e5\u627e\u6211\u4eec\u8981\u4fee\u6539\u7684\u90a3\u4e2a\u70b9\uff0c\u5f53\u7136\u5982\u679c\u5df2\u7ecf\u627e\u5230\u4e86\u5c31\u53ef\u4ee5return\u4e86</p> <pre><code>void change(int now,int l,int r,int goal,int v){\n    if(now=goal){\n        tree[now]+=v;return;\n    }\n    int mid=(l/2;\n    if(goal&lt;=mid)change(now&lt;&lt;1,l,mid,goal,v);\n    else change(now&lt;&lt;1|1,mid/now&lt;&lt;1\u76f8\u5f53\u4e8enow*2,\u56e0\u4e3anow\u4e58\u4e862\uff0c\u6240\u4ee5\u4e8c\u8fdb\u5236\u4e0b\u4ed6\u6700\u540e\u4e00\u4f4d\u4e00\u5b9a\u662f0\uff0c\u6b64\u65f6\u518d |1\u5c31\u7b49\u6548\u4e8e+1\n\n}\n</code></pre> <p>\u627e\u5230\u4e86\u76ee\u6807\u70b9\uff0c\u4fee\u6539\u4e86\uff0c\u53ef\u662f\u94fe\u4e0a\u7684\u5176\u5b83\u70b9\u4e5f\u8981\u4fee\u6539\u554a\uff0c\u600e\u4e48\u529e\u5462\uff1f \u6ca1\u4e8b\uff0c\u6211\u4eec\u4ece\u4e0b\u5f80\u4e0a\u4fee\u6539\uff0c\u56e0\u4e3a\u513f\u5b50\u90fd\u4fee\u6539\u4e86\uff0c\u7236\u4eb2\u6751\u7684\u662f\u4ed6\u513f\u5b50\u7684\u548c\uff0c\u53ea\u9700\u8981\u66f4\u65b0\u4e00\u8fb9\u5373\u53ef\u3002</p> <p>\u6211\u4eec\u53e6\u5916\u5199\u4e00\u4e2a<code>pushup()</code>\u51fd\u6570\u6765\u5b9e\u73b0\u3002\u56e0\u4e3a\u8fd9\u4e2a\u51fd\u6570\u8981\u590d\u7528\uff0c\u56e0\u6b64\u5199\u6210\u51fd\u6570\u66f4\u52a0\u7b80\u6d01</p> <pre><code>void pushup(int now){\n    tree[now]=tree[now&lt;&lt;1]+tree[now&lt;&lt;1|1];\n}\nvoid change(int now,int l,int r,int goal,int v){\n    if(now=goal){\n        tree[now]+=v;return;\n    }\n    int mid=(l/2;\n    if(goal&lt;=mid)change(now&lt;&lt;1,l,mid,goal,v);\n    else change(now&lt;&lt;1|1,mid/now&lt;&lt;1\u76f8\u5f53\u4e8enow*2,\u56e0\u4e3anow\u4e58\u4e862\uff0c\u6240\u4ee5\u4e8c\u8fdb\u5236\u4e0b\u4ed6\u6700\u540e\u4e00\u4f4d\u4e00\u5b9a\u662f0\uff0c\u6b64\u65f6\u518d |1\u5c31\u7b49\u6548\u4e8e+1\n    pushup(now);\n}\n</code></pre> <p>\u8fd9\u6837\u5b50\u6211\u4eec\u7684\u5355\u70b9\u4fee\u6539\u64cd\u4f5c\u5c31\u5b9e\u73b0\u4e86\u3002 \u67e5\u8be2\u5462\uff1f\u6211\u4eec\u8981\u533a\u95f4\u67e5\u8be2\u548c\u600e\u4e48\u529e\uff1f</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\u3002\u6211\u4eec\u8981\u67e5\u8be2\u533a\u95f4[2,8]\u7684\u548c\uff0c\u6734\u7d20\u7b97\u6cd5\u6211\u4eec\u9700\u8981\u628a[2,2],[3,3]...[8,8]\u5168\u90e8\u52a0\u8d77\u6765 \u4f46\u6211\u4eec\u6709\u7ebf\u6bb5\u6811\u5440\uff01 \u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a[2,2][3,4][5,8]\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\uff01\uff01</p> <p>\u4ee3\u7801\u6846\u67b6</p> <pre><code>int query(int now,int l,int r,int goall,int goalr){\n\n}\n</code></pre> <p>\u6211\u4eec\u6c42\u533a\u95f4\u548c\u65f6\u4e5f\u9700\u8981\u7528\u5230\u9012\u5f52\u3002\u6211\u4eec\u9700\u8981\u4ee5\u4e0b\u53c2\u6570</p> <ul> <li> <p>\u5f53\u524d\u6240\u5904\u5728\u7684\u4f4d\u7f6e\uff08\u6570\u7ec4\u4e0b\u6807\uff09</p> </li> <li> <p>\u5f53\u524d\u8282\u70b9\u7684l\uff0cr\uff08\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u4fe1\u606f\u5b58\u5728\u5f53\u524d\u8282\u70b9\u4e2d\uff0c\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u4e0a\u9762\u4ee3\u7801\u4e00\u6837\u76f4\u63a5\u4f20\u4e0b\u53bb\uff09</p> </li> <li> <p>\u76ee\u6807\u533a\u95f4goall,goalr</p> </li> </ul> <p>\u5f53\u6211\u4eec\u9012\u5f52\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u4ed6\u4f1a\u51fa\u73b0\u4e0b\u9762\u7684\u60c5\u51b5</p> <ul> <li> <p>l\uff0cr\u5728goall,goalr\u4e2d</p> </li> <li> <p>r\u5728mid\u53f3\u4fa7\u6216\u5de6\u4fa7</p> </li> <li> <p>l\u5728mid\u53f3\u4fa7\u6216\u5de6\u4fa7</p> </li> </ul> <p>\u9488\u5bf9\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u8282\u70b9\u7684\u503c\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u7ee7\u7eed\u5411\u4e0b \u9488\u5bf9\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8981\u5411\u4ed6\u7684\u53f3\u513f\u5b50\u9012\u5f52 \u9488\u5bf9\u7b2c3\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8981\u5411\u4ed6\u7684\u5de6\u513f\u5b50\u9012\u5f52</p> <pre><code>int query(int now,int l,int r,int goall,int goalr){\n    if(goall&lt;=l&amp;&amp;goalr&gt;=r)return tree[now];\n    else {\n    int res=0,mid=(l/2;\n        if(goall&lt;=mid)res+=query(now&lt;&lt;1,l,mid,goall,goalr);\n       if(goalr&gt;mid)res+=query(now&lt;&lt;1|1,mid+1,r,goall,goalr);\n    }\n    return res;\n}\n</code></pre> <p>yeah\u6211\u4eec\u7684\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u7ebf\u6bb5\u6811\u5c31\u7ed3\u675f\u4e86\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u9700\u8981\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u600e\u4e48\u529e\u5462\uff1f \u8ba9\u6211\u4eec\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u6211\u4eec\u9700\u8981\u5728\u4fee\u6539\u51fd\u6570\u8fdb\u884c\u5904\u7406</p> <pre><code>void pushup(int now){\n    tree[now]=tree[now&lt;&lt;1]+tree[now&lt;&lt;1|1];\n}\nvoid change(int now,int l,int r,int goall,goalr,int v){\n    if(l==r){\n        tree[now]+=v;return;\n    }\n    int mid=(l/2;\n    if(goall&lt;=mid)change(now&lt;&lt;1,l,mid,goall,goalr,v);\n    if(goalr&gt;mid)change(now&lt;&lt;1|1,mid/now&lt;&lt;1\u76f8\u5f53\u4e8enow*2,\u56e0\u4e3anow\u4e58\u4e862\uff0c\u6240\u4ee5\u4e8c\u8fdb\u5236\u4e0b\u4ed6\u6700\u540e\u4e00\u4f4d\u4e00\u5b9a\u662f0\uff0c\u6b64\u65f6\u518d |1\u5c31\u7b49\u6548\u4e8e+1\n    pushup(now);\n}\n</code></pre> <p>\u6b64\u523b\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u4fee\u6539\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u533a\u95f4\uff0c\u6700\u5c11\u8981\u4fee\u65392n+1\u4e2a\u70b9\u3002\u53ef\u662f\u6211\u4eec\u5728\u67e5\u8be2\u7684\u65f6\u5019\u4e5f\u8bb8\u538b\u6839\u7528\u4e0d\u5230\u8fd9\u4e9b\u70b9\uff0c\u6211\u4eec\u6ca1\u5fc5\u8981\u8fdb\u884c\u4fee\u6539\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5c31\u4f7f\u7528\u4e00\u4e2a\u61d2\u6807\u8bb0\u6280\u672f(lazy-tag)\u3002</p> <p>\u61d2\u6807\u8bb0</p> <p>\u5728\u7ebf\u6bb5\u6811\u4e2d\u4f1a\u9047\u5230\u533a\u95f4\u66f4\u65b0\u7684\u60c5\u51b5\uff0c\u4f8b\u5982 \u5728\u533a\u95f4\u6c42\u548c\u95ee\u9898\u4e2d\uff0c\u4ee4[a,b]\u533a\u95f4\u5185\u7684\u503c\u5168\u90e8\u52a0c\uff0c\u82e5\u6b64\u65f6\u518d\u91c7\u7528\u5355\u70b9\u66f4\u65b0\u7684\u65b9\u6cd5\uff0c\u5c31\u4f1a\u8017\u8d39\u5927\u91cf\u65f6\u95f4\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u7528\u5230\u61d2\u6807\u8bb0\u6765\u8fdb\u884c\u533a\u95f4\u66f4\u65b0\u4e86\u3002</p> <p>\u61d2\u6807\u8bb0\uff08lazy-tag\uff09\uff0c\u53c8\u53eb\u505a\u5ef6\u8fdf\u6807\u8bb0\uff0c\u4e3e\u4f8b\u8bf4\u660e\u3002</p> <p>\u8bbe \u5f53\u524d\u7ed3\u70b9\u5bf9\u5e94\u533a\u95f4[l, r]\uff0c\u5f85\u66f4\u65b0\u533a\u95f4[a, b] \u3000\u5f53 a \u2264 l \u2264 r \u2264 b\uff0c\u5373 [l, r]\u2208[a,b]\u65f6\uff0c\u4e0d\u518d\u5411\u4e0b\u66f4\u65b0\uff0c\u4ec5\u66f4\u65b0\u5f53\u524d\u7ed3\u70b9\uff0c\u5e76\u5728\u8be5\u7ed3\u70b9\u52a0\u4e0a\u61d2\u6807\u8bb0\uff0c\u5f53\u5fc5\u987b\u5f97\u66f4\u65b0/\u67e5\u8be2\u8be5\u7ed3\u70b9\u7684\u5de6\u53f3\u5b50\u7ed3\u70b9\u65f6\uff0c\u518d\u5229\u7528\u61d2\u6807\u8bb0\u7684\u8bb0\u5f55\u5411\u4e0b\u66f4\u65b0\uff08pushdown)\u2014\u2014\u61d2\u6807\u8bb0\u4e5f\u8981\u5411\u4e0b\u4f20\u9012\uff0c\u7136\u540e\u79fb\u9664\u8be5\u7ed3\u70b9\u7684\u61d2\u6807\u8bb0\u3002</p> <p>\u8fd9\u6837\u5c31\u4e0d\u7528\u6bcf\u6b21\u90fd\u66f4\u65b0\u5230\u53f6\u5b50\u7ed3\u70b9\uff0c\u51cf\u5c11\u4e86\u5927\u91cf\u975e\u5fc5\u8981\u64cd\u4f5c\uff0c\u4ece\u800c\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u591a\u5f00\u4e00\u4e2a\u6570\u7ec4tag[]\uff0ctag[i]\u7528\u6765\u5b58\u50a8i\u8282\u70b9\u7684\u6807\u8bb0\u3002</p> <p>\u6ce8\u610f\uff0ctag\u6700\u597d\u6ee1\u8db3\u53ef\u5408\u5e76\u6027\u3002\u4f8b\u5982\u6211\u4eec\u5728tag\u4e2d\u5b58\u6bcf\u4e2a\u70b9\u8981\u589e\u52a0\u7684\u503ct\uff0c\u540e\u6765\u6211\u4eec\u53c8\u6253\u4e86\u7b2c2\u4e2a\u6807\u8bb0\uff0c\u6bcf\u4e2a\u70b9\u589e\u52a0s\u3002\u6b64\u65f6\u5b83\u6ee1\u8db3\u53ef\u5408\u5e76\u6027\uff0c\u6211\u4eec\u53ea\u8981\u628a\u539f\u6765\u7684tag\u52a0\u4e0as\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c\u4e0d\u53ef\u4ee5\u5408\u5e76\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5148\u628a\u8fd9\u4e2a\u70b9\u7684tag\u4e0b\u4f20\uff0c\u7136\u540e\u518d\u6e05\u96f6\uff0c\u8d4b\u65b0\u503c\u3002</p> <p>\u5b9e\u73b0\u7ec6\u8282 \u5f53\u6211\u4eec\u8981\u4fee\u6539[goall,goalr]\u533a\u95f4\u7684\u503c\uff0c\u5982\u679c\u5728\u9012\u5f52\u4e2d\u627e\u5230\u4e00\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u88ab[goall,goalr]\u5305\u542b\u5728\u5185\uff0c\u90a3\u4e48\u6211\u4eec\u4fee\u6539\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\uff0c\u6253\u4e0atag\uff0c\u5c31\u4e0d\u9700\u8981\u5411\u4e0b\u9012\u5f52\u4e86\u3002\uff08\u5927\u9646tag\u7684\u70b9\u5df2\u7ecf\u4fee\u6539\u8fc7\u4e86\uff09</p> <p>\u5f53\u6211\u4eec\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4[goall,goalr]\u65f6\uff0c\u8d70\u5230\u4e00\u4e2a\u70b9\uff0c\u53d1\u73b0\uff0c\u6b38\uff0c\u6709tag\uff01\u6211\u4eec\u5c31\u628a\u6807\u8bb0\u4e0b\u4f20\uff0c\u6309\u6807\u8bb0\u4fee\u6539\u4e24\u513f\u5b50\u7684\u503c\uff0c\u7136\u540e\u6e05\u96f6\u81ea\u5df1\u7684\u6807\u8bb0\u3002</p> <p>\u4ee3\u7801\uff1a</p> <pre><code>void pushup(int p) {\n    val[p] = val[p &lt;&lt; 1] + val[p &lt;&lt; 1 | 1];\n}\nvoid addtag(int p, int l, int r, int t) {\n    val[p] += (r-l+1) * t;\n    tag[p] += t;\n}\nvoid pushdown(int p, int l, int r) {\n    if(!tag[p]) return ;\n    int t = tag[p], mid = l+r&gt;&gt;1;\n    addtag(p&lt;&lt;1, l, mid, t); addtag(p&lt;&lt;1|1, mid+1, r, t);\n    tag[p] = 0;\n}\nvoid change(int p, int l, int r, int ql, int qr, int k) {\n    if(ql &lt;= l &amp;&amp; r &lt;= qr) {\n        addtag(p, l, r, k);\n        return ;\n    }\n    int mid = l+r &gt;&gt; 1;\n    pushdown(p, l, r);\n    if(ql &lt;= mid) change(p&lt;&lt;1, l, mid, ql, qr, k);\n    if(qr &gt; mid) change(p&lt;&lt;1|1, mid+1, r, ql, qr, k);\n    pushup(p);\n}\nint query(int p, int l, int r, int ql, int qr) {\n    if(ql &lt;= l &amp;&amp; r &lt;= qr) {\n        return val[p];\n    }\n    pushdown(p, l, r);\n    int mid = l+r &gt;&gt; 1, res = 0;\n    if(ql &lt;= mid) res += query(p&lt;&lt;1, l, mid, ql, qr);\n    if(qr &gt; mid) res += query(p&lt;&lt;1|1, mid+1, r, ql, qr);\n    return res;\n}\n</code></pre> <p>\uff08\u4e0a\u9762\u4ee3\u7801\u51fd\u6570\u540d\u79f0\u548c\u53d8\u91cf\u540d\u79f0\u7565\u6709\u4e0d\u540c\u3002var[]\u5373\u4e4b\u524d\u4ee3\u7801\u7684tree[]\uff09</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u6807\u8bb0\u4e0b\u4f20\u64cd\u4f5c\uff0c\u6211\u4eec\u5199\u4e86\u4e00\u4e2a\u51fd\u6570<code>pushdown(int p, int l, int r)</code> \u53c2\u6570\u5206\u522b\u4e3a</p> <ul> <li> <p>\u5f53\u524d\u8282\u70b9</p> </li> <li> <p>\u5f53\u524d\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4</p> </li> </ul> <p>\u56e0\u4e3a\u6211\u4eec\u8981\u5bf9\u8fd9\u4e2a\u8282\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u6253\u6807\u8bb0\uff0c\u6211\u4eec\u5c31\u9700\u8981\u77e5\u9053\u4e24\u4e2a\u513f\u5b50\u7684\u533a\u95f4\uff08\u4e0b\u9762\u4f1a\u8bb2\uff09\u6240\u4ee5\u6211\u4eec\u8981\u4f20\u5165\u8fd9\u4e2a\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u597d\u63a8\u51fa\u4e24\u4e2a\u513f\u5b50\u4ee3\u8868\u7684\u533a\u95f4\u3002</p> <p>\u540c\u65f6\uff0c\u5bf9\u4e8e\u5728\u4e00\u4e2a\u70b9\u6dfb\u52a0\u6807\u8bb0\u7684\u64cd\u4f5c\u6211\u4eec\u4e5f\u5199\u4e86\u4e00\u4e2a\u51fd\u6570<code>addtag(int p, int l, int r, int t)</code> \u53c2\u6570\u5206\u522b\u4e3a</p> <ul> <li> <p>\u5f53\u524d\u8282\u70b9</p> </li> <li> <p>\u5f53\u524d\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4</p> </li> <li> <p>\u6807\u8bb0\u503c\u3002</p> </li> </ul> <p>\u6ce8\u610f\u4e00\u4e0b\uff0c\u5b9e\u4f8b\u4ee3\u7801\u7684\u76ee\u7684\u662f\u6c42\u533a\u95f4\u548c\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u4ee3\u8868\u4e86n\u4e2a\u70b9\u7684\u533a\u95f4\u7684\u70b9\uff0c\u6211\u4eec\u6807\u8bb0\u8fd9\u4e2a\u533a\u95f4\u6bcf\u4e2a\u70b9\u90fd\u589e\u52a0\u4e86t\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\uff0c\u56e0\u4e3a\u4ed6\u6807\u8bb0\u7684\u533a\u95f4\u662f\u8fd9n\u4e2a\u70b9\u7684\u603b\u548c\uff0c\u56e0\u6b64\u4ed6\u8981\u52a0\u4e0an*t\u624d\u884c\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91/#1","title":"\u4f8b\u9898 #1 \u5355\u70b9\u4fee\u6539","text":"<p>\u4e13\u9898 | \u5357\u591620230712-\u94fe\u8868\u3001\u54c8\u5e0c\u3001\u5e76\u67e5\u96c6\u3001\u5206\u5757</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91/#2","title":"\u4f8b\u9898 #2 \u533a\u95f4\u4fee\u6539\u4f8b\u9898","text":"<p>\u4f8b\u9898\uff08\u7ebf\u6bb5\u6811\u6a21\u677f\uff0c\u533a\u95f4\u6c42\u548c\u533a\u95f4\u4fee\u6539\uff09</p> <p>\u5982\u9898\uff0c\u5df2\u77e5\u4e00\u4e2a\u6570\u5217\uff0c\u4f60\u9700\u8981\u8fdb\u884c\u4e0b\u9762\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <ol> <li> <p>\u5c06\u67d0\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u52a0\u4e0a \\(k\\)\u3002</p> </li> <li> <p>\u6c42\u51fa\u67d0\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u7684\u548c\u3002</p> </li> </ol> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 \\(n, m\\)\uff0c\u5206\u522b\u8868\u793a\u8be5\u6570\u5217\u6570\u5b57\u7684\u4e2a\u6570\u548c\u64cd\u4f5c\u7684\u603b\u4e2a\u6570\u3002</p> <p>\u7b2c\u4e8c\u884c\u5305\u542b \\(n\\) \u4e2a\u7528\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570\uff0c\u5176\u4e2d\u7b2c \\(i\\) \u4e2a\u6570\u5b57\u8868\u793a\u6570\u5217\u7b2c \\(i\\) \u9879\u7684\u521d\u59cb\u503c\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\u6bcf\u884c\u5305\u542b \\(3\\) \u6216 \\(4\\) \u4e2a\u6574\u6570\uff0c\u8868\u793a\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5177\u4f53\u5982\u4e0b\uff1a</p> <ol> <li> <p><code>1 x y k</code>\uff1a\u5c06\u533a\u95f4 \\([x, y]\\) \u5185\u6bcf\u4e2a\u6570\u52a0\u4e0a \\(k\\)\u3002</p> </li> <li> <p><code>2 x y</code>\uff1a\u8f93\u51fa\u533a\u95f4 \\([x, y]\\) \u5185\u6bcf\u4e2a\u6570\u7684\u548c\u3002</p> </li> </ol> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff1a\\(1 \\le n, m \\le {10}^5\\)\u3002</p> <p>\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\u6570\u5217\u4e2d\u6240\u6709\u5143\u7d20\u7684\u7edd\u5bf9\u503c\u4e4b\u548c \\(\\le {10}^{18}\\)\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91/#_2","title":"\u8bb2\u89e3","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91/#_3","title":"\u5b9e\u73b0\u65b9\u6cd5","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91/#_4","title":"\u4ee3\u7801","text":"<p>\u672c\u5730\u5199\u6cd5</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n       ------------------\n        . \u6a21\u677f: \u7ebf\u6bb5\u6811 .\n/*////////ACACACACACACAC///////////\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n\nconst int N = 1e6 + 5;\nint tr[N * 4], tag[N * 4];  //\u7ebf\u6bb5\u6811\u76f8\u5173\u7684\u90fd\u5f004\u500d\u7a7a\u95f4\nint a[N], n, ans, m;\n\n//\u53e3\u8bc0:\u4e0b\u53bb\u4e4b\u524dpushdown,\u4e0a\u6765\u4e4b\u540epushup\nvoid pushup(int x) { tr[x] = tr[x &lt;&lt; 1] + tr[x &lt;&lt; 1 | 1]; }\nvoid addtag(int x, int l, int r, int t) {  //\u6709tag\u8868\u793a\u81ea\u5df1\u5df2\u7ecf\u88ab\u4fee\u6539,\u4f46\u5b50\u8282\u70b9\u6ca1\u6709\u88ab\u4fee\u6539\n    tr[x] += (r - l + 1) * t;\n    tag[x] += t;\n}\nvoid pushdown(int x, int l, int r) {\n    if (!tag[x])\n        return;\n    int t = tag[x], mid = l + r &gt;&gt; 1;\n    addtag(x &lt;&lt; 1, l, mid, t);\n    addtag(x &lt;&lt; 1 | 1, mid + 1, r, t);\n    tag[x] = 0;\n}\nvoid build(int x, int l, int r) {\n    if (l == r) {\n        tr[x] = a[l];\n        return;\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    build(x &lt;&lt; 1, l, mid);\n    build(x &lt;&lt; 1 | 1, mid + 1, r);\n    pushup(x);\n}\nvoid change(int p, int l, int r, int x, int y, int a) {\n    if (l &gt;= x &amp;&amp; r &lt;= y) {\n        addtag(p, l, r, a);\n        return;  // addtag\n    }\n    pushdown(p, l, r);  // pushdown\n    int mid = (l + r) &gt;&gt; 1;\n    if (x &lt;= mid)\n        change(p &lt;&lt; 1, l, mid, x, y, a);\n    if (y &gt; mid)\n        change(p &lt;&lt; 1 | 1, mid + 1, r, x, y, a);  // no else\n    pushup(p);\n}\nint query(int p, int l, int r, int x, int y) {\n    int res = 0;\n    if (l &gt;= x &amp;&amp; r &lt;= y) {\n        return tr[p];\n    }\n    pushdown(p, l, r);  // pushdown\n    int mid = (l + r) &gt;&gt; 1;\n    if (x &lt;= mid)\n        res += query(p &lt;&lt; 1, l, mid, x, y);\n    if (y &gt; mid)\n        res += query(p &lt;&lt; 1 | 1, mid + 1, r, x, y);\n    return res;\n}\nsigned main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= n; i++) cin &gt;&gt; a[i];\n    build(1, 1, n);\n    while (m--) {\n        char op[N];\n        scanf(\"%s\", op);\n        int x, y, aa;\n        cin &gt;&gt; x &gt;&gt; y;\n        if (op[0] == 'A') {\n            cin &gt;&gt; aa;\n            change(1, 1, n, x, y, aa);\n        } else {\n            cout &lt;&lt; query(1, 1, n, x, y) &lt;&lt; endl;\n        }\n    }\n}\n</code></pre> <p>\u4ed6\u4eba\u5199\u6cd5</p> <p>\u4e0b\u9762\u7ed9\u51fa\u4e24\u79cd\u7801\u98ce\u7684\u4ee3\u7801</p> <p>1.\u7ed3\u6784\u4f53\u5b58\u70b9+\u521d\u59cb<code>build()</code>\u51fd\u6570\u5efa\u6811</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int N = 5e5 + 5;\nll a[N], n, m;\n\nstruct node {\n    ll r, l;//\u8303\u56f4\u5de6\u53f3\n    ll m;//sum\n    ll a;//add\n\n} s[N];\n\nvoid build(int k, int l, int r) {//s[k],\u5efa\u5de6\uff0c\u5efa\u53f3\n    s[k].r = r;\n    s[k].l = l;\n    if (l == r) {\n        s[k].m = a[l];\n        return;\n    }\n    int mid = l + r &gt;&gt; 1;\n    build(k * 2, l, mid);\n    build(k * 2 + 1, mid + 1, r);\n    s[k].m = s[k * 2].m + s[k * 2 + 1].m;\n\n}\n\nvoid spread(int k, int l, int r) {//\u6807\u8bb0\n    s[l].m += (s[l].r + 1 - s[l].l) * s[k].a, s[l].a += s[k].a;\n    s[r].m += (s[r].r + 1 - s[r].l) * s[k].a, s[r].a += s[k].a;\n    s[k].a = 0;\n}\n\nvoid change(int k, int l, int r, int d) {//d\u589e\u91cf\n    if (s[k].r &lt;= r &amp;&amp; s[k].l &gt;= l) {//\u5728\u76ee\u6807\u8303\u56f4\u5185\uff0c\u589e\u52a0\uff0c\u6253\u6807\u8bb0\n        s[k].m += (s[k].r + 1 - s[k].l) * d;\n        s[k].a += d;\n        return;\n    }\n    int mid = s[k].l + s[k].r &gt;&gt; 1; //\u4e8c\u5206\n    spread(k, k * 2, k * 2 + 1);\n    if (mid &gt;= l)\n        change(k * 2, l, r, d);\n    if (mid &lt; r)\n        change(k * 2 + 1, l, r, d);\n    s[k].m = s[k * 2].m + s[k * 2 + 1].m;\n}\n\nll sum(int k, int l, int r) {//\u6c42\n    if (s[k].r &lt;= r &amp;&amp; s[k].l &gt;= l) {//\u5168\u5305\u542b\n        return s[k].m;\n    }\n    int mid = s[k].l + s[k].r &gt;&gt; 1;\n    spread(k, k * 2, k * 2 + 1);\n    ll tmp = 0;\n    if (mid &gt;= l)\n        tmp += sum(k * 2, l, r);\n    if (mid &lt; r)\n        tmp += sum(k * 2 + 1, l, r);\n    return tmp;\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= n; i++) {\n        cin &gt;&gt; a[i];\n    }\n    build(1, 1, n); //\u521d\u59cb\u5efa\u6811\n    for (int i = 1; i &lt;= m; i++) {\n        int op;\n        int l, r, d;\n        cin &gt;&gt; op;\n        if (op == 1) {\n            cin &gt;&gt; l &gt;&gt; r &gt;&gt; d;\n            change(1, l, r, d);\n        } else {\n            cin &gt;&gt; l &gt;&gt; r;\n            cout &lt;&lt; sum(1, l, r) &lt;&lt; endl;\n        }\n    }\n    return 0;\n}\n</code></pre> <p>2.\u76f4\u63a5\u5728\u51fd\u6570\u95f4\u4f20\u9012\u70b9\u7684\u4fe1\u606f\uff08\u533a\u95f4\u4fe1\u606f\uff09\uff0c\u4e0d\u9700\u8981\u7ed3\u6784\u4f53\uff0c\u5efa\u6811\u8fc7\u7a0b\u76f4\u63a5\u53d8\u6210\u4fee\u6539\u8fc7\u7a0b\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\nusing namespace std;\nconst int _ = 1e6 + 5;\nint val[_ &lt;&lt; 2], tag[_ &lt;&lt; 2];\nvoid pushup(int p) {\n    val[p] = val[p &lt;&lt; 1] + val[p &lt;&lt; 1 | 1];\n}\nvoid addtag(int p, int l, int r, int t) {\n    val[p] += (r-l+1) * t;\n    tag[p] += t;\n}\nvoid pushdown(int p, int l, int r) {\n    if(!tag[p]) return ;\n    int t = tag[p], mid = l+r&gt;&gt;1;\n    addtag(p&lt;&lt;1, l, mid, t); addtag(p&lt;&lt;1|1, mid+1, r, t);\n    tag[p] = 0;\n}\nvoid modify(int p, int l, int r, int ql, int qr, int k) {   //\u5c31\u662f\u4e0a\u6587\u7684change()\n    if(ql &lt;= l &amp;&amp; r &lt;= qr) {\n        addtag(p, l, r, k);\n        return ;\n    }\n    int mid = l+r &gt;&gt; 1;\n    pushdown(p, l, r);\n    if(ql &lt;= mid) modify(p&lt;&lt;1, l, mid, ql, qr, k);\n    if(qr &gt; mid) modify(p&lt;&lt;1|1, mid+1, r, ql, qr, k);\n    pushup(p);\n}\nint query(int p, int l, int r, int ql, int qr) {\n    if(ql &lt;= l &amp;&amp; r &lt;= qr) {\n        return val[p];\n    }\n    pushdown(p, l, r);\n    int mid = l+r &gt;&gt; 1, res = 0;\n    if(ql &lt;= mid) res += query(p&lt;&lt;1, l, mid, ql, qr);\n    if(qr &gt; mid) res += query(p&lt;&lt;1|1, mid+1, r, ql, qr);\n    return res;\n}\nsigned main() {\n    ios :: sync_with_stdio(false); cin.tie(0); cout.tie(0);\n    int n, m; cin &gt;&gt; n &gt;&gt; m;\n    for(int i=1; i&lt;=n; ++i) {\n        int x; cin &gt;&gt; x;\n        modify(1, 1, n, i, i, x);   //\u7528\u76f4\u63a5\u4fee\u6539\u4ee3\u66ff\u5efa\u6811\n    }\n    for(int i=1; i&lt;=m; ++i) {\n        int o, l, r, k;\n        cin &gt;&gt; o &gt;&gt; l &gt;&gt; r;\n        if(o == 1) {\n            cin &gt;&gt; k; modify(1, 1, n, l, r, k); //\u89e3\u8bf4\uff1a\u76ee\u524d\u4f4d\u4e8e\u70b91\uff0c\u4ee3\u8868\u533a\u95f4[1,n] ,\u76ee\u6807\u662f\u5c06\u533a\u95f4[l,r]\u6bcf\u4e2a\u6570\u52a0\u4e0ak\n        } else {\n            cout &lt;&lt; query(1, 1, n, l, r) &lt;&lt; '\\n';   //\u89e3\u8bf4\uff1a\u76ee\u524d\u4f4d\u4e8e\u70b91\uff0c\u4ee3\u8868\u533a\u95f4[1,n]\uff0c\u76ee\u6807\u662f\u6c42\u533a\u95f4[l,r]\u4e4b\u548c\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91/#_5","title":"\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206","text":"<p>AtCoder Library Practice Contest 2/12J</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91/#_6","title":"\u7ec3\u4e60","text":"<p>\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7b49\u5dee\u6570\u5217 \u7ec3\u4e60 | \u5357\u5916230901 B\u9898</p> <p>\u7ebf\u6bb5\u6811\u533a\u95f4\u548c</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . FancyKnowledge .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\n#include&lt;bits/stdc++.h&gt;\n\n//\n#define int long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n#define err(fmt, ...) fprintf(stderr, \"[%d] : \" fmt \"\\n\", __LINE__, ##__VA_ARGS__)\n\nusing namespace std;\n//\nconst int N=1e5+5;\nconst int M=1e3;\n int MOD=1e9+7;\nconst int MMOD=903250223;\nconst int INF=1e9;\nconst int IINF=1e18;\nconst db eps=1e-9;\n//\nint n,m,a[N],b,q,s[N],op,idx,len[N],ans,res,tmp,cnt[N],id[N];\nint tr[N&lt;&lt;2],tagadd[N&lt;&lt;2],tagmul[N&lt;&lt;2],taglock[N&lt;&lt;2],mxlock[N&lt;&lt;2];\nint L;\n\nvoid pushup(int x){\n    tr[x]=(tr[x&lt;&lt;1]+tr[x&lt;&lt;1|1])%MOD;\n}\nvoid addtag(int p, int l, int r, int a,int m) {\n    tr[p] = ( tr[p] * m + (r-l+1) * a ) % MOD;\n    tagmul[p] = tagmul[p] * m % MOD;\n    tagadd[p] = (tagadd[p] * m % MOD + a) % MOD;\n}\nvoid pushdown(int p, int l, int r) {\n    int mid = l+r&gt;&gt;1;\n    addtag(p&lt;&lt;1, l, mid, tagadd[p],tagmul[p]);\n    addtag(p&lt;&lt;1|1, mid+1, r, tagadd[p],tagmul[p]);\n    tagadd[p] = 0;\n    tagmul[p]=1;\n}\n\nvoid changeadd(int x,int l,int r,int pl,int pr,int v){\n    if(l&gt;=pl&amp;&amp;r&lt;=pr){\n        addtag(x, l, r, v,1);\n        return ;\n    }\n\n    pushdown(x,l,r);\n    int mid=l+r&gt;&gt;1;\n    if(pl&lt;=mid)changeadd(x&lt;&lt;1,l,mid,pl,pr,v);\n    if(pr&gt;mid)changeadd(x&lt;&lt;1|1,mid+1,r,pl,pr,v);\n    pushup(x);\n}\n\nvoid changemul(int x,int l,int r,int pl,int pr,int v){\n    if(l&gt;=pl&amp;&amp;r&lt;=pr){\n        addtag(x, l, r, 0,v);\n        return ;\n    }\n\n    pushdown(x,l,r);\n    int mid=l+r&gt;&gt;1;\n    if(pl&lt;=mid)changemul(x&lt;&lt;1,l,mid,pl,pr,v);\n    if(pr&gt;mid)changemul(x&lt;&lt;1|1,mid+1,r,pl,pr,v);\n    pushup(x);\n}\n\n\nint query(int x,int l,int r,int pl,int pr){\n    if(l&gt;=pl&amp;&amp;r&lt;=pr)return tr[x];\n    pushdown(x,l,r);\n    int mid=l+r&gt;&gt;1;\n    int res=0;\n    if(pl&lt;=mid)res=(res+query(x&lt;&lt;1,l,mid,pl,pr))%MOD;\n    if(pr&gt;mid)res=(res+query(x&lt;&lt;1|1,mid+1,r,pl,pr))%MOD;\n    return res%MOD;\n}\n\nvoid dbg(){\n\n//  cout&lt;&lt;\"debug=\";\n//  for(int i=1;i&lt;=n;i++){\n//      int c=query(1,1,n,i,i);\n////        cout&lt;&lt;c&lt;&lt;' ';\n//      \n//  }\n\n//  cout&lt;&lt;endl;\n}\n\nsigned main(){\n\n//  freopen(\".in\",\"r\",stdin);\n//  freopen(\".out\",\"w\",stdout);\n//  freopen(\".txt\",\"w\",stderr);\n\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;MOD;\n\n//  cerr&lt;&lt;\"OK\";\n\n    for(int i=1;i&lt;=N-2;i++)tagmul[i]=1;\n    for(int i=1;i&lt;=n;i++){\n        int x;\n        cin&gt;&gt;x;\n        changeadd(1,1,n,i,i,x);\n\n        //\u8fd9\u6837\u521d\u59cb\u5316\u7684\u590d\u6742\u5ea6\u6bd4build\u7565\u9ad8\n    }\n    dbg();\n    while(m--){\n        int op,l,r,x;\n        cin&gt;&gt;op&gt;&gt;l&gt;&gt;r;\n        if(op==2){\n            cin&gt;&gt;x;\n            changeadd(1,1,n,l,r,x%MOD);\n            dbg();\n        }if(op==1){\n            cin&gt;&gt;x;\n            changemul(1,1,n,l,r,x%MOD);\n            dbg();\n        }\n\n        if(op==3){\n            int ans=query(1,1,n,l,r)%MOD;\n            cout&lt;&lt;ans&lt;&lt;endl;\n        }\n    }\n\n\n    return 0;\n}\n\n//check your long long and the size of memery!!!\n</code></pre> <p>\u7ebf\u6bb5\u6811\u8fc7\u591a\u4e2a\u6807\u8bb0\u5e94\u7528</p> <p>www.luogu.com.cn</p> <p>\u6807\u8bb0\u4f20-1\u8868\u793a\u6ca1\u7528\u662f\u4e0d\u53ef\u53d6\u7684\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E6%B2%BB/","title":"\u7ebf\u6bb5\u6811\u5206\u6cbb","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E6%B2%BB/#_2","title":"\u4e8c\u5206\u56fe /\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u6cbb","text":"<p>\u795e\u7287\u6709\u4e00\u4e2a \\(n\\) \u4e2a\u8282\u70b9\u7684\u56fe\u3002</p> <p>\u56e0\u4e3a\u795e\u7287\u662f\u795e\u7287\uff0c\u6240\u4ee5\u5728 \\(k\\) \u65f6\u95f4\u5185\u6709 \\(m\\) \u6761\u8fb9\u4f1a\u51fa\u73b0\u540e\u6d88\u5931\u3002</p> <p>\u795e\u7287\u8981\u6c42\u51fa\u6bcf\u4e00\u65f6\u95f4\u6bb5\u5185\u8fd9\u4e2a\u56fe\u662f\u5426\u662f\u4e8c\u5206\u56fe\u3002</p> <p>\u8fd9\u4e48\u7b80\u5355\u7684\u95ee\u9898\u795e\u7287\u5f53\u7136\u4f1a\u505a\u4e86\uff0c\u4e8e\u662f\u4ed6\u60f3\u8003\u8003\u4f60\u3002</p> <p>\u539f BZOJ4025\u3002</p> <p>\\(n,k = 10^5\\)\uff0c\\(m = 2\\times 10^5\\)\u3002\\(1 \\le x,y \\le n\\)\uff0c\\(0 \\le l \\le r \\le k\\)\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E6%B2%BB/#_3","title":"\u601d\u8def","text":"<p>\u8981\u505a\u8fd9\u9053\u9898\u9996\u5148\u8981\u77e5\u9053\u5982\u4f55\u5feb\u901f\u5224\u65ad\u4e8c\u5206\u56fe\u3002\u6211\u4eec\u8003\u8651\u5173\u62bc\u7f6a\u72af\u8fd9\u9053\u9898\uff0c\u91cc\u9762\u4f7f\u7528\u6269\u5c55\u57df\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e86\u56fe\u662f\u5426\u662f\u4e8c\u5206\u56fe\u3002</p> <p>\u6269\u5c55\u57df\u5e76\u67e5\u96c6</p> <p>\u5e76\u67e5\u96c6</p> <p>\u7ebf\u6bb5\u6811\u5206\u6cbb\u7ef4\u62a4\u64cd\u4f5c\u5e8f\u5217</p> <p>\u6211\u4eec\u8003\u8651\u6bcf\u6761\u8fb9\u90fd\u5728\u65f6\u95f4\u8f74\u4e0a\u7684\u67d0\u4e2a\u533a\u95f4\u5185\u6709\u6548\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7c7b\u6bd4\u7ebf\u6bb5\u6811\u2014\u2014\u628a\u8fd9\u6761\u8fb9\u5728\u7ebf\u6bb5\u6811\u4e0a\u6dfb\u52a0\u6216\u4fee\u6539\u3002</p> <p></p> <p>\u8fd9\u6837\u6211\u4eec\u628a\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u5e76\u4e14\u5728\u7ebf\u6bb5\u6811\u4e2d\u505a\u597d\u4fee\u6539\uff0c\u6700\u540e\u4e00\u6b21\u6027\u5904\u7406\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5f53\u6211\u4eec\u5904\u7406\u5b8c\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u5e76\u67e5\u96c6\u8fd8\u539f\u5230\u5904\u7406\u4e4b\u524d\u7684\u72b6\u6001\u624d\u53ef\u4ee5\u9012\u5f52\u5904\u7406\u5176\u4ed6\u8282\u70b9\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u652f\u6301\u64a4\u9500\u7684\u5e76\u67e5\u96c6\u64cd\u4f5c\u3002</p> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u53ef\u4ee5\u8def\u5f84\u538b\u7f29\u4e86\uff0c\u56e0\u4e3a\u8fd9\u6837\u6211\u4eec\u5728\u64a4\u9500\u65f6\u8981\u4fee\u6539\u5f88\u591a\u7684\u70b9\u7684\u7236\u4eb2\u3002\u6211\u4eec\u53ea\u597d\u6309\u79e9\u5408\u5e76\uff08\u542f\u53d1\u5f0f\u5408\u5e76\uff09\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ea\u8bb0\u5f55\u5176\u771f\u6b63\u7684\u7236\u4eb2\uff0c\u8fd9\u6837\u5728\u64a4\u9500\u65f6\u53ea\u9700\u8981\u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\u5373\u53ef\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n\n\n#define rd read()\nint read(){\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\nvoid write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int N=5e6+5;\nconst int M=5e5+5;\nconst int INF=1e9+5;\nconst int base=23;\nconst int MOD=19260817;\n\nint n,m,k,fa[N],dep[N],top;\nstruct edge{\n    int x,y;\n}e[N];\nstruct node{\n    int x,y,add;\n}stk[N];\n\nvector&lt;int&gt; t[N];\n\nint find(int x){\n    while(x != fa[x]) x = fa[x];\n    return fa[x];\n}\nvoid merge(int x,int y){\n    int fx = find(x),fy = find(y);\n    if(dep[fx] &gt; dep[fy]) swap(fx,fy);\n    stk[++top] = (node){fx,fy,dep[fx] == dep[fy]};\n    fa[fx] = fy;\n    if(dep[fx] == dep[fy]) dep[fy]++;\n}\nvoid update(int u,int l,int r,int L,int R,int x){\n    if(l &gt; R || r &lt; L) return;\n    if(L &lt;= l &amp;&amp; r &lt;= R) {t[u].push_back(x);return;}\n    int mid = l + r &gt;&gt; 1;\n    update(u&lt;&lt;1,l,mid,L,R,x);\n    update(u&lt;&lt;1|1,mid+1,r,L,R,x);\n}\nvoid solve(int u,int l,int r){\n    int ans = 1;\n    int lst = top;\n    for(int i = 0;i &lt; t[u].size();i++){\n        int a = find(e[t[u].at(i)].x);\n        int b = find(e[t[u].at(i)].y);\n        if(a == b){\n            for(int k = l;k &lt;= r;k++)\n            printf(\"No\\n\");\n            ans = 0;\n            break;\n        }\n        merge(e[t[u].at(i)].x,e[t[u].at(i)].y+n);\n        merge(e[t[u].at(i)].y,e[t[u].at(i)].x+n);\n    }\n    if(ans){\n        if(l==r) printf(\"Yes\\n\");\n        else {\n            int mid = l+r&gt;&gt;1;\n            solve(u&lt;&lt;1,l,mid);\n            solve(u&lt;&lt;1|1,mid+1,r);\n        }\n    }\n    while(top &gt; lst){\n        dep[fa[stk[top].x]] -= stk[top].add;\n        fa[stk[top].x] = stk[top].x;\n        top--;\n    }\n    return;\n}\n\nsigned main(){\n    n = rd;m = rd;k = rd;\n    // cerr&lt;&lt;\"OK\";\n    for(int i = 1;i &lt;= m;i++){\n        e[i].x = rd;e[i].y = rd;\n        int l = rd+1,r = rd;\n        update(1,1,k,l,r,i);\n    }\n    for(int i = 1;i &lt;= 2*n;i++) fa[i] = i,dep[i] = 1;\n    solve(1,1,k);\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E8%A3%82/","title":"\u7ebf\u6bb5\u6811\u5206\u88c2","text":"<p>\u7ebf\u6bb5\u6811\u5206\u88c2</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E8%A3%82/#_1","title":"\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5206\u88c2","text":"<p>\u901a\u5e38\u662f\u52a8\u6001\u5f00\u70b9\u7684\u6743\u503c\u7ebf\u6bb5\u6811</p> <p>sum \u8868\u793a\u6743\u503c\u7684\u4e2a\u6570</p> <p>\u5c06\u7ebf\u6bb5\u6811x\u4ece k \u5904\u65a9\u65ad\uff0c\u524d k \u5c0f\u7684\u5f52 x \uff0c\u540e\u9762\u7684\u5f52 y</p> <ul> <li> <p>\u82e5x\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de</p> </li> <li> <p>\u5bf9 y \u52a8\u6001\u5f00\u70b9</p> </li> <li> <p>\u9012\u5f52\u5206\u88c2\u5de6\u5b50\u6811\uff0c\u628ax\u7684\u53f3\u5b50\u6811\u7ed9 y, x \u7684\u53f3\u5b50\u6811= 0</p> </li> <li> <p>\u9012\u5f52\u5206\u88c2\u53f3\u5b50\u6811\uff0c\u6ce8\u610f k\u8981\u51cf\u53bbs</p> </li> <li> <p>\u66f4\u65b0 y,x \u7684\u6743\u503c\u4e2a\u6570</p> </li> </ul> <p>\u6b65\u9aa4\u548c\u5e73\u8861\u6811\u91cc\u7684getk\u5f88\u50cf</p> <pre><code>void split(int x,int &amp;y,int k){\n    //\u5206\u88c2\u7ebf\u6bb5\u6811\uff0c\u524dk\u5927\u7684\u5f52x\uff0c\u5426\u5219\u5f52y\n    if(!x)return ;\n    y=+/\u52a8\u6001\u5f00\u70b9\n    int s=sum[ls[x]];\n    if(k&lt;=s)split(ls[x],ls[y].k)swap(rs[x],rs[y]);\n    else split(rs[x],ry[x].k-s);\n    sum[y]=sum[x]-k;\n    sum[x]=k;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E8%A3%82/#_2","title":"\u9898\u76ee","text":"<p>\u7ed9\u51fa\u4e00\u4e2a\u53ef\u91cd\u96c6 \\(a\\)\uff08\u7f16\u53f7\u4e3a \\(1\\)\uff09\uff0c\u5b83\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <p><code>0 p x y</code>\uff1a\u5c06\u53ef\u91cd\u96c6 \\(p\\) \u4e2d\u5927\u4e8e\u7b49\u4e8e \\(x\\) \u4e14\u5c0f\u4e8e\u7b49\u4e8e \\(y\\) \u7684\u503c\u79fb\u52a8\u5230\u4e00\u4e2a\u65b0\u7684\u53ef\u91cd\u96c6\u4e2d\uff08\u65b0\u53ef\u91cd\u96c6\u7f16\u53f7\u4e3a\u4ece \\(2\\) \u5f00\u59cb\u7684\u6b63\u6574\u6570\uff0c\u662f\u4e0a\u4e00\u6b21\u4ea7\u751f\u7684\u65b0\u53ef\u91cd\u96c6\u7684\u7f16\u53f7+1\uff09\u3002</p> <p><code>1 p t</code>\uff1a\u5c06\u53ef\u91cd\u96c6 \\(t\\) \u4e2d\u7684\u6570\u653e\u5165\u53ef\u91cd\u96c6 \\(p\\)\uff0c\u4e14\u6e05\u7a7a\u53ef\u91cd\u96c6 \\(t\\)\uff08\u6570\u636e\u4fdd\u8bc1\u5728\u6b64\u540e\u7684\u64cd\u4f5c\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u53ef\u91cd\u96c6 \\(t\\)\uff09\u3002</p> <p><code>2 p x q</code>\uff1a\u5728 \\(p\\) \u8fd9\u4e2a\u53ef\u91cd\u96c6\u4e2d\u52a0\u5165 \\(x\\) \u4e2a\u6570\u5b57 \\(q\\)\u3002</p> <p><code>3 p x y</code>\uff1a\u67e5\u8be2\u53ef\u91cd\u96c6 \\(p\\) \u4e2d\u5927\u4e8e\u7b49\u4e8e \\(x\\) \u4e14\u5c0f\u4e8e\u7b49\u4e8e \\(y\\) \u7684\u503c\u7684\u4e2a\u6570\u3002</p> <p><code>4 p k</code>\uff1a\u67e5\u8be2\u5728 \\(p\\) \u8fd9\u4e2a\u53ef\u91cd\u96c6\u4e2d\u7b2c \\(k\\) \u5c0f\u7684\u6570\uff0c\u4e0d\u5b58\u5728\u65f6\u8f93\u51fa <code>-1</code>\u3002</p> <p>\u5bf9\u4e8e \\(30\\%\\) \u7684\u6570\u636e\uff0c\\(1\\leq n \\leq {10}^3\\)\uff0c\\(1 \\le m \\le {10}^3\\)\uff1b \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\le n \\le 2 \\times {10}^5\\)\uff0c\\(1 \\le x, y, q \\le m \\le 2 \\times {10}^5\\)\u3002\u4fdd\u8bc1\u6570\u636e\u5408\u6cd5\u3002</p> <p>\u4e0d\u5f00 <code>long long</code> \u89c1\u7956\u5b97\uff01\uff01</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E8%A3%82/#_3","title":"\u601d\u8def","text":"<p>\u5f88\u660e\u663e\u7ef4\u62a4\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u64cd\u4f5c0\u5c31\u662f\u5206\u88c2\u7ebf\u6bb5\u6811\uff0c\u64cd\u4f5c1\u5c31\u662f\u5408\u5e76\u7ebf\u6bb5\u6811\u3002\u64cd\u4f5c4\u53ef\u4ee5\u7c7b\u6bd4\u5e73\u8861\u6811\u7684\u64cd\u4f5c\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n#define ps second\n#define pf first\n\n\n#define rd read()\nint read()\n{\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\nvoid write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int N=3e5+5;\nconst int M=5e5+5;\nconst int INF=1e9+5;\nconst int base=23;\nconst int MOD=19260817;\n\nint n,m,tot,cnt,seq=1,bac[N&lt;&lt;5];\nint s[N&lt;&lt;5][2],rt[N],tr[N&lt;&lt;5];\n\nnamespace SGT{\n\n    int newnode () {\n        if(cnt)return bac[cnt--];//\u5185\u5b58\u56de\u6536\n        return ++tot;\n    }\n    void del (int p) {\n        bac[++cnt]=p,s[p][0]=s[p][1]=tr[p]=0;\n        return;\n    }\n    void modify (int &amp;p,int l,int r,int pos,int v) {\n        if (!p) {p=newnode();}\n        tr[p]+=v;\n        if (l==r) {return;}\n        int mid=(l+r)&gt;&gt;1;\n        if (pos&lt;=mid) {modify(s[p][0],l,mid,pos,v);}\n        else {modify(s[p][1],mid+1,r,pos,v);}\n        return;\n    }\n    int query (int p,int l,int r,int xl,int xr) {\n        if (xr&lt;l||r&lt;xl) {return 0;}\n        if (xl&lt;=l&amp;&amp;r&lt;=xr) {return tr[p];}\n        int mid=(l+r)&gt;&gt;1;\n        return query(s[p][0],l,mid,xl,xr)+query(s[p][1],mid+1,r,xl,xr);\n    }\n    int kth (int p,int l,int r,int k) {\n        if (l==r) {return l;}\n        int mid=(l+r)&gt;&gt;1;\n        if (tr[s[p][0]]&gt;=k) {return kth(s[p][0],l,mid,k);}\n        else {return kth(s[p][1],mid+1,r,k-tr[s[p][0]]);}\n    }\n    int merge (int x,int y) {\n        if (!x||!y) {return x+y;}\n        tr[x]+=tr[y];\n        s[x][0]=merge(s[x][0],s[y][0]);\n        s[x][1]=merge(s[x][1],s[y][1]);\n        del(y); \n        return x;\n    }\n    void split (int x,int &amp;y,int k) {\n        if (x==0) {return;}\n        y=newnode();\n        int v=tr[s[x][0]];\n        if (k&gt;v) {split(s[x][1],s[y][1],k-v);}\n        else {swap(s[x][1],s[y][1]);}\n        if (k&lt;v) {split(s[x][0],s[y][0],k);}\n        tr[y]=tr[x]-k;\n        tr[x]=k;\n        return;\n    }\n}\nusing namespace SGT;\n\nsigned main () {\n    n=rd,m=rd;\n\n    for (int i=1;i&lt;=n;i++) {\n        int x=rd;\n        modify(rt[1],1,n,i,x);\n    }\n    for (int i=1;i&lt;=m;i++) {\n        int op=rd;\n        int x,y,z;\n        if (op==0) {\n            x=rd,y=rd,z=rd;\n            int k1=query(rt[x],1,n,1,z),k2=query(rt[x],1,n,y,z);\n            int tmp=0;\n            split(rt[x],rt[++seq],k1-k2);\n            split(rt[seq],tmp,k2);\n            rt[x]=merge(rt[x],tmp);\n        } else if (op==1) {\n            x=rd,y=rd;\n            rt[x]=merge(rt[x],rt[y]);\n        } else if (op==2) {\n            x=rd,y=rd,z=rd;\n            modify(rt[x],1,n,z,y);\n        } else if (op==3) {\n            x=rd,y=rd,z=rd;\n            printf(\"%lld\\n\",query(rt[x],1,n,y,z));\n        } else if (op==4) {\n            x=rd,y=rd;\n            if (tr[rt[x]]&lt;y) {printf(\"-1\\n\");continue;}\n            printf(\"%lld\\n\",kth(rt[x],1,n,y));\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%88%86%E8%A3%82/#_4","title":"\u6269\u5c55\u7ec3\u4e60","text":"<p>\u7d2b</p> <p>www.luogu.com.cn</p> <p>www.luogu.com.cn</p> <p>www.luogu.com.cn</p> <p>\u9ed1</p> <p>www.luogu.com.cn</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6/","title":"\u7ebf\u6bb5\u6811\u5408\u5e76","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6/#_2","title":"\u4f8b\u9898","text":"<p>\u9996\u5148\u6751\u843d\u91cc\u7684\u4e00\u5171\u6709 \\(n\\) \u5ea7\u623f\u5c4b\uff0c\u5e76\u5f62\u6210\u4e00\u4e2a\u6811\u72b6\u7ed3\u6784\u3002\u7136\u540e\u6551\u6d4e\u7cae\u5206 \\(m\\) \u6b21\u53d1\u653e\uff0c\u6bcf\u6b21\u9009\u62e9\u4e24\u4e2a\u623f\u5c4b \\((x, y)\\)\uff0c\u7136\u540e\u5bf9\u4e8e \\(x\\) \u5230 \\(y\\) \u7684\u8def\u5f84\u4e0a\uff08\u542b \\(x\\) \u548c \\(y\\)\uff09\u6bcf\u5ea7\u623f\u5b50\u91cc\u53d1\u653e\u4e00\u888b \\(z\\) \u7c7b\u578b\u7684\u6551\u6d4e\u7cae\u3002</p> <p>\u7136\u540e\u6df1\u7ed8\u91cc\u60f3\u77e5\u9053\uff0c\u5f53\u6240\u6709\u7684\u6551\u6d4e\u7cae\u53d1\u653e\u5b8c\u6bd5\u540e\uff0c\u6bcf\u5ea7\u623f\u5b50\u91cc\u5b58\u653e\u7684\u6700\u591a\u7684\u662f\u54ea\u79cd\u6551\u6d4e\u7cae\u3002</p> <p>\u521d\u6b65\u601d\u8def</p> <ul> <li> <p>\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u7cae\u98df\u6211\u4eec\u90fd\u5efa\u4e00\u9897\u7ebf\u6bb5\u6811\u3002\u6700\u540e\u6211\u4eec\u628a\u8fd9\u4e9b\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u6309\u6700\u5927\u503c\u7684\u65b9\u5f0f\u3002</p> </li> <li> <p>\u6211\u4eec\u5728\u6bcf\u4e2a\u7b80\u5355\u7ef4\u62a4z\u7684\u6570\u7ec4\u8bb0\u5f55\u6bcf\u79cd\u7cae\u98df\u7684\u6570\u91cf</p> </li> <li> <p>\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\uff08\u533a\u95f4\u52a0\u7ebf\u6bb5\u6811\uff09\u4e0a\u7ef4\u62a4\u6700\u5927\u503c\u7ebf\u6bb5\u6811\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u7ef4\u62a4\u94fe\u4e0a\u7684\u52a0\u51cf\uff0c\u8981\u6620\u5c04\u8981\u533a\u95f4\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6811\u94fe\u5256\u5206\u3002</p> </li> </ul> <p>\u5f88\u660e\u663e\u8fd9\u4e9b\u601d\u8def\u7a7a\u95f4\u660e\u663e\u4e0d\u591f\u3002</p> <p>\u4f46\u662f\u65b9\u6cd53\u8c8c\u4f3c\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u6b63\u786e\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u65b9\u6cd54\u4e5f\u662f\u53ef\u4ee5\u7528\u7684\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6/#_3","title":"\u7ebf\u6bb5\u6811\u5408\u5e76","text":"<p>\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4 n\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u5e76\u4e14\u6700\u540e\uff0c\u56e0\u4e3a\u8fd9n\u4e2a\u7ebf\u6bb5\u6811\u662f**\u76f8\u4f3c\u7684**\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6bb5\u6811\u5408\u5e76\u6765\u7ef4\u62a4\u7b54\u6848\u3002  </p> <p>\u5982\u679c\u8bf4\u6211\u4eec\u8981\u5408\u5e76\u4e24\u9897\u7ebf\u6bb5\u6811\uff0c\u5176\u5b9e\u8fd8\u662f\u5f88\u7b80\u5355\u7684\u3002\u6211\u4eec\u7528\u4e00\u4e2a\u6307\u9488x\u540c\u65f6\u8bbf\u95eetr1_x,tr2_x\u3002\u8fd9\u91cc\u6211\u4eec\u5c06tr2\u5408\u5e76\u5230tr1\u4e0a\u3002</p> <ul> <li> <p>\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u90fd\u6709\u503c\uff0c\u90a3\u4e48\u9012\u5f52\u5408\u5e76\u3002</p> </li> <li> <p>\u5982\u679ctr1\u6709\u800ctr2\u65e0\uff0c\u76f4\u63a5return\uff08\u56e0\u4e3a\u5047\u8bbe\u5f53\u524d\u67d0\u68f5\u7ebf\u6bb5\u6811\u4e0a\u7684\u5f53\u524d\u8282\u70b9\u6ca1\u6709\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e5f\u4e00\u5b9a\u6ca1\u6709\u503c\uff0c\u5408\u5e76\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\u3002\uff09</p> </li> <li> <p>\u5982\u679ctr2\u6709\u800ctr1\u65e0\uff0c\u76f4\u63a5\u590d\u5236\u8fc7\u6765\u5373\u53ef\u3002</p> </li> </ul> <p>\u6ce8\u610f\u540c\u4e00\u4e2a\u6307\u9488\u6307\u7684\u662f\u4e24\u4e2a\u6307\u9488\u6307\u5411\u4e24\u4e2a\u7ebf\u6bb5\u6811\u4e2d\u7684\u76f8\u540c\u8282\u70b9\uff0c\u76f8\u540c\u8282\u70b9\u5b9a\u4e49\u4e3a\u4ee3\u8868\u7684\u533a\u95f4\u76f8\u540c\u3002\u4e0b\u9762\u662f\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7684\u5408\u5e76\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e24\u4e2a\u6307\u9488\u3002</p> <pre><code>int  merge(int x,int y int l,int r){\n    if(!x||!y)return x/\u4e00\u4e2a\u7a7a\uff0c\u8fd4\u56de\u53e6\u4e00\u4e2a\n    if(l==r){\n        tr[x].sum+=tr[y].sum;\n        return x;\n    }\n\n    int mid=l+r&gt;&gt;1;\n    tr[x].l=merge(tr[x].l,tr[y].l,l,mid);\n    tr[x].r=merge(tr[x].r,tr[y].r,mid+1,r);\n    pushup(x);\n    return x;\n}\n</code></pre> <p>\u7ebf\u6bb5\u6811\u5408\u5e76\u2014\u2014P4556 \u96e8\u5929\u7684\u5c3e\u5df4_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6/#_4","title":"\u4f8b\u9898\u601d\u8def","text":"<p>\u6211\u4eec\u5728\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u5efa\u7acb\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e00\u79cd\u6551\u6d4e\u7cae\u7684\u6570\u91cf\u3002\u4f46\u662f\u8fd9\u4e2a\u505a\u6cd5\u4e0d\u5bf9\uff0c\u6211\u4eec\u540e\u9762\u4f1a\u8bb2\u3002</p> <p>\u5bf9\u4e8e\u4fee\u6539\u8def\u5f84\u4e0a\u7684\u503c\uff0c\u6211\u4eec\u91c7\u7528**\u5dee\u5206**\u5373\u53ef\u3002\u6ce8\u610f\u8fd9\u91cc\u662f\u70b9\u5dee\u5206\uff0c\u5373\u6211\u4eec\u5728u,v\u5904+1\uff0clca\u5904-1\uff0clca\u7684\u7956\u5148\u5904\u4e5f-1\u3002</p> <p>\u6b38\uff1f\u6211\u4eec\u4e3a\u4ec0\u4e48\u9700\u8981\u6811\u4e0a\u5dee\u5206\u5462\uff1f\u90fd\u6bcf\u4e2a\u8282\u70b9\u5f00\u7ebf\u6bb5\u6811\u4e86\u600e\u4e48\u5dee\u5206\u5462\uff1f</p> <p>\u5176\u5b9e\u60f3\u4e00\u60f3\u5c31\u77e5\u9053\u6211\u4eec\u662f\u4e0d\u53ef\u80fd\u6bcf\u4e2a\u8282\u70b9\u90fd\u5f00\u7ebf\u6bb5\u6811\u7684\uff0c\u90a3\u6837\u4f1a\u7206\u7a7a\u95f4\u3002\u5b9e\u9645\u4e0a\uff0c\u5047\u8bbe\u6211\u4eec\u5728u-v\u8def\u5f84\u4e0a\u53d1\u653ez\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5728u,v\u5904\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u4e0a\u628az+1\uff0c\u5728lca\u548clca\u7684\u7956\u5148\u7684\u7ebf\u6bb5\u6811\u4e0a-1\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u7ef4\u62a4\u5f88\u591a\u68f5\u7ebf\u6bb5\u6811\u4e86\u3002</p> <p>\u6700\u540e\u6211\u4eec\u5728\u7edf\u8ba1\u7b54\u6848\u65f6\u6309\u524d\u7f00\u548c\u65b9\u6cd5\u8fd8\u539f\u6811\uff0c\u8fd9\u6837\u5c31\u9700\u8981\u6211\u4eec**\u5408\u5e76\u7ebf\u6bb5\u6811**\u4e86\u3002</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6/#_5","title":"\u4ee3\u7801","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n#define ps second\n#define pf first\n\n\n#define rd read()\nint read()\n{\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\nvoid write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int N=2e5+5;\nconst int M=5e5+5;\nconst int INF=1e9+5;\nconst int base=23;\nconst int MOD=19260817;\n\nint n,m,ans[N];\nvector&lt;int&gt; e[N];\nint fa[N][20],dep[N];\nint rt[N],tot;\nint ls[N*50],rs[N*50],sum[N*50],typ[N*50];\n//sum:\u67d0\u79cd\u6551\u6d4e\u7cae\u7684\u6570\u91cf\n//typ:\u6551\u6d4e\u7cae\u7684\u7c7b\u578b\n\nnamespace LCA{\n\n    void dfs(int x,int f){ \n        dep[x]=dep[f]+1; fa[x][0]=f;\n        for(int i=1; i&lt;=18; i++)\n            fa[x][i]=fa[fa[x][i-1]][i-1]; \n        for(int v:e[x])\n            if(v!=f) dfs(v,x);\n        }\n        int lca(int x,int v){ //\u6c42lca\n        if(dep[x]&lt;dep[v]) swap(x,v);\n        for(int i=18; ~i; i--)\n            if(dep[fa[x][i]]&gt;=dep[v])x=fa[x][i];\n        if(x==v) return v;\n        for(int i=18; ~i; i--)\n            if(fa[x][i]!=fa[v][i])x=fa[x][i],v=fa[v][i];\n        return fa[x][0];\n    }\n\n}\n\nusing namespace LCA;\n\nvoid pushup(int x){ //\u4e0a\u4f20\n    if(sum[ls[x]]&gt;=sum[rs[x]])sum[x]=sum[ls[x]], typ[x]=typ[ls[x]];\n    else sum[x]=sum[rs[x]], typ[x]=typ[rs[x]];\n}\n    void change(int &amp;x,int l,int r,int p,int k){ \n    if(!x) x=+/\u52a8\u6001\u5f00\u70b9\n    if(l==r){sum[x]+=k; typ[x]=p; return;}\n    int mid=l+r&gt;&gt;1;\n    if(p&lt;=mid) change(ls[x],l,mid,p,k);\n    else change(rs[x],mid+1,r,p,k);\n    pushup(x);\n}\nint merge(int x,int v,int l,int r){ //\u5408\u5e76\n    if(!x||!v)return x/\u4e00\u4e2a\u7a7a,\u8fd4\u56de\u53e6\u4e00\u4e2a\n    if(l==r){sum[x]+=sum[v]; return x;}\n    int mid=l+r&gt;&gt;1;\n    ls[x]=merge(ls[x],ls[v],l,mid);\n    rs[x]=merge(rs[x],rs[v],mid+1,r);\n    pushup(x);\n    return x;\n}\nvoid dfs2(int x,int f){ //\u9012\u5f52\u5408\u5e76\n    for(int v:e[x]){\n        if(v==f) continue;\n        dfs2(v,x);\n        rt[x]=merge(rt[x],rt[v],1,N);\n    }\n    ans[x]=sum[rt[x]]?typ[rt[x]]:0;\n}\nsigned main(){\n    n=rd,m=rd;\n    for(int i=1; i&lt;n; i++){\n        int x=rd,v=rd;\n        e[x].push_back(v);\n        e[v].push_back(x);\n    }\n    dfs(1,0); \n    for(int i=1; i&lt;=m; i++){ //\u5dee\u5206\n        int x=rd,v=rd,z=rd;\n        change(rt[x],1,N,z,1);\n        change(rt[v],1,N,z,1);\n        int t=lca(x,v);\n        change(rt[t],1,N,z,-1);\n        change(rt[fa[t][0]],1,N,z,-1);\n    }\n    dfs2(1,0); //\u9012\u5f52\u5408\u5e76\n    for(int i=1;i&lt;=n;i++)printf(\"%lld\\n\",ans[i]);\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E7%9A%84%E5%90%84%E7%A7%8D%E4%BF%A1%E6%81%AF/","title":"\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u5404\u79cd\u4fe1\u606f","text":""},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E7%9A%84%E5%90%84%E7%A7%8D%E4%BF%A1%E6%81%AF/#1","title":"\u4f8b\u9898 #1 \u5f00\u65b9","text":"<p>\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f 2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 \\(n\\)\uff0c\u4ee3\u8868\u6570\u5217\u4e2d\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u7b2c\u4e8c\u884c \\(n\\) \u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a\u521d\u59cb\u72b6\u6001\u4e0b\u6570\u5217\u4e2d\u7684\u6570\u3002</p> <p>\u7b2c\u4e09\u884c\u4e00\u4e2a\u6574\u6570 \\(m\\)\uff0c\u8868\u793a\u6709 \\(m\\) \u6b21\u64cd\u4f5c\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 <code>k l r</code>\u3002</p> <ul> <li> <p>\\(k=0\\) \u8868\u793a\u7ed9 \\([l,r]\\) \u4e2d\u7684\u6bcf\u4e2a\u6570\u5f00\u5e73\u65b9\uff08\u4e0b\u53d6\u6574\uff09\u3002</p> </li> <li> <p>\\(k=1\\) \u8868\u793a\u8be2\u95ee \\([l,r]\\) \u4e2d\u5404\u4e2a\u6570\u7684\u548c\u3002</p> </li> </ul> <p>\u6570\u636e\u4e2d\u6709\u53ef\u80fd \\(l&gt;r\\)\uff0c\u6240\u4ee5\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u8bf7\u4ea4\u6362 \\(l\\) \u548c \\(r\\)\u3002</p> <p>\u5bf9\u4e8e \\(30\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m\\le 10^3\\)\uff0c\u6570\u5217\u4e2d\u7684\u6570\u4e0d\u8d85\u8fc7 \\(32767\\)\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,m\\le 10^5\\)\uff0c\\(1\\le l,r\\le n\\)\uff0c\u6570\u5217\u4e2d\u7684\u6570\u5927\u4e8e \\(0\\)\uff0c\u4e14\u4e0d\u8d85\u8fc7 \\(10^{12}\\)\u3002</p> <p>\u662f\u5426\u53ef\u4ee5\u6539\u6210pushdown\u5f62\uff1f\uff1f\u2192\u4f1a\u6709\u53d6\u6574\u95ee\u9898\uff0c\u4e0d\u884c</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n#define ps second\n#define pf first\n\n\n#define rd read()\ninline int read()\n{\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N = 2e6+6;\nconst int INF=1e9+5;\nconst int MOD=998244353;\nint n,m;\nint a[N];\nint tag[N];\n\nstruct node{\n    int sum,mx;\n}tr[N];\n\nvoid pushup(int x){\n    tr[x].sum=tr[x&lt;&lt;1].sum+tr[x&lt;&lt;1|1].sum;\n    tr[x].mx=max(tr[x&lt;&lt;1].mx,tr[x&lt;&lt;1|1].mx);\n}\n\n// void addtag(int x,int tg){\n//  tag[x]+=tg;\n//  int res=tg;\n//  while(res&amp;&amp;tr[x].mx&gt;1){\n//      tr[x].sum=sqrt(tr[x].sum);\n//      tr[x].mx=sqrt(tr[x].mx);\n//      res--;\n//  }\n// }\n\n// void pushdown(int x){\n//  addtag(x&lt;&lt;1,tag[x]);\n//  addtag(x&lt;&lt;1|1,tag[x]);\n//  tag[x]=0;\n// }\n\nvoid change(int x,int l,int r,int pl,int pr){\n    if(tr[x].mx&lt;2)return ;\n    if(l==r){\n        // addtag(x,1);\n        tr[x].sum=sqrt(tr[x].sum);\n        tr[x].mx=sqrt(tr[x].mx);\n        return ;\n    }\n    // pushdown(x);\n    int mid=l+r&gt;&gt;1;\n    if(pl&lt;=mid)change(x&lt;&lt;1,l,mid,pl,pr);\n    if(pr&gt;mid)change(x&lt;&lt;1|1,mid+1,r,pl,pr);\n    pushup(x);\n}\n\nint query(int x,int l,int r,int pl,int pr){\n    if(l&gt;=pl&amp;&amp;r&lt;=pr){\n        return tr[x].sum;\n    }\n    // pushdown(x);\n    int mid=l+r&gt;&gt;1;\n    int res=0;\n    if(pl&lt;=mid)res+=query(x&lt;&lt;1,l,mid,pl,pr);\n    if(pr&gt;mid)res+=query(x&lt;&lt;1|1,mid+1,r,pl,pr);\n    return res;\n}\n\nvoid build(int x,int l,int r){\n    if(l==r){\n        tr[x]={a[l],a[l]};\n        return ;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(x&lt;&lt;1,l,mid);\n    build(x&lt;&lt;1|1,mid+1,r);\n    pushup(x);\n}\n\nsigned main(){\n    n=rd;\n    for(int i=1;i&lt;=n;i++){\n        a[i]=rd;\n    }   \n    build(1,1,n);\n    m=rd;\n    while(m--){\n        int k=rd,l=rd,r=rd;\n        if(l&gt;r)swap(l,r);\n        if(k){\n            cout&lt;&lt;query(1,1,n,l,r)&lt;&lt;endl;\n        }else{\n            change(1,1,n,l,r);\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E7%9A%84%E5%90%84%E7%A7%8D%E4%BF%A1%E6%81%AF/#2","title":"\u4f8b\u9898 #2 \u8fde\u7eed\u5e8f\u5217\u7edf\u8ba1","text":"<p>2024\u6691\u5047S\u7ec4\u4e13\u98983-\u6570\u636e\u7ed3\u67841-ctree/SGTJ. Black And White</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E7%9A%84%E5%90%84%E7%A7%8D%E4%BF%A1%E6%81%AF/#_2","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3an\u768401\u5e8f\u5217 a[1],...,a[n]</p> <p>\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4[l,r]\uff0c\u8be2\u95ee[l,r]\u91cc\u6700\u957f\u7684\u8fde\u7eed\u76841\u7684\u957f\u5ea6</p> <p>\u6bcf\u6b21\u4fee\u6539\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4[l,r]\uff0c\u5c06[l,r]\u91cc\u7684a[i]\u53d8\u62101-a[i]\uff08\u6216\u8005\u8bf4\u5f02\u62161\uff09</p> <p>n, m &lt;= 100000</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E7%9A%84%E5%90%84%E7%A7%8D%E4%BF%A1%E6%81%AF/#_3","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7b2c\u4e00\u884c\u4e00\u4e2an</p> <p>\u7b2c\u4e8c\u884cn\u4e2a\u6570\uff0c\u8868\u793a01\u5e8f\u5217\u521d\u59cb\u72b6\u6001</p> <p>\u7b2c\u4e09\u884c\u4e00\u4e2am\uff0c\u63a5\u4e0b\u6765m\u884c\uff0c\u6bcf\u884c\u6709\u4e09\u4e2a\u6570x,l,r</p> <p>\u82e5 x=0\uff0c\u8868\u793a\u4e00\u6b21\u67e5\u8be2\uff0c\u67e5\u8be2[l,r]\u91cc\u7684\u6700\u957f\u8fde\u7eed1\u7684\u957f\u5ea6 \u82e5 x=1\uff0c\u8868\u793a\u4e00\u6b21\u4fee\u6539\uff0c\u5c06[l,r]\u91cc\u7684\u6570\u5f02\u62161</p>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E7%9A%84%E5%90%84%E7%A7%8D%E4%BF%A1%E6%81%AF/#_4","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u5bf9\u4e8e\u8f93\u5165\u91cc\u7684\u6bcf\u4e00\u4e2a\u67e5\u8be2\uff0c\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8be5\u8be2\u95ee\u7684\u6700\u957f\u8fde\u7eed1\u7684\u957f\u5ea6\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\nint a[N];\n\nnamespace SGT{\n    struct node{\n        int len;\n        int ml[2],mr[2];\n        int mx[2];\n    }t[N&lt;&lt;2];\n\n    int tag[N&lt;&lt;2];\n\n\n\n    node merge(node a,node b){\n        node r;\n\n        for(int i=0;i&lt;=1;i++){\n            r.ml[i]=max(a.ml[i],a.mx[i]==a.len?a.mx[i]+b.ml[i]:-INF);\n            r.mr[i]=max(b.mr[i],b.mx[i]==b.len?b.mx[i]+a.mr[i]:-INF);\n            r.mx[i]=max(max(a.mx[i],b.mx[i]),a.mr[i]+b.ml[i]);\n\n        }\n\n        r.len=a.len+b.len;\n\n        return r;\n    }\n\n\n    void addtag(int x){\n        tag[x]^=1;\n        swap(t[x].mx[1],t[x].mx[0]);\n        swap(t[x].ml[1],t[x].ml[0]);\n        swap(t[x].mr[1],t[x].mr[0]);\n\n    }   \n\n    void pushdown(int x){\n        if(!tag[x])return ;\n        addtag(x&lt;&lt;1);\n        addtag(x&lt;&lt;1|1);\n        tag[x]=0;\n\n    }\n\n    void pushup(int x){\n        t[x]=merge(t[x&lt;&lt;1],t[x&lt;&lt;1|1]);\n    }\n\n\n    void change(int x,int l,int r,int pl,int pr){\n        if(pl&lt;=l&amp;&amp;pr&gt;=r){\n            addtag(x);\n            return ;\n        }\n        pushdown(x);\n        int mid=l+r&gt;&gt;1;\n        if(pl&lt;=mid)change(x&lt;&lt;1,l,mid,pl,pr);\n        if(pr&gt;mid)change(x&lt;&lt;1|1,mid+1,r,pl,pr);\n        pushup(x);\n    }\n\n\n    node query(int x,int l,int r,int pl,int pr){\n        if(pl&lt;=l&amp;&amp;pr&gt;=r){\n            return t[x];\n        }\n        pushdown(x);\n        int mid=l+r&gt;&gt;1;\n        int fl=0,fr=0;\n        node nl,nr;\n        if(pl&lt;=mid)fl=1,nl=query(x&lt;&lt;1,l,mid,pl,pr);\n        if(pr&gt;mid)fr=1,nr=query(x&lt;&lt;1|1,mid+1,r,pl,pr);\n        if(fl+fr==1){\n            if(fl)return nl;\n            return nr;\n        }\n        return merge(nl,nr);\n    }\n\n\n    void build(int x,int l,int r){\n        if(l==r){\n            t[x].len=1;\n            for(int i=0;i&lt;=1;i++){\n                t[x].ml[i]=(i==a[l]);\n                t[x].mr[i]=(i==a[l]);\n                t[x].mx[i]=(i==a[l]);\n            }\n            return ;\n        }\n        int mid=l+r&gt;&gt;1;\n        build(x&lt;&lt;1,l,mid);\n        build(x&lt;&lt;1|1,mid+1,r);\n\n        pushup(x);\n    }\n}using namespace SGT;\n\nvoid solve(){\n    int n=rd;\n    for(int i=1;i&lt;=n;i++){\n        a[i]=rd;\n    }\n    int m=rd;\n\n\n    build(1,1,n);\n\n    while(m--){\n        int op=rd,l=rd,r=rd;\n        if(op){\n            change(1,1,n,l,r);\n        }else{\n            cout&lt;&lt;query(1,1,n,l,r).mx[1]&lt;&lt;endl;\n        }\n    }\n\n}\n\nsigned main() {\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%AE%B5%E6%A0%91/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%BB%B4%E6%8A%A4%E7%9A%84%E5%90%84%E7%A7%8D%E4%BF%A1%E6%81%AF/#3","title":"\u4f8b\u9898 #3 \u533a\u95f4\u7ffb\u8f6c","text":"<p>\u7ec3\u4e60 | \u5357\u5916231024D</p> <p></p> <p>\u533a\u95f4\u7ffb\u8f6c\u95ee\u9898\u4e00\u822c\u662f\u4f7f\u7528\u5e73\u8861\u6811\u3002\u4f46\u662f\u672c\u9898\u5177\u6709\u7279\u6b8a\u6027\u8d28\uff08\u5373\u6240\u6709\u53ef\u80fd\u7684\u7ffb\u8f6c\u533a\u95f4\u8981\u4e48\u65e0\u4ea4\u3001\u8981\u4e48\u5305\u542b\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u5177\u4f53\u800c\u8a00\uff0c\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u533a\u95f4\u7ffb\u8f6c\uff0c\u5c31\u4ea4\u6362\u5de6\u53f3\u513f\u5b50\u5e76\u6253\u4e0a <code>tag</code>\u3002<code>pushdown</code> \u65f6\u5982\u679c\u6709 <code>tag</code> \u5c31\u4ea4\u6362\u5206\u522b\u4ea4\u6362\u5de6\u53f3\u513f\u5b50\u7684\u5de6\u53f3\u513f\u5b50\uff0c\u7136\u540e\u628a <code>tag</code> \u4f20\u7ed9\u513f\u5b50\u4eec\u5373\u53ef\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e6+1e5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,q,T,a[N],res[N],b[N],ans,lim,tp;\n\nint rev[22][N],ls[N],rs[N],f[2][22][N],dep[N&lt;&lt;1];\n\nnamespace GTR {\n    const int bufl = 1 &lt;&lt; 15;\n    char buf[bufl], *s = buf, *t = buf;\n    inline int fetch() {\n        if (s == t) { t = (s = buf) + fread(buf, 1, bufl, stdin); if (s == t) return EOF; }\n        return *s++;\n    }\n    inline int rd() {\n        int a = 0, b = 1, c = fetch();\n        while (!isdigit(c))b ^= c == '-', c = fetch();\n        while (isdigit(c)) a = a * 10 + c - 48, c = fetch();\n        return b ? a : -a;\n    }\n}\nusing GTR::rd;\n\nvoid addtag(int x,int tg){\n    if(tg==n)return ;\n    for(int i=tg;i&lt;n;i++){\n        rev[i][x]^=1;\n        swap(f[0][i][x],f[1][i][x]);\n    }\n    if(tg!=dep[x])return ;\n    rev[tg][x]^=1;\n    swap(ls[x],rs[x]);\n}\nvoid pushdown(int x){\n    for(int i=dep[x]+1;i&lt;n;i++){\n        if(!rev[i][x])continue;\n        rev[i][x]=0;//\u6807\u8bb0\u65cb\u8f6c \n        rev[i][ls[x]]^=1;\n        rev[i][rs[x]]^=1;\n\n\n        swap(f[0][i][ls[x]],f[1][i][ls[x]]);\n        swap(f[0][i][rs[x]],f[1][i][rs[x]]);\n\n        if(i&gt;dep[x]+1)continue;\n\n        rev[i][ls[x]]^=1;\n        rev[i][rs[x]]^=1;\n        swap(ls[ls[x]],rs[ls[x]]);\n        swap(ls[rs[x]],rs[rs[x]]);\n    }\n}\nvoid pushup(int x){\n    for(int i=dep[x]+1;i&lt;n;i++){\n        f[0][i][x]=f[0][i][ls[x]]+f[0][i][rs[x]];\n        f[1][i][x]=f[1][i][ls[x]]+f[1][i][rs[x]];\n    }\n}\n//void build(int x,int l,int r){\n//  if(l==r){\n//      \n//  }\n//  int mid=l+r&gt;&gt;1;\n//  build(ls[x],l,mid);\n//  build(rs[x],mid+1,r);\n//  pushup(x);\n//}\n\nvoid change(int x,int l,int r,int pl,int pr,int v){\n    if(r&lt;=pl||l&gt;=pr)return ;\n    if(l&gt;=pl&amp;&amp;r&lt;=pr){\n        return addtag(x,v);\n    }\n    pushdown(x);\n    int mid=l+r&gt;&gt;1;\n    change(ls[x],l,mid,pl,pr,v);\n    change(rs[x],mid,r,pl,pr,v);//\u4e0d\u662fmid+1 \n    pushup(x);\n}\n\n\nvoid init(int x,int l,int r){\n    if(l==r-1)return;int mid=(l/2;\n    ls[x]=x&lt;&lt;1;rs[x]=x&lt;&lt;1|1;\n    dep[ls[x]]=dep[x]+1;\n    init(ls[x],l,mid);\n    dep[rs[x]]=dep[x]+1;\n    init(rs[x],mid,r);\n\n    for(int j=mid,i=l,k=l;;j++){\n        if(j==r){\n            while(i&lt;mid)\n                b[k++]=a[i++];\n            break;\n        }\n        while(i&lt;mid&amp;&amp;a[i]&lt;=a[j])b[k++]=a[i++];\n        f[0][dep[x]][x]+=mid-i;\n        b[k++]=a[j];\n    }\n    for(int i=l,j=mid;i&lt;mid;i++){\n        while(j&lt;r&amp;&amp;a[i]&gt;=a[j])j++;\n        f[1][dep[x]][x]+=r-j;\n    }\n\n//  while(j&lt;=r)\n    for(int i=l;i&lt;r;i++)a[i]=b[i];\n    pushup(x);\n}\n\nsigned main(){\n\n//  freopen(\"pair.in\",\"r\",stdin);\n//  freopen(\"pair.out\",\"w\",stdout);\n\n//  cerr&lt;&lt;(int)pow(2,20)&lt;&lt;endl;\n\n//  n=rd(),m=rd();\n    cin&gt;&gt;n&gt;&gt;m;\n\n    for(int i=0;i&lt;1&lt;&lt;n;i++){\n        cin&gt;&gt;a[i];\n    }\n    init(1,0,1&lt;&lt;n);//\u5f52\u5e76\u6392\u5e8f\u4ee5\u53cabuild \n\n//  cerr&lt;&lt;\"OK\\n\";\n    while(m--){ans=0;\n        int q,l,r;\n        cin&gt;&gt;q&gt;&gt;l&gt;&gt;r;\n        change(1,0,1&lt;&lt;n,(l-1)&lt;&lt;(n-q),r&lt;&lt;(n-q),q);\n        int res=0;\n        for(int i=0;i&lt;n;i++)res+=f[0][i][1];\n        cout&lt;&lt;res&lt;&lt;endl;\n\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/KD%E6%A0%91/","title":"KD\u6811","text":"<p>\u3010\u8be6\u89e3\u3011KD\u6811_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>www.bilibili.com</p>"},{"location":"%E6%A0%91%E8%AE%BA/KD%E6%A0%91/#_1","title":"\u5b9a\u4e49","text":"<p>\u8282\u70b9\u4fe1\u606f\u5982\u4e0b\u3002</p> <pre><code>struct node{\n    int l,r;//\u513f\u5b50 \n    int loc[2];//\u5750\u6807 \n    int ul[2],ur[2];//\u5b50\u6811\u533a\u95f4(\u5b50\u6811\u5728\u4e8c\u7ef4\u5e73\u9762\u4e2d\u5bf9\u5e94\u7684\u533a\u57df) \n};\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/KD%E6%A0%91/#_2","title":"\u5efa\u6811","text":"<p>\u5728kd\u6811\u7684\u7b2c\u4e00\u5c42\uff0c\u6211\u4eec\u6309\u7167x\u503c\u7684\u5927\u5c0f\u6765\u6392\u5e8f\uff0c\u9009\u62e9x\u4e3a\u4e2d\u4f4d\u6570\u7684\u90a3\u4e2a\u70b9(x',y')\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\uff0c\u5e76\u4e14\u628a\u6811\u5206\u4e3axx'\u4e24\u4e2a\u90e8\u5206\u3002\u5728\u7b2c2\u5c42\uff0c\u6211\u4eec\u5219\u6309\u7167y\u503c\u5927\u5c0f\u6765\u6392\u5e8f\uff0c\u9009\u62e9y\u4e3a\u4e2d\u4f4d\u6570\u7684\u90a3\u4e2a\u70b9(x',y')\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\uff0c\u5e76\u4e14\u628a\u6811\u5206\u4e3ayy'\u4e24\u4e2a\u90e8\u5206\u3002\u5982\u6b64\u9012\u5f52\u4e0b\u53bb\u76f4\u5230\u533a\u95f4\u4e0d\u53ef\u5212\u5206\u4e3a\u6b62\u3002 <p>\u76ee\u7684</p> <p>\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u4e8c\u7ef4\u5e73\u9762\u5212\u5206\u4e3a\u4e00\u4e2a\u4e2a\u5c0f\u5757\uff0c\u800c\u4e0d\u662f\u5206\u6210\u4e00\u4e2a\u4e2a\u957f\u6761\u3002</p> <p>\u5b9e\u73b0</p> <p>\u51fd\u6570 <code>nth_element(t+l, t+m, t+r+l)</code>: \u6c42\u533a\u95f4t\u4e2d\u7b2c m \u5c0f\uff0c\u5e76\u4e14\u628a\u5176\u653e\u5728m\u5904\uff0c\u5e76\u4e14\u4fdd\u8bc1\u5de6\u8fb9\u7684\u503c\u90fd\u5c0f\u4e8et_m\uff0c\u53f3\u8fb9\u90fd\u5927\u4e8e\u7b49\u4e8et_m\u3002\u56e0\u4e3a\u4e0d\u9700\u8981\u5b8c\u5168\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u4f1a\u6bd4sort\u66f4\u4f18\u3002</p> <pre><code>int build(int l,int r,int k){\n    if(l&gt;r)return 0;\n    int mid=l+r&gt;&gt;1;\n    K=k;\n    nth_element(tr+l,tr+mid,tr+r+1);\n    tr[mid].l=build(l,mid-1,k^1);\n    tr[mid].r=build(mid+1,r,k^1);\n    pushup(mid);\n    return mid;\n}\n</code></pre> <p>\u6ce8\u610fkd\u6811\u7684\u8282\u70b9\u7f16\u53f7\u65b9\u5f0f\u4e00\u6837\u7684\u4e0d\u4e00\u6837\u3002\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u7279\u522b\u7684\u4e09\u53c9\u6811\u3002</p> <p></p> <p></p> <p>\u66f4\u65b0\u8282\u70b9\u7684\u533a\u95f4\u4fe1\u606f</p> <pre><code>void mnn(int &amp;a,int b){\n    a=min(a,b);\n}\nvoid mxx(int &amp;a,int b){\n    a=max(a,b);\n}\nvoid pushup(int x){\n    for(int i=0;i&lt;2;i++){\n        tr[x].ul[i]=tr[x].ur[i]=tr[x].loc[i];\n        if(tr[x].l){\n        mnn(tr[x].ul[i],tr[tr[x].l].ul[i]);\n        mxx(tr[x].ur[i],tr[tr[x].l].ur[i]);\n\n        }if(tr[x].r){\n        mnn(tr[x].ul[i],tr[tr[x].r].ul[i]);\n        mxx(tr[x].ur[i],tr[tr[x].r].ur[i]);\n\n        }\n\n    }\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/KD%E6%A0%91/#_3","title":"\u67e5\u8be2","text":"<p>\u95ee\u9898\uff1a\u7ed9\u5b9a\u5e73\u9762\u4e0a\u4efb\u610f\u4e00\u4e2a\u5750\u6807(x,y)\uff0c\u6c42\u5e73\u9762\u4e0a\u7684\u70b9\u5230\u8fd9\u4e2a\u5750\u6807\u7684\u6700\u5c0f\u8ddd\u79bb\u3002</p> <p>\u6211\u4eec\u8003\u8651\u4ee5\u4e0b\u6d41\u7a0b\uff1a</p> <p></p> <p>\u5bf9\u4e8e\u7ed9\u5b9a\u70b9cur=(3,4)\uff0c\u6211\u4eec\u5148\u4ece\u6839\u8282\u70b9\u8fdb\u5165\u3002\u8ba1\u7b97\u5904(3,4)\u5230\u4e24\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4ee3\u8868\u7684\u533a\u95f4\u7684\u8ddd\u79bb\u3002\u8fd9\u4e2a\u6837\u4f8b\u91cc\u5f88\u660e\u663e\uff0c\u5230\u5de6\u8fb9\u533a\u95f4\u7684\u8ddd\u79bb\u4e3a0\uff0c\u5230\u53f3\u8fb9\u533a\u95f4\u7684\u8ddd\u79bb\u4e3a4\uff08\u5782\u7ebf\uff09\uff0c\u8fd9\u4e2a\u6d88\u606f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5de6\u53f3\u5b50\u6811\u7684ul,ur\u6765\u8ba1\u7b97\u3002</p> <p>\u4f46\u662f\u5982\u679c\u5230\u5de6\u53f3\u4e24\u8fb9\u90fd\u6709\u4e00\u5b9a\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u80fd\u53ea\u8bbf\u95ee\u4e00\u8fb9\u7684\u3002\u53ef\u662f\u5982\u679c\u6211\u4eec\u4e24\u8fb9\u90fd\u8bbf\u95ee\u7684\u8bdd\uff0c\u6211\u4eec\u7684\u6548\u7387\u4e0d\u5982\u66b4\u529b\u679a\u4e3e\u4e86\u3002\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u6837\u53bb\u4f18\u5316\u5b83\u5462\uff1f</p> <p>\u6211\u4eec**\u8d2a\u5fc3\uff0c**\u5148\u8d70\u6700\u5c0f\u8ddd\u79bb\u7684\u5b50\u6811\uff0c\u5982\u679c\u6240\u5f97\u7b54\u6848\u5c0f\u4e8e\u5230\u53e6\u4e00\u5b50\u6811\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u8d70\u53e6\u4e00\u5b50\u6811\uff08\u901a\u8fc7\u4f30\u4ef7\u51fd\u6570\u505a\u6700\u4f18\u6027\u526a\u679d\uff09\u3002</p> <pre><code>void query(int p){\n    if(!p)return ;\n    if(p!=cur)ans=min(ans,dis(p));\n    db dl=dis2(tr[p].l),dr=dis2(tr[p].r);\n    if(dl&lt;dr){\n    //\u6ce8\u610f\u6b64\u5904\u6709\u5148\u540e\u987a\u5e8f\uff1a\u5148\u8bbf\u95ee\u8ddd\u79bb\u8fd1\u7684\u533a\u95f4\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u9700\u8981\u8bbf\u95ee\u53e6\u5916\u4e00\u4e2a\u533a\u95f4\n        if(dl&lt;ans)query(tr[p].l);\n        if(dr&lt;ans)query(tr[p].r);\n    }else{\n\n        if(dr&lt;ans)query(tr[p].r);\n        if(dl&lt;ans)query(tr[p].l);\n    }\n}\n</code></pre> <p>\u8fd9\u91cc\u6211\u4eec\u7528\u5230\u4e86\u4e24\u4e2a\u8ba1\u7b97\u8ddd\u79bb\u7684\u51fd\u6570\u3002</p> <pre><code>db dis(int x){\n    db res=0;\n    for(int i=0;i&lt;2;i++){\n        s+=(tr[cur].loc[i]-tr[x].loc[i])*(tr[cur].loc[i]-tr[x].loc[i]);\n        //\u8fd9\u91cc\u91c7\u7528\u5faa\u73af\u7d2f\u52a0\u662f\u4e3a\u4e86\u65b9\u4fbf\u4fee\u6539\u4e3a\u66f4\u9ad8\u7684\u7ef4\u5ea6\n    }\n    return res;//x,cur\u4e4b\u95f4\u8ddd\u79bb\u7684\u5e73\u65b9\n}\n\ndb dis2(int x){\n    //\u533a\u95f4\u5230cur\u7684\u8ddd\u79bb\u7684\u5e73\u65b9\n    if(!x)return INF;\n    db res=0;\n    for(int i=0;i&lt;2;i++){//\u7b80\u5355\u6570\u5b66\u8ba1\u7b97\n        int t1=max(tr[cur].loc[i]-tr[x].ul[i],0.00);\n        int t2=max(-tr[cur].loc[i]+tr[x].ur[i],0.00);\n        res+=t1*t1+t2*t2;\n    }\n    return res;\n}\n</code></pre> <p>\u9644\u5f55</p> <p>\u9898\u89e3 | \u5e73\u9762\u6700\u8fd1\u70b9\u5bf9</p> <p></p>"},{"location":"%E6%A0%91%E8%AE%BA/KD%E6%A0%91/#_4","title":"\u63d2\u5165","text":"<p>\u5b66\u4e60\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u8fdb\u5165\u4e86kd\u6811\u5b66\u4e60\u7684\u7b2c2\u4e2a\u53f0\u9636\u4e86\u3002</p> <p>\u9996\u5148\u56e0\u4e3a\u6709\u63d2\u5165\uff0c\u548c\u52a8\u6001\u5f00\u70b9\u7684\u7ebf\u6bb5\u6811\u4e00\u6837\uff0c\u6211\u4eec\u8981\u7528\u7c7b\u4f3c\u52a8\u6001\u5f00\u70b9\u7684\u5b58\u50a8\u65b9\u6cd5\u4e86\u3002</p> <p>\u63d2\u5165\u65f6\u6211\u4eec\u8fd8\u662f\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u6309\u7167\u4ea4\u66ff\u5efa\u6811\u7684\u65b9\u6cd5\u4e00\u76f4\u5f80\u4e0b\u8d70\u3002\u4f8b\u5982\u6211\u4eec\u8981\u63d2\u5165\u70b9(x,y)\uff0c\u5f53\u8bbf\u95ee\u5230x\u5c42\uff08\u5373\u5728\u4ea4\u66ff\u5efa\u6811\u4e2d\u6309\u7167x\u5212\u5206\uff09\u65f6\uff0c\u770bx\u4e0e\u5f53\u524d\u8282\u70b9\u7684x'\u7684\u5173\u7cfb\u3002\u5982\u679cx&lt;x'\u5c31\u5f80\u5de6\u8d70\uff0c\u5426\u5219\u5f80\u53f3\u8d70\u3002\u5f53\u6211\u4eec\u8d70\u5230\u4e00\u4e2a\u7a7a\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u5c31\u628a\u8981\u63d2\u5165\u7684\u90a3\u4e2a\u70b9\u63d2\u5165\u8fdb\u6765\u3002\u4ee3\u7801\u5f62\u5982 <code>tr[x].l=++tot</code></p> <pre><code>void insert(int &amp;x,int k){\n    if(!x){\n        x=cur;//\u8981\u63d2\u5165\u7684\u70b9\u7684\u7f16\u53f7\u4e3acur\n        pushup(x);\n        return ;\n    }\n    if(tr[cur].loc[k]&lt;=tr[x].loc[k])insert(tr[x].l,k^1);\n    else insert(tr[x].r,k^1);\n    pushup(x);\n\n    if(A*tr[x].sz&lt;,max(tr[tr[x].l].sz,tr[tr[x].r].sz)){//\u68c0\u67e5\u662f\u5426\u9700\u8981\u91cd\u6784\n        cnt=0;\n        dfs(x);\n        x=rebuild(1,cnt,k);\n    }\n}\n</code></pre> <p>\u6211\u4eec\u518d\u8003\u8651\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u6309\u7167\u67d0\u79cd\u89c4\u5f8b\u4e0d\u65ad\u63d2\u5165\u4e00\u4e2a\u70b9\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u80fd\u4f7f\u5f97\u8fd9\u68f5\u6811\u9000\u5316\u4e3a\u4e00\u6761\u94fe\u3002\u6240\u4ee5\u6211\u4eec\u8981\u5728\u8fd9\u68f5\u6811\u7684\u5de6\u53f3\u513f\u5b50\u4e0d\u5747\u8861\u65f6\u5bf9\u8fd9\u68f5\u6811\u7ee7\u7eed\u91cd\u6784\u3002</p> <p></p> <p>\u5982\u56fe\uff0c\u5de6\u8fb9\u7684\u6811\u4e0d\u5747\u8861\uff0c\u6211\u4eec\u5c06\u5176\u91cd\u6784\u540e\u53d8\u6210\u4e86\u53f3\u8fb9\u7684\u6837\u5b50\u3002</p> <p>\u6211\u4eec\u901a\u8fc7\u67d0\u68f5\u5b50\u6811\u4e0e\u6574\u68f5\u6811\u7684\u5927\u5c0f\u7684\u6bd4\u503c\u6765\u786e\u5b9a\u6811\u662f\u5426\u5747\u8861\u3002\u901a\u5e38\u8fd9\u4e2a\u6bd4\u503c\u4e3a\\(0.5\\sim 1\\)\u3002\u5982\u679c\\(\\frac{r.sz}{x.sz-r.sz}&gt;A\\)\uff0c\u90a3\u4e48\u8bf4\u660e\u53f3\u5b50\u6811\u8fc7\u5927\u3002\u901a\u5e38A\u53d60.7</p> <p>\u6211\u4eec\u5728\u63d2\u5165\u4e86\u70b9\u540e\u7684\u56de\u6eaf\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u65f6\u523b\u68c0\u67e5\u5f53\u524d\u8282\u70b9\u7684\u5b50\u6811\u662f\u5426\u5747\u8861\u3002\u5982\u679c\u4e0d\u5747\u8861\uff0c\u6211\u4eec\u5c31\u91cd\u6784\u3002</p> <p>\u7531\u4e8e\u91cd\u6784\u4ec5\u4ec5\u5728\u4e00\u68f5\u5b50\u6811\u5185\u8fdb\u884c\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5f71\u54cd\u8282\u70b9\u7684\u4fe1\u606f\uff08\u8282\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u9664\u5916\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u60f3\u6cd5\u662f\u628a\u8282\u70b9\u7edf\u4e00\u5b58\u50a8\u5230\u4e00\u4e2a\u6570\u7ec4g\u4e2d\uff0c\u7136\u540e\u6309\u7167\u5efa\u6811\u7684\u65b9\u6cd5\u8fdb\u884c\u91cd\u6784\u3002</p> <p>\u6ce8\u610f\u5efa\u6811\u65f6\u6211\u4eec\u7b2c1\u5c42\u662f\u6309\u7167x\u6765\u6392\u5e8f\u7684\uff0c\u4f46\u662f\u5bf9\u5f53\u524d\u5b50\u6811\u8fdb\u884c\u91cd\u6784\u65f6\u6839\u8282\u70b9\u7684\u90a3\u4e00\u5c42\u53ef\u80fd\u4e0d\u662f\u6309\u7167x\u6765\u6392\u5e8f\u7684\u54e6\u3002</p> <p>\u6211\u4eec\u5c06\u9700\u8981\u91cd\u6784\u7684\u5b50\u6811\u7684\u6240\u6709\u70b9\u653e\u5165g\u4e2d\uff0c\u7136\u540e\u901a\u8fc7\u4e0d\u65ad\u5728g\u4e2d\u627e\u4e2d\u4f4d\u6570\u7136\u540e\u5206\u6cbb\u7684\u65b9\u6cd5\u91cd\u6784\u5f53\u524d\u5b50\u6811\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5f71\u54cd\u5b50\u6811\u5916\u7684\u8282\u70b9\u3002</p> <p>\u4ee3\u7801\u548cbuild\u6709\u4e00\u70b9\u7c7b\u4f3c</p> <pre><code>int K;//\u5168\u5c40\u4f20\u53c2k\n\nbool cmp(int a,int b){\n    return tr[a].loc[K]&lt;tr[b].loc[K];\n}\n\nint rebuild(int l,int r,int k){\n    if(l&gt;r)return 0;\n    int mid=l+r&gt;&gt;1;\n    K=k;\n    nth_element(g/\u6309\u7167re[g[i]].loc[k]\u5927\u5c0f\u6392\u5e8f\n    tr[g[mid]].l=build(l,mid-1,k^1);\n    tr[g[mid]].r=build(mid+1,r,k^1);\n    pushup(g[mid]);\n    return g[mid];\n}\n</code></pre> <p>\u8865\u5145\u77e5\u8bc6</p> <p></p>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/","title":"Prufur\u5e8f\u5217","text":"<p>Prufur\u5e8f\u5217</p> <p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | Prufur\u5e8f\u5217</p>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/#prufur","title":"Prufur\u5e8f\u5217","text":"<p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4e00\u9897\u65e0\u6839\u65e0\u5411\u6811\uff0c\u6bcf\u6b21\u9009\u62e9\u5176\u7f16\u53f7\u6700\u5c0f\u7684\u53f6\u5b50\u8282\u70b9v\uff0c\u8f93\u51fa\u4e0ev\u76f8\u8fde\u7684\u8282\u70b9u\u7684\u7f16\u53f7\uff0c\u5e76\u4e14\u628av\u5220\u9664\u3002\u77e5\u9053\u4ec5\u5269\u4e0b2\u4e2a\u8282\u70b9\u3002</p> <p>\u5b83\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u65e0\u6839\u65e0\u5411\u6811\u3002</p> <p>\u6811\u2192\u5e8f\u5217</p> <p>\u7528\u4f18\u5148\u961f\u5217\u5373\u53efO(n \\log n)</p> <p>\u5bf9\u4e8eO(n)\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u96c6\u5408T\u4e3a\u53f6\u5b50\u8282\u70b9\u7684\u96c6\u5408\u3002\u52a8\u6001\u7ef4\u62a4j\u4e3aT\u4e2d\u7684\u6700\u5c0f\u503c\u3002\u6bcf\u6b21\u6211\u4eec\u53d6\u51faj\u5e76\u4e14\u5220\u9664\uff0c\u7136\u540e\u5224\u65adj\u7684\u7236\u4eb2f\uff0c\u5982\u679cfj\u5219\u5220\u9664j\u3002 <pre><code>for(int i=1;i&lt;n;i++)cin&gt;&gt;f[i],d[f[i]]++;//\u5ea6\u6570\n    for(int i=1,j=1;i&lt;n-1;j++){\n        while(d[j])j++;\n        pr[i++]=f[j];\n        while(i&lt;n-1&amp;&amp;--d[pr[i-1]]==0&amp;&amp;pr[i-1]&lt;j)pr[i++]=f[pr[i-1]];\n\n\n    }for(int i=1;i&lt;n-1;i++)cout&lt;&lt;pr[i]&lt;&lt;' ';\n</code></pre> <p>\u5e8f\u5217\u2192\u6811</p> <p>\u52a8\u6001\u7ef4\u62a4\u5f53\u524d\u5ea6\u6570\u4e3a0\u7684\u6700\u5c0f\u7684\u70b9j\u3002\u7136\u540e\u5728\u679a\u4e3e\u5230 pr_i\u65f6\uff0c\u5c06j\u7684\u7236\u8282\u70b9\u8bbe\u7f6e\u4e3apr_i\uff0c\u7136\u540e\u5c06j\u7684\u5ea6\u6570\u8bbe\u4e3a-1\uff0c\u5c06pr_i\u7684\u5ea6\u6570-1\u3002\u540c\u6837\u662fO(n)\u7684\u3002</p> <pre><code>for(int i=1;i&lt;=n-2;i++)cin&gt;&gt;pr[i],d[pr[i]]++;\n    pr[n-1]=n;\n    for(int i=1,j=1;i&lt;n;i++,j++){\n        while(d[j])j++;\n        f[j]=pr[i];\n        while(i&lt;n-1&amp;&amp;--d[pr[i]]==0&amp;&amp;pr[i]&lt;j)f[pr[i]]=pr[i+1],i++;\n    }\n\n    for(int i=1;i&lt;=n-1;i++)cout&lt;&lt;f[i]&lt;&lt;' ';\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/#_1","title":"\u5f15\u7406","text":"<p>n\u4e2a\u70b9\u7684\u5b8c\u5168\u56fe\u7684\u751f\u6210\u6811\u603b\u5171 \\(n^{n\u22122}\\) \u79cd\uff08\u7531prufur\u5e8f\u5217\u751f\u6210\u65b9\u6cd5\u63a8\u5bfc\uff09</p>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/#12418","title":"\u4f8b\u9898 #12418. \u5149\u4e4b\u5927\u9646","text":"<p>\u5728\u5149\u4e4b\u5927\u9646\u7684\u571f\u5730\u4e0a\uff0c\u5404\u79cd\u52bf\u529b\u76d8\u6839\u9519\u8282\u3002</p> <p>\u6765\u81ea\u5149\u4e4b\u5ce1\u8c37\u7684\u7cbe\u7075\uff0c\u6765\u81ea\u9ed1\u6697\u68ee\u6797\u7684\u4ea1\u7075\uff0c\u6765\u81ea\u53e4\u8001\u4e1c\u65b9\u7684\u4eba\u7c7b\u5171\u540c\u751f\u6d3b\u5728\u4e00\u8d77\u3002</p> <p>\u5584\u4e8e\u6253\u9020\u88c5\u7f6e\u7684\u77ee\u4eba\uff0c\u5584\u4e8e\u53d1\u660e\u7684\u4f8f\u5112\uff0c\u9690\u533f\u4e8e\u5c71\u6797\u7684\u5de8\u4eba\u4e5f\u575a\u5b88\u7740\u5c5e\u4e8e\u81ea\u5df1\u7684\u9886\u571f\u3002</p> <p>\u8fd9\u4e9b\u79cd\u65cf\u4e4b\u95f4\u5173\u7cfb\u9519\u7efc\u590d\u6742\uff0c\u6784\u6210\u4e86\u6781\u5176\u5e9e\u5927\u7684\u5173\u7cfb\u7f51\u7edc\u3002</p> <p>\u5927\u9b54\u6cd5\u5e08\u5c0f P \u60f3\u8981\u7814\u7a76\u5176\u4e2d\u7684\u79cd\u65cf\u5173\u7cfb\u3002</p> <p>\u4e24\u4e2a\u7269\u79cd\u4e4b\u95f4\u53ef\u4ee5\u662f\u76df\u53cb\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u662f\u76df\u53cb\uff0c\u5982\u679c \\(a_1,a_2..a_n\\) \u6ee1\u8db3 \\(a_i\\) \u548c \\(a_{i+1}\\) \u662f\u76df\u53cb\uff0c\u4e14 \\(a_n\\) \u548c $a_1 $\u662f\u76df\u53cb\uff0c\u5219\u4ed6\u4eec\u6784\u6210\u4e86\u4e00\u4e2a\u8054\u76df\u3002</p> <p>\u7531\u4e8e\u5149\u4e4b\u5927\u9646\u6b63\u5904\u4e8e\u5fae\u5999\u7684\u548c\u5e73\u4e4b\u4e2d\u3002\u6240\u4ee5\u4e00\u4e2a\u5408\u7406\u7684\u7269\u79cd\u5173\u7cfb\u5e94\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6:</p> <ol> <li> <p>\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u7269\u79cd A,B\uff0c\u90fd\u5b58\u5728\u4e00\u4e2a\u5e8f\u5217 \\(A,a_1,a_2..a_n,B\\)\uff0c\u4f7f\u5f97\u4efb\u610f\u76f8\u90bb\u4e24\u4e2a\u79cd\u65cf\u662f\u76df\u53cb(\u6ce8\u610f A,B \u4e0d\u4e00\u5b9a\u662f\u76df\u53cb)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u8054\u76df \\(S_a,S_b\\)\uff0c\u90fd\u4e0d\u5b58\u5728\u4e00\u4e2a\u7269\u79cd\u65e2\u53c2\u52a0\u4e86\u8054\u76df \\(S_a\\)\uff0c\u53c8\u53c2\u52a0\u4e86\u8054\u76df \\(S_b\\)\u3002</p> </li> </ol> <p>\u5c0f P \u60f3\u77e5\u9053\uff0c\u5927\u9646\u4e0a\u7684 N \u4e2a\u79cd\u65cf\u4e00\u5171\u6709\u591a\u5c11\u79cd\u53ef\u80fd\u7684\u7ed3\u76df\u5173\u7cfb\uff0c\u7531\u4e8e\u7ed3\u679c\u53ef\u80fd\u5f88\u5927\uff0c\u4f60\u53ea\u9700\u8981\u8f93\u51fa\u7b54\u6848 mod M \u7684\u503c\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/#_2","title":"\u601d\u8def","text":"<p>\u9898\u610f\u6709\u4e00\u70b9\u7ed5\u3002\u5373\u5b8c\u5168\u56fe\u4e2d\u6709n\u4e2a\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9n\u4e2a\u70b9\u5206\u6210i\u4e2a\u96c6\u5408\uff08i\\in[1,n]\uff09\uff0c\u6bcf\u4e2a\u96c6\u5408\uff08\u82e5\u96c6\u5408\u5927\u5c0f&gt;2\uff09\u5185\u6211\u4eec\u4f1a\u8fde\u6210\u4e00\u4e2a\u7b80\u5355\u73af\u3002\u8fd9\u4e9b\u90fd\u4e0d\u7528\u7ba1\u3002\u6c42\u65b9\u6848\u6570\u3002</p> <p>\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5206\u597d\u4e86\uff0c\u5206\u6210\u4e86m\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u5c06\u8fd9m\u4e2a\u90e8\u5206\u62fc\u6210\u4e00\u9897\u751f\u6210\u6811\u7684\u4e2a\u6570\u4e3an^{m-2}\u3002\u601d\u8def\u540cprufur\u3002</p> <p>\u4e3a\u4ec0\u4e48\uff1f\u6211\u4eec\u8003\u8651\u4e00\u4e2an\u8282\u70b9\u6811\u53ef\u4ee5\u53d8\u6210\u4e00\u4e2an-2\u957f\u5ea6\u7684prufur\u5e8f\u5217\u3002\u90a3\u4e48\u5982\u679c\u8fd9\u4e2a\u6811\u662f\u4ece\u4e00\u9897\u5b8c\u5168\u56fe\u4e0a\u751f\u6210\u7684\uff0c\u90a3\u4e48prufur\u5e8f\u5217\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u6709n-2\u79cd\u53ef\u80fd\u3002\u4e8e\u662f\u4ecen\u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u56fe\u4e2d\u751f\u6210\u7684\u6811\u7684prufur\u5e8f\u5217\u4e00\u5171\u6709n^{n-2}\u79cd\u60c5\u51b5\u3002</p> <p>\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662fn^{m-2}\uff0c\u56e0\u4e3am\u4e2a\u96c6\u5408\u7684\u751f\u6210\u6811\u7684prufur\u5e8f\u5217\u6709m-2\u4e2a\u6570\uff0c\u4f46\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u7684\u7236\u8282\u70b9\uff0c\u867d\u7136\u53ea\u6709\u53ef\u80fd\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u4f46\u662f\u53ef\u80fd\u662f\u8fd9\u4e2a\u96c6\u5408\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u3002\u6240\u4ee5\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u65b9\u6848\u6570\u8fd8\u662fn\u3002</p> <p>\u81f3\u4e8e\u628an\u4e2a\u70b9\u5206\u6210m\u4e2a\u90e8\u5206\uff0c\u6211\u4eec\u7528dp</p> <p>f_{i,j}\u8868\u793a\u628ai\u4e2a\u70b9\u5206\u6210j\u4e2a\u96c6\u5408\u7684\u65b9\u6848\u7684\u6570\u91cf\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include &lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N = 2e3 + 5;\nconst int M = 1e5;\nint MOD = 1e9+7;\nconst int INF = 1e9+5;\n\nint n, m, f[N][N], g[N], C[N][N], ans;\n\nvoid init(){\n    for(int i=0;i&lt;=n;i++){\n        for(int j=0;j&lt;=n;j++){\n            if(!j)C[i][j]=1;\n            else C[i][j]=(C[i-1][j-1]+C[i-1][j])%MOD;\n        }\n    }\n\n    g[1]=1,g[3]=3;\n\n    for(int i=4;i&lt;=n;i++)g[i]=g[i-1]*i%MOD;\n}\nvoid solve(){\n    f[0][0]=1;\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=i;j++){\n            for(int k=1;k&lt;=i-j+1;k++){\n                f[i][j]=(f[i][j]+f[i-k][j-1]*C[i-1][k-1]*g[k])%MOD;\n            }\n        }\n    }\n    int res=g[n-1],p=1;\n    for(int k=2;k&lt;=n;k++    ){\n        res+=f[n][k]*p;\n        (p*=n)%=MOD;;\n    }\n\n    cout&lt;&lt;res%MOD;\n}\n\n\nsigned main() {\n//    freopen(\"tree.in\", \"r\", stdin);\n//    freopen(\"tree.out\", \"w\", stdout);\n    cin&gt;&gt;n&gt;&gt;MOD;\n\n    init();\n    solve();\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/#_3","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u4e00\u884c\uff0c\u4e24\u4e2a\u6b63\u6574\u6570 N,M\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/#_4","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u65b9\u6848\u6570 mod M \u7684\u503c\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/#_5","title":"\u6570\u636e\u8303\u56f4","text":"<p>3\u2264N\u2264200, 1\u2264M\u2264106</p>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/#_6","title":"\u8f93\u5165\u6837\u4f8b\uff1a","text":"<pre><code>4 1000000\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/#_7","title":"\u8f93\u51fa\u6837\u4f8b\uff1a","text":"<pre><code>31\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/#2","title":"\u4f8b\u9898 #2 \u751f\u6210\u6811","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>\u6211\u4eec\u662f\u672a\u6210\u719f\u7684\u6597\u58eb \u73b0\u5728\u7edd\u4e0d\u8ba4\u8f93</p> <p>\u6211\u4eec\u662f\u672a\u6210\u719f\u7684\u68a6\u60f3\u5bb6 \u73b0\u5728\u7edd\u4e0d\u54ed\u6ce3</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u73b0\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u5b8c\u5168\u56fe \\(G(V,E)\\) \u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(|V|\\) \u7684\u6743\u503c\u6570\u7ec4 \\(a\\)\uff0e\\(a_i\\) \u8868\u793a\u7f16\u53f7\u4e3a \\(i\\) \u7684\u8282\u70b9\u7684\u6743\u503c\uff0e</p> <p>\u5b9a\u4e49\u4e00\u6761\u8fb9 \\(e(u,v)\\) \u7684\u8fb9\u503c\u4e3a \\(val(e)\\)\uff0c\u6ee1\u8db3 \\(val(e)=a_u\\oplus a_v\\)\uff0c\u4e5f\u5c31\u662f\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u8282\u70b9\u7684\u6743\u503c\u7684\u5f02\u6216\u548c\uff1b\u5b9a\u4e49 \\(G\\) \u7684\u4e00\u4e2a\u751f\u6210\u6811 \\(T(V,E_t)\\) \u7684\u6743\u503c\u4e3a \\(Val(T)\\)\uff0c\u6ee1\u8db3 \\(Val(T)=\\sum_{e\\in E_t}val(e)\\)\uff0c\u4e5f\u5c31\u662f\u6811\u4e0a\u8fb9\u7684\u8fb9\u6743\u548c\uff0e</p> <p>\u60a8\u9700\u8981\u6c42\u51fa \\(\\sum_{T}Val(T)\\)\uff0e\u5373 \\(G\\) \u4e2d\u6240\u6709\u4e0d\u540c\u751f\u6210\u6811\u7684\u6743\u503c\u7684\u548c\uff0e</p> <p>\u6211\u4eec\u8ba4\u4e3a\u4e24\u68f5\u751f\u6210\u6811\u662f\u4e0d\u540c\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e24\u68f5\u6811\u7684\u8fb9\u96c6 \\(E_t\\) \u4e0d\u5b8c\u5168\u76f8\u540c\uff0c\u5373\u81f3\u5c11\u5b58\u5728\u4e00\u6761\u8fb9\uff0c\u6ee1\u8db3\u5176\u4ec5\u5c5e\u4e8e\u4e24\u68f5\u751f\u6210\u6811\u4e2d\u7684\u5176\u4e2d\u4e00\u68f5\uff0e</p>"},{"location":"%E6%A0%91%E8%AE%BA/Prufur%E5%BA%8F%E5%88%97/#_8","title":"\u601d\u8def","text":"<p>\u56e0\u4e3a\u662f\u5b8c\u5168\u56fe\uff0c\u6240\u4ee5\u6240\u6709\u7684\u8fb9\u90fd\u662f\u7b49\u4ef7\u7684\u3002</p> <p>\u751f\u6210\u6811\u603b\u5171 \\(n^{n\u22122}\\) \u79cd\uff08\u7531prufur\u5e8f\u5217\u751f\u6210\u65b9\u6cd5\u63a8\u5bfc\uff09\uff0c\u6bcf\u79cd\u6709 \\(n\u22121\\) \u6761\u8fb9\uff0c\u8fb9\u5171 \\(\\frac{n\u00d7(n\u22121)}{2}\\)\u200b \u6761\uff0c\u6bcf\u6761\u8fb9\u4f1a\u88ab\u8ba1\u7b97 $2\u00d7n^{n\u22123} $\u6b21\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include &lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N = 2e6 + 5;\nconst int M = 1e5;\nconst int MOD = 998244353;\nconst int INF = 1e9+5;\n\nint n, m, cnt[N], g[N], a[N], ans;\n\n\nint ksm(int a,int b){\n    int res=1;\n    while(b){\n        if(b&amp;1)res=(res*a)%MOD;\n        a=(a*a)%MOD;\n        b&gt;&gt;=1;\n    }\n    return res;\n}\n\nsigned main() {\n//    freopen(\"tree.in\", \"r\", stdin);\n//    freopen(\"tree.out\", \"w\", stdout);\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i];\n        for(int j=0;j&lt;=31;j++)cnt[j]+=(((1&lt;&lt;j)&amp;a[i])!=0);\n    }\n\n\n\n    for(int i=1;i&lt;=n;i++){\n        for(int j=0;j&lt;=31;j++){\n            if(((1&lt;&lt;j)&amp;a[i]))(ans+=(n-cnt[j])*(1&lt;&lt;j))%=MOD;\n            else (ans+=(cnt[j])*(1&lt;&lt;j))%=MOD;\n        }\n    }\n//  cerr&lt;&lt;\":OK\";\n    if(n&gt;2)ans=ans*ksm(n,n-3)%MOD;\n\n    cout&lt;&lt;ans%MOD;\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E4%BA%8C%E9%80%BC%E5%B9%B3%E8%A1%A1%E6%A0%91%EF%BC%88%E6%A0%91%E5%A5%97%E6%A0%91%EF%BC%89/","title":"\u4e8c\u903c\u5e73\u8861\u6811\uff08\u6811\u5957\u6811\uff09","text":"<p>C12\u3010\u6a21\u677f\u3011\u6811\u5957\u6811 \u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811 P3380 \u4e8c\u903c\u5e73\u8861\u6811_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E4%BA%8C%E9%80%BC%E5%B9%B3%E8%A1%A1%E6%A0%91%EF%BC%88%E6%A0%91%E5%A5%97%E6%A0%91%EF%BC%89/#_1","title":"\u4e8c\u903c\u5e73\u8861\u6811\uff08\u6811\u5957\u6811\uff09","text":"<p>\u540d\u79f0\u89e3\u8bf4\uff1a\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811</p> <p>\u8981\u6c42</p> <p>\u60a8\u9700\u8981\u5199\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff08\u53ef\u53c2\u8003\u9898\u76ee\u6807\u9898\uff09\uff0c\u6765\u7ef4\u62a4\u4e00\u4e2a\u6709\u5e8f\u6570\u5217\uff0c\u5176\u4e2d\u9700\u8981\u63d0\u4f9b\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ol> <li> <p>\u67e5\u8be2 \\(k\\) \u5728\u533a\u95f4\\([l,r]\\)\u5185\u7684\u6392\u540d</p> </li> <li> <p>\u67e5\u8be2**\u533a\u95f4\\([l,r]\\)\u5185**\u6392\u540d\u4e3a \\(k\\) \u7684\u503c</p> </li> <li> <p>\u4fee\u6539\u67d0\u4e00\u4f4d\u503c\u4e0a\u7684\u6570\u503c</p> </li> <li> <p>\u67e5\u8be2 \\(k\\) \u5728**\u533a\u95f4**\\([l,r]\\)\u5185**\u7684\u524d\u9a71\uff08\u524d\u9a71\u5b9a\u4e49\u4e3a\u4e25\u683c\u5c0f\u4e8e \\(x\\)\uff0c\u4e14\u6700\u5927\u7684\u6570\uff0c**\u82e5\u4e0d\u5b58\u5728\u8f93\u51fa <code>-2147483647</code>\uff09</p> </li> <li> <p>\u67e5\u8be2 \\(k\\) \u5728**\u533a\u95f4**\\([l,r]\\)\u5185**\u7684\u540e\u7ee7\uff08\u540e\u7ee7\u5b9a\u4e49\u4e3a\u4e25\u683c\u5927\u4e8e \\(x\\)\uff0c\u4e14\u6700\u5c0f\u7684\u6570\uff0c**\u82e5\u4e0d\u5b58\u5728\u8f93\u51fa <code>2147483647</code>\uff09</p> </li> </ol> <p>\u6211\u4eec\u6765\u5bf9\u7167\u4ee5\u4e0b\u5b83\u4e0e\u666e\u901a\u5e73\u8861\u6811\u7684\u533a\u522b</p> <p>\u666e\u901a\u5e73\u8861\u6811\u9700\u8981\u63d0\u4f9b\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ol> <li> <p>\u63d2\u5165 \\(x\\) \u6570</p> </li> <li> <p>\u5220\u9664 \\(x\\) \u6570(\u82e5\u6709\u591a\u4e2a\u76f8\u540c\u7684\u6570\uff0c\u5e94\u53ea\u5220\u9664\u4e00\u4e2a)</p> </li> <li> <p>\u67e5\u8be2 \\(x\\) \u6570\u7684\u6392\u540d(\u6392\u540d\u5b9a\u4e49\u4e3a\u6bd4\u5f53\u524d\u6570\u5c0f\u7684\u6570\u7684\u4e2a\u6570 \\(+1\\) )</p> </li> <li> <p>\u67e5\u8be2\u6392\u540d\u4e3a \\(x\\) \u7684\u6570</p> </li> <li> <p>\u6c42 \\(x\\) \u7684\u524d\u9a71(\u524d\u9a71\u5b9a\u4e49\u4e3a\u5c0f\u4e8e \\(x\\)\uff0c\u4e14\u6700\u5927\u7684\u6570)</p> </li> <li> <p>\u6c42 \\(x\\) \u7684\u540e\u7ee7(\u540e\u7ee7\u5b9a\u4e49\u4e3a\u5927\u4e8e \\(x\\)\uff0c\u4e14\u6700\u5c0f\u7684\u6570)</p> </li> </ol> <p>\u5bf9\u4e8e\u533a\u95f4\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7684\u6811\u5f62\u7ed3\u6784\u662f**\u7ebf\u6bb5\u6811**</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E4%BA%8C%E9%80%BC%E5%B9%B3%E8%A1%A1%E6%A0%91%EF%BC%88%E6%A0%91%E5%A5%97%E6%A0%91%EF%BC%89/#_2","title":"\u5b9a\u4e49","text":"<p>\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811</p> <p>\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u533a\u95f4\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6784\u5efa\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u7ef4\u62a4\u8be5\u533a\u95f4\u5185\u7684\u5e8f\u5217\u3002</p> <p>\u9996\u5148\u56de\u987e\u4e00\u4e0bSplay\u91cd\u8981\u51fd\u6570</p> <p>Splay\u51fd\u6570</p> <p>\u7531\u4e8e\u6211\u4eec\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u5f00\u4e00\u4e2aSplay\uff0c\u6240\u4ee5\u4e0e\u6a21\u677fSplay\u7565\u6709\u4e0d\u540c\u7684\u662f\u8fd9\u91cc\u9700\u8981\u4f20\u5165\u5f15\u7528rt\uff0c\u4f5c\u4e3a\u5f53\u524dSplay\u7684\u6807\u8bb0</p> <pre><code>void splay(int &amp;rt,int x,int k){//\u5c06x\u65cb\u8f6c\u5230k\u4e0b\u65b9\n    while(tr[x].fa!=k){\n        int y=tr[x].fa,z=tr[y].fa;\n        //\u7b2c\u4e00\u6b21\u65cb\u8f6c,\u8981\u5206\u60c5\u51b5\n        if(z!=k)//\u82e5z=k,\u8bf4\u660e\u53ea\u9700\u8981\u505a\u5355\u65cb\u4e86(\u8bf4\u660e\u76ee\u6807\u70b9\u5c31\u4e3ax\u7684\u7236\u4eb2)\n            if(tr[y].s[0]==x)^(tr[z].s[0]==y){//\u82e5y\u4e3az\u5de6,x\u4e3ay\u5de6\u6216\u8005y\u4e3az\u53f3,x\u4e3ay\u53f3,\u5f02\u6216\u548c\u5747\u4e3a0,\u8868\u793a\u662f\u76f4\u7ebf\u578b\n                rotate(x);\n            }else rotate(y);\n        //\u7b2c\u4e8c\u6b21\u65cb\u8f6c,\u90fd\u662f\u65cb\u8f6cx \n        rotata(x);\n    }\n    if(k==0)rt=x;//\u5982\u679ck=0\u8bf4\u660ex\u88ab\u65cb\u8f6c\u5230\u4e86\u6839\u8282\u70b9\n}\n</code></pre> <p>\u65cb\u8f6c\u53capushup</p> <p>\u4e0d\u505a\u4fee\u6539</p> <pre><code>void pushup(int x){//\u7531\u5de6\u53f3\u513f\u5b50\u4fe1\u606f\u66f4\u65b0\u7236\u4eb2\u7684\u4fe1\u606f\n    tr[x].size=tr[tr[x].s[0]].size/\u513f\u5b50\u7684size(\u5b50\u6811\u548c)\u52a0\u4e0a\u81ea\u5df1\u7684\u5927\u5c0f\n    //size\u5b58\u7684\u662f\u4ee5x\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u4fe1\u606f\n}\n\nvoid rotate(int x){\n    int y=t[x].fa,z=t[y].fa;\n    int k=(tr[y].s[1]==x);//\u8fd9\u91cc\u5f88\u91cd\u8981!\u5982\u679ctrue,\u8bf4\u660ex\u4e3ay\u7684\u5de6\u513f\u5b50,\u5e94\u8be5\u7ee7\u7eed\u5de6\u65cb\n    //\u4ee5\u4e0b\u4ee3\u7801\u5de6\u53f3\u65cb\u901a\u7528,\u6211\u4eec\u4ee5\u53f3\u65cb\u4e3a\u4f8b\n    tr[y].s[k]=tr[x].s[k^1];//\u5c06y\u7684\u5de6\u513f\u5b50\u8bbe\u7f6e\u4e3ax\u7684\u53f3\u513f\u5b50(1)\n    tr[tr[y].s[k]].fa=y;\n    tr[x].s[k^1]=y;//\u5c06x\u7684\u53f3\u513f\u5b50\u8bbe\u7f6e\u4e3ay(2)\n    tr[y].fa=x;\n    tr[z].s[(tr[z].s[1]==y)]=x;//\u81ea\u52a8\u5224\u65ad\u539f\u6765\u7684y\u662fz\u7684\u5de6/\u53f3\u513f\u5b50\n    tr[x].fa=z;//\u66f4\u65b0z\u7684\u513f\u5b50,x\u7684\u65b0\u7236\u4eb2(3)\n    pushup(x);pushup(y);//\u522b\u5fd8\u4e86\u4fee\u6539\u4fe1\u606f\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E4%BA%8C%E9%80%BC%E5%B9%B3%E8%A1%A1%E6%A0%91%EF%BC%88%E6%A0%91%E5%A5%97%E6%A0%91%EF%BC%89/#_3","title":"\u6784\u5efa","text":"<p>\u5982\u56fe</p> <p></p> <p>\u8fd9\u91cc\u6211\u4eec\u53c8\u8981\u628a\u7ebf\u6bb5\u6811\u7684\u677f\u5b50\u62ff\u51fa\u6765\u4e86</p> <pre><code>void build(int x, int l, int r) {\n    insert(rt[x],-INF);insert(rt[x],INF);//\u6784\u5efa\u8be5\u8282\u70b9\u4e0a\u7684\u5e73\u8861\u6811\n    for(int i=l;i&lt;=r;i++)insert(rt[x],w[i]);\n\n    if (l == r) {\n        //tr[x] = a[l];\n      //\u8fd9\u91cc\u4e0d\u9700\u8981\u518d\u8bb0\u5f55\u7ebf\u6bb5\u6811\u5e94\u8be5\u8bb0\u5f55\u7684\u4e1c\u897f\u4e86,\u8fd9\u9897\u7ebf\u6bb5\u6811\u73b0\u5728\u8bb0\u5f55\u4e00\u5806\u5e73\u8861\u6811\u5373\u53ef\n        return;\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    build(x &lt;&lt; 1, l, mid);\n    build(x &lt;&lt; 1 | 1, mid + 1, r);\n    pushup(x);\n}\n</code></pre> <p>\u6ce8\u610f,\u5e73\u8861\u6811\u5185\u7ef4\u62a4\u7684\u662f\u6743\u503c\uff0c\u6240\u4ee5\u8981insert\u7684\u662fw[i]\u800c\u4e0d\u662fi</p> <pre><code>void insert(int rt,int v){\n     int x=rt,p=0;\n     while(x&amp;tr[x].v!=v){\n        p=x;x=tr[x].s[v&gt;tr[x].v];//\u8d70\u5230\u6700\u9760\u8fd1v\u7684\u4f4d\u7f6e\uff0c\u5982\u679cv\u5b58\u5728\u90a3\u4e48x\u505c\u5728v\u4e0a\uff0c\u5426\u5219x\u8d70\u5230\u6ee1\u8db3v\u63d2\u5165\u7684\u4f4d\u7f6e\u7684\u7a7a\u8282\u70b9\n     }\n     if(x)tr[x].cnt++;//x\u539f\u6765\u5c31\u5b58\u5728\u4e86\n     else{//\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\n        x=++idx;\n        tr[p].s[v&gt;tr[p].v]=x;//p\u662fx\u7684\u7236\u8282\u70b91\n        tr[x].init(p,v);//\u521d\u59cb\u5316\u8fd9\u4e2a\u70b9\uff0c\u7236\u4eb2\u4e3ap\uff0c\u6743\u503c\u4e3av\n     }\n     splay(rt,x,0);//splay\u9632\u6b62\u9000\u5316\u6210\u94fe\n}\n</code></pre> <p>\u6211\u4eec\u89c2\u5bdf\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u6bcf\u4e00\u5c42\u7684\u5e73\u8861\u6811\u6070\u597d\\(n\\)\u4e2a\u70b9\uff0c\u56e0\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\((n\\log n)\\)</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6570\u7684\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\)\uff0c\u4e00\u5171\u6709\\(n\\log n\\)\u4e2a\u70b9\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u4e3a\\(O(n\\log^2 n)\\)</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E4%BA%8C%E9%80%BC%E5%B9%B3%E8%A1%A1%E6%A0%91%EF%BC%88%E6%A0%91%E5%A5%97%E6%A0%91%EF%BC%89/#_4","title":"\u64cd\u4f5c","text":"<p>\u5b9e\u9645\u4ee3\u7801\u548c\u7ebf\u6bb5\u6811\u7684\u67e5\u8be2\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u5f53\u8d70\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u666e\u901a\u7ebf\u6bb5\u6811\u53ea\u662f\u7b80\u5355\u7684\u8fd4\u56de\u5bf9\u5e94\u6570\u7ec4\u91cc\u5b58\u7684\u90a3\u4e2a\u503c\uff0c\u800c\u6811\u5957\u6811\u8981\u8fd4\u56de\u8be5\u8282\u70b9\u7684\u5e73\u8861\u6811\u4e2d\u5c0f\u4e8egoal\u7684\u6570\u7684\u4e2a\u6570\uff0c\u73b0\u573a\u67e5\u8be2\uff0c\u5373\u8fd4\u56de\u4e00\u4e2a<code>getrank(goal)-1</code>\u51fd\u6570</p> <pre><code>void find(int rt,int v){\n    int x=rt;\n    while(tr[x].s[v&gt;tr[x].v]&amp;&amp;v!=tr[x].v){//\u5982\u679c:\u627e\u5230\u7684\u70b9\u6ca1\u6709\u7b26\u5408\u8981\u6c42\u7684\u513f\u5b50(\u5373\u8d70\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u4f46v\u662f\u4e0d\u5b58\u5728\u7684)\u6216\u8005\u627e\u5230\u4e86v\n        x=tr[x].s[v&gt;tr[x].v];//\u5982\u679cv&gt;tr[x].v,\u90a3\u4e48\u5c31\u8d70\u53f3\u513f\u5b50\n    }\n    splay(rt,x,0);//\u5c06v\u6216\u8005\u6700\u9760\u8fd1v\u7684\u90a3\u4e2a\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9\n}\nint getrank(int rt,int v){\n    find(rt,v);\n    return tr[tr[v].s[0]].size/\u52a0\u4e0a1\u7684\u539f\u56e0\u662f\u6811\u4e0a\u90a3\u4e2a\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u8282\u70b9\u4f1a\u5728\u51fd\u6570\u5916(\u5373getrank(goal)-1)\u51cf\u53bb\n}\n</code></pre> <p>\u53e6\u5916\u4e00\u79cd\u5199\u6cd5\u3002\u7531\u4e8e\u6211\u4eec\u4ec5\u4ec5\u53ea\u9700\u8981\u67e5\u8be2\u6392\u540d\uff0c\u4e0d\u9700\u8981\u5bf9\u5e73\u8861\u6811\u8fdb\u884c\u66f4\u65b0\uff08\u5373\u8fdb\u884csplay\u64cd\u4f5c\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u7b80\u5355\u5229\u7528\u5e73\u8861\u6811\u6027\u8d28\u505a\u4e00\u4e2a\u7edf\u8ba1\u5373\u53ef\u3002\u4e0a\u4e0b\u4ee3\u7801\u7ed3\u679c\u7b49\u6548\uff0c\u4f46\u4e0b\u9762\u7684\u590d\u6742\u5ea6\u4f4e</p> <pre><code>int getrank(int rt,int v){\n\n    int u=rt,res=0;\n    while(u){\n        if(tr[u].v&lt;v)res+=tr[tr[u].s[0]].size+1,u=tr[u].s[1];;\n        else u=tr[u].s[0];\n    }\n    return res;\n}\n</code></pre> <p>\u67e5\u8be2\u4e3b\u4ee3\u7801\u5219\u7531\u7ebf\u6bb5\u6811\u7684\u67e5\u8be2\u4fee\u6539\u800c\u6765</p> <pre><code>int queryrank(int p, int l, int r, int x, int y,int v) {\n    int res = 0;\n    if (l &gt;= x &amp;&amp; r &lt;= y) {\n        return getrank(rt[p],v)-1;//\u6ce8\u610f\u4f20\u5165rt\n    }\n    //pushdown(p, l, r);  //\u4e0d\u9700\u8981 pushdown,\u56e0\u4e3a\u7ebf\u6bb5\u6811\u53ea\u4e0d\u8fc7\u662f\u4e2a\u58f3,\u6ca1\u6709\u7ef4\u62a4\u5177\u4f53\u6570\u636e\n    int mid = (l + r) &gt;&gt; 1;\n    if (x &lt;= mid)\n        res += queryrank(p &lt;&lt; 1, l, mid, x, y,v);\n    if (y &gt; mid)\n        res += queryrank(p &lt;&lt; 1 | 1, mid + 1, r, x, y,v);\n    return res;\n}\n</code></pre> <p>\u56fe\u793a\uff1a\u67e5\u8be2\u5e8f\u5217\u4e2d\u4e0b\u6807[2,5]\u4e2d</p> <p></p> <p>**\u6ce8\u610f\uff1a**\u4e3b\u51fd\u6570\u8fd4\u56de\u7684\u662f\u5c0f\u4e8ev\u7684\u6570\u7684\u4e2a\u6570\u3002\u6392\u540d\u8fd8\u9700\u8981+1 \u3002</p> <p></p> <p>\u4e8c\u5206\u5373\u53ef</p> <pre><code>int queryval(int p,int x,int y,int k){\n    int l=0,r=1e8,ans;\n    while(l&lt;=r){\n        int mid=l+r&gt;&gt;1;\n        if(queryrank(1,1,n,x,y,mid)+1&lt;=k)l=mid+1,ans=mid;\n        else r=mid-1;\n    }\n    return ans;\n}\n</code></pre> <p></p> <p>\u6211\u4eec\u627e\u5230\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\u7684\u677f\u5b50\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u662f\u6bcf\u8d70\u5230\u4e00\u4e2a\u70b9\u5c31\u4fee\u6539\uff0c\u800c\u4e0d\u662f\u50cf\u7ebf\u6bb5\u6811\u6a21\u677f\u4e00\u6837\u5148\u8d70\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u518d\u56de\u6eaf\u4fee\u6539\u3002</p> <pre><code>void change(int p, int l, int r, int old,int neww) {\n    del(rt[p],old);insert(rt[p],neww);\n    int mid = (l + r) &gt;&gt; 1;\n    if (old &lt;= mid)\n        change(p &lt;&lt; 1, l, mid, old,neww);\n    else\n        change(p &lt;&lt; 1 | 1, mid + 1, r, old,neww);  // no else\n}\n</code></pre> <p>\u5c06old\u6539\u4e3aneww\uff0c\u5c31\u5728\u6bcf\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u8282\u70b9\u4e0a\u7684\u5e73\u8861\u6811\u4e2d\u627e\u5230old\u5e76\u4e14\u5220\u9664\uff0c\u7136\u540e\u63d2\u5165neww</p> <pre><code>void del(int &amp;rt,int v){\n    int pre=getlower(v),nxt=getbigger(v);\n    splay(rt,pre,0);splay(rt,nxt,pre);//\u5c06pre\u65cb\u8f6c\u5230\u6839\u8282\u70b9,\u5c06nxt\u65cb\u8f6c\u5230pre\u7684\u4e0b\u65b9,\u53ea\u8981\u5c31\u6784\u9020\u51fa\u4e86\u5982\u56fe\u6240\u793a\u7684\u56fe\u50cf\n    int del=tr[nxt].s[0];\n    if(tr[del].cnt&gt;1)tr[del].cnt--,splay(rt,del,0);//\u8fd9\u91cc\u8fdb\u884csplay\u4e3b\u8981\u662f\u4e3a\u4e86pushup\n    else tr[nxt].s[0]=0,splay(rt,nxt,0);//\u76f4\u63a5\u6e05\u7a7anxt\u7684\u5de6\u513f\u5b50,\u5e76\u4e14\u66f4\u65b0\u5b83\n}\n</code></pre> <p>\u53e6\u4e00\u79cd\u5199\u6cd5</p> <pre><code>void del(int &amp;rt,int v){\n    int u=rt;\n    while(u){\n        if(tr[u].v==v)break;\n        if(tr[u].v&lt;v)u=tr[u].s[1];\n        if(tr[u].v&gt;v)u=tr[u].s[0];\n    }\n    splay(rt,u,0);\n    int l=tr[u].s[0],r=tr[u].s[1];\n    while(tr[l].s[1])l=tr[l].s[1];\n    while(tr[r].s[0])r=tr[r].s[0];\n    splay(rt,l,0);\n    splay(rt,r,1);\n    tr[r].s[0]=0;\n    splay(rt,r,0);\n}\n</code></pre> <p></p> <p>\u56fe\u793a\uff1a\u5c06l\u65cb\u8f6c\u5230\u6839\u8282\u70b9\uff0cr\u65cb\u8f6c\u5230l\u7684\u53f3\u513f\u5b50\uff0c\u8fd9\u6837\u6839\u636e\u5e73\u8861\u6811\u6027\u8d28\uff0c\u8981\u5220\u9664\u7684\u70b9v\u53ea\u80fd\u662fr\u7684\u5de6\u513f\u5b50\uff0c\u90a3\u4e48\u5c06\u5176\u6e05\u96f6\u5373\u53ef\u3002</p> <p></p> <p>\u8fd9\u91cc\u7684\u4ee3\u7801\u76f4\u63a5\u7531<code>queryrank()</code>\u4fee\u6539\uff0c\u56e0\u4e3a\u771f\u7684\u5f88\u50cf\u3002</p> <pre><code>int querypre(int p, int l, int r, int x, int y,int v) {\n    int res = -INF;\n    if (l &gt;= x &amp;&amp; r &lt;= y) {\n        return getpre(rt[p],v);//\u6ce8\u610f\u4f20\u5165rt\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    if (x &lt;= mid)//\u6c42\u6700\u5927\u503c,\u8fd9\u91cc\u4e0equeryrank\u4e0d\u540c,\u90a3\u4e2a\u662f\u6c42\u548c.\u6240\u4ee5res\u521d\u59cb\u503c\u4e5f\u4e0d\u540c\n        res=max(res,querypre(p &lt;&lt; 1, l, mid, x, y,v));\n    if (y &gt; mid)\n        res=max(res,querypre(p &lt;&lt; 1 | 1, mid + 1, r, x, y,v));\n    return res;\n}\n</code></pre> <p>\u7531\u4e8e\u6211\u4eec\u8bbf\u95ee\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u67e5\u8be2\u5230\u7684\u7ed3\u679c\u4e0d\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u6bcf\u4e2a\u8282\u70b9\u67e5\u8be2\u5230\u7684\u7ed3\u679c\u53d6max</p> <p>\u5bf9\u5e94\u5e73\u8861\u6811\u6a21\u677f</p> <pre><code>int getpre(int rt,int v){\n    find(rt,v);\n    int x=rt;//rt\u5373v\n    if(tr[x].v&lt;v)return x;//\u82e5true,\u8bf4\u660e\u5728find\u4e2d\u5c31\u6ca1\u6709\u627e\u5230v,\u800c\u662f\u627e\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u82e5\u8fd9\u4e2a\u70b9\u7684v&lt;v,\u90a3\u4e48\u5b83\u5c31\u662fv\u7684\u524d\u9a71\n    x=tr[x].s[0];//\u5148\u8d70\u5230v\u7684\u5de6\u5b50\u6811\n    while(tr[x].s[1])x=tr[x].s[1];//\u7136\u540e\u4e0d\u65ad\u8d70\u53f3\u513f\u5b50\n    return x;\n}\n</code></pre> <p></p> <pre><code>int querynxt(int p, int l, int r, int x, int y,int v) {\n    int res = INF;\n    if (l &gt;= x &amp;&amp; r &lt;= y) {\n        return getbigger(rt[p],v);//\u6ce8\u610f\u4f20\u5165rt\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    if (x &lt;= mid)//\u6c42\u6700\u5c0f\u503c,\u8fd9\u91cc\u4e0equeryrank\u4e0d\u540c,\u90a3\u4e2a\u662f\u6c42\u548c.\u6240\u4ee5res\u521d\u59cb\u503c\u4e5f\u4e0d\u540c\n        res=min(res,querypre(p &lt;&lt; 1, l, mid, x, y,v));\n    if (y &gt; mid)\n        res=min(res,querypre(p &lt;&lt; 1 | 1, mid + 1, r, x, y,v));\n    return res;\n}\n</code></pre> <p>\u7531\u4e8e\u6211\u4eec\u8bbf\u95ee\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u67e5\u8be2\u5230\u7684\u7ed3\u679c\u4e0d\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u6bcf\u4e2a\u8282\u70b9\u67e5\u8be2\u5230\u7684\u7ed3\u679c\u53d6min</p> <p>\u5bf9\u5e94\u5e73\u8861\u6811\u6a21\u677f</p> <pre><code>int getbigger(int rt,int v){\n    find(rt,v);\n    int x=rt;//rt\u5373v\n    if(tr[x].v&gt;v)return x;//\u82e5true,\u8bf4\u660e\u5728find\u4e2d\u5c31\u6ca1\u6709\u627e\u5230v,\u800c\u662f\u627e\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u82e5\u8fd9\u4e2a\u70b9\u7684v&gt;v,\u90a3\u4e48\u5b83\u5c31\u662fv\u7684\u540e\u7ee7\n    x=tr[x].s[1];//\u5148\u8d70\u5230v\u7684\u53f3\u5b50\u6811\n    while(tr[x].s[0])x=tr[x].s[0];//\u7136\u540e\u4e0d\u65ad\u8d70\u5de6\u513f\u5b50\n    return x;\n}\n</code></pre> <p>\uff08\u5907\u6ce8\uff1a\u8fd9\u91cc\u6211\u4eec\u7684getbigger\u548cgetpre\u4e0e\u89c6\u9891\u94fe\u63a5\u4e2d\u7684\u4ee3\u7801\u4e0d\u540c\u3002\uff09</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E4%BA%8C%E9%80%BC%E5%B9%B3%E8%A1%A1%E6%A0%91%EF%BC%88%E6%A0%91%E5%A5%97%E6%A0%91%EF%BC%89/#_5","title":"\u5b8c\u6574\u4ee3\u7801","text":"<p>\u51fd\u6570\u5f00\u5934\u6807\u8bb0<code>//ok</code>\u7684\u662f\u4e0a\u9762\u7684\u4ee3\u7801\u3002\u5426\u5219\u5219\u8bf4\u660e\u4e0a\u9762\u7684\u4ee3\u7801\u6709\u95ee\u9898\uff01\uff01</p> <p>\u8c03\u4e862h TT</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n#define ls(x) tr[x].s[0]\n#define rs(x) tr[x].s[1]\n\n#define lc u&lt;&lt;1\n#define rc u&lt;&lt;1|1\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=1e7+5;\nconst int M=5e4+5;\nconst int INF=2147483647;\nconst int MOD=998244353;\nconst int BASE=17737;\nbool f1;\nint m;\nint n,k,x[N],y[N],w[N];\nint ans,idx;\nint rt[N];\n\nstruct node{\n    int fa;\n    int s[2];\n    int size;\n    int cnt;\n    int v;\n    void init(int a,int b){\n        fa=a,v=b;\n        size=1;\n        cnt=1;\n    }\n}tr[N];\n\nbool f2;\n\n//ok2\nvoid pushup(int x){//\u7531\u5de6\u53f3\u513f\u5b50\u4fe1\u606f\u66f4\u65b0\u7236\u4eb2\u7684\u4fe1\u606f\n    tr[x].size=tr[tr[x].s[0]].size/\u513f\u5b50\u7684size(\u5b50\u6811\u548c)\u52a0\u4e0a\u81ea\u5df1\u7684\u5927\u5c0f\n    //size\u5b58\u7684\u662f\u4ee5x\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u4fe1\u606f\n}\n\n//ok2\nvoid rotate(int x){\n    int y=tr[x].fa,z=tr[y].fa;\n    int k=(tr[y].s[1]==x);//\u8fd9\u91cc\u5f88\u91cd\u8981!\u5982\u679ctrue,\u8bf4\u660ex\u4e3ay\u7684\u5de6\u513f\u5b50,\u5e94\u8be5\u7ee7\u7eed\u5de6\u65cb\n    //\u4ee5\u4e0b\u4ee3\u7801\u5de6\u53f3\u65cb\u901a\u7528,\u6211\u4eec\u4ee5\u53f3\u65cb\u4e3a\u4f8b\n    tr[y].s[k]=tr[x].s[k^1];//\u5c06y\u7684\u5de6\u513f\u5b50\u8bbe\u7f6e\u4e3ax\u7684\u53f3\u513f\u5b50(1)\n    tr[tr[y].s[k]].fa=y;\n    tr[x].s[k^1]=y;//\u5c06x\u7684\u53f3\u513f\u5b50\u8bbe\u7f6e\u4e3ay(2)\n    tr[y].fa=x;\n    tr[z].s[(tr[z].s[1]==y)]=x;//\u81ea\u52a8\u5224\u65ad\u539f\u6765\u7684y\u662fz\u7684\u5de6/\u53f3\u513f\u5b50\n    tr[x].fa=z;//\u66f4\u65b0z\u7684\u513f\u5b50,x\u7684\u65b0\u7236\u4eb2(3)\n    pushup(x);pushup(y);//\u522b\u5fd8\u4e86\u4fee\u6539\u4fe1\u606f\n}\n\n//ok2\nvoid splay(int &amp;rt,int x,int k){//\u5c06x\u65cb\u8f6c\u5230k\u4e0b\u65b9\n    while(tr[x].fa!=k){\n        int y=tr[x].fa,z=tr[y].fa;\n        //\u7b2c\u4e00\u6b21\u65cb\u8f6c,\u8981\u5206\u60c5\u51b5\n        if(z!=k)//\u82e5z=k,\u8bf4\u660e\u53ea\u9700\u8981\u505a\u5355\u65cb\u4e86(\u8bf4\u660e\u76ee\u6807\u70b9\u5c31\u4e3ax\u7684\u7236\u4eb2)\n            if((tr[y].s[0]==x)^(tr[z].s[0]==y)){//\u82e5y\u4e3az\u5de6,x\u4e3ay\u5de6\u6216\u8005y\u4e3az\u53f3,x\u4e3ay\u53f3,\u5f02\u6216\u548c\u5747\u4e3a0,\u8868\u793a\u662f\u76f4\u7ebf\u578b\n                rotate(x);\n            }else rotate(y);\n        //\u7b2c\u4e8c\u6b21\u65cb\u8f6c,\u90fd\u662f\u65cb\u8f6cx \n        rotate(x);\n    }\n    if(k==0)rt=x;//\u5982\u679ck=0\u8bf4\u660ex\u88ab\u65cb\u8f6c\u5230\u4e86\u6839\u8282\u70b9\n}\n\n\n//inline void pushup(int x){\n//  tr[x].size=tr[ls(x)].size+tr[rs(x)].size+1;\n//}\n//inline void rotate(int x){\n//  int y=tr[x].fa,z=tr[y].fa;\n//  int k=tr[y].s[1]==x;\n//  tr[z].s[tr[z].s[1]==y]=x, tr[x].fa=z;\n//  tr[y].s[k]=tr[x].s[k^1], tr[tr[x].s[k^1]].fa=y;\n//  tr[x].s[k^1]=y, tr[y].fa=x;\n//  pushup(y), pushup(x);\n//}\n//inline void splay(int &amp;root,int x,int k){\n//  while(tr[x].fa != k){\n//    int y=tr[x].fa,z=tr[y].fa;\n//    if(z != k)\n//      if((rs(y)==x)^(rs(z)==y)) rotate(x);\n//      else rotate(y);\n//    rotate(x);\n//  }\n//  if(!k) root=x;\n//}\n//ok1\n\n//ok2\n//void insert(int &amp;rt,int v){\n//   int x=rt,p=0;\n//   while(x&amp;tr[x].v!=v){\n//      p=x;x=tr[x].s[v&gt;tr[x].v];//\u8d70\u5230\u6700\u9760\u8fd1v\u7684\u4f4d\u7f6e\uff0c\u5982\u679cv\u5b58\u5728\u90a3\u4e48x\u505c\u5728v\u4e0a\uff0c\u5426\u5219x\u8d70\u5230\u6ee1\u8db3v\u63d2\u5165\u7684\u4f4d\u7f6e\u7684\u7a7a\u8282\u70b9\n//   }\n//   if(tr[x].cnt)tr[x].cnt++;//x\u539f\u6765\u5c31\u5b58\u5728\u4e86\n//   else{//\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\n//      x=++idx;\n//      tr[p].s[v&gt;tr[p].v]=x;//p\u662fx\u7684\u7236\u8282\u70b91\n//      tr[x].init(p,v);//\u521d\u59cb\u5316\u8fd9\u4e2a\u70b9\uff0c\u7236\u4eb2\u4e3ap\uff0c\u6743\u503c\u4e3av\n//   }\n//   splay(rt,x,0);//splay\u9632\u6b62\u9000\u5316\u6210\u94fe\n//}\ninline void insert(int &amp;root,int v){\n  int u=root,p=0;\n  while(u) p=u,u=tr[u].s[v&gt;tr[u].v];\n  u = ++idx;\n  tr[p].s[v&gt;tr[p].v]=u;\n  tr[u].init(p,v);\n  splay(root,u,0);\n}\n\n\n/*\n\u7ebf\u6bb5\u6811\u90e8\u5206\n*/\n\n\n//dr hr\n//void build(int u,int l,int r){\n//  insert(rt[u],-INF), insert(rt[u],INF);\n//  for(int i=l;i&lt;=r;i++)insert(rt[u],w[i]);\n//  if(l==r) return;\n//  int mid=l+r&gt;&gt;1;\n//  build(lc,l,mid);\n//  build(rc,mid+1,r);\n//}\n//ok\nvoid build(int x, int l, int r) {\n    insert(rt[x],-INF);insert(rt[x],INF);//\u6784\u5efa\u8be5\u8282\u70b9\u4e0a\u7684\u5e73\u8861\u6811\n    for(int i=l;i&lt;=r;i++)insert(rt[x],w[i]);\n\n    if (l == r) {\n        //tr[x] = a[l];\n      //\u8fd9\u91cc\u4e0d\u9700\u8981\u518d\u8bb0\u5f55\u7ebf\u6bb5\u6811\u5e94\u8be5\u8bb0\u5f55\u7684\u4e1c\u897f\u4e86,\u8fd9\u9897\u7ebf\u6bb5\u6811\u73b0\u5728\u8bb0\u5f55\u4e00\u5806\u5e73\u8861\u6811\u5373\u53ef\n        return;\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    build(x &lt;&lt; 1, l, mid);\n    build(x &lt;&lt; 1 | 1, mid + 1, r);\n//    pushup(x);\n}\n\n//\n//void find(int rt,int v){\n//  int x=rt;\n//  while(tr[x].s[v&gt;tr[x].v]&amp;&amp;v!=tr[x].v){//\u5982\u679c:\u627e\u5230\u7684\u70b9\u6ca1\u6709\u7b26\u5408\u8981\u6c42\u7684\u513f\u5b50(\u5373\u8d70\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u4f46v\u662f\u4e0d\u5b58\u5728\u7684)\u6216\u8005\u627e\u5230\u4e86v\n//      x=tr[x].s[v&gt;tr[x].v];//\u5982\u679cv&gt;tr[x].v,\u90a3\u4e48\u5c31\u8d70\u53f3\u513f\u5b50\n//  }\n//  splay(rt,x,0);//\u5c06v\u6216\u8005\u6700\u9760\u8fd1v\u7684\u90a3\u4e2a\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9\n//}\n//int getrank(int rt,int v){\n//  find(rt,v);\n//  return tr[tr[v].s[0]].size/\u52a0\u4e0a1\u7684\u539f\u56e0\u662f\u6811\u4e0a\u90a3\u4e2a\u4e00\u4e2a\u65e0\u7a77\u5c0f\u7684\u8282\u70b9\u4f1a\u5728\u51fd\u6570\u5916(\u5373getrank(goal)-1)\u51cf\u53bb\n//}\n\n//inline int getrank(int root,int v){\n//  int u=root,res=0;\n//  while(u){\n//    if(tr[u].v&lt;v) \n//      res+=tr[ls(u)].size+1,u=rs(u);\n//    else u=ls(u);\n//  }\n//  return res;\n//}\n//ok\nint getrank(int rt,int v){\n\n    int u=rt,res=0;\n    while(u){\n        if(tr[u].v&lt;v)res+=tr[tr[u].s[0]].size+1,u=tr[u].s[1];\n        else u=tr[u].s[0];\n    }\n    return res;\n}\n\n\n//int queryrank(int u,int l,int r,int x,int y,int v){\n//  if(x&lt;=l &amp;&amp; r&lt;=y) return getrank(rt[u],v)-1;\n//  int mid=l+r&gt;&gt;1, res=0;\n//  if(x&lt;=mid) res += queryrank(lc,l,mid,x,y,v);\n//  if(y&gt;mid) res += queryrank(rc,mid+1,r,x,y,v);\n//  return res;\n//}\n//ok\nint queryrank(int p, int l, int r, int x, int y,int v) {\n    int res = 0;\n    if (l &gt;= x &amp;&amp; r &lt;= y) {\n        return getrank(rt[p],v)-1;//\u6ce8\u610f\u4f20\u5165rt\n    }\n    //pushdown(p, l, r);  //\u4e0d\u9700\u8981 pushdown,\u56e0\u4e3a\u7ebf\u6bb5\u6811\u53ea\u4e0d\u8fc7\u662f\u4e2a\u58f3,\u6ca1\u6709\u7ef4\u62a4\u5177\u4f53\u6570\u636e\n    int mid = (l + r) &gt;&gt; 1;\n    if (x &lt;= mid)\n        res += queryrank(p &lt;&lt; 1, l, mid, x, y,v);\n    if (y &gt; mid)\n        res += queryrank(p &lt;&lt; 1 | 1, mid + 1, r, x, y,v);\n    return res;\n}\n\n\n//int getbigger(int rt,int v){\n//  find(rt,v);\n//  int x=rt;//rt\u5373v\n//  if(tr[x].v&gt;v)return x;//\u82e5true,\u8bf4\u660e\u5728find\u4e2d\u5c31\u6ca1\u6709\u627e\u5230v,\u800c\u662f\u627e\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u82e5\u8fd9\u4e2a\u70b9\u7684v&gt;v,\u90a3\u4e48\u5b83\u5c31\u662fv\u7684\u540e\u7ee7\n//  x=tr[x].s[1];//\u5148\u8d70\u5230v\u7684\u53f3\u5b50\u6811\n//  while(tr[x].s[0])x=tr[x].s[0];//\u7136\u540e\u4e0d\u65ad\u8d70\u5de6\u513f\u5b50\n//  return x;\n//}\n\n//rok\nint getbigger(int rt,int v){\n    int u=rt,res=INF;\n    while(u){\n        if(tr[u].v&gt;v)res=tr[u].v,u=tr[u].s[0];\n        else u=tr[u].s[1];\n    }\n    return res;\n}\n\n//int getlower(int rt,int v){\n//  find(rt,v);\n//  int x=rt;//rt\u5373v\n//  if(tr[x].v&lt;v)return x;//\u82e5true,\u8bf4\u660e\u5728find\u4e2d\u5c31\u6ca1\u6709\u627e\u5230v,\u800c\u662f\u627e\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u82e5\u8fd9\u4e2a\u70b9\u7684v&gt;v,\u90a3\u4e48\u5b83\u5c31\u662fv\u7684\u540e\u7ee7\n//  x=tr[x].s[0];//\u5148\u8d70\u5230v\u7684\u53f3\u5b50\u6811\n//  while(tr[x].s[1])x=tr[x].s[1];//\u7136\u540e\u4e0d\u65ad\u8d70\u5de6\u513f\u5b50\n//  return x;\n//}\n\n//rok\nint getlower(int rt,int v){\n    int u=rt,res=-INF;\n    while(u){\n        if(tr[u].v&lt;v)res=tr[u].v,u=tr[u].s[1];\n        else u=tr[u].s[0];\n    }\n    return res;\n}\n\n//void del(int &amp;rt,int v){\n//  int pre=getlower(rt,v),nxt=getbigger(rt,v);\n//  splay(rt,pre,0);splay(rt,nxt,pre);//\u5c06pre\u65cb\u8f6c\u5230\u6839\u8282\u70b9,\u5c06nxt\u65cb\u8f6c\u5230pre\u7684\u4e0b\u65b9,\u53ea\u8981\u5c31\u6784\u9020\u51fa\u4e86\u5982\u56fe\u6240\u793a\u7684\u56fe\u50cf\n//  int del=tr[nxt].s[0];\n//  if(tr[del].cnt&gt;1)tr[del].cnt--,splay(rt,del,0);//\u8fd9\u91cc\u8fdb\u884csplay\u4e3b\u8981\u662f\u4e3a\u4e86pushup\n//  else tr[nxt].s[0]=0,splay(rt,nxt,0);//\u76f4\u63a5\u6e05\u7a7anxt\u7684\u5de6\u513f\u5b50,\u5e76\u4e14\u66f4\u65b0\u5b83\n//}\n\n//inline void del(int &amp;root,int v){\n//  int u=root;\n//  while(u){\n//    if(tr[u].v==v) break;\n//    if(tr[u].v&lt;v) u=rs(u);\n//    else u=ls(u);\n//  }\n//  splay(root,u,0);\n//  int l=ls(u),r=rs(u);\n//  while(rs(l)) l=rs(l);\n//  while(ls(r)) r=ls(r);\n//  splay(root,l,0);\n//  splay(root,r,l);\n//  ls(r)=0;\n//  splay(root,r,0);\n//}\n//ok\nvoid del(int &amp;rt,int v){\n    int u=rt;\n    while(u){\n        if(tr[u].v==v)break;\n        if(tr[u].v&lt;v)u=tr[u].s[1];\n        if(tr[u].v&gt;v)u=tr[u].s[0];\n    }\n    splay(rt,u,0);\n    int l=tr[u].s[0],r=tr[u].s[1];\n    while(tr[l].s[1])l=tr[l].s[1];\n    while(tr[r].s[0])r=tr[r].s[0];\n    splay(rt,l,0);\n    splay(rt,r,l);//\u4e0d\u662fsplay(rt,r,1)\uff01\n    tr[r].s[0]=0;\n    splay(rt,r,0);\n}\n\n//ok\nint queryval(int p,int x,int y,int k){\n    int l=0,r=1e8,ans;\n    while(l&lt;=r){\n        int mid=l+r&gt;&gt;1;\n        if(queryrank(1,1,n,x,y,mid)+1&lt;=k)l=mid+1,ans=mid;\n        else r=mid-1;\n    }\n    return ans;\n}\n\n//void change(int u,int l,int r,int pos,int v){\n//  del(rt[u],w[pos]);\n//  insert(rt[u],v);\n//  if(l==r) return;\n//  int mid=l+r&gt;&gt;1;\n//  if(pos&lt;=mid) change(lc,l,mid,pos,v);\n//  else change(rc,mid+1,r,pos,v);\n//}\n//ok\nvoid change(int p, int l, int r, int old,int neww) {\n    del(rt[p],w[old]);insert(rt[p],neww);\n    if(l==r)return ;//\u8bb0\u5f97return\uff01\uff01\n    int mid = (l + r) &gt;&gt; 1;\n    if (old &lt;= mid)\n        change(p &lt;&lt; 1, l, mid, old,neww);\n    else\n        change(p &lt;&lt; 1 | 1, mid + 1, r, old,neww);  // no else\n}\n\n////\n//int getpre(int rt,int v){\n//  find(rt,v);\n//  int x=rt;//rt\u5373v\n//  if(tr[x].v&lt;v)return x;//\u82e5true,\u8bf4\u660e\u5728find\u4e2d\u5c31\u6ca1\u6709\u627e\u5230v,\u800c\u662f\u627e\u5230\u4e86\u6700\u9760\u8fd1v\u7684\u70b9,\u82e5\u8fd9\u4e2a\u70b9\u7684v&lt;v,\u90a3\u4e48\u5b83\u5c31\u662fv\u7684\u524d\u9a71\n//  x=tr[x].s[0];//\u5148\u8d70\u5230v\u7684\u5de6\u5b50\u6811\n//  while(tr[x].s[1])x=tr[x].s[1];//\u7136\u540e\u4e0d\u65ad\u8d70\u53f3\u513f\u5b50\n//  return x;\n//}\n\n//ok\nint querypre(int p, int l, int r, int x, int y,int v) {\n    int res = -INF;\n    if (l &gt;= x &amp;&amp; r &lt;= y) {\n        return getlower(rt[p],v);//\u6ce8\u610f\u4f20\u5165rt\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    if (x &lt;= mid)//\u6c42\u6700\u5927\u503c,\u8fd9\u91cc\u4e0equeryrank\u4e0d\u540c,\u90a3\u4e2a\u662f\u6c42\u548c.\u6240\u4ee5res\u521d\u59cb\u503c\u4e5f\u4e0d\u540c\n        res=max(res,querypre(p &lt;&lt; 1, l, mid, x, y,v));\n    if (y &gt; mid)\n        res=max(res,querypre(p &lt;&lt; 1 | 1, mid + 1, r, x, y,v));\n    return res;\n}\n\n//int querynxt(int u,int l,int r,int x,int y,int v){\n//  if(x&lt;=l &amp;&amp; r&lt;=y) return getbigger(rt[u],v);\n//  int mid=l+r&gt;&gt;1, res=INF;\n//  if(x&lt;=mid) res=min(res,querynxt(lc,l,mid,x,y,v));\n//  if(y&gt;mid) res=min(res,querynxt(rc,mid+1,r,x,y,v));\n//  return res;\n//}\n//ok\nint querynxt(int p, int l, int r, int x, int y,int v) {\n    int res = INF;\n    if (l &gt;= x &amp;&amp; r &lt;= y) {\n        return getbigger(rt[p],v);//\u6ce8\u610f\u4f20\u5165rt\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    if (x &lt;= mid)//\u6c42\u6700\u5c0f\u503c,\u8fd9\u91cc\u4e0equeryrank\u4e0d\u540c,\u90a3\u4e2a\u662f\u6c42\u548c.\u6240\u4ee5res\u521d\u59cb\u503c\u4e5f\u4e0d\u540c\n        res=min(res,querynxt(p &lt;&lt; 1, l, mid, x, y,v));\n    if (y &gt; mid)\n        res=min(res,querynxt(p &lt;&lt; 1 | 1, mid + 1, r, x, y,v));\n    return res;\n}\n\n\n\nsigned main(){\n    //\u6ce8\u610f\u8ba1\u7b97\u7a7a\u95f4\n    //freopen(\"P3380_1.in\",\"r\",stdin);\n    //freopen(\"out.txt\",\"w\",stdout);\n    n=rd,m=rd;\n    for(int i=1;i&lt;=n;i++){\n        w[i]=rd;\n    }\n//cerr&lt;&lt;\"oko\"&lt;&lt;endl;\n    build(1,1,n);\n\n//  cerr&lt;&lt;\"oko\"&lt;&lt;endl;\n\n    while(m--){\n        int op=rd;\n        if(op==1){\n            int l=rd,r=rd,k=rd;\n            cout&lt;&lt;queryrank(1,1,n,l,r,k)+1&lt;&lt;endl;\n        }if(op==2){\n            int l=rd,r=rd,k=rd;\n            cout&lt;&lt;queryval(1,l,r,k)&lt;&lt;endl;\n        }if(op==3){\n            int pos=rd,k=rd;\n            change(1,1,n,pos,k),w[pos]=k;\n        }if(op==4){\n            int l=rd,r=rd,k=rd;\n            cout&lt;&lt;querypre(1,1,n,l,r,k)&lt;&lt;endl;\n        }if(op==5){\n            int l=rd,r=rd,k=rd;\n            cout&lt;&lt;querynxt(1,1,n,l,r,k)&lt;&lt;endl;\n        }\n    }\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/","title":"\u52a8\u6001\u6811\uff08LCT\uff09","text":"<p>\u4e13\u9898 | \u9ad8\u7ea7\u306e\u6811\u4e0a\u95ee\u9898</p> <p>\u3010\u8be6\u89e3\u3011\u52a8\u6001\u6811 LCT_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>165 \u52a8\u6001\u6811 Link Cut Tree_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#lct","title":"\u52a8\u6001\u6811\uff08LCT\uff09","text":"<p>\u8bf7\u5148\u5b66\u4e60**Splay**  \u5176\u5b83\u5e73\u8861\u6811</p> <p>\u7ed9\u5b9a \\(n\\) \u4e2a\u70b9\u4ee5\u53ca\u6bcf\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u8981\u4f60\u5904\u7406\u63a5\u4e0b\u6765\u7684 \\(m\\) \u4e2a\u64cd\u4f5c\u3002 \u64cd\u4f5c\u6709\u56db\u79cd\uff0c\u64cd\u4f5c\u4ece \\(0\\) \u5230 \\(3\\) \u7f16\u53f7\u3002\u70b9\u4ece \\(1\\) \u5230 \\(n\\) \u7f16\u53f7\u3002</p> <ul> <li> <p><code>0 x y</code> \u4ee3\u8868\u8be2\u95ee\u4ece \\(x\\) \u5230 \\(y\\) \u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u6743\u503c\u7684 \\(\\text{xor}\\) \u548c\u3002\u4fdd\u8bc1 \\(x\\) \u5230 \\(y\\) \u662f\u8054\u901a\u7684\u3002</p> </li> <li> <p><code>1 x y</code> \u4ee3\u8868\u8fde\u63a5 \\(x\\) \u5230 \\(y\\)\uff0c\u82e5 \\(x\\) \u5230 \\(y\\) \u5df2\u7ecf\u8054\u901a\u5219\u65e0\u9700\u8fde\u63a5\u3002</p> </li> <li> <p><code>2 x y</code> \u4ee3\u8868\u5220\u9664\u8fb9 \\((x,y)\\)\uff0c\u4e0d\u4fdd\u8bc1\u8fb9 \\((x,y)\\) \u5b58\u5728\u3002</p> </li> <li> <p><code>3 x y</code> \u4ee3\u8868\u5c06\u70b9 \\(x\\) \u4e0a\u7684\u6743\u503c\u53d8\u6210 \\(y\\)\u3002</p> </li> </ul> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\uff0c\u4fdd\u8bc1\uff1a</p> <ul> <li> <p>\\(1 \\leq n \\leq 10^5\\)\uff0c\\(1 \\leq m \\leq 3 \\times 10^5\\)\uff0c\\(1 \\leq a_i \\leq 10^9\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u64cd\u4f5c \\(0, 1, 2\\)\uff0c\u4fdd\u8bc1 \\(1 \\leq x, y \\leq n\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u64cd\u4f5c \\(3\\)\uff0c\u4fdd\u8bc1 \\(1 \\leq x \\leq n\\)\uff0c\\(1 \\leq y \\leq 10^9\\)\u3002</p> </li> </ul>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#xor","title":"XOR \u5f02\u6216\u8fd0\u7b97","text":"<p>XOR \u7684\u8fd0\u7b97\u771f\u503c\u8868\u5982\u4e0b\u3002</p> <pre><code>0 ^ 0 = 0\n0 ^ 1 = 1\n1 ^ 0 = 1\n1 ^ 1 = 0\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#_1","title":"\u6784\u5efa\u65b9\u6cd5","text":"<p>\u8f85\u52a9\u6811\uff1a\u7531\u82e5\u5e72 splay \u6784\u6210\uff0c\u4e0e\u539f\u6811\u662f\u7b49\u4ef7\u7684\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u8f85\u52a9\u6811</p> <pre><code>\u6027\u8d28\uff1a\u6bcf\u6761\u5b9e\u94fe\u7528\u4e00\u4e2a splay \u7ef4\u62a4\u4e2d\u5e8f\u904d\u5386\u6309\u6df1\u5ea6\u4e25\u683c\u9012\u589e\n\n\u6ce8\u610f\n\n- \uff08 1 \uff09\u533a\u5206\u6811\u6839\uff08\u4ec5\u4e00\u4e2a\uff09\u548c splay \u7684\u6839\uff08\u591a\u4e2a\uff09\u3002\n\n- \uff08 2 \uff09\u865a\u8fb9\u4ece\u4e0b\u9762 splay \u7684\u6839\u6307\u5411\u4e0a\u9762 splay \u4e2d\u7684\u7236\u4eb2\u3002\uff08\u5355\u5411\u901a\u9053\uff09\n\n- \uff08 3 \uff09\u5b9e\u8fb9\u548c\u865a\u8fb9\u662f\u52a8\u6001\u53d8\u5316\u7684\u3002\n</code></pre> <p>\u4e00\u4e9b\u8f85\u52a9\u6811\u6784\u6210\u4e86 Link cut Tree (LCT), \u5176\u7ef4\u62a4\u7684\u662f\u6574\u4e2a\u68ee\u6797</p> <p></p>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#_2","title":"\u6784\u9020","text":""},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#_3","title":"\u9884\u5907\u51fd\u6570","text":"<p>\u5224\u65addianx\u662f\u4e0d\u662f\u4e00\u4e2asplay\u7684\u6811\u6839\uff0c\u9632\u6b62\u5176\u5411\u53e6\u5916\u4e00\u9897splay\u8fde\u63a5\u5b9e\u8fb9</p> <pre><code>bool notrt(int x){\n    return !(ls(fa(x))==x||rs(fa(x))==x);\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#splay","title":"splay","text":"<p>\u5148\u770b\u65cb\u8f6c</p> <p>\u539f\u6765\u7684</p> <pre><code>void rotate(int x){\n    int y=t[x].fa,z=t[y].fa;\n    int k=(tr[y].s[1]==x);//\u8fd9\u91cc\u5f88\u91cd\u8981!\u5982\u679ctrue,\u8bf4\u660ex\u4e3ay\u7684\u5de6\u513f\u5b50,\u5e94\u8be5\u7ee7\u7eed\u5de6\u65cb\n    //\u4ee5\u4e0b\u4ee3\u7801\u5de6\u53f3\u65cb\u901a\u7528,\u6211\u4eec\u4ee5\u53f3\u65cb\u4e3a\u4f8b\n    tr[y].s[k]=tr[x].s[k^1];//\u5c06y\u7684\u5de6\u513f\u5b50\u8bbe\u7f6e\u4e3ax\u7684\u53f3\u513f\u5b50(1)\n    tr[tr[y].s[k]].fa=y;\n    tr[x].s[k^1]=y;//\u5c06x\u7684\u53f3\u513f\u5b50\u8bbe\u7f6e\u4e3ay(2)\n    tr[y].fa=x;\n    tr[z].s[(tr[z].s[1]==y)]=x;//\u81ea\u52a8\u5224\u65ad\u539f\u6765\u7684y\u662fz\u7684\u5de6/\u53f3\u513f\u5b50\n    tr[x].fa=z;//\u66f4\u65b0z\u7684\u513f\u5b50,x\u7684\u65b0\u7236\u4eb2(3)\n    pushup(x);pushup(y);//\u522b\u5fd8\u4e86\u4fee\u6539\u4fe1\u606f\n}\n</code></pre> <p>\u65b0\u7684</p> <pre><code>void rotate(int x){\n    int y=t[x].fa,z=t[y].fa;\n    int k=(tr[y].s[1]==x);//\u8fd9\u91cc\u5f88\u91cd\u8981!\u5982\u679ctrue,\u8bf4\u660ex\u4e3ay\u7684\u5de6\u513f\u5b50,\u5e94\u8be5\u7ee7\u7eed\u5de6\u65cb\n    if(notrt(y)tr[z].s[(tr[z].s[1]==y)]=x;//\u81ea\u52a8\u5224\u65ad\u539f\u6765\u7684y\u662fz\u7684\u5de6/\u53f3\u513f\u5b50\n    tr[x].fa=z;//\u66f4\u65b0z\u7684\u513f\u5b50,x\u7684\u65b0\u7236\u4eb2(3)\n    tr[y].s[k]=tr[x].s[k^1];//\u5c06y\u7684\u5de6\u513f\u5b50\u8bbe\u7f6e\u4e3ax\u7684\u53f3\u513f\u5b50(1)\n    tr[tr[y].s[k]].fa=y;\n    tr[x].s[k^1]=y;//\u5c06x\u7684\u53f3\u513f\u5b50\u8bbe\u7f6e\u4e3ay(2)\n    tr[y].fa=x;\n\n    pushup(x);pushup(y);//\u522b\u5fd8\u4e86\u4fee\u6539\u4fe1\u606f\n}\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u8981\u628a\u7b2c3\u90e8\u653e\u5230\u7b2c\u4e00\u6b65\u5e76\u4e14\u8fd8\u8981\u5224\u65ad\u5462\uff1f\u6211\u4eec\u770b\u8fd9\u4e2a\u4f8b\u5b50</p> <p></p> <p>\u5224\u65ad\uff1a\u5047\u8bbe\u4e0d\u5224\u6839\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u5c06z\u5411y\u8fde\u8fb9\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u4e24\u9897splay\u9519\u8bef\u5408\u5e76\u4e86\uff01</p> <p>\u63d0\u524d\uff1a\u5982\u679c\u6211\u4eec\u4e0d\u63d0\u524d\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u5728\u524d\u9762\u7684\u65cb\u8f6c\u4e2d\u628ax\u219010,y\u219012\uff0c\u6b64\u65f6y\u7684\u7236\u4eb2\u53d8\u6210\u4e86x\uff0c\u6211\u4eec\u67e5\u770bif\u53d1\u73b0\u662f\u6210\u7acb\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u628az\u5411x\u8fde\u8fb9\u5c31\u53c8\u5bc4\u4e86\u3002</p> <p>\u770bsplay</p> <p>\u539f\u6765\u7684</p> <pre><code>void splay(int x,int k){//\u5c06x\u65cb\u8f6c\u5230k\u4e0b\u65b9\n    while(tr[x].fa!=k){\n        int y=tr[x].fa,z=tr[y].fa;\n        //\u7b2c\u4e00\u6b21\u65cb\u8f6c,\u8981\u5206\u60c5\u51b5\n        if(z!=k)//\u82e5z=k,\u8bf4\u660e\u53ea\u9700\u8981\u505a\u5355\u65cb\u4e86(\u8bf4\u660e\u76ee\u6807\u70b9\u5c31\u4e3ax\u7684\u7236\u4eb2)\n            if((tr[y].s[0]==x)^(tr[z].s[0]==y)){//\u82e5y\u4e3az\u5de6,x\u4e3ay\u5de6\u6216\u8005y\u4e3az\u53f3,x\u4e3ay\u53f3,\u5f02\u6216\u548c\u5747\u4e3a0,\u8868\u793a\u662f\u76f4\u7ebf\u578b\n                rotate(x);\n            }else rotate(y);\n        //\u7b2c\u4e8c\u6b21\u65cb\u8f6c,\u90fd\u662f\u65cb\u8f6cx \n        rotata(x);\n    }\n    if(k==0)rt=x;//\u5982\u679ck=0\u8bf4\u660ex\u88ab\u65cb\u8f6c\u5230\u4e86\u6839\u8282\u70b9\n}\n</code></pre> <p>\u65b0\u7684</p> <pre><code>void pushall(int x){\n    if(notrt(x))pushall(fa(X));\n    pushdown(X);\n}\n\nvoid splay(int x){//\u5c06x\u65cb\u8f6c\u5230k\u4e0b\u65b9\n    pushall(x);\n    while(notrt(x)){\n        int y=tr[x].fa,z=tr[y].fa;\n        //\u7b2c\u4e00\u6b21\u65cb\u8f6c,\u8981\u5206\u60c5\u51b5\n        if(notrt(y))//\u82e5z=k,\u8bf4\u660e\u53ea\u9700\u8981\u505a\u5355\u65cb\u4e86(\u8bf4\u660e\u76ee\u6807\u70b9\u5c31\u4e3ax\u7684\u7236\u4eb2)\n            if((tr[y].s[0]==x)^(tr[z].s[0]==y)){//\u82e5y\u4e3az\u5de6,x\u4e3ay\u5de6\u6216\u8005y\u4e3az\u53f3,x\u4e3ay\u53f3,\u5f02\u6216\u548c\u5747\u4e3a0,\u8868\u793a\u662f\u76f4\u7ebf\u578b\n                rotate(x);\n            }else rotate(y);\n        //\u7b2c\u4e8c\u6b21\u65cb\u8f6c,\u90fd\u662f\u65cb\u8f6cx \n        rotata(x);\n    }\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#access","title":"access","text":"<p>\u6253\u901a\u4ece x \u5230\u6811\u6839\u7684\u8def\u5f84\uff0c\u628a\u8def\u5f84\u53d8\u6210\u4e00\u6761\u5b9e\u94fe\u3002\uff08\u4e3a\u4e86\u7ef4\u62a4\u6027\u8d28\uff0c\u540c\u65f6\u4e5f\u4f34\u968f\u7740\u4e00\u4e9b\u5b9e\u9645\u8fb9\u53d8\u6210\u865a\u62df\u8fb9\uff09</p> <p>\u4ece\u4e0b\u5230\u9010\u6b65\u66f4\u65b0 splay</p> <ol> <li>\u628a\u5f53\u524d\u70b9\u8f6c\u5230\u5f53\u524d splay \u7684\u6839</li> </ol> <p>2 \uff0e\u628a\u5f53\u524d\u70b9\u7684\u53f3\u513f\u5b50\u6362\u6210\u4e4b\u524d\u7684\u8282\u70b9</p> <p>3 \uff0c\u66f4\u65b0\u5f53\u524d\u70b9\u7684\u4fe1\u606f</p> <p>4 \uff0e\u628a\u5f53\u524d\u70b9\u6362\u6210\u5f53\u524d\u70b9\u7684\u7236\u4eb2\uff0c\u7ee7\u7eed\u64cd\u4f5c</p> <p>\u529f\u80fd\uff1a\u5b8c\u6210\u5b9e\u94fe\u7684\u62c6\u5206\u4e0e\u91cd\u7ec4\u628a\u4e0d\u5728\u8def\u5f84\u4e0a\u7684\u70b9\u8e22\u51fa\u53bb\uff0c\u628a\u8def\u5f84\u4e0a\u7684\u865a\u8fb9\u53d8\u5b9e\u9645\u8fb9\u3002</p> <pre><code>void access(int x){\n    for(int y=0;x;){\n        splay(x);\n        rs(x)=y;\n        pushup(x);\n        y=x,x=fa(x);\n    }\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#makert","title":"makert","text":"<p>\u6362\u6839\uff0e\u628a\u6307\u5b9a\u70b9 x \u53d8\u6210\u6811\u6839\u3002</p> <p>\u628a x \u63d0\u8d77\u6765\uff0c\u8ba9 x \u6210\u4e3a\u6df1\u5ea6\u6700\u5c0f\u7684\u70b9</p> <p>\u5728\u8f85\u52a9\u6811\u4e0a\uff0c\u6362\u6839=access+splay+\u7ffb\u8f6c</p> <p>\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u4f7fx\u5230rt\u6210\u4e3a\u4e00\u6761\u5b9e\u9645\u94fe\uff0c\u4f7fx\u548crt\u5728\u540c\u4e00\u9897splay\u4e2d</p> </li> <li> <p>\u5c06x\u65cb\u8f6c\u5230rt\u7684\u4f4d\u7f6e</p> </li> <li> <p>\u5c06\u6574\u68f5splay\u7ffb\u8f6c\uff08\u4e3a\u4ec0\u4e48\uff1f\uff1f\uff09</p> </li> </ol> <pre><code>void makert(x){\n    access(x);\n  splay(x);\n  tr[x].tag^=1;//\u7ffb\u8f6c\u6807\u8bb0\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#split","title":"split","text":"<p>\u628a\u4ece\u00d7\u5230 y \u7684\u8def\u5f84\u5206\u79bb\u51fa\u5e73\uff0c\u628a\u8def\u5f84\u53d8\u6210\u4e00\u6761\u5b9e\u94fe\uff0c\u628a y \u8f6c\u5230\u6839</p> <pre><code>void split(int x,int y){\n    makert(x);\n    access(y);\n    splay(y);\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#findrootx","title":"findroot(x)","text":"<p>\u627e\u6839\uff0e\u628ax\u5728\u8f85\u52a9\u6811\u4e0a\u7684\u6839\u627e\u51fa\u6765\uff0c\u5e76\u8f6c\u5230\u6839\uff08\uff1f\uff1f\u4ec0\u4e48\u610f\u601d\uff09</p> <pre><code>int findrt(int x){\n    access(x);\n    splay(x);\n    while(ls(x))pushdown(x),x=ls(x);\n    splay(x);\n    return x;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#link","title":"link","text":"<p>\u6761\u4ef6\uff1a y \u4e0e\u00d7\u4e0d\u518d\u540c\u4e00\u9897splay\u4e2d</p> <p>\u539f\u56e0\uff1ax\u662f splay \u7684\u6839 \uff0cy \u4e0d\u662f splay\u7684\u6839\uff0c\u6545\u865a\u8fb9\u5e94\u8be5\u4ecex\u6307\u5411 y</p> <pre><code>void link(int x,int y){\n  makert(x);\n  if(findrt(y)!=x)fa(x)=y;\n // makert(x);\n  //if(finrt(y)==x&amp;&amp;fa(y)==x&amp;&amp;!ls(y))rs(x)=fa(y)=0,pushup(x);\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#cut","title":"cut","text":"<p>\u72b6\u6001\uff1a\u00d7\u5fc5\u5728 \u6839\u7684\u4f4d\u7f6e </p> <p>\u6761\u4ef6\uff1a y \u4e0e\u53c8\u5728\u540c\u4e00\u68f5\u6811\u4e2d\u4e14 y \u662fx\u7684\u540e\u7ee7</p> <pre><code>void link(int x,int y){\n  makert(x);\n  if(finrt(y)==x&amp;&amp;fa(y)==x&amp;&amp;!ls(y))rs(x)=fa(y)=0,pushup(x);\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#change","title":"change","text":"<p>\u4fee\u6539\u70b9x\u7684\u6743\u503c</p> <pre><code>void change(int x,int v){\n  splay(x);//\u628ax\u8f6c\u5230splay\u7684\u6839\u4e0a\uff08\u4e3a\u4f55\uff09\n  tr[x].v=v;\n  pushup(x);\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#lct_1","title":"LCT\u642d\u5efa\u52a8\u6001\u7ed3\u6784\u7ebf\u6bb5\u6811","text":"<p>[\u56fd\u5bb6\u96c6\u8bad\u961f] Tree II</p> <p>\u4e00\u68f5 \\(n\\) \u4e2a\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u70b9\u7684\u521d\u59cb\u6743\u503c\u4e3a \\(1\\)\u3002 \u5bf9\u4e8e\u8fd9\u68f5\u6811\u6709 \\(q\\) \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u4e3a\u4ee5\u4e0b\u56db\u79cd\u64cd\u4f5c\u4e4b\u4e00\uff1a</p> <ul> <li> <p><code>+ u v c</code>\uff1a\u5c06 \\(u\\) \u5230 \\(v\\) \u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u6743\u503c\u90fd\u52a0\u4e0a\u81ea\u7136\u6570 \\(c\\)\uff1b</p> </li> <li> <p><code>- u1 v1 u2 v2</code>\uff1a\u5c06\u6811\u4e2d\u539f\u6709\u7684\u8fb9 \\((u_1,v_1)\\) \u5220\u9664\uff0c\u52a0\u5165\u4e00\u6761\u65b0\u8fb9 \\((u_2,v_2)\\)\uff0c\u4fdd\u8bc1\u64cd\u4f5c\u5b8c\u4e4b\u540e\u4ecd\u7136\u662f\u4e00\u68f5\u6811\uff1b</p> </li> <li> <p><code>* u v c</code>\uff1a\u5c06 \\(u\\) \u5230 \\(v\\) \u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u6743\u503c\u90fd\u4e58\u4e0a\u81ea\u7136\u6570 \\(c\\)\uff1b</p> </li> <li> <p><code>/ u v</code>\uff1a\u8be2\u95ee \\(u\\) \u5230 \\(v\\) \u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u6743\u503c\u548c\uff0c\u5c06\u7b54\u6848\u5bf9 \\(51061\\) \u53d6\u6a21\u3002</p> </li> </ul> <p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1\\le n,q \\le 10^5\\)\uff0c\\(0\\le c \\le 10^4\\)\u3002</p> <p>By (\u4f0d\u4e00\u9e23)</p> <p>\u5e94\u8be5\u8bf4\u662fLCT\u677f\u5b50\u4e86\uff0c\u5728splay\u7684\u67d0\u4e2a\u8282\u70b9\u4e0a\u7ef4\u62a4tag\u548c\u533a\u95f4\u4fe1\u606f\uff0c\u5728pushup\u548cpushdown\u4e0a\u505a\u4e00\u4e9b\u4fee\u6539\u3002</p> <pre><code>// \u52a8\u6001\u7ebf\u6bb5\u6811\u7684LCT\u5b9e\u73b0\n\n#include &lt;bits/stdc++.h&gt;\n#define rep(l, tagr, i) for (int i = l, END##i = tagr; i &lt;= END##i; ++i)\n#define per(tagr, l, i) for (int i = tagr, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define pb push_back\n// #define mpy make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps b\n#define pf a\n\n#define X(j) i[j]\n#define Y(j) (dp[j] + (i[j] + L) * (i[j] + L))\n#define lc tr[x][0]\n#define rc tr[x][1]\n#define rd read()\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\n#define MOD 51061\nconst int N=100009;\n\n#define mul(x) x*=tr;x%=MOD\n#define add(x,tr) x+=tr;x%=MOD\nunsigned int n,fa[N],tr[N][2],v[N],s[N],sz[N],tagm[N],taga[N],stk[N];\nbool tagr[N];\n\nnamespace LCT{\n\n    bool notrt(int x){\n        return tr[fa[x]][0]==x||tr[fa[x]][1]==x;\n    }\n    void pushup(int x){\n        s[x]=(s[lc]+s[rc]+v[x])%MOD;\n        sz[x]=sz[lc]+sz[rc]+1;\n    }\n    void revtag(int x){//\u7ffb\u8f6c\n        int t=lc;lc=rc;rc=t;tagr[x]^=1;\n    }\n    void multag(int x,int tr){//\u4e58\n        mul(s[x]);mul(v[x]);mul(tagm[x]);mul(taga[x]);\n    }\n    void addtag(int x,int tr){//\u52a0\n        add(s[x],tr*sz[x]);add(v[x],tr);add(taga[x],tr);\n    }\n    void pushdown(int x){\n        if(tagm[x]!=1)multag(lc,tagm[x]),multag(rc,tagm[x]),tagm[x]=1;\n        if(taga[x])   addtag(lc,taga[x]),addtag(rc,taga[x]),taga[x]=0;\n        if(tagr[x])   {if(lc)revtag(lc);if(rc)revtag(rc);tagr[x]=0;}\n    }\n    void rotate(int x){\n        int y=fa[x],z=fa[y],k=tr[y][1]==x,w=tr[x][!k];\n        if(notrt(y))tr[z][tr[z][1]==y]=x;tr[x][!k]=y;tr[y][k]=w;\n        if(w)fa[w]=y;fa[y]=x;fa[x]=z;\n        pushup(y);\n    }\n    void splay(int x){\n        int y=x,z=0;\n        stk[++z]=y;\n        while(notrt(y))stk[++z]=y=fa[y];\n        while(z)pushdown(stk[z--]);\n        while(notrt(x)){\n            y=fa[x];z=fa[y];\n            if(notrt(y))\n                rotate((tr[y][0]==x)^(tr[z][0]==y)?x:y);\n            rotate(x);\n        }\n        pushup(x);\n    }\n    void access(int x){\n        for(int y=0;x;x=fa[y=x])\n            splay(x),rc=y,pushup(x);\n    }\n    void makeroot(int x){\n        access(x);\n        splay(x);\n        revtag(x);\n    }\n    void split(int x,int y){\n        makeroot(x);\n        access(y);\n        splay(y);\n    }\n    void link(int x,int y){\n        makeroot(x);fa[x]=y;\n    }\n    void cut(int x,int y){\n        split(x,y);fa[x]=tr[y][0]=0;\n    }\n}\n\nusing namespace LCT;\nsigned main()\n{\n    char ch;\n    n=rd;\n    int q=rd,i,a,b,k;\n\n    for(i=1;i&lt;=n;++i)v[i]=sz[i]=tagm[i]=1;\n    for(i=1;i&lt;n;++i){\n        a=rd,b=rd;\n        link(a,b);\n    }\n    while(q--){\n        cin&gt;&gt;ch;\n        switch(ch){\n        case '+':\n            a=rd,b=rd,k=rd;\n            split(a,b);addtag(b,k);\n            break;\n        case '-':\n            a=rd,b=rd;cut(a,b);\n            a=rd,b=rd;link(a,b);\n            break;\n        case '*':\n            a=rd,b=rd,k=rd;\n            split(a,b);multag(b,k);\n            break;\n        case '/':\n            a=rd,b=rd;\n            split(a,b);\n            printf(\"%lld\\n\",s[b]);\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#_4","title":"\u52a8\u6001\u7ef4\u62a4\u8fde\u901a\u6027&amp;\u53cc\u8054\u901a\u5206\u91cf","text":"<p>\u53ef\u4ee5\u8bf4\u662f\u5e76\u67e5\u96c6\u7684\u5347\u7ea7\uff0c\u56e0\u4e3a\u5e76\u67e5\u96c6\u53ea\u80fd\u8fde\u4e0d\u80fd\u65ad</p> <p>[SDOI2008] \u6d1e\u7a74\u52d8\u6d4b</p> <p>\u8f89\u8f89\u70ed\u8877\u4e8e\u6d1e\u7a74\u52d8\u6d4b\u3002</p> <p>\u67d0\u5929\uff0c\u4ed6\u6309\u7167\u5730\u56fe\u6765\u5230\u4e86\u4e00\u7247\u88ab\u6807\u8bb0\u4e3aJSZX\u7684\u6d1e\u7a74\u7fa4\u5730\u533a\u3002\u7ecf\u8fc7\u521d\u6b65\u52d8\u6d4b\uff0c\u8f89\u8f89\u53d1\u73b0\u8fd9\u7247\u533a\u57df\u7531n\u4e2a\u6d1e\u7a74\uff08\u5206\u522b\u7f16\u53f7\u4e3a1\u5230n\uff09\u4ee5\u53ca\u82e5\u5e72\u901a\u9053\u7ec4\u6210\uff0c\u5e76\u4e14\u6bcf\u6761\u901a\u9053\u8fde\u63a5\u4e86\u6070\u597d\u4e24\u4e2a\u6d1e\u7a74\u3002\u5047\u5982\u4e24\u4e2a\u6d1e\u7a74\u53ef\u4ee5\u901a\u8fc7\u4e00\u6761\u6216\u8005\u591a\u6761\u901a\u9053\u6309\u4e00\u5b9a\u987a\u5e8f\u8fde\u63a5\u8d77\u6765\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6d1e\u7a74\u5c31\u662f\u8fde\u901a\u7684\uff0c\u6309\u987a\u5e8f\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u8fd9\u4e9b\u901a\u9053\u5219\u88ab\u79f0\u4e4b\u4e3a\u8fd9\u4e24\u4e2a\u6d1e\u7a74\u4e4b\u95f4\u7684\u4e00\u6761\u8def\u5f84\u3002 \u6d1e\u7a74\u90fd\u5341\u5206\u575a\u56fa\u65e0\u6cd5\u7834\u574f\uff0c\u7136\u800c\u901a\u9053\u4e0d\u592a\u7a33\u5b9a\uff0c\u65f6\u5e38\u56e0\u4e3a\u5916\u754c\u5f71\u54cd\u800c\u53d1\u751f\u6539\u53d8\uff0c\u6bd4\u5982\uff0c\u6839\u636e\u6709\u5173\u4eea\u5668\u7684\u76d1\u6d4b\u7ed3\u679c\uff0c123\u53f7\u6d1e\u7a74\u548c127\u53f7\u6d1e\u7a74\u4e4b\u95f4\u6709\u65f6\u4f1a\u51fa\u73b0\u4e00\u6761\u901a\u9053\uff0c\u6709\u65f6\u8fd9\u6761\u901a\u9053\u53c8\u4f1a\u56e0\u4e3a\u67d0\u79cd\u7a00\u5947\u53e4\u602a\u7684\u539f\u56e0\u88ab\u6bc1\u3002</p> <p>\u8f89\u8f89\u6709\u4e00\u53f0\u76d1\u6d4b\u4eea\u5668\u53ef\u4ee5\u5b9e\u65f6\u5c06\u901a\u9053\u7684\u6bcf\u4e00\u6b21\u6539\u53d8\u72b6\u51b5\u5728\u8f89\u8f89\u624b\u8fb9\u7684\u7ec8\u7aef\u673a\u4e0a\u663e\u793a\uff1a</p> <p>\u5982\u679c\u76d1\u6d4b\u5230\u6d1e\u7a74u\u548c\u6d1e\u7a74v\u4e4b\u95f4\u51fa\u73b0\u4e86\u4e00\u6761\u901a\u9053\uff0c\u7ec8\u7aef\u673a\u4e0a\u4f1a\u663e\u793a\u4e00\u6761\u6307\u4ee4 <code>Connect u v</code></p> <p>\u5982\u679c\u76d1\u6d4b\u5230\u6d1e\u7a74u\u548c\u6d1e\u7a74v\u4e4b\u95f4\u7684\u901a\u9053\u88ab\u6bc1\uff0c\u7ec8\u7aef\u673a\u4e0a\u4f1a\u663e\u793a\u4e00\u6761\u6307\u4ee4 <code>Destroy u v</code></p> <p>\u7ecf\u8fc7\u957f\u671f\u7684\u8270\u82e6\u5353\u7edd\u7684\u624b\u5de5\u63a8\u7b97\uff0c\u8f89\u8f89\u53d1\u73b0\u4e00\u4e2a\u5947\u602a\u7684\u73b0\u8c61\uff1a\u65e0\u8bba\u901a\u9053\u600e\u4e48\u6539\u53d8\uff0c\u4efb\u610f\u65f6\u523b\u4efb\u610f\u4e24\u4e2a\u6d1e\u7a74\u4e4b\u95f4\u81f3\u591a\u53ea\u6709\u4e00\u6761\u8def\u5f84\u3002</p> <p>\u56e0\u800c\uff0c\u8f89\u8f89\u575a\u4fe1\u8fd9\u662f\u7531\u4e8e\u67d0\u79cd\u672c\u8d28\u89c4\u5f8b\u7684\u652f\u914d\u5bfc\u81f4\u7684\u3002\u56e0\u800c\uff0c\u8f89\u8f89\u66f4\u52a0\u591c\u4ee5\u7ee7\u65e5\u5730\u575a\u5b88\u5728\u7ec8\u7aef\u673a\u4e4b\u524d\uff0c\u8bd5\u56fe\u901a\u8fc7\u901a\u9053\u7684\u6539\u53d8\u60c5\u51b5\u6765\u7814\u7a76\u8fd9\u6761\u672c\u8d28\u89c4\u5f8b\u3002 \u7136\u800c\uff0c\u7ec8\u4e8e\u6709\u4e00\u5929\uff0c\u8f89\u8f89\u5728\u5806\u79ef\u6210\u5c71\u7684\u6f14\u7b97\u7eb8\u4e2d\u5d29\u6e83\u4e86\u2026\u2026\u4ed6\u628a\u7ec8\u7aef\u673a\u5f80\u5730\u9762\u4e00\u7838\uff08\u7ec8\u7aef\u673a\u4e5f\u8db3\u591f\u575a\u56fa\u65e0\u6cd5\u7834\u574f\uff09\uff0c\u8f6c\u800c\u6c42\u52a9\u4e8e\u4f60\uff0c\u8bf4\u9053\uff1a\u201c\u4f60\u8001\u5144\u628a\u8fd9\u7a0b\u5e8f\u5199\u5199\u5427\u201d\u3002</p> <p>\u8f89\u8f89\u5e0c\u671b\u80fd\u968f\u65f6\u901a\u8fc7\u7ec8\u7aef\u673a\u53d1\u51fa\u6307\u4ee4 <code>Query u v</code>\uff0c\u5411\u76d1\u6d4b\u4eea\u8be2\u95ee\u6b64\u65f6\u6d1e\u7a74u\u548c\u6d1e\u7a74v\u662f\u5426\u8fde\u901a\u3002\u73b0\u5728\u4f60\u8981\u4e3a\u4ed6\u7f16\u5199\u7a0b\u5e8f\u56de\u7b54\u6bcf\u4e00\u6b21\u8be2\u95ee\u3002 \u5df2\u77e5\u5728\u7b2c\u4e00\u6761\u6307\u4ee4\u663e\u793a\u4e4b\u524d\uff0cJSZX\u6d1e\u7a74\u7fa4\u4e2d\u6ca1\u6709\u4efb\u4f55\u901a\u9053\u5b58\u5728\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e3a\u4e24\u4e2a\u6b63\u6574\u6570n\u548cm\uff0c\u5206\u522b\u8868\u793a\u6d1e\u7a74\u7684\u4e2a\u6570\u548c\u7ec8\u7aef\u673a\u4e0a\u51fa\u73b0\u8fc7\u7684\u6307\u4ee4\u7684\u4e2a\u6570\u3002 \u4ee5\u4e0bm\u884c\uff0c\u4f9d\u6b21\u8868\u793a\u7ec8\u7aef\u673a\u4e0a\u51fa\u73b0\u7684\u5404\u6761\u6307\u4ee4\u3002\u6bcf\u884c\u5f00\u5934\u662f\u4e00\u4e2a\u8868\u793a\u6307\u4ee4\u79cd\u7c7b\u7684\u5b57\u7b26\u4e32s\uff08\"Connect\u201d\u3001\u201dDestroy\u201d\u6216\u8005\u201dQuery\u201d\uff0c\u533a\u5206\u5927\u5c0f\u5199\uff09\uff0c\u4e4b\u540e\u6709\u4e24\u4e2a\u6574\u6570u\u548cv (1\u2264u, v\u2264n) \u5206\u522b\u8868\u793a\u4e24\u4e2a\u6d1e\u7a74\u7684\u7f16\u53f7\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5bf9\u6bcf\u4e2aQuery\u6307\u4ee4\uff0c\u8f93\u51fa\u6d1e\u7a74u\u548c\u6d1e\u7a74v\u662f\u5426\u4e92\u76f8\u8fde\u901a\uff1a\u662f\u8f93\u51fa\u201dYes\u201d\uff0c\u5426\u5219\u8f93\u51fa\u201dNo\u201d\u3002\uff08\u4e0d\u542b\u53cc\u5f15\u53f7\uff09</p> <p>100%\u7684\u6570\u636e\u6ee1\u8db3n\u226410000, m\u2264200000</p> <p>\u4fdd\u8bc1\u6240\u6709Destroy\u6307\u4ee4\u5c06\u6467\u6bc1\u7684\u662f\u4e00\u6761\u5b58\u5728\u7684\u901a\u9053</p> <p>\u672c\u9898\u8f93\u5165\u3001\u8f93\u51fa\u89c4\u6a21\u6bd4\u8f83\u5927\uff0c\u5efa\u8baec\\c++\u9009\u624b\u4f7f\u7528scanf\u548cprintf\u8fdb\u884cI\\O\u64cd\u4f5c\u4ee5\u514d\u8d85\u65f6</p> <pre><code>// \u52a8\u6001\u7ebf\u6bb5\u6811\u7684LCT\u5b9e\u73b0\n\n#include &lt;bits/stdc++.h&gt;\n#define rep(l, tagr, i) for (int i = l, END##i = tagr; i &lt;= END##i; ++i)\n#define per(tagr, l, i) for (int i = tagr, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define pb push_back\n// #define mpy make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps b\n#define pf a\n\n#define X(j) i[j]\n#define Y(j) (dp[j] + (i[j] + L) * (i[j] + L))\n#define lc tr[x][0]\n#define rc tr[x][1]\n#define rd read()\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\n#define MOD 51061\nconst int N = 300005;\n\nint n, m;\nint val[N];\nnamespace LCT {\n  int fa[N];\n  int sons[N][2];\n  int rev[N];\n  int q[N];\n  int top;\n  void pushdown(int id) {\n    int l = sons[id][0], r = sons[id][1];\n    if (rev[id]) {\n      rev[l] ^= 1;\n      rev[r] ^= 1;\n      rev[id] ^= 1;\n      swap(sons[id][0], sons[id][1]);\n    }\n  }\n  bool notrt(int id) { return sons[fa[id]][0] == id || sons[fa[id]][1] == id; }\n  void rotate(int id) {\n    int f = fa[id], ff = fa[f], l, r;\n    if (sons[f][0] == id)\n      l = 0;\n    else\n      l = 1;\n    r = l ^ 1;\n    if (notrt(f)) {\n      if (sons[ff][0] == f)\n        sons[ff][0] = id;\n      else\n        sons[ff][1] = id;\n    }\n    fa[id] = ff;\n    fa[f] = id;\n    fa[sons[id][r]] = f;\n    sons[f][l] = sons[id][r];\n    sons[id][r] = f;\n  }\n  void splay(int id) {\n    top = 1;\n    q[top] = id;\n    for (int i = id; notrt(i); i = fa[i])\n      q[++top] = fa[i];\n    for (int i = top; i; --i)\n      pushdown(q[i]);\n    int f, ff;\n    while (notrt(id)) {\n      f = fa[id];\n      ff = fa[f];\n      if (notrt(f)) {\n        if ((sons[f][0] == id) ^ (sons[ff][0] == f))\n          rotate(id);\n        else\n          rotate(f);\n      }\n      rotate(id);\n    }\n  }\n  void access(int id) {\n    for (int t = 0; id; t = id, id = fa[id])\n      splay(id), sons[id][1] = t;\n  }\n  void makeroot(int id) {\n    access(id);\n    splay(id);\n    rev[id] ^= 1;\n  }\n  int findroot(int id) {\n    access(id);\n    splay(id);\n    while (sons[id][0])\n      id = sons[id][0];\n    return id;\n  }\n  void split(int x, int y) {\n    makeroot(x);\n    access(y);\n    splay(y);\n  }\n  void cut(int x, int y) {\n    split(x, y);\n    if (sons[y][0] == x &amp;&amp; sons[x][1] == 0)\n      sons[y][0] = 0, fa[x] = 0;\n  }\n  void link(int x, int y) {\n    makeroot(x);\n    fa[x] = y;\n  }\n} // namespace LCT\n\nusing namespace LCT;\nsigned main() {\n  scanf(\"%d%d\", &amp;n, &amp;m);\n  while (m--) {\n    char op;\n    cin &gt;&gt; op;\n    int x = rd, y = rd;\n    if (op == 'Q')\n      puts((findroot(x) == findroot(y)) ? \"Yes\" : \"No\");\n    if (op == 'D')\n      cut(x, y);\n    if (op == 'C')\n      link(x, y);\n  }\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#_5","title":"\u7ef4\u62a4\u8fb9\u6743\uff08\u5e38\u7528\u4e8e\u7ef4\u62a4\u751f\u6210\u6811\uff09","text":"<p>[NOI2014] \u9b54\u6cd5\u68ee\u6797</p> <p>hack\u6570\u636e\u7684\u63d0\u4ea4link</p> <p>\u4e3a\u4e86\u5f97\u5230\u4e66\u6cd5\u5927\u5bb6\u7684\u771f\u4f20\uff0c\u5c0f E \u540c\u5b66\u4e0b\u5b9a\u51b3\u5fc3\u53bb\u62dc\u8bbf\u4f4f\u5728\u9b54\u6cd5\u68ee\u6797\u4e2d\u7684\u9690\u58eb\u3002\u9b54\u6cd5\u68ee\u6797\u53ef\u4ee5\u88ab\u770b\u6210\u4e00\u4e2a\u5305\u542b \\(n\\) \u4e2a\u8282\u70b9 \\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8282\u70b9\u6807\u53f7\u4e3a \\(1,2,3,\u2026,n\\)\uff0c\u8fb9\u6807\u53f7\u4e3a \\(1,2,3,\u2026,m\\)\u3002\u521d\u59cb\u65f6\u5c0f E \u540c\u5b66\u5728 \\(1\\) \u53f7\u8282\u70b9\uff0c\u9690\u58eb\u5219\u4f4f\u5728 \\(n\\) \u53f7\u8282\u70b9\u3002\u5c0f E \u9700\u8981\u901a\u8fc7\u8fd9\u4e00\u7247\u9b54\u6cd5\u68ee\u6797\uff0c\u624d\u80fd\u591f\u62dc\u8bbf\u5230\u9690\u58eb\u3002</p> <p>\u9b54\u6cd5\u68ee\u6797\u4e2d\u5c45\u4f4f\u4e86\u4e00\u4e9b\u5996\u602a\u3002\u6bcf\u5f53\u6709\u4eba\u7ecf\u8fc7\u4e00\u6761\u8fb9\u7684\u65f6\u5019\uff0c\u8fd9\u6761\u8fb9\u4e0a\u7684\u5996\u602a \u5c31\u4f1a\u5bf9\u5176\u53d1\u8d77\u653b\u51fb\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5728 \\(1\\) \u53f7\u8282\u70b9\u4f4f\u7740\u4e24\u79cd\u5b88\u62a4\u7cbe\u7075\uff1aA \u578b\u5b88\u62a4\u7cbe\u7075\u4e0e B \u578b\u5b88\u62a4\u7cbe\u7075\u3002\u5c0f E \u53ef\u4ee5\u501f\u52a9\u5b83\u4eec\u7684\u529b\u91cf\uff0c\u8fbe\u5230\u81ea\u5df1\u7684\u76ee\u7684\u3002</p> <p>\u53ea\u8981\u5c0f E \u5e26\u4e0a\u8db3\u591f\u591a\u7684\u5b88\u62a4\u7cbe\u7075\uff0c\u5996\u602a\u4eec\u5c31\u4e0d\u4f1a\u53d1\u8d77\u653b\u51fb\u4e86\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u65e0\u5411\u56fe\u4e2d\u7684\u6bcf\u4e00\u6761\u8fb9 \\(e_i\\) \u5305\u542b\u4e24\u4e2a\u6743\u503c \\(a_i\\) \u4e0e \\(b_i\\) \u3002\u82e5\u8eab\u4e0a\u643a\u5e26\u7684 A \u578b\u5b88\u62a4\u7cbe\u7075\u4e2a\u6570\u4e0d\u5c11\u4e8e \\(a_i\\) \uff0c\u4e14 B \u578b\u5b88\u62a4\u7cbe\u7075\u4e2a\u6570\u4e0d\u5c11\u4e8e \\(b_i\\) \uff0c\u8fd9\u6761\u8fb9\u4e0a\u7684\u5996\u602a\u5c31\u4e0d\u4f1a\u5bf9\u901a\u8fc7\u8fd9\u6761\u8fb9\u7684\u4eba\u53d1\u8d77\u653b\u51fb\u3002\u5f53\u4e14\u4ec5\u5f53\u901a\u8fc7\u8fd9\u7247\u9b54\u6cd5\u68ee\u6797\u7684\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u4efb\u610f\u4e00\u6761\u8fb9\u7684\u5996\u602a\u5411 \u5c0f E \u53d1\u8d77\u653b\u51fb\uff0c\u4ed6\u624d\u80fd\u6210\u529f\u627e\u5230\u9690\u58eb\u3002</p> <p>\u7531\u4e8e\u643a\u5e26\u5b88\u62a4\u7cbe\u7075\u662f\u4e00\u4ef6\u975e\u5e38\u9ebb\u70e6\u7684\u4e8b\uff0c\u5c0f E \u60f3\u8981\u77e5\u9053\uff0c\u8981\u80fd\u591f\u6210\u529f\u62dc\u8bbf\u5230 \u9690\u58eb\uff0c\u6700\u5c11\u9700\u8981\u643a\u5e26\u5b88\u62a4\u7cbe\u7075\u7684\u603b\u4e2a\u6570\u3002\u5b88\u62a4\u7cbe\u7075\u7684\u603b\u4e2a\u6570\u4e3a A \u578b\u5b88\u62a4\u7cbe\u7075\u7684\u4e2a\u6570\u4e0e B \u578b\u5b88\u62a4\u7cbe\u7075\u7684\u4e2a\u6570\u4e4b\u548c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u6587\u4ef6\u7684\u7b2c \\(1\\) \u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 \\(n,m\\)\uff0c\u8868\u793a\u65e0\u5411\u56fe\u5171\u6709 \\(n\\) \u4e2a\u8282\u70b9\uff0c\\(m\\) \u6761\u8fb9\u3002 \u63a5\u4e0b\u6765 \\(m\\) \u884c\uff0c\u7b2c \\(i+1\\) \u884c\u5305\u542b \\(4\\) \u4e2a\u6b63\u6574\u6570 \\(X_i,Y_i,a_i,b_i\\)\uff0c\u63cf\u8ff0\u7b2c \\(i\\) \u6761\u65e0\u5411\u8fb9\u3002 \u5176\u4e2d \\(X_i\\) \u4e0e \\(Y_i\\) \u4e3a\u8be5\u8fb9\u4e24\u4e2a\u7aef\u70b9\u7684\u6807\u53f7\uff0c\\(a_i\\) \u4e0e \\(b_i\\) \u7684\u542b\u4e49\u5982\u9898\u6240\u8ff0\u3002 \u6ce8\u610f\u6570\u636e\u4e2d\u53ef\u80fd\u5305\u542b\u91cd\u8fb9\u4e0e\u81ea\u73af\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff1a\u5982\u679c\u5c0f E \u53ef\u4ee5\u6210\u529f\u62dc\u8bbf\u5230\u9690\u58eb\uff0c\u8f93\u51fa\u5c0f E \u6700\u5c11\u9700\u8981\u643a \u5e26\u7684\u5b88\u62a4\u7cbe\u7075\u7684\u603b\u4e2a\u6570\uff1b\u5982\u679c\u65e0\u8bba\u5982\u4f55\u5c0f E \u90fd\u65e0\u6cd5\u62dc\u8bbf\u5230\u9690\u58eb\uff0c\u8f93\u51fa <code>-1</code>\u3002</p> <p></p> <pre><code>// \u7ef4\u62a4\u8fb9\u6743\uff08\u7ef4\u62a4\u751f\u6210\u6811\uff09\u7684LCT\u5b9e\u73b0\n\n#include &lt;bits/stdc++.h&gt;\n#define rep(l, tagr, i) for (int i = l, END##i = tagr; i &lt;= END##i; ++i)\n#define per(tagr, l, i) for (int i = tagr, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define pb push_back\n// #define mpy make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps b\n#define pf a\n\n#define X(j) i[j]\n#define Y(j) (dp[j] + (i[j] + L) * (i[j] + L))\n#define lc tr[x][0]\n#define rc tr[x][1]\n#define rd read()\nint read() {\n  int xx = 0, ff = 1;\n  char op = getchar();\n  while (op &lt; '0' || op &gt; '9') {\n    if (op == '-')\n      ff = -1;\n    op = getchar();\n  }\n  while (op &gt;= '0' &amp;&amp; op &lt;= '9')\n    xx = xx * 10 + (op - '0'), op = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int N = 200000;\nconst int MOD = 131072;\nconst int INF = 1e9;\n\nint f[N], tr[N][2], mx[N];\nbool r[N];\n\nstruct edge {\n  int u, v, a, b;\n  inline bool operator&lt;(edge x) const { return a &lt; x.a; }\n\n} e[N]; \n\nnamespace LCT{\n\n  inline bool notrt(int x) { return tr[f[x]][0] == x || tr[f[x]][1] == x; }\n  void pushup(int x) {\n    mx[x] = x;\n    if (e[mx[x]].b &lt; e[mx[lc]].b)\n      mx[x] = mx[lc];\n    if (e[mx[x]].b &lt; e[mx[rc]].b)\n      mx[x] = mx[rc]; \n  }\n  void pushdown(int x) {\n    if (r[x]) {\n      int t = lc;\n      lc = rc;\n      rc = t;\n      r[lc] ^= 1;\n      r[rc] ^= 1;\n      r[x] = 0;\n    }\n  }\n  void pushall(int x) {\n    if (notrt(x))\n      pushall(f[x]);\n    pushdown(x);\n  }\n  void rotate(int x) {\n    int y = f[x], z = f[y], k = tr[y][1] == x, w = tr[x][!k];\n    if (notrt(y))\n      tr[z][tr[z][1] == y] = x;\n    tr[x][!k] = y;\n    tr[y][k] = w;\n    f[w] = y;\n    f[y] = x;\n    f[x] = z;\n    pushup(y);\n  }\n  void splay(int x) {\n    int y = x;\n    pushall(x);\n    while (notrt(x)) {\n      if (notrt(y = f[x]))\n        rotate((tr[y][0] == x) ^ (tr[f[y]][0] == y) ? x : y);\n      rotate(x);\n    }\n    pushup(x);\n  }\n  void access(int x) {\n    for (int y = 0; x; x = f[y = x])\n      splay(x), rc = y, pushup(x);\n  }\n  void makert(int x) {\n    access(x);\n    splay(x);\n    r[x] ^= 1;\n  }\n  inline int findrt(int x) {\n    access(x);\n    splay(x);\n    while (lc)\n      x = lc;\n    return x;\n  }\n  void link(int x) {\n    int y = e[x].u, z = e[x].v;\n    makert(z);\n    f[f[z] = x] = y;\n  } \n  void cut(int x) {\n    access(e[x].v);\n    splay(x);\n    lc = rc = f[lc] = f[rc] = 0;\n    pushup(x);\n  }\n}\n\nusing namespace LCT;\nsigned main() {\n  int n = rd, m = rd, i, y, z, ans = INF; \n\n  for (i = 1; i &lt;= m; ++i)\n    e[i].u = rd, e[i].v = rd, e[i].a = rd, e[i].b = rd, e[i].u |= MOD,\n    e[i].v |= MOD; \n  sort(e + 1, e + m + 1);\n  for (i = 1; i &lt;= m; ++i) {\n    if ((y = e[i].u) == (z = e[i].v))\n      continue;\n    makert(y);\n    if (y != findrt(z))\n      link(i);\n    else if (e[i].b &lt; e[mx[z]].b)\n      cut(mx[z]), link(i);\n    makert(1 | MOD);\n    if ((1 | MOD) == findrt(n | MOD))\n      ans=min(ans, e[i].a + e[mx[n | MOD]].b);\n  }\n  printf(\"%lld\\n\", ans == INF ? -1 : ans);\n  return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#_6","title":"\u7ef4\u62a4\u5b50\u6811\u4fe1\u606f","text":"<p>[BJOI2014] \u5927\u878d\u5408</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5c0f\u5f3a\u8981\u5728 \\(N\\) \u4e2a\u5b64\u7acb\u7684\u661f\u7403\u4e0a\u5efa\u7acb\u8d77\u4e00\u5957\u901a\u4fe1\u7cfb\u7edf\u3002\u8fd9\u5957\u901a\u4fe1\u7cfb\u7edf\u5c31\u662f\u8fde\u63a5 \\(N\\) \u4e2a\u70b9\u7684\u4e00\u4e2a\u6811\u3002</p> <p>\u8fd9\u4e2a\u6811\u7684\u8fb9\u662f\u4e00\u6761\u4e00\u6761\u6dfb\u52a0\u4e0a\u53bb\u7684\u3002</p> <p>\u5728\u67d0\u4e2a\u65f6\u523b\uff0c\u4e00\u6761\u8fb9\u7684\u8d1f\u8f7d\u5c31\u662f\u5b83\u6240\u5728\u7684\u5f53\u524d\u80fd\u591f\u8054\u901a\u7684\u6811\u4e0a\u8def\u8fc7\u5b83\u7684\u7b80\u5355\u8def\u5f84\u7684\u6570\u91cf\u3002</p> <p></p> <p>\u4f8b\u5982\uff0c\u5728\u4e0a\u56fe\u4e2d\uff0c\u73b0\u5728\u4e00\u5171\u6709\u4e86 \\(5\\) \u6761\u8fb9\u3002\u5176\u4e2d\uff0c\\((3,8)\\) \u8fd9\u6761\u8fb9\u7684\u8d1f\u8f7d\u662f \\(6\\)\uff0c\u56e0\u4e3a\u6709\u516d\u6761\u7b80\u5355\u8def\u5f84 \\(2-3-8\\),\\(2-3-8-7\\),\\(3-8,3-8-7\\),\\(4-3-8\\),\\(4-3-8-7\\) \u8def\u8fc7\u4e86 \\((3,8)\\)\u3002</p> <p>\u73b0\u5728\uff0c\u4f60\u7684\u4efb\u52a1\u5c31\u662f\u968f\u7740\u8fb9\u7684\u6dfb\u52a0\uff0c\u52a8\u6001\u7684\u56de\u7b54\u5c0f\u5f3a\u5bf9\u4e8e\u67d0\u4e9b\u8fb9\u7684\u8d1f\u8f7d\u7684\u8be2\u95ee\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570  \\(N, Q\\),\u8868\u793a\u661f\u7403\u7684\u6570\u91cf\u548c\u64cd\u4f5c\u7684\u6570\u91cf\u3002\u661f\u7403\u4ece \\(1\\) \u5f00\u59cb\u7f16\u53f7\u3002</p> <p>\u63a5\u4e0b\u6765\u7684 \\(Q\\)  \u884c\uff0c\u6bcf\u884c\u662f\u5982\u4e0b\u4e24\u79cd\u683c\u5f0f\u4e4b\u4e00\uff1a</p> <ul> <li> <p><code>A x y</code> \u8868\u793a\u5728 \\(x\\) \u548c \\(y\\) \u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u3002\u4fdd\u8bc1\u4e4b\u524d \\(x\\) \u548c \\(y\\) \u662f\u4e0d\u8054\u901a\u7684\u3002</p> </li> <li> <p><code>Q x y</code>\u8868\u793a\u8be2\u95ee \\((x,y)\\) \u8fd9\u6761\u8fb9\u4e0a\u7684\u8d1f\u8f7d\u3002\u4fdd\u8bc1 \\(x\\) \u548c \\(y\\) \u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\u3002</p> </li> </ul> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5bf9\u6bcf\u4e2a\u67e5\u8be2\u64cd\u4f5c\uff0c\u8f93\u51fa\u88ab\u67e5\u8be2\u7684\u8fb9\u7684\u8d1f\u8f7d\u3002</p> <p>\u5bf9\u4e8e\u6240\u6709\u6570\u636e\uff0c\\(1\u2264N,Q\u226410^5\\)</p> <pre><code>// \u52a8\u6001\u7ebf\u6bb5\u6811\u7684LCT\u5b9e\u73b0\n\n#include &lt;bits/stdc++.h&gt;\n#define rep(l, tagr, i) for (int i = l, END##i = tagr; i &lt;= END##i; ++i)\n#define per(tagr, l, i) for (int i = tagr, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define pb push_back\n// #define mpy make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps b\n#define pf a\n\n#define X(j) i[j]\n#define Y(j) (dp[j] + (i[j] + L) * (i[j] + L))\n#define lc tr[x][0]\n#define rc tr[x][1]\n#define rd read()\nint read() {\n  int xx = 0, ff = 1;\n  char op = getchar();\n  while (op &lt; '0' || op &gt; '9') {\n    if (op == '-')\n      ff = -1;\n    op = getchar();\n  }\n  while (op &gt;= '0' &amp;&amp; op &lt;= '9')\n    xx = xx * 10 + (op - '0'), op = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\n\nconst int N=100009;\nint fa[N],tr[N][2],sz[N],sum[N];\nbool rtag[N];\n\nnamespace LCT{\n\n  inline bool notrt(int x){return tr[fa[x]][0]==x||tr[fa[x]][1]==x;}\n  void pushup(int x){\n    sum[x]=sum[lc]+sum[rc]+sz[x]+1;\n  }\n  void pushdown(int x){\n    if(rtag[x]){\n      int t=lc;lc=rc;rc=t;\n      rtag[lc]^=1;rtag[rc]^=1;rtag[x]=0;\n    }\n  }\n  void pushall(int x){\n    if(notrt(x))pushall(fa[x]);\n    pushdown(x);\n  }\n  void rotate(int x){\n    int y=fa[x],z=fa[y],k=tr[y][1]==x,w=tr[x][!k];\n    if(notrt(y))tr[z][tr[z][1]==y]=x;tr[x][!k]=y;tr[y][k]=w;\n    fa[w]=y;fa[y]=x;fa[x]=z;\n    pushup(y);\n  }\n  void slope(int x){\n    pushall(x);\n    while(notrt(x))rotate(x);\n    pushup(x);\n  }\n  void access(int x){\n    for(int y=0;x;x=fa[y=x]){\n      slope(x);\n      sz[x]+=sum[rc];\n      sz[x]-=sum[rc=y];\n    }\n  }\n  void makeroot(int x){\n    access(x);slope(x);\n    rtag[x]^=1;\n  }\n  void split(int x,int y){\n    makeroot(x);\n      access(y);slope(y);\n  }\n  void link(int x,int y){\n    split(x,y);\n    fa[x]=y;\n    sz[y]+=sum[x];\n    pushup(y);\n  }\n}\n\nusing namespace LCT;\n\nsigned main(){\n    int n=rd,q=rd,u,v;\n    for(int i=1;i&lt;=n;++i)sum[i]=1;\n    while(q--){\n    char op;\n    cin&gt;&gt;op;\n    u=rd,v=rd;\n        if(op=='A')link(u,v);\n        else{\n            split(u,v);\n            printf(\"%lld\\n\",(long long)(sz[u]+1)*(sz[v]+1));\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%8A%A8%E6%80%81%E6%A0%91%EF%BC%88LCT%EF%BC%89/#_7","title":"\u7ec3\u4e60","text":"<p>LCT\u603b\u7ed3\u2014\u2014\u5e94\u7528\u7bc7\uff08\u9644\u9898\u5355\uff09\uff08LCT\uff09 - Flash_Hu - \u535a\u5ba2\u56ed</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%B7%A6%E5%81%8F%E6%A0%91%EF%BC%88%E5%8F%AF%E5%B9%B6%E5%A0%86%EF%BC%89/","title":"\u5de6\u504f\u6811\uff08\u53ef\u5e76\u5806\uff09","text":"<p>C16\u3010\u6a21\u677f\u3011\u5de6\u504f\u6811\uff08\u53ef\u5e76\u5806\uff09_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%B7%A6%E5%81%8F%E6%A0%91%EF%BC%88%E5%8F%AF%E5%B9%B6%E5%A0%86%EF%BC%89/#_1","title":"\u5de6\u504f\u6811\uff08\u53ef\u5e76\u5806\uff09","text":"<p>\u5b9e\u73b0\u76ee\u6807</p> <p>\u5b9e\u73b0\u4e00\u4e2a\u53ef\u4ee5\u5408\u5e76\u7684\u5c0f\u6839\u5806\uff08\u5373\u652f\u6301\u5408\u5e76\u4e24\u4e2a\u5c0f\u6839\u5806\u4e3a\u4e00\u4e2a\u7684\u5c0f\u6839\u5806\uff0c\u52a8\u6001\u7ef4\u62a4\uff09</p> <p>\u5b9a\u4e49</p> <p></p> <p>\uff08\u6279\u6ce8\uff1a\u4e8c\u53c9\u5806\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u800c\u5de6\u504f\u6811\u4e0d\u662f\uff09\u5982\u4e0b\u56fe\uff0c\u90fd\u662f\u5de6\u504f\u6811</p> <p></p> <p>\u6027\u8d28</p> <p></p> <p>\u6839\u636e\u6027\u8d283\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u4e3a\u4ec0\u4e48\u7a7a\u8282\u70b9\u7684dis\u4e3a-1\u4e86</p> <p></p> <p>\u5bf9\u4e8e\u6027\u8d284\uff0c\u6211\u4eec\u4e3e\u4f8b\u8bf4\u660e\uff1a</p> <p></p> <p>\u6839\u7684dis=2\uff0c\u8bf4\u660e\u81f3\u5c11\u67093\u5c42\u6ee1\u4e8c\u53c9\u6811\u3002\u56e0\u4e3a\u5982\u679c\u6ca1\u67093\u5c42\u6ee1\u4e8c\u53c9\u6811\uff0c\u5c31\u6bd4\u5982\u4e0a\u56fe\u4e2d\u53bb\u6389\u70b98\u6216\u8005\u70b94\uff0c5\uff0c\u90a3\u4e48\u70b93\uff08\u6216\u8005\u70b92\uff09\u7684dis\u5c31\u4f1a\u662f0\uff0c\u6839\u7684dis\u5c31\u662f1.\u603b\u7ed3\u6765\u8bf4\uff0c\u5c31\u662f\u5bf9\u4e8e\u6709i\u5c42\u7684\u6ee1\u4e8c\u53c9\u6811\uff0c\u624d\u80fd\u4fdd\u8bc1\u57281~i-1\u5c42\u4e4b\u5185\u6ca1\u6709\u7a7a\u8282\u70b9</p> <p></p>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%B7%A6%E5%81%8F%E6%A0%91%EF%BC%88%E5%8F%AF%E5%B9%B6%E5%A0%86%EF%BC%89/#_2","title":"\u5408\u5e76\u64cd\u4f5c","text":"<p>\u5728\u9012\u63a8\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ef4\u62a4\u5806\u7684\u6027\u8d28\u3002\u5728\u56de\u6eaf\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ef4\u62a4\u5de6\u504f\u6027\u8d28\uff08\u901a\u8fc7\u4ea4\u6362\u5de6\u53f3\u513f\u5b50\uff09</p> <pre><code>int merge(int x,int y){//\u8981\u5408\u5e76\u7684\u4e24\u4e2a\u5806\u7684\u6839\u8282\u70b9\n    if(!x||!y)return x/\u82e5\u4e00\u4e2a\u5806\u4e3a\u7a7a,\u8fd4\u56de\u53e6\u5916\u4e00\u4e2a\n    if(v[x]==v[y]?x&gt;y:v[x]&gt;v[y])swap(x,y);//\u8ba9x\u7684v\u5c0f\u4e8ey,\u82e5\u76f8\u540c,\u5219\u8ba9x\u7684\u7f16\u53f7\u5c0f\u4e8ey.\u7b2c\u4e8c\u5173\u952e\u5b57\u7531\u9898\u76ee\u786e\u5b9a\n    rc[x]=merge(rc[x],y);//\u9012\u5f52\u5408\u5e76\n\n    if(dis[lc[x]]&lt;dis[rc[x]])swap(lc[x],rc[x])//\u7ef4\u62a4\u5de6\u504f\u6027\u8d28\n    dis[x]=dis[rc[x]]/\u66f4\u65b0dis\n    return x;//\u8fd4\u56de\u65b0\u7684\u6839\u8282\u70b9\n\n}\n</code></pre> <p>\u7ef4\u62a4\u5de6\u504f\u6027\u8d28\uff1a\u56fe\u793a</p> <p></p> <p>v[x]==v[y]?x&gt;y:v[x]&gt;v[y]\uff1a\u56fe\u793a</p> <p></p> <p>\u9012\u5f52\u5408\u5e76\uff1a\u56fe\u793a</p> <p></p> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p></p> <p>\u6bcf\u6b21\u9012\u5f52\u90fd\u4f1a\u8ba9\u5176\u4e2d\u4e00\u4e2a\u5806\u7684\u6839\u8282\u70b9dis-1\uff1a\u56fe\u793a</p> <p></p>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%B7%A6%E5%81%8F%E6%A0%91%EF%BC%88%E5%8F%AF%E5%B9%B6%E5%A0%86%EF%BC%89/#1","title":"\u4f8b\u9898 #1","text":"<p>\u5982\u9898\uff0c\u4e00\u5f00\u59cb\u6709 \\(n\\) \u4e2a\u5c0f\u6839\u5806\uff0c\u6bcf\u4e2a\u5806\u5305\u542b\u4e14\u4ec5\u5305\u542b\u4e00\u4e2a\u6570\u3002\u63a5\u4e0b\u6765\u9700\u8981\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <ol> <li> <p><code>1 x y</code>\uff1a\u5c06\u7b2c \\(x\\) \u4e2a\u6570\u548c\u7b2c \\(y\\) \u4e2a\u6570\u6240\u5728\u7684\u5c0f\u6839\u5806\u5408\u5e76\uff08\u82e5\u7b2c \\(x\\) \u6216\u7b2c \\(y\\) \u4e2a\u6570\u5df2\u7ecf\u88ab\u5220\u9664\u6216\u7b2c \\(x\\) \u548c\u7b2c \\(y\\) \u4e2a\u6570\u5728\u7528\u4e00\u4e2a\u5806\u5185\uff0c\u5219\u65e0\u89c6\u6b64\u64cd\u4f5c\uff09\u3002</p> </li> <li> <p><code>2 x</code>\uff1a\u8f93\u51fa\u7b2c \\(x\\) \u4e2a\u6570\u6240\u5728\u7684\u5806\u6700\u5c0f\u6570\uff0c\u5e76\u5c06\u8fd9\u4e2a\u6700\u5c0f\u6570\u5220\u9664\uff08\u82e5\u6709\u591a\u4e2a\u6700\u5c0f\u6570\uff0c\u4f18\u5148\u5220\u9664\u5148\u8f93\u5165\u7684\uff1b\u82e5\u7b2c \\(x\\) \u4e2a\u6570\u5df2\u7ecf\u88ab\u5220\u9664\uff0c\u5219\u8f93\u51fa \\(-1\\) \u5e76\u65e0\u89c6\u5220\u9664\u64cd\u4f5c\uff09\u3002</p> </li> </ol>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%B7%A6%E5%81%8F%E6%A0%91%EF%BC%88%E5%8F%AF%E5%B9%B6%E5%A0%86%EF%BC%89/#_3","title":"\u63d0\u793a","text":"<p>\u3010\u6570\u636e\u89c4\u6a21\u3011</p> <p>\u5bf9\u4e8e \\(30\\%\\) \u7684\u6570\u636e\uff1a\\(n\\le 10\\)\uff0c\\(m\\le 10\\)\u3002 \u5bf9\u4e8e \\(70\\%\\) \u7684\u6570\u636e\uff1a\\(n\\le 10^3\\)\uff0c\\(m\\le 10^3\\)\u3002 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff1a\\(n\\le 10^5\\)\uff0c\\(m\\le 10^5\\)\uff0c\u521d\u59cb\u65f6\u5c0f\u6839\u5806\u4e2d\u7684\u6240\u6709\u6570\u90fd\u5728 <code>int</code> \u8303\u56f4\u5185\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%B7%A6%E5%81%8F%E6%A0%91%EF%BC%88%E5%8F%AF%E5%B9%B6%E5%A0%86%EF%BC%89/#_4","title":"\u5b9e\u73b0\u65b9\u6cd5","text":"<p>\u7531\u4e8e\u6570\u5b57\u7684\u7f16\u53f7\u88ab\u4fdd\u5b58\u5728\u8282\u70b9\u4fe1\u606f\u5185\uff0c\u800c\u975e\u8282\u70b9\u4e0b\u6807\uff0c\u6240\u4ee5\u4e3a\u4e86\u627e\u5230\u6240\u8c13\u7684\u201c\u7b2cx\u4e2a\u6570\u201d\uff0c\u6211\u4eec\u8981\u4e48\u5c31\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u3002\u8fd9\u663e\u7136\u662f\u4e0d\u884c\u7684\u3002</p> <p></p> <p>\u6b65\u9aa4\u5982\u4e0b</p> <p></p> <p>\u6027\u8d28\u4e0e\u533a\u522b</p> <p></p> <p>\u5982\u4e0b\u56fe\uff0c\u8fd9\u662f\u5e76\u67e5\u96c6\u7684\u56fe\u50cf\u3002\u53ef\u80fd\u5728\u5de6\u504f\u6811\u4e2d\uff0cx\u662f\u5806\u9876\uff0c\u5176\u5de6\u53f3\u513f\u5b50\u5206\u522b\u4e3ay\u548cz\uff0c\u4f46\u662f\u5728\u5e76\u67e5\u96c6\u4e2d\uff0c\u4e0b\u4e00\u5b9a\u4e5f\u4e3a\u6839\uff08\u6211\u4eec\u8fd9\u6837\u7ef4\u62a4\uff09\uff0c\u4f46y\u548cz\u7684\u4f4d\u7f6e\u5c31\u4e0d\u4e00\u5b9a\u4e86\u3002</p> <p>\u6240\u4ee5\u5728\u5408\u5e76\u540e\uff0c\u6211\u4eec\u4e0d\u4ec5\u4ec5\u8981\u5c06x\u7684\u5de6\u53f3\u513f\u5b50y\uff0cz\u7684fa\u6307\u5411\u65b0\u7684\u6839\uff08\u65b0\u7684\u6839\u4f1a\u5728y\uff0cz\u4e4b\u95f4\u4ea7\u751f\uff09\uff0c\u6211\u4eec\u4e5f\u8981\u5c06x\u7684fa\u6307\u5411\u65b0\u7684\u6839\uff0c\u56e0\u4e3a\u5728\u5e76\u67e5\u96c6\u4e2d\uff0c\u4f1a\u6709\u5176\u4ed6\u70b9\u76f4\u63a5\u4e0ex\u76f8\u8fde\u3002\u5373\u5e76\u67e5\u96c6**\u4e0d\u662f\u4e8c\u53c9\u6811\uff0cx\u867d\u53ef\u629b\uff0cx\u7684\u513f\u5b50\u4e0d\u53ef\u629b**\u3002\u5728x\u5728\u5de6\u504f\u6811\u4e2d\u88ab\u5220\u9664\u540e\uff0c\u6211\u4eec\u4e0d\u5728\u5e76\u67e5\u96c6\u4e2d\u5220\u9664\u5b83\uff0c\u800c\u662f\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u4e2d\u7ee7\u70b9\uff0c\u597d\u8ba9\u539f\u6765\u7684x\u5728\u5e76\u67e5\u96c6\u4e2d\u7684\u513f\u5b50\u4eec\u627e\u5230\u65b0\u7684fa\uff0c\u8fdb\u884c\u8def\u5f84\u538b\u7f29\u3002</p> <p></p>"},{"location":"%E6%A0%91%E8%AE%BA/%E5%B7%A6%E5%81%8F%E6%A0%91%EF%BC%88%E5%8F%AF%E5%B9%B6%E5%A0%86%EF%BC%89/#_5","title":"\u6a21\u677f\u4ee3\u7801","text":"<pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\n#define i1n int i=1;i&lt;=n;i++\n#define in1 int i=n;i&gt;=1;i--\nusing namespace std;\n\nconst int N=2e5+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint v[N],rc[N],fa[N],lc[N],n,m,op,x,y,dis[N];\n\nint merge(int x,int y){//\u8981\u5408\u5e76\u7684\u4e24\u4e2a\u5806\u7684\u6839\u8282\u70b9\n    if(!x||!y)return x/\u82e5\u4e00\u4e2a\u5806\u4e3a\u7a7a,\u8fd4\u56de\u53e6\u5916\u4e00\u4e2a\n    if(v[x]==v[y]?x&gt;y:v[x]&gt;v[y])swap(x,y);//\u8ba9x\u7684v\u5c0f\u4e8ey,\u82e5\u76f8\u540c,\u5219\u8ba9x\u7684\u7f16\u53f7\u5c0f\u4e8ey.\u7b2c\u4e8c\u5173\u952e\u5b57\u7531\u9898\u76ee\u786e\u5b9a\n    rc[x]=merge(rc[x],y);//\u9012\u5f52\u5408\u5e76\n\n    if(dis[lc[x]]&lt;dis[rc[x]])swap(lc[x],rc[x]);//\u7ef4\u62a4\u5de6\u504f\u6027\u8d28\n    dis[x]=dis[rc[x]]/\u66f4\u65b0dis\n    return x;//\u8fd4\u56de\u65b0\u7684\u6839\u8282\u70b9\n\n}\n\nint find(int x){//\u6781\u7b80\u5e76\u67e5\u96c6\n    return (x==fa[x])?x:fa[x]=find(fa[x]);\n}\n\nsigned main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;i++){\n        scanf(\"%d\",&amp;v[i]);\n        fa[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n    }\n    for(int i=1;i&lt;=m;i++){\n        scanf(\"%d%d\",&amp;op,&amp;x);\n        if(op==1){\n            scanf(\"%d\",&amp;y);\n            if(v[x]==-1||v[y]==-1)continue;//\u5224\u65ad\u662f\u5426\u88ab\u5220\u9664\n            x=find(x);y=find(y);//\u627e\u5230xy\u5206\u522b\u7684\u5e76\u67e5\u96c6\n\n            if(x!=y)fa[x]=fa[y]=merge(x,y);//\u5224\u65ad\u662f\u5426\u5728\u540c\u4e00\u4e2a\u5806\u4e2d\n        }else{\n            if(v[x]==-1){\n                printf(\"-1\\n\");\n                continue;\n            }x=find(x);\n            printf(\"%d\\n\",v[x]);//x\u65e2\u662f\u539fx\u6240\u5728\u5e76\u67e5\u96c6\u7684\u6839\uff0c\u4e5f\u662f\u539f\u6765x\u6240\u5728\u7684\u5806\u7684\u6839\u8282\u70b9.\u65e2\u7136\u662f\u5c0f\u6839\u5806,\u90a3\u4e48\u6839\u8282\u70b9\u6070\u597d\u662f\u6700\u5c0f\u503c.\u627e\u5230\u4ed6\u5373\u53ef\n            v[x]=-1;//\u6807\u8bb0\u5220\u9664\n            fa[lc[x]]=fa[rc[x]]=fa[x]=merge(lc[x],rc[x]);//\u5408\u5e76x\u7684\u4e24\u4e2a\u513f\u5b50,\u629b\u5f03x,\u5e76\u4e14\u8fd4\u56de\u65b0\u7684\u6839\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/","title":"\u6700\u8fd1\u516c\u5171\u7956\u5148","text":"<p>D09 \u500d\u589e\u7b97\u6cd5 P3379\u3010\u6a21\u677f\u3011\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08LCA\uff09_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/#lca","title":"\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08LCA\uff09","text":"<p>\u65b9\u6cd5</p> <ul> <li> <p>\u500d\u589e</p> </li> <li> <p>\u91cd\u94fe\u5256\u5206</p> </li> </ul>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/#1","title":"\u4f8b\u9898 #1","text":"<p>\u5982\u9898\uff0c\u7ed9\u5b9a\u4e00\u68f5\u6709\u6839\u591a\u53c9\u6811\uff0c\u8bf7\u6c42\u51fa\u6307\u5b9a\u4e24\u4e2a\u70b9\u76f4\u63a5\u6700\u8fd1\u7684\u516c\u5171\u7956\u5148\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(1 \\leq N,M\\leq 500000\\)\uff0c\\(1 \\leq x, y,a ,b \\leq N\\)\uff0c\u4e0d\u4fdd\u8bc1 \\(a \\neq b\\)\u3002</p> <p>\u6837\u4f8b\u8bf4\u660e\uff1a</p> <p>\u8be5\u6811\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p> <p>\u7b2c\u4e00\u6b21\u8be2\u95ee\uff1a\\(2, 4\\) \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u6545\u4e3a \\(4\\)\u3002</p> <p>\u7b2c\u4e8c\u6b21\u8be2\u95ee\uff1a\\(3, 2\\) \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u6545\u4e3a \\(4\\)\u3002</p> <p>\u7b2c\u4e09\u6b21\u8be2\u95ee\uff1a\\(3, 5\\) \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u6545\u4e3a \\(1\\)\u3002</p> <p>\u7b2c\u56db\u6b21\u8be2\u95ee\uff1a\\(1, 2\\) \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u6545\u4e3a \\(4\\)\u3002</p> <p>\u7b2c\u4e94\u6b21\u8be2\u95ee\uff1a\\(4, 5\\) \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u6545\u4e3a \\(4\\)\u3002</p> <p>\u6545\u8f93\u51fa\u4f9d\u6b21\u4e3a \\(4, 4, 1, 4, 4\\)\u3002</p> <p>2021/10/4 \u6570\u636e\u66f4\u65b0 @fstqwq\uff1a\u5e94\u8981\u6c42\u52a0\u4e86\u4e24\u7ec4\u6570\u636e\u5361\u6389\u4e86\u66b4\u529b\u8df3\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/#lca_1","title":"\u500d\u589e\u6c42LCA","text":"<p>\u8bb0\u5f55\u6570\u7ec4:</p> <p><code>dep[]</code>\u6307\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6</p> <p><code>p[u][i]</code>\u8bb0\u5f55\u7b2c \\(u\\) \u4e2a\u70b9\u5411\u4e0a \\(2^i\\) \u5c42\u7684\u7956\u5148</p> <p>\u504f\u500d\u589e\u601d\u60f3</p> <p>\uff08vector\u5199\u6cd5\u5728\u540e\u9762\uff09</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAXN=500000+2;\nint n,m,s;\nint k=0;\nint h[MAXN],dep[MAXN],p[MAXN][21];\nstruct node{\n    int v,next;\n}e[MAXN*2];//\u5b58\u6811\nvoid add(int u,int v){\n    e[k].v=v;\n    e[k].next=h[u];\n    h[u]=k++;\n}               //\u52a0\u8fb9\u51fd\u6570\nvoid dfs(int u,int fa){\n    dep[u]=dep[fa]+1;\n    p[u][0]=fa;\n    for(int i=1;(1&lt;&lt;i)&lt;=dep[u];i++)//\u4e8c\u53c9\u6811\uff0c\u70b9i\u7684\u6df1\u5ea6\u5373i/2\n        p[u][i]=p[p[u][i-1]][i-1];//\u7b2cu\u4e2a\u70b9\u5411\u4e0a2^i\u5c42\u7684\u7956\u5148\u5c31\u662f\u7b2cu\u4e2a\u70b9\u7684fa\u7684\u4e0a2^(i-1)\u5c42\u7956\u5148\n    for(int i=h[u];i!=-1;i=e[i].next){//\u626b\u63cf\u51fa\u8fb9\n        int v=e[i].v;\n        if(v!=fa)//\u6392\u9664fa\n            dfs(v,u);\n    }\n}                              \nint lca(int a,int b){\n    if(dep[a]&gt;dep[b])//\u7edf\u4e00\u5207\u6362\u4e3ab\u6bd4a\u6df1\n        swap(a,b);          \n    for(int i=20;i&gt;=0;i--)//b\u5411\u4e0a\u8d70\u5230\u4e0ea\u540c\u5c42\n        if(dep[a]&lt;=dep[b]-(1&lt;&lt;i))\n            b=p[b][i];             \n    if(a==b)return a;                 \n    for(int i=20;i&gt;=0;i--){\n        if(p[a][i]==p[b][i])//\u8fc7\u5934\u4e86\n            continue;\n        else a=p[a][i],b=p[b][i];          \n    }\n    return p[a][0];//\u6700\u540ea\u505c\u5728\u4e86lca\u7684\u66f4\u6df1\u4e00\u5c42       \n}\nint main()\n{   \n    memset(h,-1,sizeof(h));\n    int a,b;\n    scanf(\"%d%d%d\",&amp;n,&amp;m,&amp;rt);\n    for(int i=1;i&lt;n;i++)\n    {\n        scanf(\"%d%d\",&amp;a,&amp;b);\n        add(a,b);\n        add(b,a);                     \n    }\n    dfs(rt,0);\n    for(int i=1;i&lt;=m;i++)\n    {\n        scanf(\"%d%d\",&amp;a,&amp;b);\n        printf(\"%d\\n\",lca(a,b));\n    }\n    return 0;\n}\n</code></pre> <p>\u672c\u5730\u5199\u6cd5\uff0c\u80fd\u8fc7\uff1avector\u5b58\u56fe\u5199\u6cd5</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n#include &lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\n#define i1n    \\\n    int i = 1; \\\n    i &lt;= n;    \\\n    i++\n#define in1    \\\n    int i = n; \\\n    i &gt;= 1;    \\\n    i--\nusing namespace std;\n\nconst int N = 2e6 + 5;\nconst int M = 1e5;\nconst int Mod = 1e5;\nconst int INF = 1e5;\nvector&lt;int&gt; e[N];\nint n, m, sum, ans1, dep[N], fa[N][20], k, tmp, ans2;\nvoid add(int a, int b) { e[a].push_back(b); }\nvoid dfs1(int u, int faa) {  //\u6c42\u6df1\u5ea6\n\n    dep[u] = dep[faa] + 1;\n    for (int i = 1; i &lt; 19; i++) fa[u][i] = fa[fa[u][i - 1]][i - 1];  // att!\n    for (int i = 0; i &lt; e[u].size(); i++) {\n        int v = e[u][i];\n        if (v == faa)\n            continue;\n        fa[v][0] = u;\n\n        dfs1(v, u);\n    }\n}\nint lca(int u, int v) {\n    if (dep[u] &lt; dep[v])\n        swap(u, v);                  //\u8ba9u\u66f4\u6df1\n    for (int i = 18; i &gt;= 0; i--) {  //\u500d\u589e\u5f80\u4e0a\u8df3 \uff0c\u4e0d\u8981\u66b4\u529b\u8df3\n        if (dep[u] - (1 &lt;&lt; i) &gt;= dep[v])\n            u = fa[u][i];\n    }\n    if (u == v)\n        return u;\n    for (int i = 18; i &gt;= 0; i--) {  //\u500d\u589e\u4e00\u8d77\u5f80\u4e0a\u8df3\n        if (fa[u][i] != fa[v][i])\n            u = fa[u][i], v = fa[v][i];\n    }\n    return fa[u][0];  //\u6ce8\u610f\u8fd4\u56de\u503c\n}\nsigned main() {\n    scanf(\"%d%d\", &amp;n, &amp;m);  // use scanf pls,or u'll TLE\n    for (int i = 1; i &lt; n; i++) {\n        int a, b;\n        scanf(\"%d%d\", &amp;a, &amp;b);\n        add(a, b);\n        add(b, a);\n    }\n    dfs1(1, 0);\n    for (int i = 1; i &lt;= m; i++) {\n        int a, b;\n        scanf(\"%d%d\", &amp;a, &amp;b);\n        printf(\"%d\\n\", lca(a, b));\n    }\n    return 0;\n}\n</code></pre> <p>\u672c\u5730\u5199\u6cd5\uff0c\u8fc7\u4e0d\u4e86\uff1a\u94fe\u5f0f\u524d\u5411\u661f\u5199\u6cd5</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define ll long long\nusing namespace std;\nconst int N = 1e6 + 5;\nll h[N], cnt, nxt[N], to[N], f[N][22], dep[N], rt, n, m;\n\nvoid add(ll a, ll b) {\n    to[++cnt] = b, nxt[cnt] = h[a], h[a] = cnt;\n}\n\nvoid dfs(ll u, ll fa) {\n    dep[u] = dep[fa] + 1;\n    f[u][0] = fa;\n    for (ll i = 1; i &lt; 17; i++)\n        f[u][i] = f[f[u][i - 1]][i - 1];\n    for (ll i = h[u]; i; i = nxt[i]) {\n        ll v = to[i];\n        if (v == fa)\n            continue;\n        dfs(v, u);\n    }\n}\n\nll lca(ll a, ll b) {\n    if (dep[b] &gt; dep[a])//\u7edf\u4e00\u5c06a\u53d8\u6210\u66f4\u6df1\u7684\n        swap(a, b);\n    for (ll i = 20; i &gt;= 0; i--)//\u5148\u8ba9a,b\u5728\u7edf\u4e00\u9ad8\u5ea6,\u518d\u540c\u65f6\u5411\u4e0a\u8d70\n        if (dep[f[a][i]] &gt;= dep[b])\n            a = f[a][i];\n    if (a == b)\n        return a;\n    for (ll i = 20; i &gt;= 0; i--)\n        if (f[a][i] != f[b][i])\n            a = f[a][i], b = f[b][i];\n    return f[a][0];\n}\nsigned main() {\n//  freopen(\"P3379_1.in\",\"r\",stdin); \n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; rt;\n    n--;\n//  cout&lt;&lt;\"OK\"&lt;&lt;endl;\n    while (n--) {\n        ll a, b;\n        scanf(\"%lld%lld\", &amp;a, &amp;b);\n        add(a, b);\n        add(b, a);\n    }\n    dfs(rt, 0);\n\n    while (m--) {\n        ll a, b;\n        scanf(\"%lld%lld\", &amp;a, &amp;b);\n    //  cout&lt;&lt;a&lt;&lt;' '&lt;&lt;b;\n        ll l;\n        if(a==b) l=a;\n        else\n        l = lca(a, b);\n\n        printf(\"%lld\\n\",l);\n\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/#lca_2","title":"\u4f7f\u7528\u91cd\u94fe\u5256\u5206\u89e3\u51b3LCA\u95ee\u9898","text":"<p>\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u91cd\u94fe\u5256\u5206\u6765\u6c42LCA</p> <p>\u52a8\u6001\u6811\uff08LCT\uff09</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/#stlca","title":"ST\u8868\u4f18\u5316\u5927\u91cf\u7684LCA\u67e5\u8be2","text":"<p>\u7ec3\u4e60 | \u5357\u5916230830C\u9898</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/#2","title":"\u4f8b\u9898 #2","text":"<p>[\u84dd\u6865\u676f 2022 \u56fd B] \u673a\u623f</p> <p>\u8fd9\u5929\uff0c\u5c0f\u660e\u5728\u673a\u623f\u5b66\u4e60\u3002</p> <p>\u4ed6\u53d1\u73b0\u673a\u623f\u91cc\u4e00\u5171\u6709 \\(n\\) \u53f0\u7535\u8111\uff0c\u7f16\u53f7\u4e3a 1 \u5230 \\(n\\)\uff0c\u7535\u8111\u548c\u7535\u8111\u4e4b\u95f4\u6709\u7f51\u7ebf\u8fde\u63a5\uff0c\u4e00\u5171\u6709 \\(n-1\\) \u6839\u7f51\u7ebf\u5c06 \\(n\\) \u53f0\u7535\u8111\u8fde\u63a5\u8d77\u6765\u4f7f\u5f97\u4efb\u610f\u4e24\u53f0\u7535\u8111\u90fd\u76f4\u63a5\u6216\u8005\u95f4\u63a5\u5730\u76f8\u8fde\u3002</p> <p>\u5c0f\u660e\u53d1\u73b0\u6bcf\u53f0\u7535\u8111\u8f6c\u53d1\u3001\u53d1\u9001\u6216\u8005\u63a5\u53d7\u4fe1\u606f\u9700\u8981\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u8fd9\u53f0\u7535\u8111\u548c\u591a\u5c11\u53f0\u7535\u8111\u76f4\u63a5\u76f8\u8fde\uff0c\u800c\u4fe1\u606f\u5728\u7f51\u7ebf\u4e2d\u7684\u4f20\u64ad\u65f6\u95f4\u53ef\u4ee5\u5ffd\u7565\u3002\u6bd4\u5982\u5982\u679c\u67d0\u53f0\u7535\u8111\u7528\u7f51\u7ebf\u76f4\u63a5\u8fde\u63a5\u4e86\u53e6\u5916 \\(d\\) \u53f0\u7535\u8111, \u90a3\u4e48\u4efb\u4f55\u7ecf\u8fc7\u8fd9\u53f0\u7535\u8111\u7684\u4fe1\u606f\u90fd\u4f1a\u5ef6\u8fdf \\(d\\) \u5355\u4f4d\u65f6\u95f4 (\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u4e5f\u4f1a\u4ea7\u751f\u8fd9\u6837\u7684\u5ef6\u8fdf\uff0c\u5f53\u7136\u5982\u679c\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u90fd\u662f \u540c\u4e00\u53f0\u7535\u8111\u5c31\u53ea\u4f1a\u4ea7\u751f\u4e00\u6b21\u5ef6\u8fdf)\u3002</p> <p>\u5c0f\u660e\u4e00\u5171\u4ea7\u751f\u4e86 \\(m\\) \u4e2a\u7591\u95ee\uff1a\u5982\u679c\u7535\u8111 \\(u_{i}\\) \u5411\u7535\u8111 \\(v_{i}\\) \u53d1\u9001\u4fe1\u606f\uff0c\u90a3\u4e48\u4fe1\u606f\u4ece \\(u_{i}\\) \u4f20\u5230 \\(v_{i}\\) \u7684\u6700\u77ed\u65f6\u95f4\u662f\u591a\u5c11?</p> <p>\u84dd\u6865\u676f 2022 \u56fd\u8d5b B \u7ec4 H \u9898\u3002</p> <p>\u6811\u4e0a\u524d\u7f00\u548c\uff0c\u61c2\u5427\uff1f</p> <pre><code>/*\nCode by Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n\n#define rd read()\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N = 1e5+5;\nconst int M = 505;\n\n\n\nvector&lt;int&gt; e[N];\nint n, m, sum, ans1, dep[N], fa[N][20], k, tmp, ans2;\nint qzh[N],in[N];\nvoid add(int a, int b) { \n    e[a].push_back(b); \n    e[b].push_back(a); \n    in[a]++,in[b]++;\n}\nvoid dfs1(int u, int faa) {  //\u6c42\u6df1\u5ea6\n\n    qzh[u]=qzh[faa]+in[u];\n\n    dep[u] = dep[faa] + 1;\n    for (int i = 1; i &lt; 19; i++) fa[u][i] = fa[fa[u][i - 1]][i - 1];  // att!\n    for (int i = 0; i &lt; e[u].size(); i++) {\n        int v = e[u][i];\n        if (v == faa)\n            continue;\n        fa[v][0] = u;\n\n        dfs1(v, u);\n    }\n}\nint lca(int u, int v) {\n    if (dep[u] &lt; dep[v])\n        swap(u, v);                  //\u8ba9u\u66f4\u6df1\n    for (int i = 18; i &gt;= 0; i--) {  //\u500d\u589e\u5f80\u4e0a\u8df3 \uff0c\u4e0d\u8981\u66b4\u529b\u8df3\n        if (dep[u] - (1 &lt;&lt; i) &gt;= dep[v])\n            u = fa[u][i];\n    }\n    if (u == v)\n        return u;\n    for (int i = 18; i &gt;= 0; i--) {  //\u500d\u589e\u4e00\u8d77\u5f80\u4e0a\u8df3\n        if (fa[u][i] != fa[v][i])\n            u = fa[u][i], v = fa[v][i];\n    }\n    return fa[u][0];  //\u6ce8\u610f\u8fd4\u56de\u503c\n}\n\nsigned main(){\n    n=rd,m=rd;\n    for(int i=1;i&lt;n;i++){\n        add(rd,rd);\n    }\n    dfs1(1, 0);\n    while(m--){\n        int a=rd,b=rd;\n        int p=lca(a,b);\n        cout&lt;&lt;qzh[a]+qzh[b]-qzh[p]*2+in[p]&lt;&lt;endl;\n    }\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/#lca_3","title":"\u524d\u7f00\u548c&amp;LCA\u7684\u7ec4\u5408","text":""},{"location":"%E6%A0%91%E8%AE%BA/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/#1_1","title":"\u4f8b\u9898 #1","text":"<p>[USACO15DEC] Max Flow P</p> <p>FJ \u7ed9\u4ed6\u7684\u725b\u68da\u7684 \\(N\\) \u4e2a\u9694\u95f4\u4e4b\u95f4\u5b89\u88c5\u4e86 \\(N-1\\) \u6839\u7ba1\u9053\uff0c\u9694\u95f4\u7f16\u53f7\u4ece \\(1\\) \u5230 \\(N\\)\u3002\u6240\u6709\u9694\u95f4\u90fd\u88ab\u7ba1\u9053\u8fde\u901a\u4e86\u3002</p> <p>FJ \u6709 \\(K\\) \u6761\u8fd0\u8f93\u725b\u5976\u7684\u8def\u7ebf\uff0c\u7b2c \\(i\\) \u6761\u8def\u7ebf\u4ece\u9694\u95f4 \\(s_i\\) \u8fd0\u8f93\u5230\u9694\u95f4 \\(t_i\\)\u3002\u4e00\u6761\u8fd0\u8f93\u8def\u7ebf\u4f1a\u7ed9\u5b83\u7684\u4e24\u4e2a\u7aef\u70b9\u5904\u7684\u9694\u95f4\u4ee5\u53ca\u4e2d\u95f4\u9014\u5f84\u7684\u6240\u6709\u9694\u95f4\u5e26\u6765\u4e00\u4e2a\u5355\u4f4d\u7684\u8fd0\u8f93\u538b\u529b\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u538b\u529b\u6700\u5927\u7684\u9694\u95f4\u7684\u538b\u529b\u662f\u591a\u5c11\u3002</p> <p>\\(2 \\le N \\le 5 \\times 10^4,1 \\le K \\le 10^5\\)</p> <p>\u601d\u8def</p> <p>\u8fd9\u91cc\u6ce8\u610f\u5229\u7528\u524d\u7f00\u548c\u5feb\u901f\u628a\u4e00\u6761\u94fe\u52a0\u4e0a\u4e00\u4e2a\u6743\u503c</p> <p>\u628aa,b\u52a0\u4e0av\uff0clca\u51cf\u53bbv\uff0c\u6ce8\u610f\uff0c\u5728fa(v)\u51cf\u53bb**\u4e00\u4e2a**v\u800c\u4e0d\u662f\u4e24\u4e2a\uff01\u56e0\u4e3a\u6211\u4eec\u5728lca\u5904\u5df2\u7ecf\u51cf\u53bb\u4e86\u4e00\u4e2a\u4e86\uff01</p> <p>\u8fd9\u91cc\u6ce8\u610flca\u9884\u5904\u7406\u7684\u5199\u6cd5</p> <pre><code>void dfs(int x,int f){\n    dep[x]=dep[f]+1;\n    fa[x][0]=f;\n    for (int i = 1; i &lt;= 19; i++) fa[x][i] = fa[fa[x][i - 1]][i - 1];  // att!\n    for(auto v:e[x]){\n        if(v==f)continue;\n        // for(int i=1;i&lt;20;i++){\n        //     fa[v][i]=fa[fa[v][i-1]][i-1];\n        // }\n        // fa[v][0]=x;\n        dfs(v,x);\n    }\n}\n</code></pre> <p>\u4e0a\u9762\u662f\u6b63\u786e\u5199\u6cd5\u3002\u6ce8\u91ca\u662f\u9519\u8bef\u5199\u6cd5</p> <p>\u6216\u8005\u4e0b\u9762\u4e5f\u53ef\u4ee5</p> <pre><code>void dfs(int x,int f){\n    dep[x]=dep[f]+1;\n    for(auto v:e[x]){\n        if(v==f)continue;\n        fa[v][0]=x;\n        for(int i=1;i&lt;20;i++){\n            fa[v][i]=fa[fa[v][i-1]][i-1];\n        }\n        dfs(v,x);\n    }\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/","title":"\u6811\u94fe\u5256\u5206","text":"<p>D12 Luogu P3384\u3010\u6a21\u677f\u3011\u8f7b\u91cd\u94fe\u5256\u5206/\u6811\u94fe\u5256\u5206_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#_1","title":"\u6811\u94fe\u5256\u5206","text":""},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#_2","title":"\u91cd\u94fe","text":"<p>\u6ce8\u610f\uff0c\u91cd\u513f\u5b50\u53ea\u80fd\u6709**\u4e00\u4e2a**</p> <p>\u56fe\u4e2d\u6807\u7eff\u7684\u8def\u5f84\u5373\u4e3a\u91cd\u94fe\uff0c\u6ce8\u610f\uff0c\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u662f\u4e00\u6761\u7279\u6b8a\u7684\u91cd\u94fe</p> <p>\u6ce8\u610f\uff0c\u53ea\u8981\u5b50\u8282\u70b9\u662f\u91cd\u513f\u5b50\uff0c\u5b83\u5c31\u662f\u91cd\u94fe\uff0c\u4e0d\u5bf9\u7236\u8282\u70b9\u6709\u7279\u6b8a\u8981\u6c42</p> <p>\u7279\u6b8a\u6027\u8d28\uff1a</p> <ul> <li> <p>\u6240\u6709\u91cd\u94fe\u6240\u5305\u542b\u7684\u8282\u70b9\u76f8\u52a0\uff0c\u6b63\u597d\u662f\u6240\u6709\u7684\u8282\u70b9\uff0c\u4e0d\u91cd\u4e0d\u6f0f</p> </li> <li> <p>\u6ce8\u610f\u6807\u7ea2\u7684\u7ed3\u8bba3\uff1aeg.\u5bf9\u4e8e\u8def\u5f845-2-1-4-8-12\uff0c\u5c31\u5256\u5206\u4e3a\u4e864\u6761\u91cd\u94fe</p> </li> </ul>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#lca","title":"\u4f7f\u7528\u91cd\u94fe\u5256\u5206\u89e3\u51b3LCA\u95ee\u9898","text":"<p>\u672a\u9a8c\u8bc1\u7684\u4ee3\u7801</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code by Ntsc .\n       . WHY NOT????? .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint sz[N],fa[N],dep[N],son[N],top[N];\nint n,Q;\nvector&lt;int&gt; e[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n}\n\nvoid dfs1(int u,int faa){//\u521d\u59cb\u503c1,0 \n    fa[u]=faa;dep[u]=dep[faa]/\u66f4\u65b0fa,dep,\u8bbe\u7f6esz\u521d\u59cb\u503c \n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[u][i];\n        if(v==faa)continue;\n        dfs1(v,u);//\u6ce8\u610f\u4e0d\u662fdfs1(v,faa) \n        sz[u]+=sz[v];//\u56de\u6eaf,sz[u]\u539f\u672c\u4e3a1 ,\u52a0\u4e0a\u5df2\u7ecf\u5904\u7406\u4e86v\u7684\u5b50\u6811\u5927\u5c0f\n        if(sz[v]&gt;sz[son[u]])son[u]=v;//\u66f4\u65b0\u91cd\u513f\u5b50,son[u]\u5b58\u5230\u662f\u4e4b\u524d\u5df2\u7ecf\u626b\u63cf\u8fc7\u7684u\u7684\u513f\u5b50\u4e2d\u6700\u91cd\u7684\u90a3\u4e2a,\u628a\u5b83\u7684sz\u4e0ev\u7684sz\u6bd4\u5bf9 \n    }   \n    return ;\n} \n\nvoid dfs2(int u,int t){\n    top[u]=t;\n    if(!son[u])return;//\u6ca1\u6709\u91cd\u513f\u5b50,\u90a3\u4e48\u8bf4\u660eu\u4e3a\u53f6\u5b50\u8282\u70b9. \n    dfs2(son[u],t);//\u5148\u8d70\u91cd\u513f\u5b50,\u7ee7\u627fu\u7684top(\u5373t) \n    for(int i=0;i&lt;e[i].size();i++){//\u626b\u63cf\u8f7b\u513f\u5b50 \n        int v=e[u][i];\n        if(v==fa[u]||v==son[u])continue;//\u7b5b\u9009 \n        dfs2(v,v);//\u8f7b\u513f\u5b50\u4e0d\u80fd\u7ee7\u627ft,\u53ea\u80fd\u5f00\u4e00\u6761\u65b0\u7684\u91cd\u94fe \n    }\n    return ;\n}\n\nint lca(int u,int v){\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);//\u4ea4\u6362,\u4f7f\u5f97u\u6240\u5728\u7684\u91cd\u94fetop\u6052\u6bd4v\u7684\u6df1 ,\u5373\u4fdd\u8bc1\u662f\u66f4\u6df1\u7684\u5728\u5f80\u4e0a\u8df3\u800c\u4e0d\u662f\u6d45\u7684\u4e00\u76f4\u5728\u5f80\u4e0a\u8df3 \n        u=fa[top[u]];\n    }\n    if(dep[u]&gt;dep[v])return v;\n    else return u;//\u8fd4\u56de\u66f4\u6d45\u7684\u90a3\u4e2a,\u5c31\u662f\u539f\u6765u,v\u7684LCA \n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;Q;\n    for(int i=1;i&lt;=n;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        add(a,b);add(b,a);\n    }\n    //......\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#_3","title":"\u91cd\u94fe\u5256\u5206+\u7ebf\u6bb5\u6811\u5b9e\u73b0\u6811\u4e0a\u4fee\u6539\u4e0e\u67e5\u8be2","text":"<p>\u91cd\u94fe\u5256\u5206\u90e8\u5206</p> <p>324 \u6811\u4e0a\u4fee\u6539\u4e0e\u67e5\u8be2 \u6811\u94fe\u5256\u5206_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p></p> <p>\u5728\u5256\u5206\u4e4b\u540e\u6211\u4eec\u5c06\u6bcf\u4e2a\u8282\u70b9\u90fd\u4e00\u4e00\u6620\u5c04\u4e00\u4e2a\u65b0\u7684\u7f16\u53f7\u3002\u6309\u7167\u4ee3\u7801\u4e2ddfs2\u7684\u987a\u5e8f\uff0c\u4e00\u6761\u4e00\u6761\u91cd\u94fe\u4e0a\u7684\u70b9\u6df1\u5ea6\u7531\u6d45\u5165\u6df1\u4f9d\u6b21\u7f16\u53f7\u3002</p> <p>\u76f4\u89c2\u56fe\uff0c\u65b0\u7684\u7f16\u53f7\u5982\u56fe\u4e2d\u7684\u6807\u7ea2\u6570\u5b57</p> <p></p> <p>\u4ee3\u7801</p> <pre><code>int sz[N],fa[N],dep[N],son[N],top[N];\nint n,Q,cnt;\nvector&lt;int&gt; e[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n}\n\nvoid dfs1(int u,int faa){//\u521d\u59cb\u503c1,0 \n    fa[u]=faa;dep[u]=dep[faa]/\u66f4\u65b0fa,dep,\u8bbe\u7f6esz\u521d\u59cb\u503c \n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[u][i];\n        if(v==faa)continue;\n        dfs1(v,u);//\u6ce8\u610f\u4e0d\u662fdfs1(v,faa) \n        sz[u]+=sz[v];//\u56de\u6eaf,sz[u]\u539f\u672c\u4e3a1 ,\u52a0\u4e0a\u5df2\u7ecf\u5904\u7406\u4e86v\u7684\u5b50\u6811\u5927\u5c0f\n        if(sz[v]&gt;sz[son[u]])son[u]=v;//\u66f4\u65b0\u91cd\u513f\u5b50,son[u]\u5b58\u5230\u662f\u4e4b\u524d\u5df2\u7ecf\u626b\u63cf\u8fc7\u7684u\u7684\u513f\u5b50\u4e2d\u6700\u91cd\u7684\u90a3\u4e2a,\u628a\u5b83\u7684sz\u4e0ev\u7684sz\u6bd4\u5bf9 \n    }   \n    return ;\n} \n\nvoid dfs2(int u,int t){\n    top[u]=t;id[u]=++cnt;nw[cnt]=w[u];\n    if(!son[u])return;//\u6ca1\u6709\u91cd\u513f\u5b50,\u90a3\u4e48\u8bf4\u660eu\u4e3a\u53f6\u5b50\u8282\u70b9. \n    dfs2(son[u],t);//\u5148\u8d70\u91cd\u513f\u5b50,\u7ee7\u627fu\u7684top(\u5373t) \n    for(int i=0;i&lt;e[i].size();i++){//\u626b\u63cf\u8f7b\u513f\u5b50 \n        int v=e[u][i];\n        if(v==fa[u]||v==son[u])continue;//\u7b5b\u9009 \n        dfs2(v,v);//\u8f7b\u513f\u5b50\u4e0d\u80fd\u7ee7\u627ft,\u53ea\u80fd\u5f00\u4e00\u6761\u65b0\u7684\u91cd\u94fe \n    }\n    return ;\n}\n</code></pre> <p>\u7ebf\u6bb5\u6811\u90e8\u5206</p> <p>\u6211\u4eec\u5c06\u539f\u6765\u7684\u6811\u6620\u5c04\u4e3a\u5e8f\u5217\uff0c\u7136\u540e\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u6bb5\u5e8f\u5217</p> <p>\u4ee3\u7801</p> <pre><code>struct tree{\n    int l,r;//\u5de6\u53f3\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\n    ll add,sum;//\u6807\u8bb0\u4e0e\u533a\u95f4\u548c\n}tr[N&lt;&lt;2];\n\nvoid pushup(int u){\n    tr[u].sum=tr[u*2].sum+tr[u*2+1].sum;\n}\nvoid build(int u,int l,int r){\n    tr[u]={l,r,0,nw[r]};\n    if(l==r)return ;\n    int mid=l+r;\n    build(u*2,l,mid);\n    build(u*2+1,mid+1,r);\n    pushup(u);//\u56de\u6eaf\u65f6\u66f4\u65b0\n}\n</code></pre> <p>\u67e5\u8be2</p> <p>\u76ee\u7684\uff1a\u6c42\u6811\u4e0a\u4ecex\u5230y\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u548c</p> <p>\u4e3e\u4e2a\u4f8b\u5b50</p> <p></p> <p>\u6211\u4eec\u8981\u67e5\u8be2\u6811\u4e0a\u8282\u70b910-12\u7684\u8def\u5f84\u6743\u503c\u548c\uff0c\u9996\u5148\u4f7f\u7528\u7c7b\u4f3cLCA\u7b97\u6cd5\u627e\u5230\u8def\u5f84\u7ecf\u8fc7\u4e86\u90a3\u51e0\u6761\u91cd\u94fe\uff0c\u5206\u522b\u662f10-6-2\uff0c1-4-8\uff0c12</p> <p>\u7136\u540e\u6620\u5c04\u5230\u7ebf\u6bb5\u6811\u4e2d\uff0c\u5206\u522b\u662f\u533a\u95f4[7,9][1,3][5]</p> <p>\u6211\u4eec\u4f7f\u7528\u7ebf\u6bb5\u6811\u5feb\u901f\u6c42\u51fa\u8fd9\u4e9b\u533a\u95f4\u548c\u5373\u53ef\uff0c\u6ce8\u610f\uff0c\u5176\u4e2d\u7684[7,9][5]\u90fd\u662f\u4e00\u6bb5\u5b8c\u6574\u7684\u91cd\u94fe\uff0c\u6211\u4eec\u5728LCA\u65f6\u5df2\u7ecf\u77e5\u9053\u4e86\u5176l,r\uff0c\u76f4\u63a5\u7ebf\u6bb5\u6811\u5373\u53ef\uff0c\u4f46[1,3]\u4e0d\u662f\u4e00\u6bb5\u5b8c\u6574\u7684\u91cd\u94fe\u3002\u5e78\u597d\uff0c\u5728LCA\u7b97\u6cd5\u7ed3\u675f\u65f6\uff0cu=8\uff0cv=1\uff0c\u6620\u5c04\u540e\u5c31\u662f3\u548c1.\u56e0\u6b64\u5728LCA\u7ed3\u675f\u540e\u6211\u4eec\u8fd8\u9700\u8981\u628aans\u52a0\u4e0a\u8fd9\u4e00\u6761\u4e0d\u5b8c\u6574\u7684\u94fe</p> <pre><code>int query_lca(int u,int v){\n    ll res=0;\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);//\u4ea4\u6362,\u4f7f\u5f97u\u6240\u5728\u7684\u91cd\u94fetop\u6052\u6bd4v\u7684\u6df1 ,\u5373\u4fdd\u8bc1\u662f\u66f4\u6df1\u7684\u5728\u5f80\u4e0a\u8df3\u800c\u4e0d\u662f\u6d45\u7684\u4e00\u76f4\u5728\u5f80\u4e0a\u8df3 \n        res+=query(id[top[u]],id[u]);//\u6ce8\u610fid[top[u]]&lt;=id[u]\n        u=fa[top[u]];\n    }\n    if(dep[u]&gt;dep[v])swap(u,v);\n    res+=query(id[u],id[v])\n    return res;\n}\n</code></pre> <p>\u4fee\u6539</p> <p>\u76ee\u7684\uff1a\u5c06\u6811\u4e0a\u4ecex\u5230y\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u6bcf\u4e2a\u8282\u70b9\u90fd\u52a0\u4e0ak</p> <p>\u4ee3\u7801\u548c\u4e0a\u65b9<code>query_lca</code>\u57fa\u672c\u4e0a\u4e00\u6a21\u4e00\u6837\u3002\u6ce8\u610f\u8fd9\u91cc\u7701\u7565\u4e86**\u7ebf\u6bb5\u6811**\u76f8\u5173\u4ee3\u7801\u5982\uff1a</p> <ul> <li> <p><code>update()</code>\uff08<code>change()</code>\uff09</p> </li> <li> <p><code>query()</code></p> </li> <li> <p><code>pushdown()</code>\u61d2\u6807\u8bb0</p> </li> </ul> <p>\u8bf7\u81ea\u6211\u56de\u987e\uff01</p> <pre><code>void updt_lca(int u,int v,int k){\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);//\u4ea4\u6362,\u4f7f\u5f97u\u6240\u5728\u7684\u91cd\u94fetop\u6052\u6bd4v\u7684\u6df1 ,\u5373\u4fdd\u8bc1\u662f\u66f4\u6df1\u7684\u5728\u5f80\u4e0a\u8df3\u800c\u4e0d\u662f\u6d45\u7684\u4e00\u76f4\u5728\u5f80\u4e0a\u8df3 \n        update(1,id[top[u]],id[u],k);//\u6ce8\u610fid[top[u]]&lt;=id[u]\n        u=fa[top[u]];\n    }\n    if(dep[u]&gt;dep[v])swap(u,v);\n    update(1,id[u],id[v],k);\n    return ;\n}\n</code></pre> <p>\u4f8b\u9898</p> <p>www.luogu.com.cn</p> <p>\u5982\u9898\uff0c\u5df2\u77e5\u4e00\u68f5\u5305\u542b \\(N\\) \u4e2a\u7ed3\u70b9\u7684\u6811\uff08\u8fde\u901a\u4e14\u65e0\u73af\uff09\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5305\u542b\u4e00\u4e2a\u6570\u503c\uff0c\u9700\u8981\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li> <p><code>1 x y z</code>\uff0c\u8868\u793a\u5c06\u6811\u4ece \\(x\\) \u5230 \\(y\\) \u7ed3\u70b9\u6700\u77ed\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u52a0\u4e0a \\(z\\)\u3002</p> </li> <li> <p><code>2 x y</code>\uff0c\u8868\u793a\u6c42\u6811\u4ece \\(x\\) \u5230 \\(y\\) \u7ed3\u70b9\u6700\u77ed\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u503c\u4e4b\u548c\u3002</p> </li> <li> <p><code>3 x z</code>\uff0c\u8868\u793a\u5c06\u4ee5 \\(x\\) \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u503c\u90fd\u52a0\u4e0a \\(z\\)\u3002</p> </li> <li> <p><code>4 x</code> \u8868\u793a\u6c42\u4ee5 \\(x\\) \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u503c\u4e4b\u548c</p> </li> </ul> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff1a \\(1\\le N \\leq {10}^5\\)\uff0c\\(1\\le M \\leq {10}^5\\)\uff0c\\(1\\le R\\le N\\)\uff0c\\(1\\le P \\le 2^{31}-1\\)\u3002</p> <p>\u8865\u5145\u8bf4\u660e\uff1a\u89c2\u5bdf\u53ef\u77e5\uff0c\u91cd\u94fe\u5256\u5206\u540e\u4efb\u610f\u4e00\u68f5\u5b50\u6811\u7684\u6240\u6709\u70b9\u4f1a\u88ab\u6620\u5c04\u5230\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u4e2d\u3002\u8fd9\u4e00\u70b9\u548cdfs\u5e8f\u9887\u6709\u7c7b\u4f3c\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e5+5;\nconst int M=1e5;\nint MOD;\nconst int INF=1e5;\n\nint n,m,p,q,r,T,s[N],ans;\n\nint sz[N],fa[N],dep[N],son[N],top[N];\nint w[N],nw[N],tail[N],id[N],Q,cnt;\nint du[N],rt;\nvector&lt;int&gt; e[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n    e[b].push_back(a);//\u8bb0\u5f97\u53cc\u5411\u8fb9 \n    du[b]++;\n}\n\nvoid dfs1(int u,int faa){//\u521d\u59cb\u503c1,0 \n    fa[u]=faa;dep[u]=dep[faa]/\u66f4\u65b0fa,dep,\u8bbe\u7f6esz\u521d\u59cb\u503c \n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[u][i];\n        if(v==faa)continue;\n        dfs1(v,u);//\u6ce8\u610f\u4e0d\u662fdfs1(v,faa) \n        sz[u]+=sz[v];//\u56de\u6eaf,sz[u]\u539f\u672c\u4e3a1 ,\u52a0\u4e0a\u5df2\u7ecf\u5904\u7406\u4e86v\u7684\u5b50\u6811\u5927\u5c0f\n        if(sz[v]&gt;sz[son[u]])son[u]=v;//\u66f4\u65b0\u91cd\u513f\u5b50,son[u]\u5b58\u5230\u662f\u4e4b\u524d\u5df2\u7ecf\u626b\u63cf\u8fc7\u7684u\u7684\u513f\u5b50\u4e2d\u6700\u91cd\u7684\u90a3\u4e2a,\u628a\u5b83\u7684sz\u4e0ev\u7684sz\u6bd4\u5bf9 \n    }   \n    return ;\n} \n\nvoid dfs2(int u,int t){\n    top[u]=t;id[u]=++cnt;nw[cnt]=w[u];\n    tail[u]=id[u];\n    if(!son[u])return;//\u6ca1\u6709\u91cd\u513f\u5b50,\u90a3\u4e48\u8bf4\u660eu\u4e3a\u53f6\u5b50\u8282\u70b9. \n    dfs2(son[u],t);//\u5148\u8d70\u91cd\u513f\u5b50,\u7ee7\u627fu\u7684top(\u5373t) \n    tail[u]=max(id[u],tail[son[u]]);\n    for(int i=0;i&lt;e[u].size();i++){//\u626b\u63cf\u8f7b\u513f\u5b50 \n        int v=e[u][i];\n        if(v==fa[u]||v==son[u])continue;//\u7b5b\u9009 \n        dfs2(v,v);//\u8f7b\u513f\u5b50\u4e0d\u80fd\u7ee7\u627ft,\u53ea\u80fd\u5f00\u4e00\u6761\u65b0\u7684\u91cd\u94fe \n        tail[u]=max(id[u],tail[v]);//\u8bb0\u5f55\u5b50\u6811\u533a\u95f4 \n    }\n    return ;\n}\n\n//SGT\nstruct tree{\n    int l,r;//\u5de6\u53f3\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\n    int add,sum;//\u6807\u8bb0\u4e0e\u533a\u95f4\u548c\n}tr[N&lt;&lt;2];\n\nvoid pushup(int u){\n    tr[u].sum=(tr[u*2].sum+tr[u*2+1].sum)%MOD;\n}\n\nvoid addtag(int x,int tg){\n    tr[x].add+=tg;\n    tr[x].add%=MOD;\n    tr[x].sum+=tg*(tr[x].r-tr[x].l+1);\n    tr[x].sum%=MOD;\n}\n\nvoid pushdown(int x){\n    if(tr[x].add){\n        addtag(x&lt;&lt;1,tr[x].add);\n        addtag(x&lt;&lt;1|1,tr[x].add);\n        tr[x].add=0;\n    }\n}\n\nvoid build(int u,int l,int r){\n    tr[u]={l,r,0,0};\n    if(l==r){\n        tr[u]={l,r,0,nw[r]};return ;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(u*2,l,mid);\n    build(u*2+1,mid+1,r);\n    pushup(u);//\u56de\u6eaf\u65f6\u66f4\u65b0\n}\n\n\nvoid update(int x,int pl,int pr,int k){\n    if(tr[x].l&gt;=pl&amp;&amp;tr[x].r&lt;=pr){\n        addtag(x,k);\n        return ;\n    }\n    if(tr[x].l&gt;pr||tr[x].r&lt;pl)return ;\n\n    pushdown(x);\n    int mid=tr[x].l+tr[x].r&gt;&gt;1;\n    if(pl&lt;=mid)update(x&lt;&lt;1,pl,pr,k);\n    if(pr&gt;mid)update(x&lt;&lt;1|1,pl,pr,k);\n\n    pushup(x);\n}\n\nint query(int x,int pl,int pr){\n    if(tr[x].l&gt;=pl&amp;&amp;tr[x].r&lt;=pr){\n        return tr[x].sum;\n    }\n\n\n    if(tr[x].l&gt;pr||tr[x].r&lt;pl)return 0;\n\n    pushdown(x);\n    int res=0;\n    int mid=tr[x].l+tr[x].r&gt;&gt;1;\n    if(pl&lt;=mid)res+=query(x&lt;&lt;1,pl,pr);\n    res%=MOD;\n    if(pr&gt;mid)res+=query(x&lt;&lt;1|1,pl,pr);\n    res%=MOD;\n\n    return res;\n}\n\n//spou\nint query_road(int u,int v){\n    int res=0;\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);//\u4ea4\u6362,\u4f7f\u5f97u\u6240\u5728\u7684\u91cd\u94fetop\u6052\u6bd4v\u7684\u6df1 ,\u5373\u4fdd\u8bc1\u662f\u66f4\u6df1\u7684\u5728\u5f80\u4e0a\u8df3\u800c\u4e0d\u662f\u6d45\u7684\u4e00\u76f4\u5728\u5f80\u4e0a\u8df3 \n        res+=query(1,id[top[u]],id[u]);//\u6ce8\u610fid[top[u]]&lt;=id[u]\n        u=fa[top[u]];\n    }\n    if(dep[u]&gt;dep[v])swap(u,v);\n    res+=query(1,id[u],id[v]);\n    res%=MOD;\n    return res;\n}\n\nvoid updt_road(int u,int v,int k){\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);//\u4ea4\u6362,\u4f7f\u5f97u\u6240\u5728\u7684\u91cd\u94fetop\u6052\u6bd4v\u7684\u6df1 ,\u5373\u4fdd\u8bc1\u662f\u66f4\u6df1\u7684\u5728\u5f80\u4e0a\u8df3\u800c\u4e0d\u662f\u6d45\u7684\u4e00\u76f4\u5728\u5f80\u4e0a\u8df3 \n        update(1,id[top[u]],id[u],k);//\u6ce8\u610fid[top[u]]&lt;=id[u]\n        u=fa[top[u]];\n    }\n    if(dep[u]&gt;dep[v])swap(u,v);\n    update(1,id[u],id[v],k);\n    return ;\n}\n\n//debug\n\nvoid debug(){\n//  cerr&lt;&lt;\"\\ndebug = \";\n//  for(int i=1;i&lt;=n;i++){\n//      cerr&lt;&lt;query(1,id[i],id[i])&lt;&lt;' ';\n//  }\n//  cerr&lt;&lt;\"debug end\\n\";\n//  \n//  cerr&lt;&lt;\"node v=\";\n//  for(int i=1;i&lt;=n;i++)cerr&lt;&lt;nw[id[i]]&lt;&lt;' ';\n//  cerr&lt;&lt;\"node v end\\n\";\n}\n\n\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;rt&gt;&gt;MOD;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;w[i];\n    }\n\n    for(int i=1;i&lt;n;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        add(a,b);\n    }\n\n//  for(int i=1;i&lt;=n;i++){\n//      if(!du[i]){\n//          rt=i;break;//\u627e\u6839 \n//      }\n//  }\n\n    dfs1(rt,0);\n    dfs2(rt,rt);\n\n//  cerr&lt;&lt;\"sz[]=\";\n//  for(int i=1;i&lt;=n;i++)cerr&lt;&lt;sz[i]&lt;&lt;' ';\n//  cerr&lt;&lt;\"sz[] endl\\n\"; \n\n//  cerr&lt;&lt;\"rt= \"&lt;&lt;rt&lt;&lt;endl;\n\n//  for(int i=1;i&lt;=n;i++)cerr&lt;&lt;\"node \"&lt;&lt;i&lt;&lt;\" 's id = \"&lt;&lt;id[i]&lt;&lt;\" tail = \"&lt;&lt;tail[i]&lt;&lt;endl;\n\n\n//  cerr&lt;&lt;\"start building...\\n\";\n\n    build(1,1,n);\n\n//  cerr&lt;&lt;\"build finish\\ninit \";\n    debug();\n\n    while(m--){\n        int op,x,y,z;\n        cin&gt;&gt;op&gt;&gt;x;\n        if(op==1){\n            cin&gt;&gt;y&gt;&gt;z;\n            updt_road(x,y,z);\n        }if(op==2){\n            cin&gt;&gt;y;\n            cout&lt;&lt;query_road(x,y)%MOD&lt;&lt;endl;\n        }if(op==3){\n            cin&gt;&gt;z;\n            update(1,id[x],tail[x],z);\n\n        }if(op==4){\n            cout&lt;&lt;query(1,id[x],tail[x])%MOD&lt;&lt;endl;\n        }\n\n        debug();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#_4","title":"\u5b9e\u94fe","text":"<p>\u89c1 LCT</p> <p>\u91cd\u94fe\u5256\u5206</p> <p>\u628a\u6811\u62c6\u5206\u6210\u82e5\u5e72\u6761\u91cd\u94fe\uff0c\u7528\u7ebf\u6bb5\u6811\u8fd9\u79cd\u9759\u6001\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u91cd\u94fe\u3002\u901a\u8fc7\u5bf9\u91cd\u94fe\u7684\u62c6\u5206\u4e0e\u7ec4\u5408\uff0c\u6784\u9020\u7b54\u6848</p> <p>\u5b9e\u94fe\u5256\u5206</p> <p>\u628a\u6811\u62c6\u5206\u6210\u82e5\u5e72\u6761\u5b9e\u94fe\uff0c\u7528 splay \u8fd9\u79cd\u52a8\u6001\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u5b9e\u94fe\u3002\u901a\u8fc7\u5bf9\u5b9e\u94fe\u7684\u62c6\u5206\u4e0e\u7ec4\u5408\uff0c\u6784\u9020\u7b54\u6848</p> <p>\u6784\u5efa</p> <p>\u4e00\u4e2a\u8282\u70b9\u53ea\u80fd\u9009\uff08\u4efb\u610f\uff09\u4e00\u4e2a\u513f\u5b50\u505a\u5b9e\u513f\u5b50\uff0c\u5176\u4ed6\u90fd\u662f\u865a\u513f\u5b50\u3002</p> <p>\u5b9e\u8fb9\uff1a\u7236\u8282\u70b9\u4e0e\u5b9e\u513f\u5b50\u4e4b\u95f4\u7684\u8fb9\uff0c\u662f\u53cc\u5411\u8fb9\u3002</p> <p>\u865a\u8fb9\uff1a\u7531\u865a\u513f\u5b50\u6307\u5411\u7236\u8282\u70b9\u7684\u8fb9\uff0c\u662f\u5355\u5411\u8fb9\u3002\uff08\u8ba4\u7236\u4e0d\u8ba4\u5b50\uff0c\u4e0b\u9762\u4f1a\u8bf4\u53ca\u662f\u4e00\u4e2asplay\u7684\u6839\u8282\u70b9\u6307\u5411\u53e6\u5916\u4e00\u9897splay\u4e2d\u7684\u67d0\u4e2a\u8282\u70b9\uff09</p> <p>\u5b9e\u94fe\uff1a\u7531\u5b9e\u8fb9\u6784\u6210\u7684\u94fe\u3002\u6bcf\u6761\u5b9e\u94fe\u7684\u8282\u70b9\u6df1\u5ea6\u662f\u4e25\u683c\u9012\u589e\u7684\u3002</p> <p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | \u6811\u5256\uff08\u6811\u94fe\u5256\u5206\uff09</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#_5","title":"\u56de\u987e | \u91cd\u94fe\u5256\u5206+\u7ebf\u6bb5\u6811\u5b9e\u73b0\u6811\u4e0a\u4fee\u6539\u4e0e\u67e5\u8be2","text":"<p>\u91cd\u94fe\u5256\u5206\u90e8\u5206</p> <p>324 \u6811\u4e0a\u4fee\u6539\u4e0e\u67e5\u8be2 \u6811\u94fe\u5256\u5206_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p></p> <p>\u5728\u5256\u5206\u4e4b\u540e\u6211\u4eec\u5c06\u6bcf\u4e2a\u8282\u70b9\u90fd\u4e00\u4e00\u6620\u5c04\u4e00\u4e2a\u65b0\u7684\u7f16\u53f7\u3002\u6309\u7167\u4ee3\u7801\u4e2ddfs2\u7684\u987a\u5e8f\uff0c\u4e00\u6761\u4e00\u6761\u91cd\u94fe\u4e0a\u7684\u70b9\u6df1\u5ea6\u7531\u6d45\u5165\u6df1\u4f9d\u6b21\u7f16\u53f7\u3002</p> <p>\u76f4\u89c2\u56fe\uff0c\u65b0\u7684\u7f16\u53f7\u5982\u56fe\u4e2d\u7684\u6807\u7ea2\u6570\u5b57</p> <p></p> <p>\u4ee3\u7801</p> <pre><code>int sz[N],fa[N],dep[N],son[N],top[N];\nint n,Q,cnt;\nvector&lt;int&gt; e[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n}\n\nvoid dfs1(int u,int faa){//\u521d\u59cb\u503c1,0 \n    fa[u]=faa;dep[u]=dep[faa]/\u66f4\u65b0fa,dep,\u8bbe\u7f6esz\u521d\u59cb\u503c \n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[u][i];\n        if(v==faa)continue;\n        dfs1(v,u);//\u6ce8\u610f\u4e0d\u662fdfs1(v,faa) \n        sz[u]+=sz[v];//\u56de\u6eaf,sz[u]\u539f\u672c\u4e3a1 ,\u52a0\u4e0a\u5df2\u7ecf\u5904\u7406\u4e86v\u7684\u5b50\u6811\u5927\u5c0f\n        if(sz[v]&gt;sz[son[u]])son[u]=v;//\u66f4\u65b0\u91cd\u513f\u5b50,son[u]\u5b58\u5230\u662f\u4e4b\u524d\u5df2\u7ecf\u626b\u63cf\u8fc7\u7684u\u7684\u513f\u5b50\u4e2d\u6700\u91cd\u7684\u90a3\u4e2a,\u628a\u5b83\u7684sz\u4e0ev\u7684sz\u6bd4\u5bf9 \n    }   \n    return ;\n} \n\nvoid dfs2(int u,int t){\n    top[u]=t;id[u]=++cnt;nw[cnt]=w[u];\n    if(!son[u])return;//\u6ca1\u6709\u91cd\u513f\u5b50,\u90a3\u4e48\u8bf4\u660eu\u4e3a\u53f6\u5b50\u8282\u70b9. \n    dfs2(son[u],t);//\u5148\u8d70\u91cd\u513f\u5b50,\u7ee7\u627fu\u7684top(\u5373t) \n    for(int i=0;i&lt;e[i].size();i++){//\u626b\u63cf\u8f7b\u513f\u5b50 \n        int v=e[u][i];\n        if(v==fa[u]||v==son[u])continue;//\u7b5b\u9009 \n        dfs2(v,v);//\u8f7b\u513f\u5b50\u4e0d\u80fd\u7ee7\u627ft,\u53ea\u80fd\u5f00\u4e00\u6761\u65b0\u7684\u91cd\u94fe \n    }\n    return ;\n}\n</code></pre> <p>\u7ebf\u6bb5\u6811\u90e8\u5206</p> <p>\u6211\u4eec\u5c06\u539f\u6765\u7684\u6811\u6620\u5c04\u4e3a\u5e8f\u5217\uff0c\u7136\u540e\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u6bb5\u5e8f\u5217</p> <p>\u4ee3\u7801</p> <pre><code>struct tree{\n    int l,r;//\u5de6\u53f3\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\n    ll add,sum;//\u6807\u8bb0\u4e0e\u533a\u95f4\u548c\n}tr[N&lt;&lt;2];\n\nvoid pushup(int u){\n    tr[u].sum=tr[u*2].sum+tr[u*2+1].sum;\n}\nvoid build(int u,int l,int r){\n    tr[u]={l,r,0,nw[r]};\n    if(l==r)return ;\n    int mid=l+r;\n    build(u*2,l,mid);\n    build(u*2+1,mid+1,r);\n    pushup(u);//\u56de\u6eaf\u65f6\u66f4\u65b0\n}\n</code></pre> <p>\u67e5\u8be2</p> <p>\u76ee\u7684\uff1a\u6c42\u6811\u4e0a\u4ecex\u5230y\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u548c</p> <p>\u4e3e\u4e2a\u4f8b\u5b50</p> <p></p> <p>\u6211\u4eec\u8981\u67e5\u8be2\u6811\u4e0a\u8282\u70b910-12\u7684\u8def\u5f84\u6743\u503c\u548c\uff0c\u9996\u5148\u4f7f\u7528\u7c7b\u4f3cLCA\u7b97\u6cd5\u627e\u5230\u8def\u5f84\u7ecf\u8fc7\u4e86\u90a3\u51e0\u6761\u91cd\u94fe\uff0c\u5206\u522b\u662f10-6-2\uff0c1-4-8\uff0c12</p> <p>\u7136\u540e\u6620\u5c04\u5230\u7ebf\u6bb5\u6811\u4e2d\uff0c\u5206\u522b\u662f\u533a\u95f4[7,9][1,3][5]</p> <p>\u6211\u4eec\u4f7f\u7528\u7ebf\u6bb5\u6811\u5feb\u901f\u6c42\u51fa\u8fd9\u4e9b\u533a\u95f4\u548c\u5373\u53ef\uff0c\u6ce8\u610f\uff0c\u5176\u4e2d\u7684[7,9][5]\u90fd\u662f\u4e00\u6bb5\u5b8c\u6574\u7684\u91cd\u94fe\uff0c\u6211\u4eec\u5728LCA\u65f6\u5df2\u7ecf\u77e5\u9053\u4e86\u5176l,r\uff0c\u76f4\u63a5\u7ebf\u6bb5\u6811\u5373\u53ef\uff0c\u4f46[1,3]\u4e0d\u662f\u4e00\u6bb5\u5b8c\u6574\u7684\u91cd\u94fe\u3002\u5e78\u597d\uff0c\u5728LCA\u7b97\u6cd5\u7ed3\u675f\u65f6\uff0cu=8\uff0cv=1\uff0c\u6620\u5c04\u540e\u5c31\u662f3\u548c1.\u56e0\u6b64\u5728LCA\u7ed3\u675f\u540e\u6211\u4eec\u8fd8\u9700\u8981\u628aans\u52a0\u4e0a\u8fd9\u4e00\u6761\u4e0d\u5b8c\u6574\u7684\u94fe</p> <pre><code>int query_lca(int u,int v){\n    ll res=0;\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);//\u4ea4\u6362,\u4f7f\u5f97u\u6240\u5728\u7684\u91cd\u94fetop\u6052\u6bd4v\u7684\u6df1 ,\u5373\u4fdd\u8bc1\u662f\u66f4\u6df1\u7684\u5728\u5f80\u4e0a\u8df3\u800c\u4e0d\u662f\u6d45\u7684\u4e00\u76f4\u5728\u5f80\u4e0a\u8df3 \n        res+=query(id[top[u]],id[u]);//\u6ce8\u610fid[top[u]]&lt;=id[u]\n        u=fa[top[u]];\n    }\n    if(dep[u]&gt;dep[v])swap(u,v);\n    res+=query(id[u],id[v])\n    return res;\n}\n</code></pre> <p>\u4fee\u6539</p> <p>\u76ee\u7684\uff1a\u5c06\u6811\u4e0a\u4ecex\u5230y\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u6bcf\u4e2a\u8282\u70b9\u90fd\u52a0\u4e0ak</p> <p>\u4ee3\u7801\u548c\u4e0a\u65b9<code>query_lca</code>\u57fa\u672c\u4e0a\u4e00\u6a21\u4e00\u6837\u3002\u6ce8\u610f\u8fd9\u91cc\u7701\u7565\u4e86**\u7ebf\u6bb5\u6811**\u76f8\u5173\u4ee3\u7801\u5982\uff1a</p> <ul> <li> <p><code>update()</code>\uff08<code>change()</code>\uff09</p> </li> <li> <p><code>query()</code></p> </li> <li> <p><code>pushdown()</code>\u61d2\u6807\u8bb0</p> </li> </ul> <p>\u8bf7\u81ea\u6211\u56de\u987e\uff01</p> <pre><code>void updt_lca(int u,int v,int k){\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);//\u4ea4\u6362,\u4f7f\u5f97u\u6240\u5728\u7684\u91cd\u94fetop\u6052\u6bd4v\u7684\u6df1 ,\u5373\u4fdd\u8bc1\u662f\u66f4\u6df1\u7684\u5728\u5f80\u4e0a\u8df3\u800c\u4e0d\u662f\u6d45\u7684\u4e00\u76f4\u5728\u5f80\u4e0a\u8df3 \n        update(1,id[top[u]],id[u],k);//\u6ce8\u610fid[top[u]]&lt;=id[u]\n        u=fa[top[u]];\n    }\n    if(dep[u]&gt;dep[v])swap(u,v);\n    update(1,id[u],id[v],k);\n    return ;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#1-noi2015","title":"\u4f8b\u9898 #1 [NOI2015] \u8f6f\u4ef6\u5305\u7ba1\u7406\u5668","text":"<p>\u9898\u76ee\u80cc\u666f</p> <p>Linux \u7528\u6237\u548c OSX \u7528\u6237\u4e00\u5b9a\u5bf9\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u4e0d\u4f1a\u964c\u751f\u3002\u901a\u8fc7\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e00\u884c\u547d\u4ee4\u5b89\u88c5\u67d0\u4e00\u4e2a\u8f6f\u4ef6\u5305\uff0c\u7136\u540e\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u4f1a\u5e2e\u52a9\u4f60\u4ece\u8f6f\u4ef6\u6e90\u4e0b\u8f7d\u8f6f\u4ef6\u5305\uff0c\u540c\u65f6\u81ea\u52a8\u89e3\u51b3\u6240\u6709\u7684\u4f9d\u8d56\uff08\u5373\u4e0b\u8f7d\u5b89\u88c5\u8fd9\u4e2a\u8f6f\u4ef6\u5305\u7684\u5b89\u88c5\u6240\u4f9d\u8d56\u7684\u5176\u5b83\u8f6f\u4ef6\u5305\uff09\uff0c\u5b8c\u6210\u6240\u6709\u7684\u914d\u7f6e\u3002Debian/Ubuntu \u4f7f\u7528\u7684 apt-get\uff0cFedora/CentOS \u4f7f\u7528\u7684 yum\uff0c\u4ee5\u53ca OSX \u4e0b\u53ef\u7528\u7684 homebrew \u90fd\u662f\u4f18\u79c0\u7684\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u3002</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u4f60\u51b3\u5b9a\u8bbe\u8ba1\u4f60\u81ea\u5df1\u7684\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u3002\u4e0d\u53ef\u907f\u514d\u5730\uff0c\u4f60\u8981\u89e3\u51b3\u8f6f\u4ef6\u5305\u4e4b\u95f4\u7684\u4f9d\u8d56\u95ee\u9898\u3002\u5982\u679c\u8f6f\u4ef6\u5305 \\(a\\) \u4f9d\u8d56\u8f6f\u4ef6\u5305 \\(b\\)\uff0c\u90a3\u4e48\u5b89\u88c5\u8f6f\u4ef6\u5305 \\(a\\) \u4ee5\u524d\uff0c\u5fc5\u987b\u5148\u5b89\u88c5\u8f6f\u4ef6\u5305 \\(b\\)\u3002\u540c\u65f6\uff0c\u5982\u679c\u60f3\u8981\u5378\u8f7d\u8f6f\u4ef6\u5305 \\(b\\)\uff0c\u5219\u5fc5\u987b\u5378\u8f7d\u8f6f\u4ef6\u5305 \\(a\\)\u3002</p> <p>\u73b0\u5728\u4f60\u5df2\u7ecf\u83b7\u5f97\u4e86\u6240\u6709\u7684\u8f6f\u4ef6\u5305\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u800c\u4e14\uff0c\u7531\u4e8e\u4f60\u4e4b\u524d\u7684\u5de5\u4f5c\uff0c\u9664 \\(0\\) \u53f7\u8f6f\u4ef6\u5305\u4ee5\u5916\uff0c\u5728\u4f60\u7684\u7ba1\u7406\u5668\u5f53\u4e2d\u7684\u8f6f\u4ef6\u5305\u90fd\u4f1a\u4f9d\u8d56\u4e00\u4e2a\u4e14\u4ec5\u4e00\u4e2a\u8f6f\u4ef6\u5305\uff0c\u800c \\(0\\) \u53f7\u8f6f\u4ef6\u5305\u4e0d\u4f9d\u8d56\u4efb\u4f55\u4e00\u4e2a\u8f6f\u4ef6\u5305\u3002\u4e14\u4f9d\u8d56\u5173\u7cfb\u4e0d\u5b58\u5728\u73af\uff08\u5373\u4e0d\u4f1a\u5b58\u5728 \\(m\\) \u4e2a\u8f6f\u4ef6\u5305 \\(a_1,a_2, \\dots , a_m\\)\uff0c\u5bf9\u4e8e \\(i&lt;m\\)\uff0c\\(a_i\\) \u4f9d\u8d56 \\(a_{i+1}\\)\uff0c\u800c \\(a_m\\) \u4f9d\u8d56 \\(a_1\\) \u7684\u60c5\u51b5\uff09\u3002</p> <p>\u73b0\u5728\u4f60\u8981\u4e3a\u4f60\u7684\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u5199\u4e00\u4e2a\u4f9d\u8d56\u89e3\u51b3\u7a0b\u5e8f\u3002\u6839\u636e\u53cd\u9988\uff0c\u7528\u6237\u5e0c\u671b\u5728\u5b89\u88c5\u548c\u5378\u8f7d\u67d0\u4e2a\u8f6f\u4ef6\u5305\u65f6\uff0c\u5feb\u901f\u5730\u77e5\u9053\u8fd9\u4e2a\u64cd\u4f5c\u5b9e\u9645\u4e0a\u4f1a\u6539\u53d8\u591a\u5c11\u4e2a\u8f6f\u4ef6\u5305\u7684\u5b89\u88c5\u72b6\u6001\uff08\u5373\u5b89\u88c5\u64cd\u4f5c\u4f1a\u5b89\u88c5\u591a\u5c11\u4e2a\u672a\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\uff0c\u6216\u5378\u8f7d\u64cd\u4f5c\u4f1a\u5378\u8f7d\u591a\u5c11\u4e2a\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\uff09\uff0c\u4f60\u7684\u4efb\u52a1\u5c31\u662f\u5b9e\u73b0\u8fd9\u4e2a\u90e8\u5206\u3002</p> <p>\u6ce8\u610f\uff0c\u5b89\u88c5\u4e00\u4e2a\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\uff0c\u6216\u5378\u8f7d\u4e00\u4e2a\u672a\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\uff0c\u90fd\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u8f6f\u4ef6\u5305\u7684\u5b89\u88c5\u72b6\u6001\uff0c\u5373\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u6539\u53d8\u5b89\u88c5\u72b6\u6001\u7684\u8f6f\u4ef6\u5305\u6570\u4e3a \\(0\\)\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#_6","title":"\u601d\u8def","text":"<p>\u8003\u8651\u66b4\u529b\uff0c\u5f88\u663e\u7136\u662f\u4e00\u68f5\u6811\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8f6f\u4ef6\u5305\u7684\u4f9d\u8d56\u5c31\u662f\u5176\u7236\u4eb2\u3002\u90a3\u4e48\u9996\u5148\u6211\u4eec\u77e5\u90530\u53f7\u8f6f\u4ef6\u662f\u6811\u6839\u3002\u6211\u4eec\u5148\u6309\u7167\u4f9d\u8d56\u5efa\u6811\uff0c\u7ed9\u6bcf\u4e2a\u8282\u70b9\u6807\u8bb0vis\u4e3a\u662f\u5426\u5b89\u88c5\u3002\u8d77\u521d\u96640\u4ee5\u5916\u7684\u70b9\u7684vis\u90fd\u662f0\u3002</p> <ul> <li> <p>\u5982\u679c\u6211\u4eec\u8981\u5b89\u88c5\u4e00\u4e2a\u8f6f\u4ef6v\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u4ecev\u52300\u7684\u8def\u5f84\u4e0avis\u4e3a0\u7684\u70b9\u6570\u3002</p> </li> <li> <p>\u5982\u679c\u6211\u4eec\u8981\u5378\u8f7d\u4e00\u4e2a\u8f6f\u4ef6v\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662fv\u7684\u5b50\u6811\u4e2d\u6240\u6709vis\u4e3a1\u7684\u70b9\u6570\u3002</p> </li> </ul> <p>\u5e76\u4e14\u5728\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u8bb0\u5f97\u66f4\u65b0\u88ab\u4fee\u6539\u70b9\u7684\u72b6\u6001\u3002</p> <p>\u9996\u5148\u6211\u4eec\u5728\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u5b50\u6811\u4e2d\u88ab\u9009\u4e2d\u7684\u70b9\u6570cnt\u3002\u90a3\u4e48\u5bf9\u4e8e\u5b89\u88c5\u6211\u4eec\u53ef\u4ee5O(\\log n)\u89e3\u51b3\uff0c\u5373\u5728\u5f80\u4e0a\u8d70\u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4vis\u548ccnt\u548cans\u3002</p> <p>\u95ee\u9898\u5728\u4e8e\u5bf9\u4e8e\u5378\u8f7d\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u628a\u4e00\u6761\u94fe\u4e0a\u7684cnt\u540c\u65f6\u51cf\u53bbv\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5e76\u4e14\u628av\u7684\u5b50\u6811\u5185\u8282\u70b9\u7684\u4fe1\u606f\u5168\u90e8\u7f6e0\u3002\u524d\u9762\u7684\u7b80\u5355\uff0c\u4f46\u662f\u540e\u9762\u7684\u6700\u52a3\u662fO(n)\u7684\u3002</p> <p>\u5bf9\u4e8e\u7ef4\u62a4\u7b54\u6848\uff0c\u5b89\u88c5\u64cd\u4f5c\u7684\u7b54\u6848\u5c31\u662f\u8def\u5f84\u4e0a0\u7684\u4e2a\u6570\uff0c\u5378\u8f7d\u64cd\u4f5c\u7684\u7b54\u6848\u5c31\u662f\u5b50\u6811\u4e2d1\u7684\u4e2a\u6570\u3002</p> <p>\u597d\u4e86\uff0c\u5230\u6b64\u4e3a\u6b62\uff0c\u5f88\u50cf\u6811\u5256\u7684\u677f\u5b50\u3002\u4f46\u662f\u6811\u5256\u662f\u533a\u95f4\u52a0\uff0c\u8fd9\u91cc\u662f\u533a\u95f4\u4fee\u6539\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u4e00\u4e9b\u4fee\u6539\u3002</p> <p>\u6811\u5256\u5c31\u662f\u628a\u6811\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u533a\u95f4\u7136\u540e\u7528\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u90a3\u4e48\u672c\u9898\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u8d4b\u503c\u533a\u95f4\u67e5\u8be2\u95ee\u9898\uff0c\u5c0f\u5c0f\u4fee\u6539\u4e00\u4e0baddtag\u51fd\u6570\u5373\u53ef\u3002</p> <p>\u6ce8\u610f\u70b9\u7f16\u53f7\u7684\u504f\u79fb\uff01</p> <p>acwing\uff1aTLE</p> <p>luogu\uff1aAC</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=5e5+5;\nconst int M=1e5;\nconst int INF=1e5;\n\nint n,m,p,q,r,T,s[N],ans;\n\nint sz[N],fa[N],dep[N],son[N],top[N];\nint w[N],nw[N],tail[N],id[N],Q,cnt;\nint du[N],rt;\nvector&lt;int&gt; e[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n    e[b].push_back(a);//\u8bb0\u5f97\u53cc\u5411\u8fb9 \n    du[b]++;\n}\n\nvoid dfs1(int u,int faa){//\u521d\u59cb\u503c1,0 \n    fa[u]=faa;dep[u]=dep[faa]/\u66f4\u65b0fa,dep,\u8bbe\u7f6esz\u521d\u59cb\u503c \n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[u][i];\n        if(v==faa)continue;\n        dfs1(v,u);//\u6ce8\u610f\u4e0d\u662fdfs1(v,faa) \n        sz[u]+=sz[v];//\u56de\u6eaf,sz[u]\u539f\u672c\u4e3a1 ,\u52a0\u4e0a\u5df2\u7ecf\u5904\u7406\u4e86v\u7684\u5b50\u6811\u5927\u5c0f\n        if(sz[v]&gt;sz[son[u]])son[u]=v;//\u66f4\u65b0\u91cd\u513f\u5b50,son[u]\u5b58\u5230\u662f\u4e4b\u524d\u5df2\u7ecf\u626b\u63cf\u8fc7\u7684u\u7684\u513f\u5b50\u4e2d\u6700\u91cd\u7684\u90a3\u4e2a,\u628a\u5b83\u7684sz\u4e0ev\u7684sz\u6bd4\u5bf9 \n    }   \n    return ;\n} \n\nvoid dfs2(int u,int t){\n    top[u]=t;id[u]=++cnt;nw[cnt]=w[u];\n    tail[u]=id[u];\n    if(!son[u])return;//\u6ca1\u6709\u91cd\u513f\u5b50,\u90a3\u4e48\u8bf4\u660eu\u4e3a\u53f6\u5b50\u8282\u70b9. \n    dfs2(son[u],t);//\u5148\u8d70\u91cd\u513f\u5b50,\u7ee7\u627fu\u7684top(\u5373t) \n    tail[u]=max(id[u],tail[son[u]]);\n    for(int i=0;i&lt;e[u].size();i++){//\u626b\u63cf\u8f7b\u513f\u5b50 \n        int v=e[u][i];\n        if(v==fa[u]||v==son[u])continue;//\u7b5b\u9009 \n        dfs2(v,v);//\u8f7b\u513f\u5b50\u4e0d\u80fd\u7ee7\u627ft,\u53ea\u80fd\u5f00\u4e00\u6761\u65b0\u7684\u91cd\u94fe \n        tail[u]=max(id[u],tail[v]);//\u8bb0\u5f55\u5b50\u6811\u533a\u95f4 \n    }\n    return ;\n}\n\n//SGT\nstruct tree{\n    int l,r;//\u5de6\u53f3\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\n    int add,sum;//\u6807\u8bb0\u4e0e\u533a\u95f4\u548c\n}tr[N&lt;&lt;2];\n\nvoid pushup(int u){\n    tr[u].sum=(tr[u*2].sum+tr[u*2+1].sum);\n}\n\nvoid addtag(int x,int tg){\n    tr[x].add=tg;\n    tr[x].sum=tg*(tr[x].r-tr[x].l+1);\n}\n\nvoid pushdown(int x){\n    if(-1!=tr[x].add){\n        addtag(x&lt;&lt;1,tr[x].add);\n        addtag(x&lt;&lt;1|1,tr[x].add);\n        tr[x].add=-1;\n    }\n}\n\nvoid build(int u,int l,int r){\n    // if(l&gt;r)return ;\n    cerr&lt;&lt;u&lt;&lt;' ';\n    tr[u]={l,r,-1,0};\n    if(l==r){\n        // tr[u]={l,r,-1,nw[r]};\n        return ;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(u*2,l,mid);\n    build(u*2+1,mid+1,r);\n    pushup(u);//\u56de\u6eaf\u65f6\u66f4\u65b0\n}\n\n\nvoid update(int x,int pl,int pr,int k){\n    if(tr[x].l&gt;=pl&amp;&amp;tr[x].r&lt;=pr){\n        addtag(x,k);\n        return ;\n    }\n    if(tr[x].l&gt;pr||tr[x].r&lt;pl)return ;\n\n    pushdown(x);\n    int mid=tr[x].l+tr[x].r&gt;&gt;1;\n    if(pl&lt;=mid)update(x&lt;&lt;1,pl,pr,k);\n    if(pr&gt;mid)update(x&lt;&lt;1|1,pl,pr,k);\n\n    pushup(x);\n}\n\nint query(int x,int pl,int pr){\n    if(tr[x].l&gt;=pl&amp;&amp;tr[x].r&lt;=pr){\n        return tr[x].sum;\n    }\n\n\n    if(tr[x].l&gt;pr||tr[x].r&lt;pl)return 0;\n\n    pushdown(x);\n    int res=0;\n    int mid=tr[x].l+tr[x].r&gt;&gt;1;\n    if(pl&lt;=mid)res+=query(x&lt;&lt;1,pl,pr);\n    if(pr&gt;mid)res+=query(x&lt;&lt;1|1,pl,pr);\n\n    return res;\n}\n\n//spou\nint query_road(int u,int v){\n    int res=0;\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);//\u4ea4\u6362,\u4f7f\u5f97u\u6240\u5728\u7684\u91cd\u94fetop\u6052\u6bd4v\u7684\u6df1 ,\u5373\u4fdd\u8bc1\u662f\u66f4\u6df1\u7684\u5728\u5f80\u4e0a\u8df3\u800c\u4e0d\u662f\u6d45\u7684\u4e00\u76f4\u5728\u5f80\u4e0a\u8df3 \n        res+=query(1,id[top[u]],id[u]);//\u6ce8\u610fid[top[u]]&lt;=id[u]\n        u=fa[top[u]];\n    }\n    if(dep[u]&gt;dep[v])swap(u,v);\n    res+=query(1,id[u],id[v]);\n    return res;\n}\n\nvoid updt_road(int u,int v,int k){\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);//\u4ea4\u6362,\u4f7f\u5f97u\u6240\u5728\u7684\u91cd\u94fetop\u6052\u6bd4v\u7684\u6df1 ,\u5373\u4fdd\u8bc1\u662f\u66f4\u6df1\u7684\u5728\u5f80\u4e0a\u8df3\u800c\u4e0d\u662f\u6d45\u7684\u4e00\u76f4\u5728\u5f80\u4e0a\u8df3 \n        update(1,id[top[u]],id[u],k);//\u6ce8\u610fid[top[u]]&lt;=id[u]\n        u=fa[top[u]];\n    }\n    if(dep[u]&gt;dep[v])swap(u,v);\n    update(1,id[u],id[v],k);\n    return ;\n}\n\n\nsigned main(){\n\n    ios::sync_with_stdio(false);\n    cin.tie(0),cout.tie(0);//\u9632\u6b62tle\n\n    cin&gt;&gt;n;\n    rt=1;\n\n\n    for(int i=1;i&lt;n;i++){\n        int a;\n        cin&gt;&gt;a;\n        add(a+1,i+1);\n    }\n\n    dfs1(rt,0);\n    dfs2(rt,rt);\n\n    build(1,1,n);\n\n    cin&gt;&gt;m;\n\n    while(m--){\n        int x,y,z;\n        string op;\n        cin&gt;&gt;op&gt;&gt;x;\n        x++;//\u6ce8\u610f\u70b9\u7684\u504f\u79fb\uff01\uff01\n        if(op==\"install\"){\n            cout&lt;&lt;dep[x]-query_road(1,x)&lt;&lt;endl;\n            updt_road(1,x,1);\n        }else{\n            cout&lt;&lt;query(1,id[x],tail[x])&lt;&lt;endl;\n            update(1,id[x],tail[x],0);\n        }\n\n    }\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#2","title":"\u4f8b\u9898 #2\u3010\u6a21\u677f\u3011\u91cd\u94fe\u5256\u5206/\u6811\u94fe\u5256\u5206","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5982\u9898\uff0c\u5df2\u77e5\u4e00\u68f5\u5305\u542b \\(N\\) \u4e2a\u7ed3\u70b9\u7684\u6811\uff08\u8fde\u901a\u4e14\u65e0\u73af\uff09\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5305\u542b\u4e00\u4e2a\u6570\u503c\uff0c\u9700\u8981\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li> <p><code>1 x y z</code>\uff0c\u8868\u793a\u5c06\u6811\u4ece \\(x\\) \u5230 \\(y\\) \u7ed3\u70b9\u6700\u77ed\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u52a0\u4e0a \\(z\\)\u3002</p> </li> <li> <p><code>2 x y</code>\uff0c\u8868\u793a\u6c42\u6811\u4ece \\(x\\) \u5230 \\(y\\) \u7ed3\u70b9\u6700\u77ed\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u503c\u4e4b\u548c\u3002</p> </li> <li> <p><code>3 x z</code>\uff0c\u8868\u793a\u5c06\u4ee5 \\(x\\) \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u503c\u90fd\u52a0\u4e0a \\(z\\)\u3002</p> </li> <li> <p><code>4 x</code> \u8868\u793a\u6c42\u4ee5 \\(x\\) \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u503c\u4e4b\u548c</p> </li> </ul>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#_7","title":"\u4ee3\u7801","text":"<pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e5+5;\nconst int M=1e5;\nint MOD;\nconst int INF=1e5;\n\nint n,m,p,q,r,T,s[N],ans;\n\nint sz[N],fa[N],dep[N],son[N],top[N];\nint w[N],nw[N],tail[N],id[N],Q,cnt;\nint du[N],rt;\nvector&lt;int&gt; e[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n    e[b].push_back(a);//\u8bb0\u5f97\u53cc\u5411\u8fb9 \n    du[b]++;\n}\n\nvoid dfs1(int u,int faa){//\u521d\u59cb\u503c1,0 \n    fa[u]=faa;dep[u]=dep[faa]/\u66f4\u65b0fa,dep,\u8bbe\u7f6esz\u521d\u59cb\u503c \n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[u][i];\n        if(v==faa)continue;\n        dfs1(v,u);//\u6ce8\u610f\u4e0d\u662fdfs1(v,faa) \n        sz[u]+=sz[v];//\u56de\u6eaf,sz[u]\u539f\u672c\u4e3a1 ,\u52a0\u4e0a\u5df2\u7ecf\u5904\u7406\u4e86v\u7684\u5b50\u6811\u5927\u5c0f\n        if(sz[v]&gt;sz[son[u]])son[u]=v;//\u66f4\u65b0\u91cd\u513f\u5b50,son[u]\u5b58\u5230\u662f\u4e4b\u524d\u5df2\u7ecf\u626b\u63cf\u8fc7\u7684u\u7684\u513f\u5b50\u4e2d\u6700\u91cd\u7684\u90a3\u4e2a,\u628a\u5b83\u7684sz\u4e0ev\u7684sz\u6bd4\u5bf9 \n    }   \n    return ;\n} \n\nvoid dfs2(int u,int t){\n    top[u]=t;id[u]=++cnt;nw[cnt]=w[u];\n    tail[u]=id[u];\n    if(!son[u])return;//\u6ca1\u6709\u91cd\u513f\u5b50,\u90a3\u4e48\u8bf4\u660eu\u4e3a\u53f6\u5b50\u8282\u70b9. \n    dfs2(son[u],t);//\u5148\u8d70\u91cd\u513f\u5b50,\u7ee7\u627fu\u7684top(\u5373t) \n    tail[u]=max(id[u],tail[son[u]]);\n    for(int i=0;i&lt;e[u].size();i++){//\u626b\u63cf\u8f7b\u513f\u5b50 \n        int v=e[u][i];\n        if(v==fa[u]||v==son[u])continue;//\u7b5b\u9009 \n        dfs2(v,v);//\u8f7b\u513f\u5b50\u4e0d\u80fd\u7ee7\u627ft,\u53ea\u80fd\u5f00\u4e00\u6761\u65b0\u7684\u91cd\u94fe \n        tail[u]=max(id[u],tail[v]);//\u8bb0\u5f55\u5b50\u6811\u533a\u95f4 \n    }\n    return ;\n}\n\n//SGT\nstruct tree{\n    int l,r;//\u5de6\u53f3\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\n    int add,sum;//\u6807\u8bb0\u4e0e\u533a\u95f4\u548c\n}tr[N&lt;&lt;2];\n\nvoid pushup(int u){\n    tr[u].sum=(tr[u*2].sum+tr[u*2+1].sum)%MOD;\n}\n\nvoid addtag(int x,int tg){\n    tr[x].add+=tg;\n    tr[x].add%=MOD;\n    tr[x].sum+=tg*(tr[x].r-tr[x].l+1);\n    tr[x].sum%=MOD;\n}\n\nvoid pushdown(int x){\n    if(tr[x].add){\n        addtag(x&lt;&lt;1,tr[x].add);\n        addtag(x&lt;&lt;1|1,tr[x].add);\n        tr[x].add=0;\n    }\n}\n\nvoid build(int u,int l,int r){\n    tr[u]={l,r,0,0};\n    if(l==r){\n        tr[u]={l,r,0,nw[r]};return ;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(u*2,l,mid);\n    build(u*2+1,mid+1,r);\n    pushup(u);//\u56de\u6eaf\u65f6\u66f4\u65b0\n}\n\n\nvoid update(int x,int pl,int pr,int k){\n    if(tr[x].l&gt;=pl&amp;&amp;tr[x].r&lt;=pr){\n        addtag(x,k);\n        return ;\n    }\n    if(tr[x].l&gt;pr||tr[x].r&lt;pl)return ;\n\n    pushdown(x);\n    int mid=tr[x].l+tr[x].r&gt;&gt;1;\n    if(pl&lt;=mid)update(x&lt;&lt;1,pl,pr,k);\n    if(pr&gt;mid)update(x&lt;&lt;1|1,pl,pr,k);\n\n    pushup(x);\n}\n\nint query(int x,int pl,int pr){\n    if(tr[x].l&gt;=pl&amp;&amp;tr[x].r&lt;=pr){\n        return tr[x].sum;\n    }\n\n\n    if(tr[x].l&gt;pr||tr[x].r&lt;pl)return 0;\n\n    pushdown(x);\n    int res=0;\n    int mid=tr[x].l+tr[x].r&gt;&gt;1;\n    if(pl&lt;=mid)res+=query(x&lt;&lt;1,pl,pr);\n    res%=MOD;\n    if(pr&gt;mid)res+=query(x&lt;&lt;1|1,pl,pr);\n    res%=MOD;\n\n    return res;\n}\n\n//spou\nint query_road(int u,int v){\n    int res=0;\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);//\u4ea4\u6362,\u4f7f\u5f97u\u6240\u5728\u7684\u91cd\u94fetop\u6052\u6bd4v\u7684\u6df1 ,\u5373\u4fdd\u8bc1\u662f\u66f4\u6df1\u7684\u5728\u5f80\u4e0a\u8df3\u800c\u4e0d\u662f\u6d45\u7684\u4e00\u76f4\u5728\u5f80\u4e0a\u8df3 \n        res+=query(1,id[top[u]],id[u]);//\u6ce8\u610fid[top[u]]&lt;=id[u]\n        u=fa[top[u]];\n    }\n    if(dep[u]&gt;dep[v])swap(u,v);\n    res+=query(1,id[u],id[v]);\n    res%=MOD;\n    return res;\n}\n\nvoid updt_road(int u,int v,int k){\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);//\u4ea4\u6362,\u4f7f\u5f97u\u6240\u5728\u7684\u91cd\u94fetop\u6052\u6bd4v\u7684\u6df1 ,\u5373\u4fdd\u8bc1\u662f\u66f4\u6df1\u7684\u5728\u5f80\u4e0a\u8df3\u800c\u4e0d\u662f\u6d45\u7684\u4e00\u76f4\u5728\u5f80\u4e0a\u8df3 \n        update(1,id[top[u]],id[u],k);//\u6ce8\u610fid[top[u]]&lt;=id[u]\n        u=fa[top[u]];\n    }\n    if(dep[u]&gt;dep[v])swap(u,v);\n    update(1,id[u],id[v],k);\n    return ;\n}\n\n//debug\n\nvoid debug(){\n//  cerr&lt;&lt;\"\\ndebug = \";\n//  for(int i=1;i&lt;=n;i++){\n//      cerr&lt;&lt;query(1,id[i],id[i])&lt;&lt;' ';\n//  }\n//  cerr&lt;&lt;\"debug end\\n\";\n//  \n//  cerr&lt;&lt;\"node v=\";\n//  for(int i=1;i&lt;=n;i++)cerr&lt;&lt;nw[id[i]]&lt;&lt;' ';\n//  cerr&lt;&lt;\"node v end\\n\";\n}\n\n\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;rt&gt;&gt;MOD;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;w[i];\n    }\n\n    for(int i=1;i&lt;n;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        add(a,b);\n    }\n\n//  for(int i=1;i&lt;=n;i++){\n//      if(!du[i]){\n//          rt=i;break;//\u627e\u6839 \n//      }\n//  }\n\n    dfs1(rt,0);\n    dfs2(rt,rt);\n\n//  cerr&lt;&lt;\"sz[]=\";\n//  for(int i=1;i&lt;=n;i++)cerr&lt;&lt;sz[i]&lt;&lt;' ';\n//  cerr&lt;&lt;\"sz[] endl\\n\"; \n\n//  cerr&lt;&lt;\"rt= \"&lt;&lt;rt&lt;&lt;endl;\n\n//  for(int i=1;i&lt;=n;i++)cerr&lt;&lt;\"node \"&lt;&lt;i&lt;&lt;\" 's id = \"&lt;&lt;id[i]&lt;&lt;\" tail = \"&lt;&lt;tail[i]&lt;&lt;endl;\n\n\n//  cerr&lt;&lt;\"start building...\\n\";\n\n    build(1,1,n);\n\n//  cerr&lt;&lt;\"build finish\\ninit \";\n    debug();\n\n    while(m--){\n        int op,x,y,z;\n        cin&gt;&gt;op&gt;&gt;x;\n        if(op==1){\n            cin&gt;&gt;y&gt;&gt;z;\n            updt_road(x,y,z);\n        }if(op==2){\n            cin&gt;&gt;y;\n            cout&lt;&lt;query_road(x,y)%MOD&lt;&lt;endl;\n        }if(op==3){\n            cin&gt;&gt;z;\n            update(1,id[x],tail[x],z);\n\n        }if(op==4){\n            cout&lt;&lt;query(1,id[x],tail[x])%MOD&lt;&lt;endl;\n        }\n\n        debug();\n    }\n\n    return 0;\n}\n</code></pre> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff1a \\(1\\le N \\leq {10}^5\\)\uff0c\\(1\\le M \\leq {10}^5\\)\uff0c\\(1\\le R\\le N\\)\uff0c\\(1\\le P \\le 2^{31}-1\\)\u3002\u6240\u6709\u8f93\u5165\u7684\u6570\u5747\u5728 <code>int</code> \u8303\u56f4\u5185\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#3-zjoi2008","title":"\u4f8b\u9898 #3 [ZJOI2008] \u6811\u7684\u7edf\u8ba1","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u4e00\u68f5\u6811\u4e0a\u6709 \\(n\\) \u4e2a\u8282\u70b9\uff0c\u7f16\u53f7\u5206\u522b\u4e3a \\(1\\) \u5230 \\(n\\)\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u6743\u503c \\(w\\)\u3002</p> <p>\u6211\u4eec\u5c06\u4ee5\u4e0b\u9762\u7684\u5f62\u5f0f\u6765\u8981\u6c42\u4f60\u5bf9\u8fd9\u68f5\u6811\u5b8c\u6210\u4e00\u4e9b\u64cd\u4f5c\uff1a</p> <p>I. <code>CHANGE u t</code> : \u628a\u7ed3\u70b9 \\(u\\) \u7684\u6743\u503c\u6539\u4e3a \\(t\\)\u3002</p> <p>II. <code>QMAX u v</code>: \u8be2\u95ee\u4ece\u70b9 \\(u\\) \u5230\u70b9 \\(v\\) \u7684\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u7684\u6700\u5927\u6743\u503c\u3002</p> <p>III. <code>QSUM u v</code>: \u8be2\u95ee\u4ece\u70b9 \\(u\\) \u5230\u70b9 \\(v\\) \u7684\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u7684\u6743\u503c\u548c\u3002</p> <p>\u6ce8\u610f\uff1a\u4ece\u70b9 \\(u\\) \u5230\u70b9 \\(v\\) \u7684\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u5305\u62ec \\(u\\) \u548c \\(v\\) \u672c\u8eab\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#_8","title":"\u601d\u8def","text":"<p>\u88f8\u7684\u6a21\u677f\u8036\uff01</p> <p>\u5982\u679c\u6ca1\u6709\u64cd\u4f5cII\uff0c\u90a3\u4e48\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u7528\u6b27\u62c9\u5e8f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6b27\u62c9\u5e8f\u7684\u505a\u6cd5\u5982\u4e0b\uff1a</p> <p>\u53c2\u8003COT2 - Count on a tree II \u5b66\u4e60\u7b14\u8bb0 | \u83ab\u961f</p> <p>\u5927\u6982\u5c31\u662f\u5148\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6b27\u62c9\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9</p> <p>\u5176\u6743\u503c\u4e3av\uff0c\u5c31\u5728\u7b2c\u4e00\u4e2a\u6b27\u62c9\u5e8f\u5904\u5c06\u5176\u5206\u6cbb\u4e3av\uff0c\u7b2c\u4e8c\u4e2a\u5219\u8d4b\u503c\u4e3a-v\u3002\u8fd9\u6837\u6c42x-y\u8def\u5f84\u548c\u5c31\u662f\u6c42x\u5165\u5230y\u5165\u7684\u533a\u95f4\u548c</p> <pre><code>/*\nCB Ntsc111\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define ull unsigned int\n#define pii pair&lt;int, int&gt;\n#define pf to\n#define ps second\n#define pb push_back\n#define int long long\n\n#define err cerr &lt;&lt; \"Error\"\n#define rd read()\n\n#define ot write\n#define nl putchar('\\n')\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int INF = 1e9;\nconst int N = 2000005;\n\n#define N 100005\n#define inf 1000000000\nusing namespace std;\nint n, q, a[4 * N];\nstruct Edge {\n  int u, v, next;\n} G[N];\nint tot = 0, head[N];\nint sz[100005], wson[100005], fa[100005], d[100005], top[100005];\nint tpos[100005], pre[100005], cnt = 0;\ninline void add(int u, int v) {\n  G[++tot].u = u;\n  G[tot].v = v;\n  G[tot].next = head[u];\n  head[u] = tot;\n  G[++tot].u = v;\n  G[tot].v = u;\n  G[tot].next = head[v];\n  head[v] = tot;\n}\nvoid dfs1(int u, int f) {\n  sz[u] = 1;\n  for (int i = head[u]; i; i = G[i].next) {\n    int v = G[i].v;\n    if (v == f)\n      continue;\n    d[v] = d[u] + 1;\n    fa[v] = u;\n    dfs1(v, u);\n    sz[u] += sz[v];\n    if (sz[v] &gt; sz[wson[u]])\n      wson[u] = v;\n  }\n}\nvoid dfs2(int u, int TP) {\n  tpos[u] = ++cnt;\n  pre[cnt] = u;\n  top[u] = TP;\n  if (wson[u])\n    dfs2(wson[u], TP);\n  for (int i = head[u]; i; i = G[i].next) {\n    int v = G[i].v;\n    if (v == fa[u] || v == wson[u])\n      continue;\n    dfs2(v, v);\n  }\n}\nint sum[4 * N], mx[4 * N];\ninline void pushup(int x) {\n  sum[x] = sum[x * 2] + sum[x * 2 + 1];\n  mx[x] = max(mx[x * 2], mx[x * 2 + 1]);\n}\nvoid build(int x, int l, int r) {\n  int mid = (l + r) / 2;\n  if (l == r) {\n    sum[x] = mx[x] = a[pre[l]];\n    return;\n  }\n  build(x * 2, l, mid);\n  build(x * 2 + 1, mid + 1, r);\n  pushup(x);\n}\nvoid update(int x, int l, int r, int q, int v) {\n  int mid = (l + r) / 2;\n  if (l == r) {\n    sum[x] = mx[x] = v;\n    return;\n  }\n  if (q &lt;= mid)\n    update(x * 2, l, mid, q, v);\n  else\n    update(x * 2 + 1, mid + 1, r, q, v);\n  pushup(x);\n}\nint querysum(int x, int l, int r, int ql, int qr) {\n  int mid = (l + r) / 2, ans = 0;\n  if (ql &lt;= l &amp;&amp; r &lt;= qr)\n    return sum[x];\n  if (ql &lt;= mid)\n    ans += querysum(x * 2, l, mid, ql, qr);\n  if (qr &gt; mid)\n    ans += querysum(x * 2 + 1, mid + 1, r, ql, qr);\n  pushup(x);\n  return ans;\n}\nint querymax(int x, int l, int r, int ql, int qr) {\n  int mid = (l + r) / 2, ans = -inf;\n  if (ql &lt;= l &amp;&amp; r &lt;= qr)\n    return mx[x];\n  if (ql &lt;= mid)\n    ans = max(ans, querymax(x * 2, l, mid, ql, qr));\n  if (qr &gt; mid)\n    ans = max(ans, querymax(x * 2 + 1, mid + 1, r, ql, qr));\n  pushup(x);\n  return ans;\n}\nint Querysum(int u, int v) {\n  int ans = 0;\n  while (top[u] != top[v]) {\n    if (d[top[u]] &lt; d[top[v]])\n      swap(u, v);\n    ans += querysum(1, 1, n, tpos[top[u]], tpos[u]);\n    u = fa[top[u]];\n  }\n  if (d[u] &lt; d[v])\n    swap(u, v);\n  ans += querysum(1, 1, n, tpos[v], tpos[u]);\n  return ans;\n}\nint Querymax(int u, int v) {\n  int ans = -inf;\n  while (top[u] != top[v]) {\n    if (d[top[u]] &lt; d[top[v]])\n      swap(u, v);\n    ans = max(ans, querymax(1, 1, n, tpos[top[u]], tpos[u]));\n    u = fa[top[u]];\n  }\n  if (d[u] &lt; d[v])\n    swap(u, v);\n  ans = max(ans, querymax(1, 1, n, tpos[v], tpos[u]));\n  return ans;\n}\nsigned main() {\n  n = rd;\n  for (int i = 1; i &lt; n; i++) {\n    int u = rd, v = rd;\n    add(u, v);\n  }\n  for (int i = 1; i &lt;= n; i++)\n    a[i] = rd;\n  d[1] = 1;\n  fa[1] = 1;\n  dfs1(1, -1);\n  dfs2(1, 1);\n  build(1, 1, n);\n  q = rd;\n  while (q--) {\n    char s[10];\n    scanf(\"%s\", s);\n    int x = rd, y = rd;\n    if (s[1] == 'H')\n      update(1, 1, n, tpos[x], y);\n    if (s[1] == 'M')\n      printf(\"%lld\\n\", Querymax(x, y));\n    if (s[1] == 'S')\n      printf(\"%lld\\n\", Querysum(x, y));\n  }\n  return 0;\n}\n</code></pre> <p>\u5bf9\u4e8e \\(100 \\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(1\\le n \\le 3\\times 10^4\\)\uff0c\\(0\\le q\\le 2\\times 10^5\\)\u3002</p> <p>\u4e2d\u9014\u64cd\u4f5c\u4e2d\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u7684\u6743\u503c \\(w\\) \u5728 \\(-3\\times 10^4\\) \u5230 \\(3\\times 10^4\\) \u4e4b\u95f4\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#_9","title":"\u957f\u94fe\u5256\u5206","text":"<p>\u8bf7\u5148\u56de\u987e\u91cd\u94fe\u5256\u5206\u52a8\u6001\u6811\uff08LCT\uff09</p> <p></p> <p>\u90a3\u4e48\u4ec0\u4e48\u662f\u957f\u94fe\u5256\u5206\u5462\uff1f \u5bf9\u5e94\u5730\uff0c\u6211\u4eec\u5b9a\u4e49\uff1a</p> <ul> <li> <p>\u957f\u513f\u5b50\uff1a\u7236\u7ed3\u70b9\u7684\u6240\u6709\u513f\u5b50\u4e2d\u5b50\u6811\u6700\u5927\u6df1\u5ea6\u6700\u6df1\u7684\u7ed3\u70b9\uff08\u5982\u679c\u6709\u591a\u4e2a\u5219\u53ea\u9009\u62e9\u7b2c\u4e00\u4e2a\uff09</p> </li> <li> <p>\u94fe\u9876\u4e3a\u8fd9\u6761\u94fe\u6df1\u5ea6\u6700\u5927\u7684\u8282\u70b9\uff08\uff1f</p> </li> <li> <p>\u94fe\u5e95\u4e3a\u8fd9\u6761\u94fe\u6df1\u5ea6\u6700\u5c0f\u7684\u8282\u70b9\uff08\uff1f</p> </li> <li> <p>\u5176\u5b83\u5b9a\u4e49\u7c7b\u4f3c\u6216\u76f8\u540c\u3002</p> </li> </ul> <p>\u90a3\u4e48\u65e2\u7136\u6211\u4eec\u8981\u6c42k\u7ea7\u7956\u5148\uff0c\u90a3\u4e48\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7684\u8f83\u4f18\u7684\u7b97\u6cd5\u662f\u500d\u589e\u6cd5\u3002\u6216\u8005\u6211\u4eec\u727a\u7272\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u6765\u505a\u5230O(1)\u67e5\u8be2\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#1-k","title":"\u4f8b\u9898 #1 \u6811\u4e0a K \u7ea7\u7956\u5148","text":"<p>\u7ed9\u5b9a\u4e00\u68f5 \\(n\\) \u4e2a\u70b9\u7684\u6709\u6839\u6811\u3002</p> <p>\u6709 \\(q\\) \u6b21\u8be2\u95ee\uff0c\u7b2c \\(i\\) \u6b21\u8be2\u95ee\u7ed9\u5b9a \\(x_i, k_i\\)\uff0c\u8981\u6c42\u70b9 \\(x_i\\) \u7684 \\(k_i\\) \u7ea7\u7956\u5148\uff0c\u7b54\u6848\u4e3a \\(ans_i\\)\u3002\u7279\u522b\u5730\uff0c\\(ans_0 = 0\\)\u3002</p> <p>\u672c\u9898\u4e2d\u7684\u8be2\u95ee\u5c06\u5728\u7a0b\u5e8f\u5185\u751f\u6210\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u968f\u673a\u79cd\u5b50 \\(s\\) \u548c\u4e00\u4e2a\u968f\u673a\u51fd\u6570 \\(\\operatorname{get}(x)\\)\uff1a</p> <pre><code>#define ui unsigned int\nui s;\n\ninline ui get(ui x) {\n    x ^= x &lt;&lt; 13;\n    x ^= x &gt;&gt; 17;\n    x ^= x &lt;&lt; 5;\n    return s = x; \n}\n</code></pre> <p>\u4f60\u9700\u8981\u6309\u987a\u5e8f\u4f9d\u6b21\u751f\u6210\u8be2\u95ee\u3002</p> <p>\u8bbe \\(d_i\\) \u4e3a\u70b9 \\(i\\) \u7684\u6df1\u5ea6\uff0c\u5176\u4e2d\u6839\u7684\u6df1\u5ea6\u4e3a \\(1\\)\u3002</p> <p>\u5bf9\u4e8e\u7b2c \\(i\\) \u6b21\u8be2\u95ee\uff0c\\(x_i = ((\\operatorname{get}(s) \\operatorname{xor} ans_{i-1}) \\bmod n) + 1\\)\uff0c\\(k_i = (\\operatorname{get}(s) \\operatorname{xor} ans_{i-1}) \\bmod d_{x_i}\\)\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(2 \\le n \\le 5 \\times 10^5\\)\uff0c\\(1 \\le q \\le 5 \\times 10^6\\)\uff0c\\(1 \\le s &lt; 2^{32}\\)\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/#_10","title":"\u957f\u94fe\u5256\u5206\u89e3\u51b3","text":"<p>\u9996\u5148\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u6027\u8d28\uff1a\u4efb\u610f\u4e00\u4e2a\u70b9\u7684k\u7ea7\u7956\u5148\u6240\u5728\u94fe\u7684\u94fe\u957f\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8ek\u3002\u7ed3\u5408\u957f\u94fe\u7684\u6027\u8d28\u6613\u8bc1\u3002</p> <p>\u6211\u4eec\u5148\u500d\u589e\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\\(2^t\\)\u7ea7\u7956\u5148\u3002</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u6761\u94fe\u5904\u7406\u3002\u5982\u679c\u94fe\u957f\u662f\\(len\\)\uff0c\u90a3\u4e48\u5728\u94fe\u5934\u5904\u8bb0\u5f55\u94fe\u5934\u5411\u4e0a\u7684\\(len\\)\u4e2a\u7956\u5148\uff0c\u5e76\u8bb0\u5f55\u5411\u4e0b\u7684\\(len\\)\u4e2a\u5728\u94fe\u5185\u7684\u8282\u70b9\u3002</p> <p>\u5047\u8bbe\u6211\u8981\u67e5\u8be2\\(u\\)\u7684\\(k\\)\u7ea7\u7956\u5148\\(v\\)\uff0c\u90a3\u4e48\u6211\u5148\u8df3\u5230\u5176\\(2^{\u230alog_2\u200bk\u230b}\\)\u7ea7\u7956\u5148\\(v'\\)\u5904\u3002\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u8fd8\u9700\u8981\u5f80\u4e0a\u8df3\\(k'=k-2^{\u230alog_2\u200bk\u230b}\\)\u5c42\u3002</p> <p>\u7531\u6027\u8d28\u5f97\uff0c\\(u\\)\u7684\\(2^{\u230alog_2\u200bk\u230b}\\)\u7ea7\u7956\u5148\uff08\u5373\\(v'\\)\uff09\u6240\u5728\u94fe\u7684\u94fe\u957f\\(len\\)\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\\(2^{\u230alog_2\u200bk\u230b}\\)\uff0c\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u9884\u5904\u7406\u51fa\u4e86\\(v'\\)\u6240\u5728\u7684\u94fe\u7684\u94fe\u5934\\(t\\)\u4e0a\u4e0b\u7684\\(len\\)\u4e2a\u8282\u70b9\u3002</p> <p>\u6211\u4eec\u53c8\u77e5\u9053\\(k'&lt;2^{\u230alog_2\u200bk\u230b}\\)\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u5df2\u7ecf\u5904\u7406\u51fa\u4e86\\(v'\\)\u4e0a\u7b2c\\(k'\\)\u4e2a\u8282\u70b9\uff08\u6211\u4eec\u8bb0\\(l=dep(t)-dep(v')\\)\uff0c\u5982\u679c\\(l&lt;k'\\)\uff0c\u90a3\u4e48\u6211\u4eec\u8bbf\u95ee\\(t\\)\u5411\u4e0a\u7684\\(k'-l\\)\u4e2a\u8282\u70b9\uff0c\u5426\u5219\u6211\u4eec\u5c31\u8bbf\u95ee\\(t\\)\u5411\u4e0b\\(l-k'\\)\u4e2a\u8282\u70b9\uff09\uff0c\u76f4\u63a5\u8bbf\u95ee\u5373\u53ef\u3002</p> <p>\u90e8\u5206\u6570\u7ec4\u89e3\u91ca</p> <pre><code>int dep[N], fa[N][22];//\u70b9\u7684\u6df1\u5ea6\uff0c\u7236\u4eb2\nint mxdp[N];//\u70b9\u6240\u5728\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6\nint son[N],top[N];//\u70b9\u7684\u957f\u513f\u5b50\uff0c\u70b9\u6240\u5728\u94fe\u7684\u94fe\u5934\nvector&lt;int&gt; up[N],down[N];//\u6bcf\u4e2a\u70b9\u5411\u4e0a/\u4e0b\u7b2ci\u70b9\u7684\u7f16\u53f7\n</code></pre> <p>\u4ee3\u7801</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n#include &lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\n#define pb push_back\nusing namespace std;\n\nconst int N = 5e5 + 5;\nconst int M = 1e5;\nconst int Mod = 1e5;\nconst int INF = 1e5;\nvector&lt;int&gt; e[N];\nint n, m, sum, ans1, dep[N], fa[N][22], k, tmp, ans2;\n\nint mxdp[N],son[N],top[N],lg[N],q,lstans;\nll ans;\nvector&lt;int&gt; up[N],down[N];\n\nint rt;\n#define ui unsigned int\nui s;\n\ninline ui get(ui x) {\n    x ^= x &lt;&lt; 13;\n    x ^= x &gt;&gt; 17;\n    x ^= x &lt;&lt; 5;\n    return s = x; \n}\n\n\nvoid add(int a, int b) { e[a].push_back(b); }\n\nvoid dfs1(int u) {  //\u6c42\u6df1\u5ea6\n    for (int i = 1;i&lt;20; i++) fa[u][i] = fa[fa[u][i - 1]][i - 1];  // att!\n    mxdp[u]=dep[u] = dep[fa[u][0]] + 1;\n\n    for (auto v:e[u]) {\n        fa[v][0] = u;\n        dfs1(v);\n        if(mxdp[u]&lt;mxdp[v]){\n            son[u]=v;//\u66f4\u65b0\u957f\u513f\u5b50 \n            mxdp[u]=mxdp[v];\n        }\n\n    }\n}\nvoid dfs2(int u, int tfa) {  //\u6c42down,up,top\n\n\n    top[u]=tfa;\n\n    if(u==tfa){//\u94fe\u5934\u66f4\u65b0 \n        for(int i=0,v=u;i&lt;=mxdp[u]-dep[u];i++){\n            up[u].pb(v);v=fa[v][0];\n        }for(int i=0,v=u;i&lt;=mxdp[u]-dep[u];i++){\n            down[u].pb(v);v=son[v];\n        }\n    }\n\n    if(son[u])dfs2(son[u],tfa);//\u540c\u94fe\u7ee7\u627f \n\n    for (auto v:e[u]) {\n        if (v == son[u])\n            continue;\n        dfs2(v, v);//\u5f02\u94fe\u91cd\u5f00 \n\n    }\n}\nint query(int x,int k){\n    if(!k)return x;\n\n    x=fa[x][lg[k]];\n    k-=1&lt;&lt;lg[k];\n    k-=dep[x]-dep[top[x]];x=top[x];\n\n    if(k&gt;=0){\n        return up[x][k];\n    }else{\n        return down[x][-k];\n    }\n}\n\nsigned main() {\n    scanf(\"%d%d%d\", &amp;n, &amp;q,&amp;s);  \n    lg[1]=0;\n    for(int i=2;i&lt;=n;i++){\n        lg[i]=lg[i&gt;&gt;1]+1;\n    }\n\n    for(int i=1;i&lt;=n;i++){\n        int f;cin&gt;&gt;f;\n        if(!f)rt=i;//\u6ce8\u610f\u6839\u4e0d\u662f1 \n        else add(f,i);\n    }\n    dfs1(rt);\n\n//    cerr&lt;&lt;\"OK\\n\";\n    dfs2(rt,rt);\n\n    for (int i = 1; i &lt;= q; i++) {\n//      cerr&lt;&lt;\"run at=\"&lt;&lt;i&lt;&lt;endl;\n        int x=((get(s)^lstans)%n)+1;\n        int k=(get(s)^lstans)%dep[x];\n        lstans=query(x,k);\n        ans^=1ll*i*lstans;\n\n    }\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/","title":"\u751f\u6210\u6811","text":"<p>D07 \u6700\u5c0f\u751f\u6210\u6811 Prim \u7b97\u6cd5_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#_2","title":"\u6700\u5c0f\u751f\u6210\u6811","text":"<p>\u6700\u5c0f\u751f\u6210\u6811</p> <p>\u901a\u4fd7\u7684\u5b9a\u4e49\uff1a\u7528\u6700\u5c0f\u7684\u4ee3\u4ef7\u6784\u5efa\u4e00\u9897\u6811\u3002</p> <ul> <li> <p>\u6027\u8d28 1 \uff1a\u6700\u5927\u8fb9\u6743\u503c\u5c3d\u91cf\u5c0f</p> </li> <li> <p>\u6027\u8d28 2 \uff1a\u5bf9\u4e8e u \u4e00 v \u7684\u8def\u5f84\uff0c\u5176\u4e2d\u7ecf\u8fc7\u7684\u6700\u5927\u8fb9\u4ef7\u503c\u6700\u5c0f</p> </li> </ul>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#1prim","title":"\u7b97\u6cd51\uff1aPrim","text":"<p>AC code</p> <pre><code>bool prim(int rt) {  //\u8d77\u70b9\n    for (int i = 0; i &lt;= n; i++) d[i] = INF;//\u628ad[0]\u8d4b\u503c\u4e3aINF\uff01\uff01\uff01\n    d[rt] = 0;\n    //\u521d\u59cb\u5316\n    for (int i = 1; i &lt;= n; i++) {\n        int u = 0;//\u4ee50\u4e3a\u57fa\u51c6\uff0c\u5373\u521d\u59cbd[0]=INF!!\u4e0d\u8981\u5c0f\u806a\u660e\u628a0\u6539\u6210\uff01\n        for (int j = 1; j &lt;= n; j++) {\n            if (!vis[j] &amp;&amp; d[j] &lt; d[u])\n                u = j;\n        }\n\n      /*\n      \u6216\u8005\u5199\u6210\n       int u = 0;int mx=INF;\n        for (int j = 1; j &lt;= n; j++) {\n            if (!vis[j] &amp;&amp; d[j] &lt; mx)\n                u = j,mx = d[j];\n        }\n\n      */\n        // flag1\n        vis[u] = 1;\n        //      cerr&lt;&lt;u&lt;&lt;' '&lt;&lt;d[u]&lt;&lt;\"KO\\n\";\n        ans = max(ans, d[u]);  //\u8fb9\u6743max\n        sum += d[u];//\u8fb9\u6743sum\n        if (d[u] != INF)\n            cnt++;  //\u5982\u679cd[u] \u5728\u66f4\u65b0\u540e\u4f9d\u7136\u4e3ainf,\u8bf4\u660e\u4e0d\u8fde\u901a\n        for (auto ed : e[u]) {\n            int v = ed.v, w = ed.w;\n            if (d[v] &gt; w)\n                d[v] = w;\n        }\n    }\n    return cnt == n;  //\u5224\u5b9a\u662f\u5426\u5b58\u5728\u6700\u5c0f\u751f\u6210\u6811(\u56fe\u662f\u5426\u8fde\u901a)\n}\n</code></pre> <p></p> <p>\u5f53\u8d70\u52303\u65f6\uff0c1\u5df2\u7ecf\u5728\u6700\u5c0f\u751f\u6210\u6811\u5185\u3002\u6b64\u65f6\u679a\u4e3e\u6240\u6709\u70b9\u53d1\u73b03\u91cc\u6700\u5c0f\u751f\u6210\u6811\uff081\uff09\u6700\u8fd1\uff0c\u56e0\u6b64\u8d70\u52303\u5904\uff0c\u8fde\u63a51\u21923\u653e\u5165\u6700\u5c0f\u751f\u6210\u6811\u4e2d [flag1]</p> <p>\u6b64\u65f6\u679a\u4e3e3\u7684\u6240\u6709\u90bb\u8fb9\uff0c\u53d1\u73b03\u21922\u6700\u8fd1\uff081\u5ffd\u7565\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u4e86\uff09\u73b0\u5728\u5148\u522b\u6025\uff0c\u4e0d\u8981\u73b0\u5728\u786e\u5b9a2\u21923\u662f\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\uff08\u56e0\u4e3a\u867d\u71362\u662f\u52303\u7684\u6700\u8fd1\u7684\u70b9\uff0c\u4f46\u8fd8\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u67d0\u4e2a\u70b9\u52301\u7684\u8ddd\u79bb\u5c0f\u4e8e2\u21923\u7684\u8ddd\u79bb\uff0c\u6bd5\u7adf1\u4e5f\u5728\u751f\u6210\u6811\u5185\uff09\u3002\u73b0\u5728\u77e5\u90533\u5728\u6700\u5c0f\u751f\u6210\u6811\u5185\uff0c\u4e8e\u662f\u66f4\u65b0\u5176\u4ed6\u70b9\u7684<code>d[]</code>\u6570\u7ec4\uff08\u5373\u5b83\u4eec\u5230\u6700\u5c0f\u751f\u6210\u6811\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb\uff09\u4e3a\u4e0b\u9762\u4e00\u4e2a\u5faa\u73af\u505a\u51c6\u5907</p> <p>\u5f53\u5230\u8fbe\u70b93\u65f6\uff0c\u4f1a\u5bf9<code>d[2] d[5]</code>\u8fdb\u884c\u66f4\u65b0\uff0c\u56e0\u4e3a\u4e00\u5f00\u59cb\u5b83\u4eec\u4e0e\u5f53\u524d\u751f\u6210\u6811\u65e0\u76f8\u8fde\uff0cd\u503c\u4e3ainf</p> <p>\u4f46\u4e0d\u4f1a\u5bf9<code>d[4]</code>\u8fdb\u884c\u66f4\u65b0\uff0c\u56e0\u4e3a\u5b83\u57281\u65f6\u5c31\u5df2\u7ecf\u66f4\u65b0\u4e86\u5230\u751f\u6210\u6811\u7684\u8ddd\u79bb\uff0c\u5e76\u4e14\u6bd4\u52302\u7684\u66f4\u8fd1</p> <p>\u603b\u7684\u6d41\u7a0b\u5c31\u662f\u627e\u5230\u79bb\u5f53\u524d\u751f\u6210\u6811\u6700\u8fd1\u7684\u70b9v\uff0c\u5efa\u8fb9\uff0c\u66f4\u65b0v\u7684\u90bb\u70b9\u5230\u751f\u6210\u6811\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u76f4\u5230\u751f\u6210\u6811\u5efa\u5b8c\uff08\u626b\u63cf\u5b8c\u6240\u6709\u70b9\uff09</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#2prim","title":"\u7b97\u6cd52\uff1a\u5806\u4f18\u5316Prim\uff08\u7a00\u758f\u56fe\u9002\u7528\uff09","text":"<p>\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u4ee5\u4e0b\u5faa\u73af\u5728\uff0c\u6211\u4eec\u5c31\u662f\u4e3a\u4e86\u627e\u5230\u5f53\u524d**\u4e0d\u5728\u5df2\u7ecf\u5904\u7406\u51fa\u6765\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u70b9**\u4e2d<code>d[]</code>**\u6700\u5c0f**\u7684\u90a3\u4e2a\u70b9\u3002</p> <pre><code>int u=0;\nfor(int j=1;j&lt;=n;j++){\n    if(!vis[j]&amp;&amp;d[j]&lt;d[u])u=j;\n}\n</code></pre> <p>\u4e0d\u65ad\u627e\u6700\u5c0f\uff0c\u5bf9\u5e8f\u5217\u8fdb\u884c\u64cd\u4f5c...\u4f18\u5148\u961f\u5217\u53ef\u4ee5\u4f18\u5316\u5b83\uff01\u8fd9\u91cc\u8bf7\u6ce8\u610f\u4f7f\u7528\u5c0f\u6839\u5806\uff08\u5b58\u8d1f\u6570\uff09</p> <p>\u4f18\u5148\u961f\u5217\u9ed8\u8ba4\u6839\u636epair\u7c7b\u578b\u7684\u7b2c\u4e00\u9879(.first)\u8fdb\u884c\u6392\u5e8f</p> <pre><code>priority_queue &lt;pair&lt;int,int&gt; &gt; pq; \nbool prim(int s){//\u8d77\u70b9 \n    for(int i=1;i&lt;=n;i++)d[i]=INF;\n    d[s]=0;pq.push({-0,s});\n    //\u521d\u59cb\u5316 \n    while(pq.size()){\n        int u=pq.top().second;pq.pop();\n        if(vis[u])continue;\n        /*\u4ee3\u66ff\u4e86\u8fd9\u4e9b\n        int u=0;\n        for(int j=1;j&lt;=n;j++){\n            if(!vis[j]&amp;&amp;d[j]&lt;d[u])u=j;\n        }\n        */ \n        vis[u]=1;\n        ans+=d[u];//\u8fb9\u6743\u548c \n        if(d[u]!=inf)cnt++;//\u5982\u679cd[u] \u5728\u66f4\u65b0\u540e\u4f9d\u7136\u4e3ainf,\u8bf4\u660e\u4e0d\u8fde\u901a \n        for(auto ed : e[u]){\n            int v=ed.v,w=ed.w;\n            if(d[v]&gt;w)d[v]=w,pq.push({-d[v],v});//\u5927\u6839\u5806 \n        }\n    }\n    return cnt==n;//\u5224\u5b9a\u662f\u5426\u5b58\u5728\u6700\u5c0f\u751f\u6210\u6811(\u56fe\u662f\u5426\u8fde\u901a) \n}\n</code></pre> <p>\u590d\u6742\u5ea6\u8ba1\u7b97</p> <p></p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#3kruskal","title":"\u7b97\u6cd53\uff1aKruskal","text":"<p>312 \u6700\u5c0f\u751f\u6210\u6811 Kruskal \u7b97\u6cd5_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p></p> <pre><code>struct edge{\n    int u,v,w;\n}e[N];//\u6ce8\u610f\u4e0d\u662f\u94fe\u5f0f\u524d\u5411\u661f\uff01\uff01\u53ea\u662f\u5355\u7eaf\u5b58\u8fb9\uff01\uff01\u7f16\u53f7\u4ece0\u5f00\u59cb\uff01\uff01\nint fa[N],ans,cnt;\nint find(int x){\n    if(fa[x]==x)return x;\n    return fa[x]=find(fa[x]);\n}\nbool cmp(edge a,edge b){\n    return a.w&lt;b.w;//\u662f\u5c0f\u4e8e\u53f7\uff0c\u56e0\u4e3a\u5c0f\u7684\u8981\u5728\u524d\u9762\n}\nbool krskl(){\n    sort(e,e/\u6309\u8fb9\u6743\u6392\u5e8f \n    for(int i=1;i&lt;=n;i++){\n        fa[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316 \n    }\n    for(int i=0;i&lt;m;i++){//\u6309 \u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u679a\u4e3e \n        int x=find(e[i].u),y=find(e[i].v);\n        if(x!=y){//\u8bf4\u660e\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408 \n            fa[x]=y;//\u8fde\u8fb9 \n            ans+=e[i].w;\n            cnt++;\n        }\n    } \n    return cnt==n-1; //\u8fd4\u56de\u662f\u5426\u8fde\u4e86n-1\u6761\u8fb9\uff0c\u5373\u53ef\u4ee5\u5f62\u6210\u6811\n}\n</code></pre> <p>\u6269\u5c55\uff1a\u5982\u679c\u53ea\u662f\u60f3\u8fdek\u6761\u8fb9\uff0c\u90a3\u4e48\u5728cnt\u2265k\u65f6return\u5373\u53ef\u3002\u8981\u60f3\u628a\u56fe\u5206\u6210k\u4e2a\u8054\u901a\u5757\u4f7f\u5f97\u8fb9\u6743\u548c\u6700\u5c0f\uff0c\u5219\u5230cnt\u2265n\uff08\u603b\u70b9\u6570\uff0c\u5373\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u6570\uff09-k\u5373return \u53ef\uff08P1195 \u53e3\u888b\u7684\u5929\u7a7a\uff09</p> <p>\u603b\u7ed3</p> <p></p> <p>\u540e\u9762\u76842\u79cd\u9002\u5408\u7a00\u758f\u56fe</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#1","title":"\u4f8b\u9898 #1","text":"<p>www.luogu.com.cn</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#2","title":"\u4f8b\u9898 #2 \u52a8\u6001\u6700\u5c0f\u751f\u6210\u6811","text":"<p>n \u4e2a\u70b9 m \u6761\u8fb9\u7684\u56fe\u00b7\u6bcf\u6761\u8fb9\u8fde\u63a5 u \u4e00 i \uff0c v \u4e00 i \uff0c\u6743\u503c w \u4e00 i\u00b7</p> <p>\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li> <p>\u4fee\u6539\u67d0\u6761\u8fb9\u8fb9\u6743\u00b7</p> </li> <li> <p>\u67e5\u8be2\u67d0\u4e2a\u533a\u95f4\u5185\u7684\u8fb9\u6784\u6210\u7684\u6700\u5c0f\u751f\u6210\u6811</p> </li> </ul> <p>n\u2264100,m\u226410000</p> <p>solu</p> <p>n \u5f88\u5c0f\uff0c\u731c\u6d4b\u590d\u6742\u5ea6\u662f n * m * g\u3002</p> <p>\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u9009\u54ea\u51e0\u6761\u8fb9\u00b7\u5408\u5e76\u7684\u65f6\u5019\u7c7b\u4f3c\u5f52\u5e76\u6392\u5e8f\u53ef\u4ee5\u7701\u53bb\u6392\u5e8f\\(\\log\\)\uff0e\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(nq\\log \\times a(n))\\)</p> <p>3.\u5f02\u6216\u6700\u5c0f\u751f\u6210\u6811\u00b7</p> <p>\u7ed9\u4f60\u4e00\u5f20\u5b8c\u5168\u56fe\uff0c\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u662f \\(a_i \\oplus a_j\\)\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0e n\u22641e5</p> <p>solu</p> <p>trie\u6811\uff0c\u5728trie\u6811\u4e0a\u5b58\u6240\u6709\u6570\u5b57\uff0c\u53ef\u4ee5\u5feb\u901f\u6c42\u51fa\u4e24\u4e2a\u6570\u5b57\u4f7f\u5f97\u4ed6\u4eec\u7684\u5f02\u6216\u548c\u6700\u5c0f\u3002</p> <p>\u5f02\u6216\u6700\u5c0f\u751f\u6210\u6811\u00b7\u5efa trie \u6811\u00b7\u5408\u5e76\u4e24\u8fb9\u53ea\u80fd\u5404\u53d6\u4e00\u4e2a\u70b9\uff08\u600e\u4e48\u627e\uff1f trie \u6811\u7ecf\u5178\u95ee\u9898\uff09\uff0e Boruvka\u7b97\u6cd5\u6765\u8bc1\u660e</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#_3","title":"\u6b21\u5c0f\u751f\u6210\u6811","text":""},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#_4","title":"\u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811\u7b97\u6cd5","text":"<p>\u4e00\u53e5\u8bdd\u6982\u62ec\uff1a\u5bf9\u4e8e\u539f\u56fe\u4e2d\u975e\u6700\u5c0f\u751f\u6210\u6811\u7684\u6bcf\u4e00\u6761\u8fb9e:u-v\uff0c\u8bbe\u5176\u8fb9\u6743\u4e3aw\uff0c\u67e5\u770b\u6700\u5c0f\u751f\u6210\u6811\u4e2du-v\u7684\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u6700\u5927\u503cmx\u548c\u6b21\u5927\u503csmx\uff0c\u5982\u679cmx=w\uff0c\u5219\u7528e\u66ff\u6362smx\u7684\u8fb9\uff0c\u5426\u5219\u7528e\u66ff\u6362mx\u7684\u8fb9\u3002</p> <p>\u6bcf\u4e00\u6b21\u66ff\u6362\u8fb9\u90fd\u662f\u57fa\u4e8e\u539f\u56fe\uff0c\u6240\u4ee5\u6bcf\u4e00\u6b21\u66ff\u6362\u4e00\u6761\u8fb9\u540e\u90fd\u4f1a\u751f\u6210\u4e00\u9897\u65b0\u6811\u3002\u8bb0\u65b0\u6811\u7684\u8fb9\u6743\u548c\u4e3ares\uff0c\u8bb0\u5f55\u6240\u6709res\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\u5c31\u662f**\u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811\u3002**</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#_5","title":"\u975e\u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811","text":"<p>\u7a0d\u5fae\u6539\u53d8\u4e00\u4e0b\u4e0a\u9762\u7684\u6761\u4ef6\uff0c\u5373\u65e0\u8bbamx\u662f\u5426\u5bf9\u4e8ew\uff0c\u90fd\u7528e\u66ff\u6362mx\u7684\u8fb9\u3002\u5373\u4e0d\u9700\u8981\u8bb0\u5f55smx\u4e86\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#_6","title":"\u5b9e\u73b0\u6b65\u9aa4","text":"<p>\u66b4\u529b\u7b97\u6cd5\uff1a\u679a\u4e3e\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u54ea\u6761\u8fb9\u4e0d\u80fd\u9009\u5e76\u4e14\u6807\u8bb0\u3002\u6bcf\u6b21\u6807\u8bb0\u540e\u8dd1\u4e00\u6b21kruskal\u3002\u4f46\u662f\u6392\u5e8f\u53ea\u9700\u8981\u4e00\u6b21\u3002\\(O(m^2)\\)</p> <p>\u6362\u8fb9\u7b97\u6cd5\uff1a</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#1_1","title":"\u4f8b\u9898 #1","text":"<p>\u5c0f C \u6700\u8fd1\u5b66\u4e86\u5f88\u591a\u6700\u5c0f\u751f\u6210\u6811\u7684\u7b97\u6cd5\uff0cPrim \u7b97\u6cd5\u3001Kruskal \u7b97\u6cd5\u3001\u6d88\u5708\u7b97\u6cd5\u7b49\u7b49\u3002\u6b63\u5f53\u5c0f C \u6d0b\u6d0b\u5f97\u610f\u4e4b\u65f6\uff0c\u5c0f P \u53c8\u6765\u6cfc\u5c0f C \u51b7\u6c34\u4e86\u3002\u5c0f P \u8bf4\uff0c\u8ba9\u5c0f C \u6c42\u51fa\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\u6b21\u5c0f\u751f\u6210\u6811\uff0c\u800c\u4e14\u8fd9\u4e2a\u6b21\u5c0f\u751f\u6210\u6811\u8fd8\u5f97\u662f\u4e25\u683c\u6b21\u5c0f\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u5982\u679c\u6700\u5c0f\u751f\u6210\u6811\u9009\u62e9\u7684\u8fb9\u96c6\u662f \\(E_M\\)\uff0c\u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811\u9009\u62e9\u7684\u8fb9\u96c6\u662f \\(E_S\\)\uff0c\u90a3\u4e48\u9700\u8981\u6ee1\u8db3\uff1a(\\(value(e)\\) \u8868\u793a\u8fb9 \\(e\\) \u7684\u6743\u503c) \\(\\sum_{e \\in E_M}value(e)&lt;\\sum_{e \\in E_S}value(e)\\)\u3002</p> <p>\u8fd9\u4e0b\u5c0f C \u8499\u4e86\uff0c\u4ed6\u627e\u5230\u4e86\u4f60\uff0c\u5e0c\u671b\u4f60\u5e2e\u4ed6\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c \\(N\\le 10^5\\)\uff0c\\(M\\le 3\\times10^5\\)\uff0c\u8fb9\u6743  \\(\\in [0,10^9]\\)\uff0c\u6570\u636e\u4fdd\u8bc1\u5fc5\u5b9a\u5b58\u5728\u4e25\u683c\u6b21\u5c0f\u751f\u6210\u6811\u3002</p> <p>\u4ee3\u7801</p> <p>\u4eba\u751f\u554a\uff0c\u662f\u6ca1\u6709\u5c3d\u5934\u7684\u554a\u3002\u6709\u4e9b\u4e8b\uff0c\u770b\u4f3c\u5f88\u597d\u4e86\uff0c\u5b9e\u9645\u4e0a\u4e3a\u4f55\u4e0d\u7ee7\u7eed\u63a2\u67e5\u66f4\u591a\u7684\u53ef\u80fd\u6027\u5462\uff1f</p> <pre><code>- \u672c\u9898INF=1e12\u4ecd\u7136\u4e0d\u591f\uff0c\u5728\u6ca1\u6709\u6d89\u53caINF\u8fd0\u7b97\u65f6\uff0cINF\u653e\u5fc3\u5f001e18\uff01\n</code></pre> <pre><code>/*\nCode by Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define mp make_pair\n\n#define rd read()\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=5e5+5;\nconst int M=6e5+5;\nconst int INF=1e18;//\u5f00\u5927INF\uff01\uff01\uff01\nint n,m,k,top,w1,c;\nint used[N],fa[N][20],dep[N],w[N],du[N],stk[N],v[2][N];\nint p[N],MSTans,cnt;\n\nstruct data{\n    int f,s;\n}wt[N][20];\n\nstruct edge{\n    int u,v,w;\n}e2[N];//\u6ce8\u610f\u4e0d\u662f\u94fe\u5f0f\u524d\u5411\u661f\uff01\uff01\u53ea\u662f\u5355\u7eaf\u5b58\u8fb9\uff01\uff01\u7f16\u53f7\u4ece0\u5f00\u59cb\uff01\uff01\nstruct node{\n    int v,w;\n};\nvector&lt;node&gt; e[N];\n\ndata merge(data a,data b){\n//  cerr&lt;&lt;\"about b:\"&lt;&lt;b.f&lt;&lt;':'&lt;&lt;b.s&lt;&lt;endl;\n    //\u5408\u5e76\u4e24\u4e2a\u6700\u5927\u503c\n    data ans=a;\n    if(b.f&gt;ans.f){\n        ans.s=ans.f;ans.f=b.f;\n        if(b.s&gt;ans.s)ans.s=b.s;\n\n    }else if(b.f&gt;ans.s&amp;&amp;b.f!=ans.f)ans.s=b.f;\n    return ans;\n}\n\nvoid dfs(int x,int f){\n    dep[x]=dep[f]+1;\n    for(int i=1;i&lt;=18;i++){\n        fa[x][i]=fa[fa[x][i-1]][i-1];\n        wt[x][i]=merge(wt[x][i-1],wt[fa[x][i-1]][i-1]);\n    }\n\n    for(auto v:e[x]){\n        if(v.v==fa[x][0])continue;\n        fa[v.v][0]=x;\n        wt[v.v][0]={v.w,0};\n//      cerr&lt;&lt;\"v:\"&lt;&lt;v.v&lt;&lt;' '&lt;&lt;wt[v.v][0].f&lt;&lt;endl;\n        dfs(v.v,x);\n    }\n}\n\ndata query(int u, int v) {\n    data res={0,0};\n    if (dep[u] &lt; dep[v])\n        swap(u, v);                  //\u8ba9u\u66f4\u6df1\n\n//    res=merge(res,wt[u][0]);\n    for (int i = 18; i &gt;= 0; i--) {  //\u500d\u589e\u5f80\u4e0a\u8df3 \uff0c\u4e0d\u8981\u66b4\u529b\u8df3\n        if (dep[u] - (1 &lt;&lt; i) &gt;= dep[v]){\n//          cerr&lt;&lt;\"on merge\"&lt;&lt;u&lt;&lt;' '&lt;&lt;i&lt;&lt;\" wtth f:\"&lt;&lt;wt[u][i].f&lt;&lt;endl;\n            res=merge(res,wt[u][i]),u = fa[u][i];//\u5148\u8df3u\u518d\u6539u\uff01\uff01\n        }\n\n    }\n//    cerr&lt;&lt;\"u-v\"&lt;&lt;u&lt;&lt;' '&lt;&lt;v&lt;&lt;\" with res.f:\"&lt;&lt;res.f&lt;&lt;endl;\n    if (u == v)\n        return res;\n    for (int i = 18; i &gt;= 0; i--) {  //\u500d\u589e\u4e00\u8d77\u5f80\u4e0a\u8df3\n        if (fa[u][i] != fa[v][i]){\n\n            res=merge(res,wt[u][i]);\n            res=merge(res,wt[v][i]);\n            u = fa[u][i], v = fa[v][i];\n        }\n    }\n    res=merge(res,wt[u][0]);\n    res=merge(res,wt[v][0]);\n    return res;  //\u6ce8\u610f\u8fd4\u56de\u503c\n}\n\n\n\nint solve(){\n    int ans=INF;\n    for(int i=1;i&lt;=m;i++){\n        //\u679a\u4e3e\u975e\u6700\u5c0f\u751f\u6210\u6811\u8fb9\n        if(used[i]){\n//          cerr&lt;&lt;\"sel:\";\n//          cerr&lt;&lt;e2[i].u&lt;&lt;\" to \"&lt;&lt;e2[i].v&lt;&lt;\" with the w:\"&lt;&lt;e2[i].w&lt;&lt;endl;\n            continue;\n        }\n        if(e2[i].u==e2[i].v)continue;//\u5c0f\u5fc3\u81ea\u73af\n        data res=query(e2[i].u,e2[i].v);\n\n        if(e2[i].w!=res.f)ans=min(ans,MSTans-res.f+e2[i].w);\n        else if(res.s!=INF)ans=min(ans,MSTans-res.s+e2[i].w);\n\n//      cerr&lt;&lt;e2[i].u&lt;&lt;\" to \"&lt;&lt;e2[i].v&lt;&lt;\" with the w:\"&lt;&lt;e2[i].w&lt;&lt;\"ans=\"&lt;&lt;ans&lt;&lt;\" res.f:\"&lt;&lt;res.f&lt;&lt;endl;\n    }\n    return ans;\n}\n\nvoid add(int a,int b,int c){\n    e[a].push_back({b,c});\n    e[b].push_back({a,c});\n}\n\n\nint find(int x){\n    if(p[x]==x)return x;\n    return p[x]=find(p[x]);\n}\nbool cmp(edge a,edge b){\n    return a.w&lt;b.w;//\u662f\u5c0f\u4e8e\u53f7\uff0c\u56e0\u4e3a\u5c0f\u7684\u8981\u5728\u524d\u9762\n}\nbool krskl(){\n    sort(e2/\u6309\u8fb9\u6743\u6392\u5e8f \n    for(int i=1;i&lt;=n;i++){\n        p[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316 \n    }\n    for(int i=1;i&lt;=m;i++){//\u6309 \u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u679a\u4e3e \n        int x=find(e2[i].u),y=find(e2[i].v);\n        if(x!=y){//\u8bf4\u660e\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408 \n            p[x]=y;//\u8fde\u8fb9 \n            MSTans+=e2[i].w;\n            cnt++;\n            used[i]=1;\n        }\n    } \n    return cnt==n-1; //\u8fd4\u56de\u662f\u5426\u8fde\u4e86n-1\u6761\u8fb9\uff0c\u5373\u53ef\u4ee5\u5f62\u6210\u6811\n}\n\nsigned main(){\n//  freopen(\"P4180_11.in\",\"r\",stdin);\n    n=rd,m=rd;\n    for(int i=1;i&lt;=m;i++){\n        int a=rd,b=rd,c=rd;\n        e2[i]={a,b,c};\n    }\n\n    krskl();\n    for(int i=1;i&lt;=m;i++){\n        if(used[i]){\n            add(e2[i].u,e2[i].v,e2[i].w);\n        }\n    }\n//  cerr&lt;&lt;\"MSTans=\"&lt;&lt;MSTans&lt;&lt;endl;\n    dfs(1,0);\n    cout&lt;&lt;solve()&lt;&lt;endl;\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#_7","title":"\u6700\u5c0f\u6811\u5f62\u56fe","text":"<p>\u5b66\u4e60\u7b14\u8bb0 | \u6700\u5c0f\u6811\u5f62\u56fe-\u6731\u5218\u7b97\u6cd5\uff08\u6709\u5411\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff09</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#_8","title":"\u6700\u5c0f\u5ea6\u9650\u5236\u751f\u6210\u6811","text":"<p>P5633</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u6709 \\(n\\) \u4e2a\u8282\u70b9\uff0c\\(m\\) \u6761\u8fb9\u7684\u5e26\u6743\u65e0\u5411\u56fe\uff0c\u4f60\u9700\u8981\u6c42\u5f97\u4e00\u4e2a\u751f\u6210\u6811\uff0c\u4f7f\u8fb9\u6743\u603b\u548c\u6700\u5c0f\uff0c\u4e14\u6ee1\u8db3\u7f16\u53f7\u4e3a \\(s\\) \u7684\u8282\u70b9\u6b63\u597d\u8fde\u4e86 \\(k\\) \u6761\u8fb9\uff08\u4ec5\u4e00\u4e2a\u70b9\u6709\u9650\u5236\uff09\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#mex","title":"\u6700\u5c0fmex\u751f\u6210\u6811","text":"<p>\u7ed9\u5b9a \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u8fb9\u6709\u8fb9\u6743\u3002</p> <p>\u8bbe\u4e00\u4e2a\u81ea\u7136\u6570\u96c6\u5408 \\(S\\) \u7684 \\(\\text{mex}\\) \u4e3a\uff1a\u6700\u5c0f\u7684\u3001\u6ca1\u6709\u51fa\u73b0\u5728 \\(S\\) \u4e2d\u7684\u81ea\u7136\u6570\u3002</p> <p>\u73b0\u5728\u4f60\u8981\u6c42\u51fa\u4e00\u4e2a\u8fd9\u4e2a\u56fe\u7684\u751f\u6210\u6811\uff0c\u4f7f\u5f97\u5176\u8fb9\u6743\u96c6\u5408\u7684 \\(\\text{mex}\\) \u5c3d\u53ef\u80fd\u5c0f\u3002\u6c42\u6700\u5c0f\u503c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570 \\(n,m\\)\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\uff0c\u6bcf\u884c \\(3\\) \u4e2a\u975e\u8d1f\u6574\u6570 \\(u,v,w\\)\uff0c\u8868\u793a \\(u,v\\) \u4e4b\u95f4\u6709\u4e00\u6761\u6743\u503c\u4e3a \\(w\\) \u7684\u8fb9\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%94%9F%E6%88%90%E6%A0%91/#_9","title":"\u6700\u5c0f\u5dee\u503c\u751f\u6210\u6811","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u70b9\u6807\u53f7\u4ece \\(1\\) \u5230 \\(n\\) \u7684\u3001\u6709 \\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6c42\u8fb9\u6743\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\u503c\u6700\u5c0f\u7684\u751f\u6210\u6811\u3002\u56fe\u53ef\u80fd\u5b58\u5728\u81ea\u73af\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6574\u6570\uff0c\u8868\u793a\u56fe\u7684\u70b9\u6570 \\(n\\) \u548c\u8fb9\u6570 \\(m\\)\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 \\(u, v, w\\)\uff0c\u8868\u793a\u5b58\u5728\u4e00\u6761\u8fde\u63a5 \\(u, v\\) \u957f\u5ea6\u4e3a \\(w\\) \u7684\u8fb9\u3002</p> <ul> <li>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(1 \\leq n \\leq 5 \\times 10^4\\)\uff0c\\(1 \\leq m \\leq 2 \\times 10^5\\)\uff0c\\(1 \\leq u, v \\leq n\\)\uff0c\\(1 \\leq w \\leq 10^4\\)\u3002</li> </ul>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%AC%9B%E5%8D%A1%E5%B0%94%E6%A0%91/","title":"\u7b1b\u5361\u5c14\u6811","text":"<p>\u7b97\u6cd5\u7ade\u8d5b4.15-\u7b1b\u5361\u5c14\u6811_\u54d4\u54e9\u54d4\u54e9_bilibili</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E7%AC%9B%E5%8D%A1%E5%B0%94%E6%A0%91/#_1","title":"\u7b1b\u5361\u5c14\u6811","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a \\(1 \\sim n\\) \u7684\u6392\u5217 \\(p\\)\uff0c\u6784\u5efa\u5176\u7b1b\u5361\u5c14\u6811\u3002</p> <p>\u5373\u6784\u5efa\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6ee1\u8db3\uff1a</p> <ol> <li> <p>\u6bcf\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\u6ee1\u8db3\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6027\u8d28\u3002</p> </li> <li> <p>\u8282\u70b9 \\(i\\) \u7684\u6743\u503c\u4e3a \\(p_i\\)\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u6743\u503c\u6ee1\u8db3\u5c0f\u6839\u5806\u7684\u6027\u8d28\u3002</p> </li> </ol> <p>\u5c0f\u6839\u5806\u7684\u6027\u8d28\uff1a\u5bf9\u4e8e\u8be5\u5806\u7684\u4efb\u610f\u4e00\u4e2a\u90e8\u5206\uff0c\u90fd\u6ee1\u8db3\u5176\u6839\u8282\u70b9\u7684\u6743\u503c\u5c0f\u4e8e\u5176\u5b50\u8282\u70b9\u7684\u6743\u503c\u3002</p> <p>\u5efa\u6811</p> <p>\u8bbe \\(l_i,r_i\\) \u5206\u522b\u8868\u793a\u8282\u70b9 \\(i\\) \u7684\u5de6\u53f3\u513f\u5b50\u7684\u7f16\u53f7\uff08\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a \\(0\\)\uff09\u3002</p> <p>\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a \\(\\operatorname{xor}_{i = 1}^n i \\times (l_i + 1)\\) \u548c \\(\\operatorname{xor}_{i = 1}^n i \\times (r_i + 1)\\)\u3002</p> <p>\\(1 \\le n \\le 10^7\\)\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5O(n)\u6784\u5efa\u7b1b\u5361\u5c14\u6811\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 \\(A\\) \uff08\u9ed8\u8ba4\u5176\u6ca1\u6709\u91cd\u590d\u5143\u7d20\uff09\uff0c\u4e0b\u9762\u5efa\u6811\u7684\u8fc7\u7a0b\u4ee5\u5c0f\u6839\u5806\u4e3a\u4f8b\uff0c\u5b9a\u4e49\u5e8f\u5217\u4e2d\u7b2c \\(i\\) \u4e2a\u5143\u7d20\u7684\u952e\u503c\u4e3a \\((i,A_i)\\)\uff0c\u4e5f\u5c31\u662f \\(i\\) \u5bf9\u5e94 \\(k\\) \uff0c \\(A_i\\) \u5bf9\u5e94 \\(w\\)\u3002</p> <p>\u5b9a\u4e49\u4e00\u68f5\u6811\u7684**\u53f3\u94fe**\u4e3a\u4ece\u6839\u51fa\u53d1\u4e00\u76f4\u5f80\u53f3\u513f\u5b50\u65b9\u5411\u80fd\u591f\u5230\u8fbe\u7684\u6240\u6709\u70b9\u6309\u7167\u6df1\u5ea6\u4ece\u6d45\u5230\u6df1\u6392\u5e8f\u540e\u800c\u5f62\u6210\u7684\u4e00\u6761\u94fe\u3002</p> <p></p> <p>\u56e0\u4e3a\u6211\u4eec\u7684\u952e\u503c \\(k\\) \u662f\u6570\u7ec4\u4e0b\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u6392\u5e8f\uff0c\u76f4\u63a5\u4ece\u6570\u7ec4\u7684\u5de6\u8fb9\u5f80\u53f3\u8fb9\u63d2\u5165\u53ef\u4ee5\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u63d2\u5165\u7684\u662f\u8282\u70b9 \\(u\\)\uff0c\u6211\u4eec\u4e3a\u4e86\u7ef4\u62a4\u4e0b\u6807\u6ee1\u8db3\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6027\u8d28\uff0c\u80af\u5b9a\u6bcf\u6b21\u90fd\u662f\u5f80\u6811\u7684**\u53f3\u94fe**\u7684\u672b\u7aef\u63d2\u5165\uff0c\u4f46\u662f\u6211\u4eec\u6b64\u65f6\u8981\u7ef4\u62a4\u5806\u7684\u6027\u8d28\u3002</p> <ul> <li> <p>\u5982\u679c\u6070\u597d \\(w_u\\) \u5927\u4e8e\u5f53\u524d\u53f3\u94fe\u672b\u7aef\u7aef\u70b9\u7684 \\(w\\) \u5373\u76f4\u63a5\u5c06 \\(u\\) \u63d2\u5165\u5230 \u53f3\u94fe\u7684\u672b\u7aef\u3002</p> </li> <li> <p>\u5982\u679c \\(w_u\\) \u5c0f\u4e8e\u5f53\u524d\u53f3\u94fe\u7684\u672b\u7aef\u7aef\u70b9\u7684 \\(w\\)\uff0c\u90a3\u4e48\u610f\u5473\u7740 \\(u\\) \u5e94\u5f53\u5728\u6811\u4e0a\u662f \u5f53\u524d\u53f3\u94fe \u672b\u7aef\u7aef\u70b9\u7684\u7956\u5148\uff0c\u4e8e\u662f\u6211\u4eec\u7ee7\u7eed\u5f80\u4e0a\u627e\uff0c\u76f4\u5230\u9047\u5230\u6ee1\u8db3\u7b2c\u4e00\u79cd\u60c5\u51b5\u7684\u70b9\u3002</p> </li> </ul> <p>\u5047\u5982\u6211\u4eec\u5728\u53f3\u94fe\u4e0a\u627e\u5230\u4e86\u4e00\u4e2a\u70b9 \\(j\\) \u4f7f\u5f97 \\(w_j &lt; w_u\\) \uff0c\u90a3\u4e48\u5c31\u628a \\(j\\) \u7684\u53f3\u513f\u5b50\u4f5c\u4e3a \\(u\\) \u7684\u5de6\u513f\u5b50\uff0c\\(j\\) \u7684\u53f3\u513f\u5b50\u53d8\u4e3a \\(u\\)\uff0c\u7136\u540e\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u63d2\u5165\u8fd9\u4e2a \\(u\\)\u3002</p> <p></p> <p>\u5982\u679c\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5c0f\u4e8e \\(w_u\\)\uff0c\u90a3\u4e48 \\(w_u\\) \u5c31\u4f1a\u6210\u4e3a\u65b0\u7684\u53f3\u94fe\u7684\u6839\u8282\u70b9\u3002</p> <p>\u4ee3\u7801</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code  by  Ntsc .\n       . Earn knowledge .\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\n#define int long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e7+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,m,q,T,p[N];\nint top,tp;\nint ans1,ans2;\nint st[N];\n\nstruct node{\n    int l,r;\n}tr[N];\n\ninline int read() {}\n\nsigned main(){\n    n=read();\n    for(int i=1;i&lt;=n;i++){\n        p[i]=read();\n    }\n    st[++top]=1;\n    for(int i=2;i&lt;=n;i++){\n        while(top&amp;&amp;p[st[top]]&gt;p[i])top--;\n        if(!top){\n            tr[i].l=st[top+1];\n        }else{\n            int u=st[top];\n            tr[i].l=tr[u].r;tr[u].r=i;\n\n        }st[++top]=i;\n    }\n\n    for(int i=1;i&lt;=n;i++){\n        ans1^=i*(tr[i].l+1);\n        ans2^=i*(tr[i].r+1);\n    }\n\n    printf(\"%lld %lld\",ans1,ans2);\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E8%99%9A%E6%A0%91/","title":"\u865a\u6811","text":"<p>www.bilibili.com</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E8%99%9A%E6%A0%91/#_1","title":"\u865a\u6811","text":"<p>\u865a\u6811 Virtual Tree\uff0c\u6307\u7684\u662f\u5728\u6811\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u9053\u6709\u7a00\u758f\u7684\u70b9\u9700\u8981\u67e5\u8be2\u4fe1\u606f\uff08\u6211\u4eec\u79f0\u4e4b\u4e3a\u67e5\u8be2\u70b9\uff09\uff0c\u5e76\u4e14\u5bf9\u4e8e\u975e\u67e5\u8be2\u70b9\u7684\u4fe1\u606f\u4e0d\u91cd\u8981\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002</p> <p>\u865a\u6811\u5373\u628a\u539f\u6811\u4e0a\u7684\u67e5\u8be2\u70b9\uff0c\u67e5\u8be2\u70b9\u7684LCA\u548c\u6839\u8282\u70b9\u4fdd\u7559\u4e0b\u6765\u7684\u65b0\u6811\uff0c\u5176\u89c4\u6a21\u4f1a\u6bd4\u539f\u6811\u5c0f\u5f88\u591a\u3002</p> <p></p> <p>\u5b83\u91cd\u8981\u7528\u6765\u4f18\u5316\u6811\u5f62dp\u6216\u8005\u6811\u4e0a\u641c\u7d22\u7684\u590d\u6742\u5ea6\u3002</p>"},{"location":"%E6%A0%91%E8%AE%BA/%E8%99%9A%E6%A0%91/#_2","title":"\u5efa\u6811\u6d41\u7a0b","text":"<pre><code>const int N=100005,M=N*2;\nint h[N],to[M],ne[M],tot;\nvoid add(int x,int y){ //\u8fde\u8fb9\nto[++tot]=y;ne[tot]=h[x];h[x]=tot;\n}\nint dep[N],fa[N][20],siz[N];\nint dfn[N],cnt; //dfs\u5e8f\nint s[N],top;   //\u6808\nint n,k,q,a[N],ans;\n\nvoid dfs(int x, int f){ //\u6811\u4e0a\u500d\u589e\n    dfn[x]=++cnt;\n    dep[x]=dep[f]+1; fa[x][0]=f; siz[x]=1; \n    for(int i=1; i&lt;=19; i++) \n        fa[x][i]=fa[fa[x][i-1]][i-1];\n\n    for(int i=h[x]; i; i=ne[i]){\n        int y=to[i];\n        if(y==f) continue;\n        dfs(y,x);\n        siz[x]+=siz[y];\n    }\n}\nint lca(int x, int y){ //\u6c42lca\n    if(dep[x]&lt;dep[y])swap(x, y);\n    for(int i=19; ~i; i--)\n        if(dep[fa[x][i]]&gt;=dep[y])\n        x=fa[x][i];\n    if(x==y) return y;\n\n    for(int i=19; ~i; i--)\n        if(fa[x][i]!=fa[y][i])\n        x=fa[x][i], y=fa[y][i];\n    return fa[x][0];\n}\nint cmp(int a,int b){ \n    return dfn[a]&lt;dfn[b];\n}\nvoid build(){ //\u5efa\u865a\u6811\n    sort(a/\u6309dfs\u5e8f\u6392\u5e8f\n    tot=0; //\u6e05\u7a7a\n    s[top=1]=1; //\u6839\u8282\u70b9\u5165\u6808\n    if(a[1]!=1) s[++top]=a[1];\n    for(int i=2; i&lt;=k; i++){ //\u679a\u4e3e\u67e5\u8be2\u70b9\n        int l=lca(s[top],a[i]);\n        // \u5bf9\u5f53\u524d\u94fe\u8fde\u8fb9,top\u51fa\u6808\n        while(top&gt;1 &amp;&amp; dep[s[top-1]]&gt;=dep[l]) \n        add(s[top-1],s[top]), top--;\n        // \u5bf9lca\u548ctop\u8fde\u8fb9,top\u51fa\u6808,lca\u5165\u6808\n        if(l!=s[top]) add(l,s[top]), s[top]=l;\n        // \u67e5\u8be2\u70b9\u5165\u6808\n        s[++top]=a[i];\n    }\n    while(top) //\u5bf9\u6700\u540e\u4e00\u6761\u94fe\u8fde\u8fb9,top\u51fa\u6808\n        add(s[top-1],s[top]), top--;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E8%99%9A%E6%A0%91/#1-kingdom-and-its-cities","title":"\u4f8b\u9898 #1 Kingdom and its Cities","text":"<p>\u4e00\u4e2a\u738b\u56fd\u6709n\u5ea7\u57ce\u5e02\uff0c\u57ce\u5e02\u4e4b\u95f4\u7531n-1\u6761\u9053\u8def\u76f8\u8fde\uff0c\u5f62\u6210\u4e00\u4e2a\u6811\u7ed3\u6784\uff0c\u56fd\u738b\u51b3\u5b9a\u5c06\u4e00\u4e9b\u57ce\u5e02\u8bbe\u4e3a\u91cd\u8981\u57ce\u5e02\u3002</p> <p>\u8fd9\u4e2a\u56fd\u5bb6\u6709\u7684\u65f6\u5019\u4f1a\u906d\u53d7\u5916\u654c\u5165\u4fb5\uff0c\u91cd\u8981\u57ce\u5e02\u7531\u4e8e\u52a0\u5f3a\u4e86\u9632\u62a4\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5360\u9886\u3002\u800c\u975e\u91cd\u8981\u57ce\u5e02\u4e00\u65e6\u88ab\u5360\u9886\uff0c\u8fd9\u5ea7\u57ce\u5e02\u5c31\u4e0d\u80fd\u901a\u884c\u3002</p> <p>\u56fd\u738b\u5b9a\u4e86\u82e5\u5e72\u9009\u62e9\u91cd\u8981\u57ce\u5e02\u7684\u8ba1\u5212\uff0c\u4ed6\u60f3\u77e5\u9053\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8ba1\u5212\uff0c\u5916\u654c\u81f3\u5c11\u8981\u5360\u9886\u591a\u5c11\u4e2a\u975e\u91cd\u8981\u57ce\u5e02\uff0c\u624d\u4f1a\u5bfc\u81f4\u91cd\u8981\u57ce\u5e02\u4e4b\u95f4\u4e24\u4e24\u4e0d\u8fde\u901a\u3002\u5982\u679c\u5916\u654c\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u53ef\u80fd\u5bfc\u81f4\u8fd9\u79cd\u5c40\u9762\uff0c\u8f93\u51fa-1</p> <p>\u611f\u8c22@litble  \u63d0\u4f9b\u7684\u7ffb\u8bd1</p> <p>The first line of the input contains integer \\(n\\) ( \\(1&lt;=n&lt;=100000\\) ) \u2014 the number of cities in the kingdom.</p> <p>Each of the next \\(n-1\\) lines contains two distinct integers \\(u_{i}\\) , \\(v_{i}\\) ( \\(1&lt;=u_{i},v_{i}&lt;=n\\) ) \u2014 the indices of the cities connected by the \\(i\\) -th road. It is guaranteed that you can get from any city to any other one moving only along the existing roads.</p> <p>The next line contains a single integer \\(q\\) ( \\(1&lt;=q&lt;=100000\\) ) \u2014 the number of King's plans.</p> <p>Each of the next \\(q\\) lines looks as follows: first goes number \\(k_{i}\\) \u2014 the number of important cities in the King's plan, ( \\(1&lt;=k_{i}&lt;=n\\) ), then follow exactly \\(k_{i}\\) space-separated pairwise distinct numbers from 1 to \\(n\\) \u2014 the numbers of important cities in this plan.</p> <p>The sum of all \\(k_{i}\\) 's does't exceed \\(100000\\) .</p> <p>\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u6811\u53d8\u6210\u865a\u6811\uff0c\u7136\u540e\u8fdb\u884cdfs\uff1a</p> <p>\u9996\u5148\u6211\u4eec\u8d4b\u503c\\(sz_u=[u\u662f\u4e00\u4e2a\u5173\u952e\u70b9?1:0]\\)</p> <p>\u82e5dfs\u5230\u4e00\u4e2a\u67e5\u8be2\u70b9u\uff08\u4ee5\u4e0b\u6211\u4eec\u79f0\u5176\u4e3a\u5173\u952e\u70b9\uff0c\u5373\u91cd\u8981\u57ce\u5e02\uff09\uff0c\u6211\u4eec\u5148dfs\u4e0b\u53bb\u3002\u5728\u6bcf\u6b21dfs\u5176\u4e00\u4e2a\u513f\u5b50v_i\u540e\uff0c\u82e5sz_{v_i}&gt;0\uff0c\u5219\u8bf4\u660e\u5176\u4e0b\u65b9\u94fe\u63a5\u4e86\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u5e76\u4e14\u7531\u4e8edfs\u6027\u8d28\uff0c\u8fd9\u4e2a\u5173\u952e\u70b9\u6ca1\u6709\u548cu\u65ad\u5f00\u3002\u90a3\u4e48\u6b64\u6b21\u6211\u4eec\u5c31\u9700\u8981\u65ad\u5f00\u94fe\u63a5\u3002</p> <p>\u6ce8\u610f\u65ad\u5f00\u94fe\u63a5\u5176\u5b9e\u662f\u5220\u9664u\u548c\u5176\u4e0b\u65b9\u5173\u952e\u70b9\u8def\u5f84\u4e0a\u7684\u4efb\u610f\u4e00\u4e2a\u975e\u5173\u952e\u70b9\u3002\u6240\u4ee5\u5982\u679c\u4e24\u4e2a\u5173\u952e\u70b9\u4e4b\u95f4\u6ca1\u6709\u5982\u4f55\u975e\u5173\u952e\u70b9\uff0c\u5219\u5fc5\u7136\u65e0\u89e3\u3002</p> <p>\u5f53dfs\u5230\u4e00\u4e2a\u975e\u5173\u952e\u70b9u\uff0c\u90a3\u4e48u\u5fc5\u7136\u662f\u67d0\u4e24\u4e2a\u5173\u952e\u70b9\u7684lca\u3002dfs\u4e0b\u53bb\uff0c\u4e14\u5728\u9012\u5f52\u5b8c\u5176\u6240\u6709\u513f\u5b50\u540e\u6c42\u548csum=sz_{v_i,v_i\\in son(u)}\u3002\u82e5sum\u22652\uff0c\u5219\u8bf4\u660e\u6709\u81f3\u5c11\u4e24\u4e2a\u5173\u952e\u70b9\u901a\u8fc7u\u76f8\u8fde\u3002\u6b64\u65f6\u5c31\u9700\u8981\u5220\u9664u\u3002\u5426\u5219\u4e0d\u9700\u8981\u3002</p> <pre><code>// \u6811\u4e0a\u500d\u589e+\u865a\u6811+\u6811\u5f62DP 150ms\n\n#include&lt;bits/stdc++.h&gt;\n// luogu-judger-enable-o2\n#define rep(l,r,i) for(int i=l,END##i=r;i&lt;=END##i;++i)\n#define per(r,l,i) for(int i=r,END##i=l;i&gt;=END##i;--i)\nusing namespace std;\n// #define int long long\n#define pii pair&lt;int,int&gt;\n\n#define lc(x) (x&lt;&lt;1)\n#define rc(x) (x&lt;&lt;1|1)\n\n#define rd read()\ninline int read(){\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=100005,M=N*2;\nint h[N],to[M],ne[M],tot;\nvoid add(int x,int y){ //\u8fde\u8fb9\nto[++tot]=y;ne[tot]=h[x];h[x]=tot;\n}\nint dep[N],fa[N][20],siz[N];\nint dfn[N],cnt; //dfs\u5e8f\nint s[N],top;   //\u6808\nint n,k,q,a[N],ans;\n\nvoid dfs(int x, int f){ //\u6811\u4e0a\u500d\u589e\n    dfn[x]=++cnt;\n    dep[x]=dep[f]+1; fa[x][0]=f; siz[x]=1; \n    for(int i=1; i&lt;=19; i++) \n        fa[x][i]=fa[fa[x][i-1]][i-1];\n\n    for(int i=h[x]; i; i=ne[i]){\n        int y=to[i];\n        if(y==f) continue;\n        dfs(y,x);\n        siz[x]+=siz[y];\n    }\n}\nint lca(int x, int y){ //\u6c42lca\n    if(dep[x]&lt;dep[y])swap(x, y);\n    for(int i=19; ~i; i--)\n        if(dep[fa[x][i]]&gt;=dep[y])\n        x=fa[x][i];\n    if(x==y) return y;\n\n    for(int i=19; ~i; i--)\n        if(fa[x][i]!=fa[y][i])\n        x=fa[x][i], y=fa[y][i];\n    return fa[x][0];\n}\nint cmp(int a,int b){ \n    return dfn[a]&lt;dfn[b];\n}\nvoid build(){ //\u5efa\u865a\u6811\n    sort(a/\u6309dfs\u5e8f\u6392\u5e8f\n    tot=0; //\u6e05\u7a7a\n    s[top=1]=1; //\u6839\u8282\u70b9\u5165\u6808\n    if(a[1]!=1) s[++top]=a[1];\n    for(int i=2; i&lt;=k; i++){ //\u679a\u4e3e\u67e5\u8be2\u70b9\n        int l=lca(s[top],a[i]);\n        // \u5bf9\u5f53\u524d\u94fe\u8fde\u8fb9,top\u51fa\u6808\n        while(top&gt;1 &amp;&amp; dep[s[top-1]]&gt;=dep[l]) \n        add(s[top-1],s[top]), top--;\n        // \u5bf9lca\u548ctop\u8fde\u8fb9,top\u51fa\u6808,lca\u5165\u6808\n        if(l!=s[top]) add(l,s[top]), s[top]=l;\n        // \u67e5\u8be2\u70b9\u5165\u6808\n        s[++top]=a[i];\n    }\n    while(top) //\u5bf9\u6700\u540e\u4e00\u6761\u94fe\u8fde\u8fb9,top\u51fa\u6808\n        add(s[top-1],s[top]), top--;\n}\nvoid DP(int x){ //\u6811\u5f62DP\n    if(siz[x]){   //x\u662f\u67e5\u8be2\u70b9\n        for(int i=h[x]; i; i=ne[i]){\n        DP(to[i]);\n        if(siz[to[i]]) ans++, siz[to[i]]=0;\n        }\n    }\n    else{ //x\u4e0d\u662f\u67e5\u8be2\u70b9\n        for(int i=h[x]; i; i=ne[i]){\n        DP(to[i]);\n        siz[x]+=siz[to[i]], siz[to[i]]=0;\n        }\n        if(siz[x]&gt;1) ans++, siz[x]=0;\n    }\n    h[x]=0; //\u6e05\u7a7a\n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;n;i++){\n        int x,y; scanf(\"%d%d\",&amp;x,&amp;y);\n        add(x,y); add(y,x);\n    }\n    dfs(1,0);\n    memset(h+1,0,n&lt;&lt;2);\n    memset(siz/\u6e05\u7a7a\n    scanf(\"%d\",&amp;q);\n    while(q--){ \n        scanf(\"%d\",&amp;k);\n        bool flag=0; siz[1]=0; //\u6e05\u7a7a\n        for(int i=1; i&lt;=k; i++)\n        scanf(\"%d\",&amp;a[i]),siz[a[i]]=1;\n        for(int i=1; i&lt;=k; i++)\n        if(siz[fa[a[i]][0]]){ //\u65e0\u89e3\n            while(k) siz[a[k--]]=0; //\u6e05\u7a7a\n            puts(\"-1\"); flag=1; break;\n        }\n        if(flag) continue;\n        build();\n        ans=0; DP(1);\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E6%A0%91%E8%AE%BA/%E8%99%9A%E6%A0%91/#2-sdoi2011","title":"\u4f8b\u9898 #2 [SDOI2011] \u6d88\u8017\u6218","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5728\u4e00\u573a\u6218\u4e89\u4e2d\uff0c\u6218\u573a\u7531 \\(n\\) \u4e2a\u5c9b\u5c7f\u548c \\(n-1\\) \u4e2a\u6865\u6881\u7ec4\u6210\uff0c\u4fdd\u8bc1\u6bcf\u4e24\u4e2a\u5c9b\u5c7f\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8def\u5f84\u53ef\u8fbe\u3002\u73b0\u5728\uff0c\u6211\u519b\u5df2\u7ecf\u4fa6\u67e5\u5230\u654c\u519b\u7684\u603b\u90e8\u5728\u7f16\u53f7\u4e3a \\(1\\) \u7684\u5c9b\u5c7f\uff0c\u800c\u4e14\u4ed6\u4eec\u5df2\u7ecf\u6ca1\u6709\u8db3\u591f\u591a\u7684\u80fd\u6e90\u7ef4\u7cfb\u6218\u6597\uff0c\u6211\u519b\u80dc\u5229\u5728\u671b\u3002\u5df2\u77e5\u5728\u5176\u4ed6 \\(k\\) \u4e2a\u5c9b\u5c7f\u4e0a\u6709\u4e30\u5bcc\u80fd\u6e90\uff0c\u4e3a\u4e86\u9632\u6b62\u654c\u519b\u83b7\u53d6\u80fd\u6e90\uff0c\u6211\u519b\u7684\u4efb\u52a1\u662f\u70b8\u6bc1\u4e00\u4e9b\u6865\u6881\uff0c\u4f7f\u5f97\u654c\u519b\u4e0d\u80fd\u5230\u8fbe\u4efb\u4f55\u80fd\u6e90\u4e30\u5bcc\u7684\u5c9b\u5c7f\u3002\u7531\u4e8e\u4e0d\u540c\u6865\u6881\u7684\u6750\u8d28\u548c\u7ed3\u6784\u4e0d\u540c\uff0c\u6240\u4ee5\u70b8\u6bc1\u4e0d\u540c\u7684\u6865\u6881\u6709\u4e0d\u540c\u7684\u4ee3\u4ef7\uff0c\u6211\u519b\u5e0c\u671b\u5728\u6ee1\u8db3\u76ee\u6807\u7684\u540c\u65f6\u4f7f\u5f97\u603b\u4ee3\u4ef7\u6700\u5c0f\u3002</p> <p>\u4fa6\u67e5\u90e8\u95e8\u8fd8\u53d1\u73b0\uff0c\u654c\u519b\u6709\u4e00\u53f0\u795e\u79d8\u673a\u5668\u3002\u5373\u4f7f\u6211\u519b\u5207\u65ad\u6240\u6709\u80fd\u6e90\u4e4b\u540e\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u7528\u90a3\u53f0\u673a\u5668\u3002\u673a\u5668\u4ea7\u751f\u7684\u6548\u679c\u4e0d\u4ec5\u4ec5\u4f1a\u4fee\u590d\u6240\u6709\u6211\u519b\u70b8\u6bc1\u7684\u6865\u6881\uff0c\u800c\u4e14\u4f1a\u91cd\u65b0\u968f\u673a\u8d44\u6e90\u5206\u5e03\uff08\u4f46\u53ef\u4ee5\u4fdd\u8bc1\u7684\u662f\uff0c\u8d44\u6e90\u4e0d\u4f1a\u5206\u5e03\u5230 \\(1\\) \u53f7\u5c9b\u5c7f\u4e0a\uff09\u3002\u4e0d\u8fc7\u4fa6\u67e5\u90e8\u95e8\u8fd8\u53d1\u73b0\u4e86\u8fd9\u53f0\u673a\u5668\u53ea\u80fd\u591f\u4f7f\u7528 \\(m\\) \u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u628a\u6bcf\u6b21\u4efb\u52a1\u5b8c\u6210\u5373\u53ef\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 \\(n\\)\uff0c\u8868\u793a\u5c9b\u5c7f\u6570\u91cf\u3002</p> <p>\u63a5\u4e0b\u6765 \\(n-1\\) \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 \\(u,v,w\\) \uff0c\u8868\u793a \\(u\\) \u53f7\u5c9b\u5c7f\u548c \\(v\\) \u53f7\u5c9b\u5c7f\u7531\u4e00\u6761\u4ee3\u4ef7\u4e3a \\(w\\) \u7684\u6865\u6881\u76f4\u63a5\u76f8\u8fde\u3002</p> <p>\u7b2c \\(n+1\\) \u884c\uff0c\u4e00\u4e2a\u6574\u6570 \\(m\\) \uff0c\u4ee3\u8868\u654c\u65b9\u673a\u5668\u80fd\u4f7f\u7528\u7684\u6b21\u6570\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\uff0c\u7b2c \\(i\\) \u884c\u4e00\u4e2a\u6574\u6570 \\(k_i\\) \uff0c\u4ee3\u8868\u7b2c \\(i\\) \u6b21\u540e\uff0c\u6709 \\(k_i\\) \u4e2a\u5c9b\u5c7f\u8d44\u6e90\u4e30\u5bcc\u3002\u63a5\u4e0b\u6765 \\(k_i\\) \u4e2a\u6574\u6570 \\(h_1,h_2,..., h_{k_i}\\) \uff0c\u8868\u793a\u8d44\u6e90\u4e30\u5bcc\u5c9b\u5c7f\u7684\u7f16\u53f7\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u5171 \\(m\\) \u884c\uff0c\u8868\u793a\u6bcf\u6b21\u4efb\u52a1\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002</p> <ul> <li>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(2\\leq n \\leq 2.5\\times 10^5, 1\\leq m\\leq 5\\times 10^5, \\sum k_i \\leq 5\\times 10^5, 1\\leq k_i&lt; n, h_i\\neq 1, 1\\leq u,v\\leq n, 1\\leq w\\leq 10^5\\) \u3002</li> </ul> <p>\u89e3\u51b3\u865a\u6570\u95ee\u9898\u8981\u8003\u8651\u5230\u4e24\u70b9</p> <ul> <li> <p>\u6700\u57fa\u7840\u7684\u6811\u5f62dp\u6a21\u578b\u548c\u65b9\u6cd5</p> </li> <li> <p>\u53ef\u4ee5\u4f7f\u7528\u865a\u6570\u6765\u53bb\u9664\u65e0\u7528\u6570\u636e\u548c\u964d\u4f4e\u590d\u6742\u5ea6</p> </li> </ul> <p>\u90a3\u4e48\u6211\u4eec\u5148\u8003\u8651\u7b2c\u4e00\u6761\u3002\u90a3\u4e48\u5c31\u662f\u6811\u5f62dp\u3002\u6211\u4eec\u77e5\u9053\u500d\u589e\u53ef\u4ee5\u5904\u7406\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u500d\u589e\u7ef4\u62a4\u6811\u4e0a\u4efb\u610f\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u503c\u3002\u6211\u4eec\u5728\u6811\u5f62dp\u65f6\u8bbef_i\u4e3a\u4f7f\u5f97i\u8282\u70b9\u7684\u7236\u4eb2\u4e0d\u80fd\u5230\u8fbei\u8282\u70b9\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5173\u952e\u70b9\u7684\u6700\u5c0f\u8d39\u7528\u5373\u53ef\u3002</p> <p>\u90a3\u4e48\u5728\u6784\u5efa\u865a\u6811\u65f6\uff0c\u6211\u4eec\u7528\u6811\u4e0a\u500d\u589e\u5feb\u901f\u5904\u7406\u51fa\u4e24\u4e2a\u5173\u952e\u70b9u,v\uff08\u6216\u8005\u5173\u952e\u70b9u\u4e0eLCA v\uff09\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u8fb9\u6743w\uff0c\u5c06\u865a\u6811u-v\u7684\u6743\u503c\u8bbe\u7f6e\u4e3aw\uff0c\u8dd1\u6811\u4e0adp\u5373\u53ef\u3002</p> <p>\u8fd9\u8981\u6c42\u6211\u4eec\u6784\u5efa\u865a\u6811\u7684\u590d\u6742\u5ea6\u5fc5\u987b\u4e0en\u65e0\u5173\u800c\u4e0ek\u6709\u5173\u3002\u800c\u5efa\u865a\u6811\u6070\u597d\u6ee1\u8db3\u3002</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define err cerr &lt;&lt; \"Error\"\n#define rd read()\n// #define nl putc('\\n')\n#define ot write\n#define nl putchar('\\n')\nint rd {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int INF = 1e13;\nconst int N = 2e5 + 5;\nconst int M = 1e6 + 5;\nconst int S = 1e6 + 5;\nconst int maxlog = 10;\nstruct data {\n  int v, nxt, val;\n} edge[2 * N];\nint alist[N];\nint cnt;\nint n;\nvoid add(int u, int v, int val) {\n  edge[++cnt].v = v;\n  edge[cnt].nxt = alist[u];\n  alist[u] = cnt;\n  edge[cnt].val = val;\n}\nint dfu,dfin[N],dfou[N],fa[22][N],mi[N],dep[N];\nvoid dfs(int x) \n{\n  dfin[x] = ++dfu;\n  for (int i = 1; fa[i - 1][x]; i++) {\n    fa[i][x] = fa[i - 1][fa[i - 1][x]];\n  }\n  int nxt = alist[x];\n  while (nxt) {\n    int v = edge[nxt].v;\n    int val = edge[nxt].val;\n    if (dfin[v] == 0) {\n      dep[v] = dep[x] + 1;\n      mi[v] = min(mi[x], val);\n      fa[0][v] = x;\n      dfs(v);\n    }\n    nxt = edge[nxt].nxt;\n  }\n  dfou[x] = ++dfu;\n  return;\n}\nint lca(int u, int v) \n{\n  if (dep[u] &lt; dep[v])\n    swap(u, v);\n  int del = dep[u] - dep[v];\n  for (int i = 0; del; del &gt;&gt;= 1, i++) {\n    if (del &amp; 1) {\n      u = fa[i][u];\n    }\n  }\n  if (u == v) {\n    return u;\n  }\n  for (int i = 20; i &gt;= 0; i--) {\n    if (fa[i][u] != fa[i][v]) {\n      u = fa[i][u];\n      v = fa[i][v];\n    }\n  }\n  return fa[0][v];\n}\nint tr[4 * N];\nstack&lt;int&gt; s;\nint m;\nbool book[N];\nint sum[N];       \nbool cmp(int x, int y)\n{\n  int k1 = (x &gt; 0) ? dfin[x] : dfou[-x];\n  int k2 = (y &gt; 0) ? dfin[y] : dfou[-y];\n  return k1 &lt; k2;\n}\nsigned main() {\n  scanf(\"%lld\", &amp;n);\n  for (int i = 1; i &lt; n; i++) {\n    int u, v, val;\n    scanf(\"%lld%lld%lld\", &amp;u, &amp;v, &amp;val);\n    add(u, v, val);\n    add(v, u, val);\n  }\n  mi[1] = 0x7f7f7f7f;\n  dfs(1);\n  scanf(\"%lld\", &amp;m);\n  for (int i = 1; i &lt;= m; i++) {\n    int cot;\n    scanf(\"%lld\", &amp;cot);\n    for (int j = 1; j &lt;= cot; j++) {\n      scanf(\"%lld\", &amp;tr[j]);\n      book[tr[j]] = true;\n      sum[tr[j]] = mi[tr[j]];\n    }                                \n    sort(tr + 1, tr + cot + 1, cmp); \n    for (int j = 1; j &lt; cot; j++)    \n    {\n      int lc = lca(tr[j], tr[j + 1]);\n      if (!book[lc]) {\n        tr[++cot] = lc;\n        book[lc] = true;\n      }\n    }\n    int nc = cot;\n    for (int j = 1; j &lt;= nc; j++) {\n      tr[++cot] = -tr[j];\n    } \n    if (!book[1]) {\n      tr[++cot] = 1;\n      tr[++cot] = -1;\n    }\n    sort(tr + 1, tr + cot + 1, cmp); \n    for (int j = 1; j &lt;= cot; j++) {\n      if (tr[j] &gt; 0) {\n        s.push(tr[j]);\n      } \n      else {\n        int now = s.top();\n        s.pop(); \n        if (now != 1) {\n          int fa = s.top();\n          sum[fa] += min(sum[now], mi[now]);\n        } else {\n          printf(\"%lld\\n\", sum[1]);\n        } \n        sum[now] = 0;\n        book[now] = false; \n      }\n    }\n  }\n}\n\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/C%2B%2B%E5%85%B3%E9%94%AE%E5%AD%97%E4%B8%8E%E7%94%9F%E5%83%BBSTL/","title":"C++\u5173\u952e\u5b57\u4e0e\u751f\u50fbSTL","text":"<p>C++\u5173\u952e\u5b57\u4e0e\u751f\u50fbSTL</p> A \u2013 C D \u2013 P R \u2013 Z <code>[alignas](https://en.cppreference.com/w/cpp/keyword/alignas)</code> (C+/xor_eq)`"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/C%2B%2B%E5%85%B3%E9%94%AE%E5%AD%97%E4%B8%8E%E7%94%9F%E5%83%BBSTL/#stl","title":"STL\u51fd\u6570","text":"<ul> <li><code>unique</code>\u53bb\u9664\u5bb9\u5668\u4e2d\u76f8\u90bb\u7684\u91cd\u590d\u5143\u7d20\u3002<code>unique(ForwardIterator first, ForwardIterator last)</code>\uff0c\u8fd4\u56de\u503c\u4e3a\u6307\u5411 \u53bb\u91cd\u540e \u5bb9\u5668\u7ed3\u5c3e\u7684\u8fed\u4ee3\u5668\uff0c\u539f\u5bb9\u5668\u5927\u5c0f\u4e0d\u53d8\uff08\u591a\u4e8e\u7684\u5143\u7d20\u653e\u5728\u6700\u540e\u800c\u4e0d\u4f1a\u6d88\u5931\uff09\u3002\u4e0e <code>sort</code> \u7ed3\u5408\u4f7f\u7528\u53ef\u4ee5\u5b9e\u73b0\u5b8c\u6574\u5bb9\u5668\u53bb\u91cd\u3002\u8fd4\u56de\u503c\u4e3a\u6307\u9488\uff0c\u53d6\u5730\u5740\u540e\u4e3aunique\u540e\u4e0d\u540c\u503c\u7684\u6570\u91cf\u3002</li> </ul> <pre><code>int n,m,p,q,T,a[N],ans;\nsigned main(){\n    cin&gt;&gt;n;\n    for(int i=2;i&lt;=n+1;i++)cin&gt;&gt;a[i];\n    sort(a+2,a+n+2);\n    auto val=unique(a+2,a+n+2);\n\n    cout&lt;&lt;\"val=\"&lt;&lt;val&lt;&lt;endl;\n    cout&lt;&lt;\"*val=\"&lt;&lt;*val&lt;&lt;endl;\n    cout&lt;&lt;\"&amp;val=\"&lt;&lt;&amp;val&lt;&lt;endl;\n    for(int i=1;i&lt;=n;i++)cout&lt;&lt;a[i]&lt;&lt;' ';\n}\n</code></pre> <pre><code>5\n1 1 2 3 4\nval=0x7ff73a62a0a8\n*val=4\n&amp;val=0x4318fff788\n1 2 3 4 4\n</code></pre> <ul> <li><code>lower_bound</code> \u5728\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217\u4e2d\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u8fd4\u56de\u6307\u5411\u7b2c\u4e00\u4e2a \u5927\u4e8e\u7b49\u4e8e x \u7684\u5143\u7d20\u7684\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u5143\u7d20\uff0c\u5219\u8fd4\u56de\u5c3e\u8fed\u4ee3\u5668\u3002`lower_bound(v.begin(),v.end(),x)```\u3002</li> </ul> <pre><code>int n,m,p,q,T,a[N],ans;\nsigned main(){\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++)cin&gt;&gt;a[i];\n    sort(a+1,a+n+1);\n    cin&gt;&gt;m;\n    auto val=lower_bound(a+1,a+n+1,m);\n    cout&lt;&lt;\"val=\"&lt;&lt;val&lt;&lt;endl;\n    cout&lt;&lt;\"*val=\"&lt;&lt;*val&lt;&lt;endl;\n    cout&lt;&lt;\"&amp;val=\"&lt;&lt;&amp;val&lt;&lt;endl;\n    cout&lt;&lt;\"val-a=\"&lt;&lt;val-a&lt;&lt;endl;\n}\n</code></pre> <pre><code>5\n1 3 4 7 8\n6\nval=0x7ff76767a0a0\n*val=7\n&amp;val=0x9e41bffb80\nval-a=4\n</code></pre> <ul> <li><code>nth_element</code>\uff1a\u6309\u6307\u5b9a\u8303\u56f4\u8fdb\u884c\u5206\u7c7b\uff0c\u5373\u627e\u51fa\u5e8f\u5217\u4e2d\u7b2cmid \u5927\u7684\u5143\u7d20\uff0c\u4f7f\u5176\u5de6\u8fb9\u5747\u4e3a\u5c0f\u4e8e\u5b83\u7684\u6570\uff0c\u53f3\u8fb9\u5747\u4e3a\u5927\u4e8e\u5b83\u7684\u6570\u3002<code>nth_element(v.begin(), v.begin() + mid, v.end(), cmp)</code> \u6216 nth_element(a + begin, a + begin + mid, a + end, cmp)\u3002</li> </ul> <pre><code>int n,m,p,q,T,a[N],ans;\nsigned main(){\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++)cin&gt;&gt;a[i];\n    cin&gt;&gt;m;\n    nth_element(a+1,a+m+1,a+n+1);\n    for(int i=1;i&lt;=n;i++)cout&lt;&lt;a[i]&lt;&lt;' ';\n}\n</code></pre> <pre><code>5\n3 7 6 4 1\n3\n3 1 4 6 7\n</code></pre> <ul> <li><code>next_permutation</code>\uff0c\u91cd\u65b0\u6392\u5217\u8303\u56f4\u5185\u7684\u5143\u7d20[\u7b2c\u4e00\uff0c\u6700\u540e\u4e00\u4e2a\uff09\u8fd4\u56de\u6309\u7167**\u5b57\u5178\u5e8f\u6392\u5217**\u7684\u4e0b\u4e00\u4e2a\u503c\u8f83\u5927\u7684\u7ec4\u5408\u3002\u8fd4\u56de\u503c\u4e3abool\uff0c\u5f53\u6709\u4e0b\u4e00\u4e2a\u6392\u5217\u53ef\u7528\u65f6\u8fd4\u56de1\uff0c\u6392\u5217\u7a77\u5c3d\u65f6\u8fd4\u56de0\uff0c\u5982\u679c\u7ee7\u7eed\u8fd0\u884c\u5219\u8fd4\u56de\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u60c5\u51b5\u91cd\u65b0\u5f00\u59cb\u3002</li> </ul> <pre><code>int n,m,p,q,T,a[N],ans;\nsigned main(){\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++)cin&gt;&gt;a[i];\n    cin&gt;&gt;m;\n    while(m--){\n        next_permutation(a+1,a+n+1);\n        for(int i=1;i&lt;=n;i++)cout&lt;&lt;a[i]&lt;&lt;' ';\n        cout&lt;&lt;'\\n';\n    }\n}\n</code></pre> <pre><code>5\n1 2 3 4 5\n6\n1 2 3 5 4\n1 2 4 3 5\n1 2 4 5 3\n1 2 5 3 4\n1 2 5 4 3\n1 3 2 4 5\n</code></pre> <ul> <li> <p><code>rand()</code> \u968f\u673a\u6570</p> </li> <li> <p>https://blog.csdn.net/onion23/article/details/118558454</p> </li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/C%2B%2B%E5%85%B3%E9%94%AE%E5%AD%97%E4%B8%8E%E7%94%9F%E5%83%BBSTL/#stl_1","title":"STL\u7ed3\u6784","text":""},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/C%2B%2B%E5%85%B3%E9%94%AE%E5%AD%97%E4%B8%8E%E7%94%9F%E5%83%BBSTL/#set","title":"Set","text":"<p>\u4f7f\u7528Set\u4fbf\u6377\u7ef4\u62a4\u533a\u95f4\u91cd\u53e0\u95ee\u9898</p> <p>www.luogu.com.cn</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/C%2B%2B%E5%85%B3%E9%94%AE%E5%AD%97%E4%B8%8E%E7%94%9F%E5%83%BBSTL/#rope","title":"Rope","text":"<p><code>rope</code>\u5757\u72b6\u94fe\u8868\uff0c\u7528\u6cd5\u540cvector\uff0c\u5220\u9664x\u4e2a\u5143\u7d20<code>erase(pos,x)</code>,\u63d2\u5165<code>insert(pos,v)</code></p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/C%2B%2B%E5%85%B3%E9%94%AE%E5%AD%97%E4%B8%8E%E7%94%9F%E5%83%BBSTL/#bitset","title":"Bitset","text":"<p>\u4e0d\u4ec5\u4ec5\u662f01\u6570\u7ec4\uff0c\u8fd8\u6709\u66f4\u4f18\u79c0\u7684\u64cd\u4f5c\u3002\u548cvector\u4e00\u6837\u5c5e\u4e8e\u539f\u751f\u538b\u4f4d\u7684\u3002 <p>\u597d\u4f8b\u9898</p> <p>www.luogu.com.cn</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/C%2B%2B%E5%85%B3%E9%94%AE%E5%AD%97%E4%B8%8E%E7%94%9F%E5%83%BBSTL/#union","title":"union","text":"<p>\u4ee5\u4e0b\u4ee3\u7801</p> <pre><code>union node{\n    int a;\n    char b;\n}s;\n\nsigned main(){\n    cin&gt;&gt;s.a&gt;&gt;s.b;\n    cout&lt;&lt;s.b&lt;&lt;endl&lt;&lt;s.a;\n\n    return 0;\n}\n</code></pre> <pre><code>in: 456 c\nout: c 99\n</code></pre> <p>\u5373\u6539\u53d8\u8981\u6c42\uff0c\u4f1a\u628a\u5176\u4ed6\u7684\u90fd\u53d8\u6210\u6539\u503c\u5bf9\u5e94\u7c7b\u578b\u7684\u503c\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%89%8D%E7%BC%80%E5%92%8C/","title":"\u524d\u7f00\u548c","text":"<p>\u9898\u89e3 | [SCOI2006] \u6570\u5b57\u7acb\u65b9\u4f53</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%B7%AE%E5%88%86/","title":"\u5dee\u5206","text":""},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%B7%AE%E5%88%86/#_2","title":"\u5dee\u5206\u5b9e\u8d28\u63a2\u7a76","text":"<p>\u7ec3\u4e60 | CF\u667a\u529b\u9898Fibonacci Additions</p> <p>\u5dee\u5206\u7684\u5b9e\u8d28\uff1a\u533a\u95f4\u52a0\u540c\u4e00\u4e2a\u6570\u53ef\u4ee5\u5dee\u5206\u662f\u56e0\u4e3a\u589e\u91cf\u5e8f\u5217\u7684\u9012\u63a8\u5f0f\u4e3a a_i\u200b=a_{i\u22121}\u200b\uff0c\u800c\u540e\u4e00\u4e2a\u6570\u51cf\u53bb\u524d\u4e00\u4e2a\u6570\u6b63\u597d\u62b5\u6d88\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%B7%AE%E5%88%86/#_3","title":"\u4e8c\u7ef4\u5dee\u5206","text":"<p>\u5dee\u5206\u2014\u2014\uff082\uff09\u4e8c\u7ef4\u5dee\u5206-CSDN\u535a\u5ba2</p> <p>\u5982\u679c\u6211\u4eec\u8981\u5728\u5de6\u4e0a\u89d2\u662f (x1,y1)\uff0c\u53f3\u4e0b\u89d2\u662f (x2,y2) \u7684\u77e9\u5f62\u533a\u95f4\u6bcf\u4e2a\u503c\u90fd +c\uff0c\u4ee3\u7801\u5982\u4e0b</p> <pre><code>diff[x1][y1] += c;\ndiff[x1][y2+1] -=c;\ndiff[x2+1][y1] -=c;\ndiff[x2+1][y2+1] += c;\n</code></pre> <p>\u4e8c\u7ef4\u5dee\u5206\u7684\u590d\u539f</p> <pre><code>for(int i=1;i&lt;=n;i++){\n    for(int j=1;j&lt;=n;j++){\n        q[i][j]+=q[i-1][j]+q[i][j-1]-q[i-1][j-1];\n    }\n}\n</code></pre> <p>\u4e00\u4e2a\u5f88\u611a\u8822\u7684\u9519\u8bef</p> <pre><code>for(int i=1;i&lt;=n;i++){\n    for(int j=1;j&lt;=n;j++){\n        a[i][j]=q[i][j]+q[i-1][j]+q[i][j-1]-q[i-1][j-1];\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%B7%AE%E5%88%86/#_4","title":"\u6811\u4e0a\u5dee\u5206","text":"<p>\u5bf9\u4e8e\u4e00\u9897\u5dee\u5206\u6811\uff0c\u6211\u4eec\u5728\u8282\u70b9u\u52a0\u4e0aval\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u628au\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u52a0\u4e0a\u4e86val\u3002\u90a3\u4e48\u52a0\u4e0av\u662f\u8fd9\u6761\u8def\u5f84\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5728v\u4e0a-val\u5c31\u76f8\u5f53\u4e8e\u628a\u8def\u5f84u-v\u52a0\u4e0a\u4e86val\u3002</p> <p>\u753b\u56fe\u5f88\u597d\u7406\u89e3\u3002\u6211\u4eec\u8981\u6e05\u695a\u6811\u4e0a\u524d\u7f00\u548c\u662f\u600e\u4e48\u6837\u7684\u5c31\u5bb9\u6613\u7406\u89e3\u4e86\u3002</p> <p>\u6240\u4ee5\u5bf9\u4e8e\u5728\u6811\u4e0a\u628a\u8def\u5f84u-v\u90fd\u52a0\u4e0aval\u7684\u5dee\u5206\u65b9\u6cd5\u5c31\u662f \\(tr_u+val,tr_v+val,tr_{lca(u,v)}-val,tr_{fa[lca(u,v)]}-2\\times val\\) </p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%B9%BF%E6%90%9C/","title":"\u5e7f\u641c","text":""},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%B9%BF%E6%90%9C/#1","title":"\u4f8b\u9898 #1 \u8d70\u8ff7\u5bab","text":"<p>\u6ce8\u610f\uff0cP1238 \u662fdfs\u800c\u4e0d\u662fbfs\u54e6\uff0c\u4e0d\u8981\u770b\u5230\u8d70\u8ff7\u5bab\u5c31\u4ee5\u4e3a\u662fbfs</p> <p>\u3010\u9898\u76ee\u63cf\u8ff0\u3011</p> <p>\u5f53\u4f60\u7ad9\u5728\u4e00\u4e2a\u8ff7\u5bab\u91cc\u7684\u65f6\u5019\uff0c\u5f80\u5f80\u4f1a\u88ab\u9519\u7efc\u590d\u6742\u7684\u9053\u8def\u5f04\u5f97\u5931\u53bb\u65b9\u5411\u611f\uff0c\u5982\u679c\u4f60\u80fd\u5f97\u5230\u8ff7\u5bab\u5730\u56fe\uff0c\u4e8b\u60c5\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002</p> <p>\u5047\u8bbe\u4f60\u5df2\u7ecf\u5f97\u5230\u4e86\u4e00\u4e2an\u00d7m\u7684\u8ff7\u5bab\u7684\u56fe\u7eb8\uff0c\u8bf7\u4f60\u627e\u51fa\u4ece\u8d77\u70b9\u5230\u51fa\u53e3\u7684\u6700\u77ed\u8def\u3002</p> <p>\u3010\u8f93\u5165\u3011</p> <p>\u7b2c\u4e00\u884c\u662f\u4e24\u4e2a\u6574\u6570n\u548cm(1\u2264n,m\u2264100)\uff0c\u8868\u793a\u8ff7\u5bab\u7684\u884c\u6570\u548c\u5217\u6570\u3002</p> <p>\u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u957f\u4e3am\u7684\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u6574\u4e2a\u8ff7\u5bab\u7684\u5e03\u5c40\u3002\u5b57\u7b26<code>.</code>\u8868\u793a\u7a7a\u5730\uff0c<code>#</code>\u8868\u793a\u5899\uff0c<code>S</code>\u8868\u793a\u8d77\u70b9\uff0c<code>T</code>\u8868\u793a\u51fa\u53e3\u3002</p> <p>\u3010\u8f93\u51fa\u3011</p> <p>\u8f93\u51fa\u4ece\u8d77\u70b9\u5230\u51fa\u53e3\u6700\u5c11\u9700\u8981\u8d70\u7684\u6b65\u6570\u3002</p> <p>\u3010\u8f93\u5165\u6837\u4f8b\u3011</p> <pre><code>3 3\nS#T\n.#.\n...\n</code></pre> <p>\u4ee3\u7801</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N=105;\n\nstruct node{\n    int x,y;\n};\nqueue&lt;node&gt;q;\n\nint a[N][N], n, m, ans, d[N][N],vis[N][N];\nint fromx, fromy, ansx, ansy;\nint dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1};\n\n\nvoid bfs() {\n    d[fromx][fromy] = 0;\n    vis[fromx][fromy] = 1;\n    q.push((node){fromx, fromy});\n    while (q.size()) {\n        node u = q.front();\n        q.pop();\n\n        if(u.x==ansx&amp;&amp;u.y==ansy){\n            cout &lt;&lt; d[ansx][ansy] &lt;&lt; endl;\n            return ;\n        }\n\n        for (int k = 0; k &lt; 4; k++) {\n            int xx = u.x + dx[k], yy = u.y + dy[k];\n\n            if (xx &lt; 1 || xx &gt; n || yy &lt; 1 || yy &gt; m || vis[xx][yy])continue;\n            if(!a[xx][yy])continue;\n\n            q.push((node){xx,yy});\n            d[xx][yy] = d[u.x][u.y] + 1;\n            vis[xx][yy]=1;\n        }\n    }\n\n}\n\nint main() {\n    cin &gt;&gt; n &gt;&gt; m;\n\n    for (int i = 1; i &lt;= n; i++)\n        for (int j = 1; j &lt;= m; j++) {\n            char c;\n            cin &gt;&gt; c;\n            if (c == 'S')fromx = i, fromy = j;\n            if (c == 'T')ansx = i, ansy = j;\n            if (c == '.' || c == 'S' || c == 'T')a[i][j] = 1;\n        }\n    bfs();\n    return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%B9%BF%E6%90%9C/#bfs","title":"\u90e8\u5206\u533a\u57df\u9650\u5236\u901a\u8fc7\u7684bfs","text":"<p>www.luogu.com.cn</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%B9%BF%E6%90%9C/#bfsbfs","title":"\u901a\u8fc7\u65f6\u95f4\u4e0d\u540c\u7684bfs\uff08\u5dee\u65f6bfs\uff09","text":"<p>\u7ec3\u4e60 | \u8f66\u4e07\uff08\u4e1c\u65b9\uff09\u7684\u9898</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%BF%AB%E8%AF%BB%E4%B8%8E%E5%BF%AB%E8%BE%93/","title":"\u5feb\u8bfb\u4e0e\u5feb\u8f93","text":"<p>\u5feb\u8bfb\u5feb\u8f93</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E5%BF%AB%E8%AF%BB%E4%B8%8E%E5%BF%AB%E8%BE%93/#_1","title":"\u5feb\u8bfb&amp;\u5feb\u8f93","text":"<p>\u5feb\u901f\u8bfb\u5165\u6570\u5b57</p> <pre><code>#define rd read()\ninline int read(){\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n</code></pre> <pre><code>#define rd read()\nlong long read(){\n    long long x=0;char ch=getchar();\n    while(ch!=' '||ch!='\\n')ch=getchar(),x=x*10+ch-'0';\n    return x;\n}\n</code></pre> <p>\u5feb\u901f\u8f93\u51fa</p> <pre><code>printf();   //\u5c31\u5dee\u4e0d\u591a\u4e86\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2%E4%BC%98%E5%8C%96/","title":"\u641c\u7d22\u4f18\u5316","text":""},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2%E4%BC%98%E5%8C%96/#_2","title":"\u8fed\u4ee3\u52a0\u6df1","text":"<p>226 \u8fed\u4ee3\u52a0\u6df1 Addition Chains_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p></p> <p>\u6838\u5fc3\u4ee3\u7801</p> <pre><code>    int dep=1;\n    while(!dfs(1))d++;//\u4e00\u76f4d++\u627e\u5230\u627e\u5230\u7b54\u6848 \n    ...\n</code></pre> <p>\u4f8b\u9898</p> <p>Addition Chains</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u4e00\u4e2a\u4e0e \\(n\\) \u6709\u5173\u7684\u6574\u6570\u52a0\u6210\u5e8f\u5217 \\(&lt;a_0,a_1,a_2,...,a_m&gt;\\) \u6ee1\u8db3\u4ee5\u4e0b\u56db\u4e2a\u6761\u4ef6\uff1a $1.a_0=1 $$2.a_m=n $$3.a_0&lt;a_1&lt;a_2&lt;...&lt;a_{m-1}&lt;a_m $\\(4.\\) \u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(k(1\u2264k\u2264m)\\) \u90fd\u5b58\u5728\u6709\u4e24\u4e2a\u6574\u6570 \\(i\\) \u548c \\(j(0\u2264i,j\u2264k-1,i\\) \u548c \\(j\\) \u53ef\u4ee5\u76f8\u7b49 \\()\\) \uff0c\u4f7f\u5f97 $a_k=a_i+a_j $\u4f60\u7684\u4efb\u52a1\u662f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 \\(n\\) ,\u627e\u51fa\u7b26\u5408\u4e0a\u8ff0\u56db\u4e2a\u6761\u4ef6\u7684\u957f\u5ea6\u6700\u5c0f\u7684\u6574\u6570\u52a0\u6210\u5e8f\u5217\u3002\u5982\u679c\u6709\u591a\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684\u7b54\u6848\uff0c\u53ea\u9700\u8981\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u89e3\u5373\u53ef\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5e8f\u5217 \\(&lt;1,2,3,5&gt;\\) \u548c \\(&lt;1,2,4,5&gt;\\) \u5747\u4e3a \\(n=5\\) \u65f6\u7684\u89e3\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u5305\u542b\u591a\u7ec4\u6570\u636e\u3002\u6bcf\u7ec4\u6570\u636e\u4ec5\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 \\(n(1\u2264n\u226410000)\\) \u3002\u5728\u6700\u540e\u4e00\u7ec4\u6570\u636e\u4e4b\u540e\u662f\u4e00\u4e2a \\(0\\) \u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u8f93\u51fa\u4e00\u884c\u6240\u6c42\u7684\u6574\u6570\u52a0\u6210\u5e8f\u5217\uff0c\u6bcf\u4e2a\u6574\u6570\u4e4b\u95f4\u4ee5\u7a7a\u683c\u9694\u5f00\u3002</p> <p>\u611f\u8c22@Iowa_BattleShip \u63d0\u4f9b\u7684\u7ffb\u8bd1</p> <p>\u6837\u4f8b #1</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2%E4%BC%98%E5%8C%96/#1","title":"\u6837\u4f8b\u8f93\u5165 #1","text":"<pre><code>5\n7\n12\n15\n77\n0\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2%E4%BC%98%E5%8C%96/#1_1","title":"\u6837\u4f8b\u8f93\u51fa #1","text":"<pre><code>1 2 4 5\n1 2 4 6 7\n1 2 4 8 12\n1 2 4 5 10 15\n1 2 4 8 9 17 34 68 77\n</code></pre> <p>\u4ee3\u7801</p> <pre><code>\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2%E4%BC%98%E5%8C%96/#_3","title":"\u526a\u679d","text":"<p>\u60f3\u5fc5\u4e0d\u9700\u8981\u591a\u8bf4\u4e86\uff0c\u61c2\u7684\u90fd\u61c2</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2%E4%BC%98%E5%8C%96/#include","title":"include <p>using namespace std; const int N=105;</p> <p>struct node{ int x,y; }; queueq; <p>int a[N][N], n, m, ans, d[N][N],vis[N][N]; int fromx, fromy, ansx, ansy; int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1};</p> <p>void bfs() { d[fromx][fromy] = 0; vis[fromx][fromy] = 1; q.push((node){fromx, fromy}); while (q.size()) { node u = q.front(); q.pop();</p> <pre><code>    if(u.x==ansx&amp;&amp;u.y==ansy){\n        cout &lt;&lt; d[ansx][ansy] &lt;&lt; endl;\n        return ;\n    }\n\n    for (int i = 0; i &lt; 4; i++) {\n        int xx = u.x + dx[i], yy = u.y + dy[i];\n        if (xx &lt; 1 || xx &gt; n || yy &lt; 1 || yy &gt; m || vis[xx][yy])continue;\n        if(!a[xx][yy])continue;\n        q.push((node){xx,yy});\n        d[xx][yy] = d[u.x][u.y] + 1;\n        vis[xx][yy]=1;\n    }\n}\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>cin &gt;&gt; n &gt;&gt; m;\n\nfor (int i = 1; i &lt;= n; i++)\n    for (int j = 1; j &lt;= m; j++) {\n        char c;\n        cin &gt;&gt; c;\n        if (c == 'S')\n            fromx = i, fromy = j;\n        if (c == 'T')\n            ansx = i, ansy = j;\n        if (c == '.' || c == 'S' || c == 'T')\n            a[i][j] = 1;\n    }\nbfs();\nreturn 0;\n</code></pre> <p>}</p>","text":""},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%90%9C%E7%B4%A2%E4%BC%98%E5%8C%96/#_4","title":"\u6298\u534a\u641c\u7d22","text":"<p>\u6298\u534a\u641c\u7d22\u53ef\u4ee5\u8ba9\u6211\u4eec\u7528\\(O(2n^{\\frac{k}{2}})\\)\u5b8c\u6210O(n^k)\u7684\u641c\u7d22\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\u770b\u56fe</p> <p></p> <p>[CEOI2015 Day2] \u4e16\u754c\u51b0\u7403\u9526\u6807\u8d5b</p> <p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u8bd1\u81ea CEOI2015 Day2 T1\u300cIce Hockey World Championship\u300d</p> <p>\u4eca\u5e74\u7684\u4e16\u754c\u51b0\u7403\u9526\u6807\u8d5b\u5728\u6377\u514b\u4e3e\u884c\u3002Bobek \u5df2\u7ecf\u62b5\u8fbe\u5e03\u62c9\u683c\uff0c\u4ed6\u4e0d\u662f\u4efb\u4f55\u56e2\u961f\u7684\u7c89\u4e1d\uff0c\u4e5f\u6ca1\u6709\u65f6\u95f4\u89c2\u5ff5\u3002\u4ed6\u53ea\u662f\u5355\u7eaf\u7684\u60f3\u53bb\u770b\u51e0\u573a\u6bd4\u8d5b\u3002\u5982\u679c\u4ed6\u6709\u8db3\u591f\u7684\u94b1\uff0c\u4ed6\u4f1a\u53bb\u770b\u6240\u6709\u7684\u6bd4\u8d5b\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4ed6\u7684\u8d22\u4ea7\u5341\u5206\u6709\u9650\uff0c\u4ed6\u51b3\u5b9a\u628a\u6240\u6709\u8d22\u4ea7\u90fd\u7528\u6765\u4e70\u95e8\u7968\u3002</p> <p>\u7ed9\u51fa Bobek \u7684\u9884\u7b97\u548c\u6bcf\u573a\u6bd4\u8d5b\u7684\u7968\u4ef7\uff0c\u8bd5\u6c42\uff1a\u5982\u679c\u603b\u7968\u4ef7\u4e0d\u8d85\u8fc7\u9884\u7b97\uff0c\u4ed6\u6709\u591a\u5c11\u79cd\u89c2\u8d5b\u65b9\u6848\u3002\u5982\u679c\u5b58\u5728\u4ee5\u5176\u4e2d\u4e00\u79cd\u65b9\u6848\u89c2\u770b\u67d0\u573a\u6bd4\u8d5b\u800c\u53e6\u4e00\u79cd\u65b9\u6848\u4e0d\u89c2\u770b\uff0c\u5219\u8ba4\u4e3a\u8fd9\u4e24\u79cd\u65b9\u6848\u4e0d\u540c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\uff0c\u4e24\u4e2a\u6b63\u6574\u6570 \\(N\\) \u548c \\(M(1 \\leq N \\leq 40,1 \\leq M \\leq 10^{18})\\)\uff0c\u8868\u793a\u6bd4\u8d5b\u7684\u4e2a\u6570\u548c Bobek \u90a3\u5bb6\u5f92\u56db\u58c1\u7684\u8d22\u4ea7\u3002</p> <p>\u7b2c\u4e8c\u884c\uff0c\\(N\\) \u4e2a\u4ee5\u7a7a\u683c\u5206\u9694\u7684\u6b63\u6574\u6570\uff0c\u5747\u4e0d\u8d85\u8fc7 \\(10^{16}\\)\uff0c\u4ee3\u8868\u6bcf\u573a\u6bd4\u8d5b\u95e8\u7968\u7684\u4ef7\u683c\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u4e00\u884c\uff0c\u8868\u793a\u65b9\u6848\u7684\u4e2a\u6570\u3002\u7531\u4e8e \\(N\\) \u5341\u5206\u5927\uff0c\u6ce8\u610f\uff1a\u7b54\u6848 \\(\\le 2^{40}\\)\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8fd9\u91cc\u4f7f\u7528\u666e\u901a\u641c\u7d22\u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(2^n)\u7684\uff0c\u8fc7\u4e0d\u53bb\u3002\u4f46\u662f\u5982\u679c\u4f7f\u7528\u6298\u534a\u641c\u7d22\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u53d8\u6210\\(O(2\\times 2^{n/2})\\)\uff0c\u53ef\u4ee5\u8fc7\u53bb\u4e86\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/","title":"\u6982\u5ff5","text":""},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/#_2","title":"\u4f18\u5148\u7ea7","text":"<ul> <li>\u4f18\u5148\u7ea7\uff1a\u4efb\u52a1\u5904\u7406\u7684\u7d27\u6025\u7a0b\u5ea6\u6216\u91cd\u8981\u6027\u6392\u5e8f\u3002</li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/#_3","title":"\u54c8\u592b\u66fc\u7f16\u7801","text":"<ul> <li>\u54c8\u592b\u66fc\u7f16\u7801\uff1a\u4e00\u79cd\u57fa\u4e8e\u9891\u7387\u7684\u538b\u7f29\u7b97\u6cd5\uff0c\u7528\u4e8e\u4f18\u5316\u6570\u636e\u5b58\u50a8\u3002</li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/#_4","title":"\u56db\u5143\u7ec4\u8fd0\u7b97","text":"<ul> <li>\u5b9a\u5fc32\u4e2d\u7684\u56db\u5143\u7ec4\u8fd0\u7b97\uff1a\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\uff0c\u6d89\u53ca\u56db\u5143\u6570\u7684\u4e00\u79cd\u8fd0\u7b97\uff0c\u7528\u4e8e\u65cb\u8f6c\u5904\u7406\u3002</li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/#_5","title":"\u53d6\u6a21","text":"<ul> <li>\u53d6\u6a21\uff1aa%b\u7684\u6b63\u8d1f\u53d6\u51b3\u4e8ea\uff0c\u4e0eb\u65e0\u5173\u3002</li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/#_6","title":"\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u9012\u63a8\u8ba1\u7b97","text":"<ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u9012\u63a8\u8ba1\u7b97\uff1a\u901a\u8fc7\u9012\u63a8\u5173\u7cfb\u5206\u6790\u7b97\u6cd5\u8fd0\u884c\u65f6\u95f4\u7684\u589e\u957f\u8d8b\u52bf\u3002</li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/#_7","title":"\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801","text":"<ul> <li>\u6b63\u6570\u4e09\u7801\u76f8\u540c\uff1a\u6b63\u6570\u7684\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801\u76f8\u540c\uff1b\u8d1f\u6570\u7684\u8865\u7801\u662f\u53cd\u7801+1\u3002</li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/#_8","title":"\u540e\u7f00\u8868\u8fbe\u5f0f\u7684\u89c4\u5219","text":"<p>\u5148\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u5165\u6808</p> <p>\u5f53\u662f\u6570\u5b57\u7684\u65f6\u5019\u76f4\u63a5\u5165\u6808</p> <p>\u5f53\u662f\u8fd0\u7b97\u7b26\u53f7\u7684\u65f6\u5019</p> <p>\u5c31\u5c06\u6808\u7684\u6700\u4e0a\u9762\u4e24\u4e2a\u6570\u62ff\u51fa\u8fdb\u884c\u8fd0\u7b97 \u540e \u518d\u5c06\u7ed3\u679c\u8fdb\u6808 \u8bb0\u4f4f\uff08\u6808\u9876\u5143\u7d20\u6c38\u8fdc\u5728\u8fd0\u7b97\u7b26\u53f7\u7684\u53f3\u8fb9\uff09</p> <p>**\u4e2d\u7f00\u8868\u8fbe\u5f0f**\u5c31\u662f\u56db\u5219\u8fd0\u7b97\u8868\u8fbe\u5f0f</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/#topu","title":"topu\u6392\u5e8f","text":"<p>\u62d3\u6251\u6392\u5e8f\u5e38\u7528\u6765\u786e\u5b9a\u4e00\u4e2a\u4f9d\u8d56\u5173\u7cfb\u96c6\u4e2d\uff0c\u4e8b\u7269\u53d1\u751f\u7684\u987a\u5e8f\u3002\u4f8b\u5982\uff0c\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5c06\u9879\u76ee\u62c6\u5206\u6210A\u3001B\u3001C\u3001D\u56db\u4e2a\u5b50\u90e8\u5206\u6765\u5b8c\u6210\uff0c\u4f46A\u4f9d\u8d56\u4e8eB\u548cD\uff0cC\u4f9d\u8d56\u4e8eD\u3002\u4e3a\u4e86\u8ba1\u7b97\u8fd9\u4e2a\u9879\u76ee\u8fdb\u884c\u7684\u987a\u5e8f\uff0c\u53ef\u5bf9\u8fd9\u4e2a\u5173\u7cfb\u96c6\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u5f97\u51fa\u4e00\u4e2a\u7ebf\u6027\u7684\u5e8f\u5217\uff0c\u5219\u6392\u5728\u524d\u9762\u7684\u4efb\u52a1\u5c31\u662f\u9700\u8981\u5148\u5b8c\u6210\u7684\u4efb\u52a1\u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u5f97\u5230\u7684\u6392\u5e8f\u5e76\u4e0d\u662f\u552f\u4e00\u7684\uff01\u5c31\u597d\u50cf\u4f60\u65e9\u4e0a\u7a7f\u8863\u670d\u53ef\u4ee5\u5148\u7a7f\u4e0a\u8863\u4e5f\u53ef\u4ee5\u5148\u7a7f\u88e4\u5b50\uff0c\u53ea\u8981\u91cc\u9762\u7684\u8863\u670d\u5728\u5916\u9762\u7684\u8863\u670d\u4e4b\u524d\u7a7f\u5c31\u884c\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/#x","title":"X\u5e8f\u904d\u5386","text":"<ul> <li> <p>\u524d\u5e8f(\u6839\u5de6\u53f3)\uff08\u5373\u70b9\u5728\u7b2c\u4e00\u6b21\u8bbf\u95ee\u5230\u65f6\u8bb0\u5f55\uff0c\u3010\u8f93\u51fa|\u5de6|\u53f3\u3011\uff09</p> </li> <li> <p>\u4e2d\u5e8f(\u5de6\u6839\u53f3)\uff08\u5373\u70b9\u5728\u5de6\u5b50\u6811\u56de\u6eaf\u540e\u8bb0\u5f55\uff0c\u3010\u5de6|\u8f93\u51fa|\u53f3\u3011\uff09</p> </li> <li> <p>\u540e\u5e8f(\u5de6\u53f3\u6839)\uff08\u5373\u70b9\u5728\u56de\u6eaf\u65f6\u8bb0\u5f55\uff0c\u3010\u5de6|\u53f3|\u8f93\u51fa\u3011\uff09</p> </li> </ul> <p>\u524d\u5e8f\u5c31\u662fdfs\u5e8f\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/#_9","title":"\u904d\u5386\u95ee\u9898","text":"<p>\u6211\u4eec\u90fd\u5f88\u719f\u6089\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f\u904d\u5386\uff0c\u5728\u6570\u636e\u7ed3\u6784\u4e2d\u5e38\u63d0\u51fa\u8fd9\u6837\u7684\u95ee\u9898\uff1a\u5df2\u77e5\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\uff0c\u6c42\u5b83\u7684\u540e\u5e8f\u904d\u5386\uff0c\u76f8\u5e94\u7684\uff0c\u5df2\u77e5\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u4f60\u4e5f\u80fd\u6c42\u51fa\u5b83\u7684\u524d\u5e8f\u904d\u5386\u3002\u7136\u800c\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u548c\u540e\u5e8f\u904d\u5386\uff0c\u4f60\u5374\u4e0d\u80fd\u786e\u5b9a\u5176\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\uff0c\u8003\u8651\u5982\u4e0b\u56fe\u4e2d\u7684\u51e0\u68f5\u4e8c\u53c9\u6811\uff1a</p> <p></p> <p>\u6240\u6709\u8fd9\u4e9b\u4e8c\u53c9\u6811\u90fd\u6709\u7740\u76f8\u540c\u7684\u524d\u5e8f\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\uff0c\u4f46\u4e2d\u5e8f\u904d\u5386\u5374\u4e0d\u76f8\u540c\u3002</p> <p>\u5171\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u8868\u793a\u8be5\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c \\(s_1\\)\uff0c\u7b2c\u4e8c\u884c\u8868\u793a\u8be5\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386\u7ed3\u679c \\(s_2\\)\u3002</p> <p>\u4fdd\u8bc1\u81f3\u5c11\u5b58\u5728\u4e00\u68f5\u4e8c\u53c9\u6811\u6ee1\u8db3\u7ed9\u51fa\u7684\u4fe1\u606f\uff0c\\(s _ 1, s _ 2\\) \u4e2d\u53ea\u542b\u5c0f\u5199\u5b57\u6bcd\uff0c\u4e14\u5728\u67d0\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e0d\u5b58\u5728\u76f8\u540c\u7684\u5b57\u6bcd\u3002</p> <p>\u8f93\u51fa\u53ef\u80fd\u7684\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u7684\u603b\u6570\uff0c\u7ed3\u679c\u4e0d\u8d85\u8fc7 \\(2^{63}-1\\)\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\u53ea\u6709\u4e00\u4e2a\u513f\u5b50 \u7684\u8282\u70b9 \u624d\u4f1a\u5728\u77e5\u9053 \u524d\u5e8f\u540e\u5e8f \u7684\u60c5\u51b5\u4e0b\u6709\u4e0d\u540c\u7684\u4e2d\u5e8f\u904d\u5386\uff0c\u6240\u4ee5\u5c06\u9898\u76ee\u8f6c\u5316\u6210\u627e \u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u7684\u8282\u70b9\u4e2a\u6570\u3002</p> <p>\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u627e\u51fa\u8fd9\u7c7b\u8282\u70b9\u5728\u524d\u5e8f\u540e\u5e8f\u4e2d\u51fa\u73b0\u7684\u89c4\u5f8b\u3002\uff08\u524d\u5e8f\u4e2d\u51fa\u73b0AB\uff0c\u540e\u5e8f\u4e2d\u51fa\u73b0BA\uff0c\u5219\u8fd9\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff09</p> <p>\u6bcf\u4e2a\u8fd9\u7c7b\u8282\u70b9\u6709\u4e24\u79cd\u4e2d\u5e8f\u904d\u5386\uff08\u53ca\u513f\u5b50\u5728\u5de6\uff0c\u513f\u5b50\u5728\u53f3\uff09\u6839\u636e\u4e58\u6cd5\u539f\u7406\u4e2d\u5e8f\u904d\u5386\u6570\u4e3a 2^\u8282\u70b9\u4e2a\u6570 \u79cd</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A6%82%E5%BF%B5/#_10","title":"\u5bf9\u8c61\u4e0e\u7c7b","text":"<p>int\u8fd9\u4e9b\u662f\u7c7b\uff0c\u7b2c\u5b9a\u4e49\u7684\u53d8\u91cf\u662f\u5bf9\u8c61\uff08\u5e94\u8be5\u662f</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/","title":"\u6a21\u62df","text":""},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%8B%9F/#1-4","title":"\u4f8b\u9898 #1 \u8868\u8fbe\u5f0f\u8ba1\u7b974","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u51fa\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u8fd0\u7b97\u7b26\u4ec5\u5305\u542b +\uff0c-\uff0c*\uff0c/\uff0c^\uff0c\u8981\u6c42\u6c42\u51fa\u8868\u8fbe\u5f0f\u7684\u6700\u7ec8\u503c\u3002</p> <p>\u6570\u636e\u53ef\u80fd\u4f1a\u51fa\u73b0\u62ec\u53f7\u60c5\u51b5\uff0c\u8fd8\u6709\u53ef\u80fd\u51fa\u73b0\u591a\u4f59\u62ec\u53f7\u60c5\u51b5\u3002</p> <p>\u6570\u636e\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u73b0\u8d85\u8fc7 int \u8303\u56f4\u7684\u6570\u636e\uff0c\u6570\u636e\u53ef\u80fd\u4f1a\u51fa\u73b0\u8d1f\u6570\u60c5\u51b5\u3002</p> <pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n\n#define itn int\n\n\n\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el='\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s;\n    if(1)cerr&lt;&lt;' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...) do { cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; err(x); } while (0)\nvoid err() { cerr &lt;&lt; endl; }\ntemplate&lt;template&lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x) { for (auto v: a) cerr &lt;&lt; v &lt;&lt; ' '; err(x...); }\ntemplate&lt;typename T, typename... A&gt;\nvoid err(T a, A... x) { cerr &lt;&lt; a &lt;&lt; ' '; err(x...); }\n#else\n#define dbg(...)\n#endif\n\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\n\nstring s=\"0\";\nchar x;\nstack&lt;int&gt;vi;\nstack&lt;char&gt;vc;\nint T;\nint cnt1,cnt2,cnt;\n\nvoid solve(){\n\n\n    while(cin&gt;&gt;x){\n        if(x==' ')continue;\n        s+=(char)x;\n    }\n    for(int i = 0;i &lt; s.size();i ++){\n        char c = s[i];\n        if(c=='(')cnt1++;\n        if(c==')')cnt2++;\n    }\n    cnt=max(cnt1,cnt2),cnt++;\n    for(int i = 0;i &lt; cnt-cnt1;i ++)\n    s='('+s;\n    for(int i = 0;i &lt; cnt-cnt2;i ++)\n    s=s+')';\n\n\n    for(int i = 0;i &lt; s.size();i ++){\n        char c = s[i];\n        int f=1;\n        if(c=='-'&amp;&amp;(s[i-1]&lt;'0'||s[i-1]&gt;'9'))\n        f = -1;\n        if(c&gt;='0'&amp;&amp;c&lt;='9'){\n            int a = 0;\n            while (i &lt; s.size() &amp;&amp; (s[i] &gt;= '0' &amp;&amp; s[i] &lt;= '9')) {\n                a = a * 10 + s[i] - '0';\n                i++;\n            }\n            i--;\n            vi.push(a * f);\n        }else if(c=='(')vc.push(c);\n        else if (c==')'){\n            while(!vc.empty() &amp;&amp; vc.top() != '(' ){\n                int b=vi.top();\n                vi.pop();\n                int a=vi.top();\n                vi.pop();\n                char op=vc.top();\n                vc.pop();\n                if(op=='*')vi.push(a*b);\n                if(op=='/')vi.push(a/b);\n                if(op=='+')vi.push(a+b);\n                if(op=='-')vi.push(a-b);\n                if(op=='^')vi.push((int)(pow(a,b)));\n            }\n            vc.pop();\n        }else if(c=='+'||c=='-'||c=='*'||c=='^'||c=='/'){\n            while(!vc.empty() &amp;&amp; vc.top()!='(' &amp;&amp; ((c!='*' &amp;&amp; vc.top()!='*' || vc.top()=='*')&amp;&amp;(c!='^' &amp;&amp; vc.top()!='^' || vc.top()=='^')&amp;&amp;(c!='/' &amp;&amp; vc.top()!='/' || vc.top()=='/'))){\n                int b=vi.top();\n                vi.pop();\n                int a=vi.top();\n                vi.pop();\n                char op=vc.top();\n                vc.pop();\n                if(op=='*')vi.push(a*b);\n                if(op=='/')vi.push(a/b);\n                if(op=='+')vi.push(a+b);\n                if(op=='-')vi.push(a-b);\n                if(op=='^')vi.push((int)(pow(a,b)));\n            }\n            vc.push(c);\n        }\n    }\n    while(!vc.empty()){\n        int b=vi.top();\n        vi.pop();\n        int a=vi.top();\n        vi.pop();\n        char op=vc.top();\n        vc.pop();\n        if(op=='*')vi.push(a*b);\n        if(op=='/')vi.push(a/b);\n        if(op=='+')vi.push(a+b);\n        if(op=='-')vi.push(a-b);\n        if(op=='^')vi.push((int)(pow(a,b)));\n    }\n    cout&lt;&lt;vi.top()&lt;&lt;endl;\n\n}\n\nsigned main() {\n\n\n\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%9D%BF%E5%A4%B4%E4%B8%8E%E7%BC%BA%E7%9C%81%E6%BA%90/","title":"\u6a21\u677f\u5934\u4e0e\u7f3a\u7701\u6e90","text":"<p>Head | \u6a21\u677f\u5934 \u7f3a\u7701\u6e90</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%9D%BF%E5%A4%B4%E4%B8%8E%E7%BC%BA%E7%9C%81%E6%BA%90/#_1","title":"\u5feb\u6377\u6a21\u677f","text":"<p>usual template</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nconst int N=1e3+5;\nconst int M=5e4+5;\nconst int INF=2e9+5;\nconst int MOD=1e9+7;\nconst int BASE=17737;\nbool f1;\n\n\nbool f2;\n\nsigned main(){\n    // freopen(\"P5431_1.in\", \"r\", stdin);\n    // freopen(\"chfran.out\", \"w\", stdout);\n    ios::sync_with_stdio(false);\n    cin.tie(0);cout.tie(0);\n\n    return 0;\n}\n/*\n\n\n*/\n</code></pre> <p>whole template</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . FancyKnowledge .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\n#include&lt;bits/stdc++.h&gt;\n\n//\n#define int long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n#define enlen printf(\"\\n\")\n#define err(fmt, ...) fprintf(stderr, \"[%d] : \" fmt \"\\n\", __LINE__, ##__VA_ARGS__)\n#define File(_) freopen(#_ \".in\", \"r\", stdin), freopen(#_ \".out\", \"w\", stdout)\n///*\n\n//*/\n\n//\nusing namespace std;\n//\nconst int N=1e3+5;\nconst int M=1e3;\nconst int MOD=1e9+7;\nconst int MMOD=903250223;\nconst int INF=1e9;\nconst int IINF=1e18;\nconst db eps=1e-9;\n//\nint n,m,a[N],b,q,s[N],op,idx,len[N],ans,res,tmp,cnt[N],id[N];\nint dp[N][N];\nint tot,du[N];\nint L;\nvector&lt;int&gt; e[N];\n\n/*\n//I think you won't use these...\n\nint rd() {}\nint ksm(int c,int k,int p) {}\n//*/\n\n\n\nvoid init(){\n    //nothing to init?\n    return ;\n}\n\nvoid solve(){\n    //nothing in your main function??!\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;i++){\n\n    }\n    printf(\"%lld\\n\",ans);\n    return ;\n}\n\nsigned main(){\n\n//  freopen(\".in\",\"r\",stdin);\n//  freopen(\".out\",\"w\",stdout);\n//  freopen(\".txt\",\"w\",stderr);\n\n//  std::ios::sync_with_stdio(false);\n//  cin.tie(0); \n//  cout.tie(0);\n\n    int T;\n    scanf(\"%lld\",&amp;T);\n    while(T--){\n        init();\n        solve();\n    }\n    return 0;\n}\n\n//check your long long and the size of memery!!!\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%9D%BF%E5%A4%B4%E4%B8%8E%E7%BC%BA%E7%9C%81%E6%BA%90/#_2","title":"\u5feb\u6377\u5e73\u66ff","text":"<pre><code>int maxx(int a,int b) {\n    return a&gt;b?a:b;\n}\n\nvoid swapp(int &amp;a,int &amp;b) {\n    a^=b^=a^=b;\n}\n\nint lowbit(int n) {\n    return n&amp;(-n);\n}\n\nint Del_bit_1(int n) {\n    return n&amp;(n-1);\n}\n\nint abss(int a) {\n    return a&gt;0?a:-a;\n}\n\ndouble fabss(double a) {\n    return a&gt;0?a:-a;\n}\n\nint minn(int a,int b) {\n    return a&lt;b?a:b;\n}\n\nint ksm(int c,int k,int p) {\n//  p=MOD;\n    if(!c)return 0;\n    int res=1;\n    while(k){\n        if(k&amp;1)res=(res*c)%p;\n        c=(c*c)%p;k&gt;&gt;=1;\n    }\n    return res;\n}\n\nvoid comb_init(){\n    fac[0]=1;\n    for (int i=1;i&lt;=n;++i) fac[i]=fac[i-1]*i%MOD;\n    inv[n]=ksm(fac[n],MOD-2,MOD);\n    for(int i=n;i&gt;=1;i--)inv[i-1]=inv[i]*i%MOD;//i!\u7684inv \n}\n\nint inv(int x){\n    return ksm(x,MOD-2,MOD);//\u8bf7\u4fdd\u8bc1MOD\u4e3a\u8d28\u6570\n} \n\nint C(int n,int m){\n  if(n&lt;0||m&lt;0)return 0;\n    if(n&lt;m)return 0;\n    return fac[n]*inv[m]%MOD*inv[n-m]%MOD;\n}\n\nint A(int n,int m){\n    return fac[n]*inv[fac[n-m]]%MOD;\n}\n\n//\u6c42\u7ec4\u5408\u6570\u8bf7\u5f00longlong\u4e0d\u7136\u4f1a\u8d8a\u754c\uff01\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%A8%A1%E6%9D%BF%E5%A4%B4%E4%B8%8E%E7%BC%BA%E7%9C%81%E6%BA%90/#_3","title":"\u6a21\u677f\u5934\u6587\u4ef6","text":"<p>V_UPR_SHORT</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ALIGNAS alignas\n#define ALIGNOF alignof\n#define AND and\n#define AND_EQ and_eq\n#define ASM asm\n#define ATOMIC_CANCEL atomic_cancel\n#define ATOMIC_COMMIT atomic_commit\n#define ATOMIC_NOEXCEPT atomic_noexcept\n#define AO auto\n#define BITAND bitand\n#define BITOR bitor\n#define BL bool\n#define BK break\n#define CASE case\n#define CATCH catch\n#define CR char\n#define CHAR8_T char8_t\n#define CHAR16_T char16_t\n#define CHAR32_T char32_t\n#define CS class\n#define COMPL compl\n#define CONCEPT concept\n#define CT const\n#define CONSTEVAL consteval\n#define CONSTEXPR constexpr\n#define CONSTINIT constinit\n#define CONST_CAST const_cast\n#define CE continue\n#define CO_AWAIT co_await\n#define CO_RETURN co_return\n#define CO_YIELD co_yield\n#define DECLTYPE decltype\n#define DEFAULT default\n#define DELETE delete\n#define DO do\n#define DE double\n#define DYNAMIC_CAST dynamic_cast\n#define EE else\n#define ENUM enum\n#define EXPLICIT explicit\n#define EXPORT export\n#define EXTERN extern\n#define FE false\n#define FT float\n#define FR for\n#define FRIEND friend\n#define GOTO goto\n#define IF if\n#define IE inline\n#define IT int\n#define LG long\n#define LL long long\n#define MUTABLE mutable\n#define NE namespace\n#define NEW new\n#define NOEXCEPT noexcept\n#define NOT not\n#define NOT_EQ not_eq\n#define NULLPTR nullptr\n#define OPERATOR operator\n#define OR or\n#define OR_EQ or_eq\n#define PRIVATE private\n#define PROTECTED protected\n#define PUBLIC public\n#define REFLEXPR reflexpr\n#define REGISTER register\n#define REINTERPRET_CAST reinterpret_cast\n#define REQUIRES requires\n#define RN return\n#define SHORT short\n#define SD signed\n#define SF sizeof\n#define STATIC static\n#define STATIC_ASSERT static_assert\n#define STATIC_CAST static_cast\n#define ST struct\n#define SH switch\n#define SYNCHRONIZED synchronized\n#define TEMPLATE template\n#define THIS this\n#define THREAD_LOCAL thread_local\n#define THROW throw\n#define TE true\n#define TRY try\n#define TYPEDEF typedef\n#define TYPEID typeid\n#define TYPENAME typename\n#define UNION union\n#define UD unsigned\n#define UG using\n#define VIRTUAL virtual\n#define VD void\n#define VOLATILE volatile\n#define WCHAR_T wchar_t\n#define WE while\n#define XOR xor\n#define XOR_EQ xor_eq\n\n#define IN(a) cin&gt;&gt;a\n#define OT(b) cout&lt;&lt;b\n#define EL '\\n'\n#define STD std\n#define MN main\n\n#define FOR(a,b,c) for(int I=a;I&lt;=b;I+=c)\n\nUG NE STD\n\nSD MN(){\n\n    RN 0;\n}\n</code></pre> <p>V_UPR1</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ALIGNAS alignas\n#define ALIGNOF alignof\n#define AND and\n#define AND_EQ and_eq\n#define ASM asm\n#define ATOMIC_CANCEL atomic_cancel\n#define ATOMIC_COMMIT atomic_commit\n#define ATOMIC_NOEXCEPT atomic_noexcept\n#define AUTO auto\n#define BITAND bitand\n#define BITOR bitor\n#define BOOL bool\n#define BREAK break\n#define CASE case\n#define CATCH catch\n#define CHAR char\n#define CHAR8_T char8_t\n#define CHAR16_T char16_t\n#define CHAR32_T char32_t\n#define CLASS class\n#define COMPL compl\n#define CONCEPT concept\n#define CONST const\n#define CONSTEVAL consteval\n#define CONSTEXPR constexpr\n#define CONSTINIT constinit\n#define CONST_CAST const_cast\n#define CONTINUE continue\n#define CO_AWAIT co_await\n#define CO_RETURN co_return\n#define CO_YIELD co_yield\n#define DECLTYPE decltype\n#define DEFAULT default\n#define DELETE delete\n#define DO do\n#define DOUBLE double\n#define DYNAMIC_CAST dynamic_cast\n#define ELSE else\n#define ENUM enum\n#define EXPLICIT explicit\n#define EXPORT export\n#define EXTERN extern\n#define FALSE false\n#define FLOAT float\n#define FOR for\n#define FRIEND friend\n#define GOTO goto\n#define IF if\n#define INLINE inline\n#define INT int\n#define LONG long\n#define LL long long\n#define MUTABLE mutable\n#define NAMESPACE namespace\n#define NEW new\n#define NOEXCEPT noexcept\n#define NOT not\n#define NOT_EQ not_eq\n#define NULLPTR nullptr\n#define OPERATOR operator\n#define OR or\n#define OR_EQ or_eq\n#define PRIVATE private\n#define PROTECTED protected\n#define PUBLIC public\n#define REFLEXPR reflexpr\n#define REGISTER register\n#define REINTERPRET_CAST reinterpret_cast\n#define REQUIRES requires\n#define RETURN return\n#define SHORT short\n#define SIGNED signed\n#define SIZEOF sizeof\n#define STATIC static\n#define STATIC_ASSERT static_assert\n#define STATIC_CAST static_cast\n#define STRUCT struct\n#define SWITCH switch\n#define SYNCHRONIZED synchronized\n#define TEMPLATE template\n#define THIS this\n#define THREAD_LOCAL thread_local\n#define THROW throw\n#define TRUE true\n#define TRY try\n#define TYPEDEF typedef\n#define TYPEID typeid\n#define TYPENAME typename\n#define UNION union\n#define UNSIGNED unsigned\n#define USING using\n#define VIRTUAL virtual\n#define VOID void\n#define VOLATILE volatile\n#define WCHAR_T wchar_t\n#define WHILE while\n#define XOR xor\n#define XOR_EQ xor_eq\n\n#define IN(a) cin&gt;&gt;a\n#define OUT(b) cout&lt;&lt;b\n#define ENDL '\\n'\n#define STD std\n#define MAIN main\n\n#define FOR(a,b,c) for(int I=a;I&lt;=b;I+=c)\n\nUSING NAMESPACE STD;\nSIGNED MAIN(){\n\n    RETURN 0;\n}\n</code></pre> <p>v4.0ClearVer.</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\u5934\u6587\u4ef6\n#include&lt;bits/stdc++.h&gt;\n\n//\u6570\u636e\u7c7b\u578b\n#define ll long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n//\u547d\u540d\u7a7a\u95f4\nusing namespace std;\n//\u5e38\u91cf\nconst int N=2e5+5;\nconst int M=1e3;\nconst int MOD=903250223;\nconst int INF=1e9;\n//\u53d8\u91cf\nint n,a,b,c,x[N],y[N],ans,res,tmp,cnt,web[M][M];\n//int ia,ib,ic,id,ix,iy,in,im,iid,icnt,itmp,ires,ians,ians1,ians2,imx,imn,imxx,imnn;\n//int ra[N],rb[N],rc[N],rcnt[N],rton[N],rant[N];\n//int qzh[N],cf[N];\n//int rra[M][M];\n//char cop,cc,cs1[N],cs2[N],crr[M][M];\n\nsigned main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;i++){\n        //...\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n</code></pre> <p>v4.0 LargeVer.</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n/*////////ACACACACACACAC///////////\n\u9898\u76ee\u7b2c\u4e00\u773c\u50cf\u4ec0\u4e48?\u5728\u8fd9\u91cc\u5199\u4e0b\u4f60\u7684\u7075\u611f.\n\n\n\n\u540e\u7eed\u6709\u4ec0\u4e48\u60f3\u6cd5?HERE!\n\n\n\n/*////////ACACACACACACAC///////////\n\n/*\u706b\u8f66\u5934\u7531 TLEWA \u5728\u7f51\u4e0a\u641c\u96c6\uff0c\u6574\u5408*/\n\n#pragma GCC target(\"avx\")               // AVX\u6307\u4ee4\u96c6(\u4e0d\u61c2\u7684\u53bb\u95ee\u5ea6\u5a18)\n#pragma GCC optimize(1)                 // o1\u4f18\u5316\n#pragma GCC optimize(2)                 // o2\u4f18\u5316\n#pragma GCC optimize(3)                 // o3\u4f18\u5316\n#pragma GCC optimize(\"Ofast\")           // ofast\u4f18\u5316(\u4f18\u5316\u5230\u7834\u574f\u6807\u51c6\u5408\u89c4\u6027\u7684\u70b9)\uff0c\n#pragma GCC optimize(\"inline\")          // inline\u4e2d\u548c\n#pragma GCC optimize(\"-fgcse\")          // fgcse\u4f18\u5316\n#pragma GCC optimize(\"-fgcse-lm\")       //-fgcse-lm\n#pragma GCC optimize(\"-fipa-sra\")       //\u9664\u6362\n#pragma GCC optimize(\"-ftree-pre\")      //\u5feb\u901ftree\n#pragma GCC optimize(\"-ftree-vrp\")      //\u53bb\u91cdtree\n#pragma GCC optimize(\"-fpeephole2\")     // flatco2\u4f18\u5316\n#pragma GCC optimize(\"-ffast-math\")     //\u6570\u8bba\u4f18\u5316\n#pragma GCC optimize(\"-fsched-spec\")    //\u5bcc\u7852\u4f18\u5316\n#pragma GCC optimize(\"unroll-loops\")    //\u56fe\u8bbaplus\u4f18\u5316\n#pragma GCC optimize(\"-falign-jumps\")   //\u6781\u4f18\u5316\n#pragma GCC optimize(\"-falign-loops\")   //\u56fe\u8bba\u91cd+\u6392\u9664\n#pragma GCC optimize(\"-falign-labels\")  // lamb\u4f18\u5316\n#pragma GCC optimize(\"-fdevirtualize\")  // fugechar\u4f18\u5316\n#pragma GCC optimize(\"-fcaller-saves\")  //\u8d1f\u4f18\u5316\u6392\u9664\n#pragma GCC optimize(\"-fcrossjumping\")  //\u6781\u4f18\u5316p+\n#pragma GCC optimize(\"-fthread-jumps\")  //\u591a\u91cd\u6781\u4f18\u5316\n#pragma GCC optimize( \\\n    \"-funroll-loops\")  //\u6d88\u9664\u5206\u652f\u53ef\u4ee5\u51cf\u5c11\u9884\u6d4b\u7684\u53ef\u80fd\u6027\u80fd\uff1a\u6bd4\u5982\u5c0f\u7684\u5faa\u73af\u53ef\u4ee5\u5c55\u5f00\u6bd4\u5982\u5faa\u73af\u6b21\u6570\u5c0f\u4e8e64\u6b21\uff08\u53ef\u4ee5\u4f7f\u7528GCC\u9009\u9879\n                       //-funroll-loops)\n#pragma GCC optimize(\"-fwhole-program\")    //\u5f17\u6d1b\u4f0a\u5fb7\u4f18\u5316\n#pragma GCC optimize(\"-freorder-blocks\")   //\u534a\u523b\u4f18\u5316\n#pragma GCC optimize(\"-fschedule-insns\")   // fschedule-insns\u4f18\u5316\n#pragma GCC optimize(\"inline-functions\")   // inline-functions\u4f18\u5316\n#pragma GCC optimize(\"-ftree-tail-merge\")  //-ftree-tail-merge\u4f18\u5316\n#pragma GCC optimize(\"-fschedule-insns2\")  //-fschedule-insns2\u4f18\u5316\n#pragma GCC optimize(\"-fstrict-aliasing\")  //-fstrict-aliasing\u4f18\u5316\n#pragma GCC optimize(\"-fstrict-overflow\")  //\u4e0d\u77e5\u9053\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#pragma G++ target(\"avx\")\n#pragma G++ optimize(1)\n#pragma G++ optimize(2)\n#pragma G++ optimize(3)\n#pragma G++ optimize(\"Ofast\")\n#pragma G++ optimize(\"inline\")\n#pragma G++ optimize(\"-fgcse\")\n#pragma G++ optimize(\"-fgcse-lm\")\n#pragma G++ optimize(\"-fipa-sra\")\n#pragma G++ optimize(\"-ftree-pre\")\n#pragma G++ optimize(\"-ftree-vrp\")\n#pragma G++ optimize(\"-fpeephole2\")\n#pragma G++ optimize(\"-ffast-math\")\n#pragma G++ optimize(\"-fsched-spec\")\n#pragma G++ optimize(\"unroll-loops\")\n#pragma G++ optimize(\"-falign-jumps\")\n#pragma G++ optimize(\"-falign-loops\")\n#pragma G++ optimize(\"-falign-labels\")\n#pragma G++ optimize(\"-fdevirtualize\")\n#pragma G++ optimize(\"-fcaller-saves\")\n#pragma G++ optimize(\"-fcrossjumping\")\n#pragma G++ optimize(\"-fthread-jumps\")\n#pragma G++ optimize(\"-funroll-loops\")\n#pragma G++ optimize(\"-fwhole-program\")\n#pragma G++ optimize(\"-freorder-blocks\")\n#pragma G++ optimize(\"-fschedule-insns\")\n#pragma G++ optimize(\"inline-functions\")\n#pragma G++ optimize(\"-ftree-tail-merge\")\n#pragma G++ optimize(\"-fschedule-insns2\")\n#pragma G++ optimize(\"-fstrict-aliasing\")\n#pragma G++ optimize(\"-fstrict-overflow\")\n#pragma G++ optimize(\"-falign-functions\")\n#pragma G++ optimize(\"-fcse-skip-blocks\")\n#pragma G++ optimize(\"-fcse-follow-jumps\")\n#pragma G++ optimize(\"-fsched-interblock\")\n#pragma G++ optimize(\"-fpartial-inlining\")\n#pragma G++ optimize(\"no-stack-protector\")\n#pragma G++ optimize(\"-freorder-functions\")\n#pragma G++ optimize(\"-findirect-inlining\")\n#pragma G++ optimize(\"-frerun-cse-after-loop\")\n#pragma G++ optimize(\"inline-small-functions\")\n#pragma G++ optimize(\"-finline-small-functions\")\n#pragma G++ optimize(\"-ftree-switch-conversion\")\n#pragma G++ optimize(\"-foptimize-sibling-calls\")\n#pragma G++ optimize(\"-fexpensive-optimizations\")\n#pragma G++ optimize(\"-funsafe-loop-optimizations\")\n#pragma G++ optimize(\"inline-functions-called-once\")\n#pragma G++ optimize(\"-fdelete-null-pointer-checks\")\n#pragma G++ optimize(\"-fstrict-overflow\")  //\u4e0d\u77e5\u9053\n#pragma G++ optimize(\"-falign-functions\")\n#pragma G++ optimize(\"-fcse-skip-blocks\")\n#pragma G++ optimize(\"-fcse-follow-jumps\")\n#pragma G++ optimize(\"-fsched-interblock\")\n#pragma G++ optimize(\"-fpartial-inlining\")\n#pragma G++ optimize(\"no-stack-protector\")\n#pragma G++ optimize(\"-freorder-functions\")\n#pragma G++ optimize(\"-findirect-inlining\")\n#pragma G++ optimize(\"-fhoist-adjacent-loads\")\n#pragma G++ optimize(\"-frerun-cse-after-loop\")\n#pragma G++ optimize(\"inline-small-functions\")\n#pragma G++ optimize(\"-finline-small-functions\")\n#pragma G++ optimize(\"-ftree-switch-conversion\")\n#pragma G++ optimize(\"-foptimize-sibling-calls\")\n#pragma G++ optimize(\"-fexpensive-optimizations\")\n#pragma G++ optimize(\"-funsafe-loop-optimizations\")\n#pragma G++ optimize(\"inline-functions-called-once\")\n#pragma G++ optimize(\"-fdelete-null-pointer-checks\")\n\n\n//\u5934\u6587\u4ef6\n//#include&lt;bits/stdc++.h&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;cassert&gt;\n#include &lt;vector&gt;\n#include &lt;bitset&gt;\n#include &lt;queue&gt;\n#include &lt;cmath&gt;\n#include &lt;set&gt;\n#include &lt;map&gt;\n\n\n\n//FromXzc\n// g++.exe -std=c++20 -O2 -lm -Wall -Wl,--stack=8888888888 -DLOCAL -DLWAVE\n// The moon shines, thank the moon!\n//#pragma GCC optimize(\"Ofast\", \"inline\")\n//#define keyword_type\n//#define algo_type\n//#define fast_io\n//#define memory_watch\n#include &lt;bits/stdc++.h&gt;\n#define Rep(i, n) for (int i = 0, i##__END__ = (int)(n); i &lt; i##__END__; i++)\n#define Rpp(i, n) for (int i = 1, i##__END__ = (int)(n); i &lt;= i##__END__; i++)\n#define Dpp(i, n) for (int i = (int)(n); i; i--)\n#define Frr(i, s, e) for (int i = (int)(s), i##__END__ = (int)(e); i &lt;= i##__END__; i++)\n#define Eps 1e-9\n#define Pinf 0x3f3f3f3f3f3f3f3fll\n#define Ninf (long long)0xcfcfcfcfcfcfcfcfll\n#define Mem0(Cont) memset(Cont, 0, sizeof(Cont))\n#define MemP(Cont) memset(Cont, 0x3f, sizeof(Cont))\n#define MemN(Cont) memset(Cont, 0xcf, sizeof(Cont))\n#define MemU(Cont) memset(Cont, 0xff, sizeof(Cont))\n#define endl '\\n'\n#define int long long\n\n// STL macros\n#define pjj pair&lt;int, int&gt;\n#define ff first\n#define ss second\n#define pb push_back\n#define vj vector&lt;int&gt;\n#define vpj vector&lt;pjj&gt;\n#define gtj greater&lt;int&gt;\n#define ltj less&lt;int&gt;\n#define pqjmx priority_queue&lt;int&gt;\n#define pqjmn priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt;\n\n// STL container macros\n#define all(a) a.begin(), a.end()\n#define all0(a, n) a, a + (n)\n#define all1(a, n) a + 1, a + (n) + 1\n#define sz(a) ((int)a.size())\n\n// Debug macros\n#ifdef LOCAL\n#define edebug() cout &lt;&lt; \"Error message sent at line #\" &lt;&lt; __LINE__ &lt;&lt; \".\\n\", exit(19);\n#define pdebug() cout &lt;&lt; \"PDebug at line \" &lt;&lt; __LINE__ &lt;&lt; \" in function \" &lt;&lt; __FUNCTION__ &lt;&lt; endl &lt;&lt; flush\n#define vdebug(x) \\\n    cout &lt;&lt; \"VDebug at line \" &lt;&lt; __LINE__ &lt;&lt; \", the value is [\" &lt;&lt; #x &lt;&lt; \"] = \" &lt;&lt; (x) &lt;&lt; endl &lt;&lt; flush\n#define mdebug(args...)                                                                                \\\n    cout &lt;&lt; \"MDebug at line \" &lt;&lt; __LINE__ &lt;&lt; \", the values are [\" &lt;&lt; #args &lt;&lt; \"] = \", con_print(args), \\\n        cout &lt;&lt; flush\n#define ldebug(msg, args...)                                                                                 \\\n    cout &lt;&lt; \"LDebug at line \" &lt;&lt; __LINE__ &lt;&lt; \", with message [\" &lt;&lt; msg &lt;&lt; \"], and the values are [\" &lt;&lt; #args \\\n         &lt;&lt; \"] = \",                                                                                          \\\n        con_print(args), cout &lt;&lt; flush\n#else\n#define edebug(...) 42\n#define pdebug(...) 42\n#define vdebug(...) 42\n#define mdebug(...) 42\n#define ldebug(...) 42\n#endif\n\n// More convenient keywords (USED ONLY WHEN ALLOWED)\n#ifdef keyword_type\n#define re return\n#define con continue\n#define brk break\n#define cst const\n#define cstex constexpr\n#define au auto\n#define il inline\n#endif\n\n// More convenient algos (USED ONLY WHEN ALLOWED)\n#ifdef algo_type\n#define mx1 max_element\n#define mn1 min_element\n#define nth nth_element\n#define sumv accumulate\n#define lwb lower_bound\n#define upb upper_bound\n#define uni unique\n#define nxtprm next_permutation\n#define prvprm prev_permutation\n#define rev reverse\n#endif\n\n//End##FromXzc\n\n//\u6570\u636e\u7c7b\u578b\n#define ll long long\n#define ull unsigned long long\n#define uint unsigned int\n#define db double\n#define str string\n//\u51fd\u6570\n#define rtn return\n#define i1n int i=1;i&lt;=n;i++\n#define in1 int i=n;i&gt;=1;i--\n#define endl '\\n'\n//\u547d\u540d\u7a7a\u95f4\nusing namespace std;\n//\u5e38\u91cf\nconst int N=2e5+5;\nconst int M=1e3;\nconst int MOD=903250223;\nconst int INF=1e12;\n//\u7a7a\u95f4\u590d\u6742\u5ea6\nbool memBeg;\n//STL\nvector&lt;int&gt; v;\nstack &lt;int&gt; s;\nqueue&lt;int&gt; q;\npriority_queue&lt;int&gt; pq;\nmap&lt;int,int&gt; mp;\nset&lt;int&gt; st;\n//\u7ed3\u6784\u4f53\nstruct node{int v,id;}e[N];\nbool cmp(node a,node b){return a.v&lt;b.v;}\n//\u53d8\u91cf\nint n,m,_a[N],_b[N],ans,res,tmp,l,r,x,y,x_[N],y_[N],a__[M][M],b__[M][M];\nchar c,str[N];\nbool flg;\ndb db_a,db_b;\n\n//\u7a7a\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\nbool memEn;\n//\u5feb\u8bfb\nint readint() {char c = getchar();int neg = 1, ret = 0;for (; c &lt; '0' || c &gt; '9'; c = getchar())if (c == '-')neg = -1;for (; '0' &lt;= c &amp;&amp; c &lt;= '9'; c = getchar()) ret = (ret &lt;&lt; 3) + (ret &lt;&lt; 1) + (c &amp; 15);return neg * ret;}\nll readll() {char c = getchar();ll neg = 1, ret = 0;for (; c &lt; '0' || c &gt; '9'; c = getchar())if (c == '-')neg = -1;for (; '0' &lt;= c &amp;&amp; c &lt;= '9'; c = getchar()) ret = (ret &lt;&lt; 3) + (ret &lt;&lt; 1) + (c &amp; 15);return neg * ret;}\nvoid writeint(int x) {if (x == 0) {putchar('0');return;}if (x &lt; 0) {putchar('-');x = -x;}char stk[15];int top = 0;while (x) {int nxt = x / 10;stk[++top] = x - nxt * 10 + '0';x = nxt;}for (int i = top; i &gt;= 1; i--) putchar(stk[i]);}\nvoid writell(ll x) {if (x == 0) {putchar('0');return;}if (x &lt; 0) {putchar('-');x = -x;}char stk[25];int top = 0;while (x) {ll nxt = x / 10;stk[++top] = x - nxt * 10 + '0';x = nxt;}for (int i = top; i &gt;= 1; i--) putchar(stk[i]);}\nvoid Writeint(int x, char c) {writeint(x);putchar(c);}\nvoid Writell(ll x, char c) {writell(x);putchar(c);}\n\nsigned main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;i++){\n        //...\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n\n/*\n *  things to check\n *  1.  int overflow or long long memory need\n *  2.  recursion/array/binary search/dp/loop bounds\n *  3.  precision\n *  4.  special cases(n=1,bounds)\n *  5.  delete debug statements\n *  6.  initialize(especially multi-tests)\n *  7.  = or == , n or m ,++ or -- , i or j , &gt; or &gt;= , &lt; or &lt;=\n *  8.  keep it simple and stupid\n *  9.  do not delete, use // instead\n *  10. operator priority\n *  11. is there anything extra to output?\n *  12. THINK TWICE CODE ONCE, THINK ONCE DEBUG FOREVER\n *  13. submit ONCE, AC once. submit twice, WA forever\n *  14. calm down and you'll get good rank\n *  15. even a bit wrong scores zero\n *  16. ...\n **/\n\n/*\n *  something to think about\n *  1. greedy? dp? searching? dp with matrix/ segment tree? binary search? ...?\n *  2. If it is difficult, why not the opposite?\n **/\n</code></pre> <p>\u611f\u8c22xzc\u63d0\u4f9b\u4ee5\u4e0b\uff08\u4ec5\u5305\u62ec\u63a5\u4e0b\u6765\u76841\u4e2a\u4ee3\u7801\u5757\uff09</p> <pre><code>// g++.exe -std=c++20 -O2 -lm -Wall -Wl,--stack=8888888888 -DLOCAL -DLWAVE\n// The moon shines, thank the moon!\n//#pragma GCC optimize(\"Ofast\", \"inline\")\n//#define keyword_type\n//#define algo_type\n//#define fast_io\n//#define memory_watch\n#include &lt;bits/stdc++.h&gt;\n#define Rep(i, n) for (int i = 0, i##__END__ = (int)(n); i &lt; i##__END__; i++)\n#define Rpp(i, n) for (int i = 1, i##__END__ = (int)(n); i &lt;= i##__END__; i++)\n#define Dpp(i, n) for (int i = (int)(n); i; i--)\n#define Frr(i, s, e) for (int i = (int)(s), i##__END__ = (int)(e); i &lt;= i##__END__; i++)\n#define Eps 1e-9\n#define Pinf 0x3f3f3f3f3f3f3f3fll\n#define Ninf (long long)0xcfcfcfcfcfcfcfcfll\n#define Mem0(Cont) memset(Cont, 0, sizeof(Cont))\n#define MemP(Cont) memset(Cont, 0x3f, sizeof(Cont))\n#define MemN(Cont) memset(Cont, 0xcf, sizeof(Cont))\n#define MemU(Cont) memset(Cont, 0xff, sizeof(Cont))\n#define endl '\\n'\n#define int long long\n\n// STL macros\n#define pjj pair&lt;int, int&gt;\n#define ff first\n#define ss second\n#define pb push_back\n#define vj vector&lt;int&gt;\n#define vpj vector&lt;pjj&gt;\n#define gtj greater&lt;int&gt;\n#define ltj less&lt;int&gt;\n#define pqjmx priority_queue&lt;int&gt;\n#define pqjmn priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt;\n\n// STL container macros\n#define all(a) a.begin(), a.end()\n#define all0(a, n) a, a + (n)\n#define all1(a, n) a + 1, a + (n) + 1\n#define sz(a) ((int)a.size())\n\n// Debug macros\n#ifdef LOCAL\n#define edebug() cout &lt;&lt; \"Error message sent at line #\" &lt;&lt; __LINE__ &lt;&lt; \".\\n\", exit(19);\n#define pdebug() cout &lt;&lt; \"PDebug at line \" &lt;&lt; __LINE__ &lt;&lt; \" in function \" &lt;&lt; __FUNCTION__ &lt;&lt; endl &lt;&lt; flush\n#define vdebug(x) \\\n    cout &lt;&lt; \"VDebug at line \" &lt;&lt; __LINE__ &lt;&lt; \", the value is [\" &lt;&lt; #x &lt;&lt; \"] = \" &lt;&lt; (x) &lt;&lt; endl &lt;&lt; flush\n#define mdebug(args...)                                                                                \\\n    cout &lt;&lt; \"MDebug at line \" &lt;&lt; __LINE__ &lt;&lt; \", the values are [\" &lt;&lt; #args &lt;&lt; \"] = \", con_print(args), \\\n        cout &lt;&lt; flush\n#define ldebug(msg, args...)                                                                                 \\\n    cout &lt;&lt; \"LDebug at line \" &lt;&lt; __LINE__ &lt;&lt; \", with message [\" &lt;&lt; msg &lt;&lt; \"], and the values are [\" &lt;&lt; #args \\\n         &lt;&lt; \"] = \",                                                                                          \\\n        con_print(args), cout &lt;&lt; flush\n#else\n#define edebug(...) 42\n#define pdebug(...) 42\n#define vdebug(...) 42\n#define mdebug(...) 42\n#define ldebug(...) 42\n#endif\n\n// More convenient keywords (USED ONLY WHEN ALLOWED)\n#ifdef keyword_type\n#define re return\n#define con continue\n#define brk break\n#define cst const\n#define cstex constexpr\n#define au auto\n#define il inline\n#endif\n\n// More convenient algos (USED ONLY WHEN ALLOWED)\n#ifdef algo_type\n#define mx1 max_element\n#define mn1 min_element\n#define nth nth_element\n#define sumv accumulate\n#define lwb lower_bound\n#define upb upper_bound\n#define uni unique\n#define nxtprm next_permutation\n#define prvprm prev_permutation\n#define rev reverse\n#endif\nusing namespace std;\n\n// Super fast io (USED ONLY WHEN ALLOWED)\n#ifdef fast_io\nnamespace Fast {\nconstexpr int B = 1 &lt;&lt; 24;\nint len = 0;\nchar ibuf[B + 5], *iS, *iT, out[B + 5];\n#define gh() \\\n    (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, (1 &lt;&lt; 20) + 1, stdin), (iS == iT ? EOF : *iS++) : *iS++)\ninline int read() {\n    char ch = gh();\n    int x = 0;\n    char t = 0;\n    while (ch &lt; '0' || ch &gt; '9') t |= ch == '-', ch = gh();\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') x = x * 10 + (ch ^ 48), ch = gh();\n    return t ? -x : x;\n}\ninline void reflush() {\n    fwrite(out, 1, len, stdout);\n    len = 0;\n}\ninline void putc(char ch) {\n    out[len++] = ch;\n    if (len &gt; B)\n        reflush();\n}\ntemplate &lt;class T&gt;\ninline void write(T x) {\n    if (x &lt; 0)\n        putc('-'), x = -x;\n    if (x &gt; 9)\n        write(x / 10);\n    putc((x % 10) ^ '0');\n}\ntemplate &lt;class T&gt;\ninline void writeln(T x) {\n    write(x);\n    putc('\\n');\n}\n\n}  // namespace Fast\n#endif\n\n// Main code\nnamespace Solution {\n\nstruct STATUS {\n    const string s, t;\n    STATUS(string a, string b) : s(a), t(b) {}\n    inline void check(bool p) const { cout &lt;&lt; (p ? s : t) &lt;&lt; endl; }\n};\nconst STATUS nYesNo(\"Yes\", \"No\");\nconst STATUS nYESNO(\"YES\", \"NO\");\nconst STATUS nyesno(\"yes\", \"no\");\nconst STATUS nAliceBob(\"Alice\", \"Bob\");\nconst STATUS nTAKNIE(\"TAK\", \"NIE\");\nconst STATUS nOKNG(\"OK\", \"NG\");\nconst STATUS nokng(\"ok\", \"ng\");\n\nconstexpr int dX[] = { 1, -1, 0, 0 }, dY[] = { 0, 0, 1, -1 };\n\ntemplate &lt;typename T&gt;\ninline void die(T x, int cd = 0) {\n    cout &lt;&lt; x &lt;&lt; endl;\n    exit(cd);\n}\ntemplate &lt;typename T&gt;\ninline bool check_max(T&amp; x, T y) {\n    return (x &lt; y) ? ((x = y), 1) : 0;\n}\ntemplate &lt;typename T&gt;\ninline bool check_min(T&amp; x, T y) {\n    return (y &lt; x) ? ((x = y), 1) : 0;\n}\ntemplate &lt;typename T&gt;\ninline bool swap_max(T&amp; x, T y) {\n    return (x &lt; y) ? ((swap(x, y)), 1) : 0;\n}\ntemplate &lt;typename T&gt;\ninline bool swap_min(T&amp; x, T y) {\n    return (y &lt; x) ? ((swap(x, y)), 1) : 0;\n}\ninline void con_read() {}\ntemplate &lt;typename T, typename... U&gt;\nvoid con_read(T&amp; x, U&amp;... y) {\n    cin &gt;&gt; x;\n    con_read(y...);\n}\ninline void con_print() { cout &lt;&lt; endl; }\ntemplate &lt;typename T, typename... U&gt;\nvoid con_print(const T&amp; x, const U&amp;... y) {\n    cout &lt;&lt; x &lt;&lt; ' ';\n    con_print(y...);\n}\ntemplate &lt;typename T&gt;\ninline void acc_print(const T&amp; x, int pr) {\n    cout &lt;&lt; fixed &lt;&lt; setprecision(pr) &lt;&lt; x &lt;&lt; endl;\n}\ntemplate &lt;typename IT, typename T&gt;\nvoid discrete(IT bg, IT ed, IT nw, T dt) {\n    IT u = nw;\n    for (IT k = bg; k != ed; k++, u++) *u = *k;\n    sort(nw, u);\n    u = unique(nw, u);\n    for (IT k = bg; k != ed; k++) {\n        *k = lower_bound(nw, u, *k) - nw + dt;\n    }\n}\ninline int qpow(int x, int y, int z) {\n    int res = 1 % z;\n    for (; y; y &gt;&gt;= 1, (x *= x) %= z)\n        if (y &amp; 1)\n            (res *= x) %= z;\n    return res;\n}\ninline int upow(int x) { return (x &amp; 1) ? -1 : 1; }\ninline int lowbit(int x) { return x &amp; -x; }\ninline int next_set(int x) { return x &amp; (x - 1); }\ninline int mid(int L, int R) { return (L + R) &gt;&gt; 1; }\ninline void file_in(string fname) { freopen((fname + \".in\").c_str(), \"r\", stdin); }\ninline void file_out(string fname) { freopen((fname + \".out\").c_str(), \"w\", stdout); }\ninline void file(string fname) {\n    file_in(fname);\n    file_out(fname);\n}\n\n#ifdef fast_io\nusing Fast::putc;\nusing Fast::read;\nusing Fast::reflush;\nusing Fast::write;\nusing Fast::writeln;\n#endif\n\nbool st;\n\n// Variables here.\n\nbool ed;\n\nvoid Initialize() {\n    // You can initialize your variables/sturctures here. It is put before cases.\n}\n\nvoid Main(int TEST_NUM) {\n    // Don't forget to clear when multi test cases.\n\n}\n\n}  // namespace Solution\n\nsigned main() {\n    // Solution::file(\"\");\n#ifndef fast_io\n    ios_base ::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n#endif\n#ifdef LOCAL\n// Memory monitor (USED ONLY WHEN ALLOWED)\n#ifdef memory_watch\n    cerr &lt;&lt; \"MEMORY USED = \" &lt;&lt; fixed &lt;&lt; setprecision(2)\n         &lt;&lt; (&amp;Solution::st - &amp;Solution::ed) / 1048576.0\n#ifdef fast_io\n                + 32  // Fast io\n#endif\n         &lt;&lt; \" MiB.\\n\"\n         &lt;&lt; flush;\n#endif\n#endif\n    Solution::Initialize();\n    int test_cases = 1;\n    // cin &gt;&gt; test_cases;\n    for (int iv = 1; iv &lt;= test_cases; iv++) Solution::Main(iv);\n\n#ifdef fast_io\n    Fast::reflush();\n#endif\n\n    return 0;\n}\n\n/*\n *  things to check\n *  1.  int overflow or long long memory need\n *  2.  recursion/array/binary search/dp/loop bounds\n *  3.  precision\n *  4.  special cases(n=1,bounds)\n *  5.  delete debug statements\n *  6.  initialize(especially multi-tests)\n *  7.  = or == , n or m ,++ or -- , i or j , &gt; or &gt;= , &lt; or &lt;=\n *  8.  keep it simple and stupid\n *  9.  do not delete, use // instead\n *  10. operator priority\n *  11. is there anything extra to output?\n *  12. THINK TWICE CODE ONCE, THINK ONCE DEBUG FOREVER\n *  13. submit ONCE, AC once. submit twice, WA forever\n *  14. calm down and you'll get good rank\n *  15. even a bit wrong scores zero\n *  16. ...\n **/\n\n/*\n *  something to think about\n *  1. greedy? dp? searching? dp with matrix/ segment tree? binary search? ...?\n *  2. If it is difficult, why not the opposite?\n **/\n</code></pre> <p>v3.1</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\u5934\u6587\u4ef6\n//#include&lt;bits/stdc++.h&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;cassert&gt;\n#include &lt;vector&gt;\n#include &lt;bitset&gt;\n#include &lt;queue&gt;\n#include &lt;cmath&gt;\n#include &lt;set&gt;\n#include &lt;map&gt;\n//\u6570\u636e\u7c7b\u578b\n#define ll long long\n#define ull unsigned long long\n#definr uint unsigned int\n#define db double\n#define str string\n//\u51fd\u6570\n#define rtn return\n#define i1n int i=1;i&lt;=n;i++\n#define in1 int i=n;i&gt;=1;i--\n#define endl '\\n'\n//\u547d\u540d\u7a7a\u95f4\nusing namespace std;\n//\u5e38\u91cf\nconst int N=2e5+5;\nconst int M=1e5;\nconst int MOD=903250223;\nconst int INF=1e12;\n//\u7a7a\u95f4\u590d\u6742\u5ea6\nbool memBeg;\n//STL\nvector&lt;int&gt; v;\nstack &lt;int&gt; s;\nqueue&lt;int&gt; q;\npriority_queue&lt;int&gt; pq;\nmap&lt;int,int&gt; mp;\nset&lt;int&gt; st;\n//\u7ed3\u6784\u4f53\nstruct node{int v,id;}e[N];\nbool cmp(node a,node b){return a.v&lt;b.v;}\n//\u53d8\u91cf\nint n,m,_a[N],_b[N],ans,res,tmp,l,r,x,y,x_[N],y_[N],a__[N][N],b__[N][N];\nchar c,s[N];\nbool flg;\ndb db_a,db_b;\n\n//\u7a7a\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\nbool memEn;\n//\u5feb\u8bfb\nint readint() {char c = getchar();int neg = 1, ret = 0;for (; c &lt; '0' || c &gt; '9'; c = getchar())if (c == '-')neg = -1;for (; '0' &lt;= c &amp;&amp; c &lt;= '9'; c = getchar()) ret = (ret &lt;&lt; 3) + (ret &lt;&lt; 1) + (c &amp; 15);return neg * ret;}\nll readll() {char c = getchar();ll neg = 1, ret = 0;for (; c &lt; '0' || c &gt; '9'; c = getchar())if (c == '-')neg = -1;for (; '0' &lt;= c &amp;&amp; c &lt;= '9'; c = getchar()) ret = (ret &lt;&lt; 3) + (ret &lt;&lt; 1) + (c &amp; 15);return neg * ret;}\nvoid writeint(int x) {if (x == 0) {putchar('0');return;}if (x &lt; 0) {putchar('-');x = -x;}char stk[15];int top = 0;while (x) {int nxt = x / 10;stk[++top] = x - nxt * 10 + '0';x = nxt;}for (int i = top; i &gt;= 1; i--) putchar(stk[i]);}\nvoid writell(ll x) {if (x == 0) {putchar('0');return;}if (x &lt; 0) {putchar('-');x = -x;}char stk[25];int top = 0;while (x) {ll nxt = x / 10;stk[++top] = x - nxt * 10 + '0';x = nxt;}for (int i = top; i &gt;= 1; i--) putchar(stk[i]);}\nvoid Writeint(int x, char c) {writeint(x);putchar(c);}\nvoid Writell(ll x, char c) {writell(x);putchar(c);}\n\nsigned main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;i++){\n        //...\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n</code></pre> <p>v3.0</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\u5934\u6587\u4ef6\n//#include&lt;bits/stdc++.h&gt;\n#include &lt;cstdio&gt;\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;cassert&gt;\n#include &lt;vector&gt;\n#include &lt;bitset&gt;\n#include &lt;queue&gt;\n#include &lt;cmath&gt;\n#include &lt;set&gt;\n#include &lt;map&gt;\n//\u6570\u636e\u7c7b\u578b\n#define ll long long\n#define ull unsigned long long\n#definr uint unsigned int\n#define db double\n#define str string\n//\u51fd\u6570\n#define rtn return\n#define i1n int i=1;i&lt;=n;i++\n#define in1 int i=n;i&gt;=1;i--\n#define endl '\\n'\n//\u547d\u540d\u7a7a\u95f4\nusing namespace std;\n//\u5e38\u91cf\nconst int N=2e5+5;\nconst int M=1e5;\nconst int MOD=903250223;\nconst int INF=1e12;\n//\u7a7a\u95f4\u590d\u6742\u5ea6\nbool memBeg;\n//STL\nvector&lt;int&gt; v;\nstack &lt;int&gt; s;\nqueue&lt;int&gt; q;\npriority_queue&lt;int&gt; pq;\nmap&lt;int,int&gt; mp;\nset&lt;int&gt; st;\n//\u7ed3\u6784\u4f53\nstruct node{\n    int v,id;\n}e[N];\n\nbool cmp(node a,node b){\n    return a.v&lt;b.v; \n}\n//\u53d8\u91cf\nint n,m,_a[N],_b[N],ans,res,tmp,l,r,x,y,x_[N],y_[N],a__[N][N],b__[N][N];\nchar c,s[N];\nbool flg;\ndb db_a,db_b;\n\n//\u7a7a\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\nbool memEn;\n//\u5feb\u8bfb\nint readint() {\n    char c = getchar();\n    int neg = 1, ret = 0;\n    for (; c &lt; '0' || c &gt; '9'; c = getchar())\n        if (c == '-')\n            neg = -1;\n    for (; '0' &lt;= c &amp;&amp; c &lt;= '9'; c = getchar()) ret = (ret &lt;&lt; 3) + (ret &lt;&lt; 1) + (c &amp; 15);\n    return neg * ret;\n}\nll readll() {\n    char c = getchar();\n    ll neg = 1, ret = 0;\n    for (; c &lt; '0' || c &gt; '9'; c = getchar())\n        if (c == '-')\n            neg = -1;\n    for (; '0' &lt;= c &amp;&amp; c &lt;= '9'; c = getchar()) ret = (ret &lt;&lt; 3) + (ret &lt;&lt; 1) + (c &amp; 15);\n    return neg * ret;\n}\nvoid writeint(int x) {\n    if (x == 0) {\n        putchar('0');\n        return;\n    }\n    if (x &lt; 0) {\n        putchar('-');\n        x = -x;\n    }\n    char stk[15];\n    int top = 0;\n    while (x) {\n        int nxt = x / 10;\n        stk[++top] = x - nxt * 10 + '0';\n        x = nxt;\n    }\n    for (int i = top; i &gt;= 1; i--) putchar(stk[i]);\n}\nvoid writell(ll x) {\n    if (x == 0) {\n        putchar('0');\n        return;\n    }\n    if (x &lt; 0) {\n        putchar('-');\n        x = -x;\n    }\n    char stk[25];\n    int top = 0;\n    while (x) {\n        ll nxt = x / 10;\n        stk[++top] = x - nxt * 10 + '0';\n        x = nxt;\n    }\n    for (int i = top; i &gt;= 1; i--) putchar(stk[i]);\n}\nvoid Writeint(int x, char c) {\n    writeint(x);\n    putchar(c);\n}\nvoid Writell(ll x, char c) {\n    writell(x);\n    putchar(c);\n}\n\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=n;i++){\n        //...\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre> <p>v2.2</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\u5934\u6587\u4ef6\n#include&lt;bits/stdc++.h&gt;\n//\u6570\u636e\u7c7b\u578b\n#define ll long long\n#define ull unsigned long long\n#definr uint unsigned int\n#define db double\n#define str string\n//\u51fd\u6570\n#define rtn return\n#define i1n int i=1;i&lt;=n;i++\n#define in1 int i=n;i&gt;=1;i--\n#define endl '\\n'\n//\u547d\u540d\u7a7a\u95f4\nusing namespace std;\n//\u5e38\u91cf\nconst int N=2e5+5;\nconst int M=1e5;\nconst int MOD=903250223;\nconst int INF=1e12;\n//STL\nvector&lt;int&gt; v;\nstack &lt;int&gt; s;\nqueue&lt;int&gt; q;\npriority_queue&lt;int&gt; pq;\nmap&lt;int,int&gt; mp;\nset&lt;int&gt; st;\n//\u7ed3\u6784\u4f53\nstruct node{\n    int v,id;\n}e[N];\n\nbool cmp(node a,node b){\n    return a.v&lt;b.v; \n}\n//\u53d8\u91cf\nint n,m,_a[N],_b[N],ans,res,tmp,l,r,x,y,x_[N],y_[N],a__[N][N],b__[N][N];\nchar c,s[N];\nbool flg;\ndb db_a,db_b;\n\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=n;i++){\n        //...\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre> <p>v2.1</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . ToFind Chargcy .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\n#define i1n int i=1;i&lt;=n;i++\n#define in1 int i=n;i&gt;=1;i--\nusing namespace std;\n\nconst int N=2e5+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nsigned main(){\n\n    return 0;\n}\n</code></pre> <p>v2.0</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code by Ntsc .\n       . Love by Liye .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\n#define i1n int i=1;i&lt;=n;i++\n#define in1 int i=n;i&gt;=1;i--\nusing namespace std;\n\nconst int N=2e5+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n</code></pre> <p>v1.0</p> <pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt; \nusing namespace std;\n#define ll long long\nconst int N=1e5;\n\n\nll n,m,ver[N],ans,low[N],dfn[N];\nvoid add(int x,int y){\n    to[++cnt]=y,nxt[cnt]=h[x],h[a]=cnt;\n}\nsigned main(){\n\n    return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%B7%B1%E6%90%9C/","title":"\u6df1\u641c","text":"<p>\u6df1\u641c</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%B7%B1%E6%90%9C/#_1","title":"\u516b\u7687\u540e","text":""},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%B7%B1%E6%90%9C/#_2","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u4e00\u4e2a\u5982\u4e0b\u7684 \\(6 \\times 6\\) \u7684\u8df3\u68cb\u68cb\u76d8\uff0c\u6709\u516d\u4e2a\u68cb\u5b50\u88ab\u653e\u7f6e\u5728\u68cb\u76d8\u4e0a\uff0c\u4f7f\u5f97\u6bcf\u884c\u3001\u6bcf\u5217\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\uff0c\u6bcf\u6761\u5bf9\u89d2\u7ebf\uff08\u5305\u62ec\u4e24\u6761\u4e3b\u5bf9\u89d2\u7ebf\u7684\u6240\u6709\u5e73\u884c\u7ebf\uff09\u4e0a\u81f3\u591a\u6709\u4e00\u4e2a\u68cb\u5b50\u3002</p> <p></p> <p>\u4e0a\u9762\u7684\u5e03\u5c40\u53ef\u4ee5\u7528\u5e8f\u5217 \\(2\\ 4\\ 6\\ 1\\ 3\\ 5\\) \u6765\u63cf\u8ff0\uff0c\u7b2c \\(i\\) \u4e2a\u6570\u5b57\u8868\u793a\u5728\u7b2c \\(i\\) \u884c\u7684\u76f8\u5e94\u4f4d\u7f6e\u6709\u4e00\u4e2a\u68cb\u5b50\uff0c\u5982\u4e0b\uff1a</p> <p>\u884c\u53f7 \\(1\\ 2\\ 3\\ 4\\ 5\\ 6\\)</p> <p>\u5217\u53f7 \\(2\\ 4\\ 6\\ 1\\ 3\\ 5\\)</p> <p>\u8fd9\u53ea\u662f\u68cb\u5b50\u653e\u7f6e\u7684\u4e00\u4e2a\u89e3\u3002\u8bf7\u7f16\u4e00\u4e2a\u7a0b\u5e8f\u627e\u51fa\u6240\u6709\u68cb\u5b50\u653e\u7f6e\u7684\u89e3\u3002 \u5e76\u628a\u5b83\u4eec\u4ee5\u4e0a\u9762\u7684\u5e8f\u5217\u65b9\u6cd5\u8f93\u51fa\uff0c\u89e3\u6309\u5b57\u5178\u987a\u5e8f\u6392\u5217\u3002 \u8bf7\u8f93\u51fa\u524d \\(3\\) \u4e2a\u89e3\u3002\u6700\u540e\u4e00\u884c\u662f\u89e3\u7684\u603b\u4e2a\u6570\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%B7%B1%E6%90%9C/#_3","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570 \\(n\\)\uff0c\u8868\u793a\u68cb\u76d8\u662f \\(n \\times n\\) \u5927\u5c0f\u7684\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%B7%B1%E6%90%9C/#_4","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u524d\u4e09\u884c\u4e3a\u524d\u4e09\u4e2a\u89e3\uff0c\u6bcf\u4e2a\u89e3\u7684\u4e24\u4e2a\u6570\u5b57\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\u7b2c\u56db\u884c\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u89e3\u7684\u603b\u6570\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%B7%B1%E6%90%9C/#1","title":"\u6837\u4f8b #1","text":""},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%B7%B1%E6%90%9C/#1_1","title":"\u6837\u4f8b\u8f93\u5165 #1","text":"<pre><code>6\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%B7%B1%E6%90%9C/#1_2","title":"\u6837\u4f8b\u8f93\u51fa #1","text":"<pre><code>2 4 6 1 3 5\n3 6 2 5 1 4\n4 1 5 2 6 3\n4\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%B7%B1%E6%90%9C/#_5","title":"\u63d0\u793a","text":"<p>\u3010\u6570\u636e\u8303\u56f4\u3011 \u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\\(6 \\le n \\le 13\\)\u3002</p> <p>\u9898\u76ee\u7ffb\u8bd1\u6765\u81eaNOCOW\u3002</p> <p>USACO Training Section 1.5</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%B7%B1%E6%90%9C/#_6","title":"\u601d\u8def","text":"<p>\u6df1\u641c\u9012\u5f52</p> <p>\u5bf9\u4e8e\u4e00\u6761\u4ece\u53f3\u4e0a\u5230\u5de6\u4e0b\u7684\u5bf9\u89d2\u7ebf\uff0c\u5176\u4e0a\u7684\u68cb\u5b50\u5750\u6807\u5e94\u6ee1\u8db3<code>x+y</code>\u4e3a\u4e00**\u5b9a\u503c**\uff1b</p> <p>\u5bf9\u4e8e\u4e00\u6761\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u5bf9\u89d2\u7ebf\uff0c\u5176\u4e0a\u7684\u68cb\u5b50\u5750\u6807\u5e94\u6ee1\u8db3<code>x-y</code>\u4e3a\u4e00**\u5b9a\u503c**\uff0c\u4e3a\u4e86\u907f\u514d**\u8d1f\u6570**\u7684\u4ea7\u751f\uff0c\u4ee3\u7801\u4e2d\u7528<code>x-y+n</code>\u6765\u50a8\u5b58\u6570\u5b57\uff0c\u5177\u4f53\u6548\u679c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002</p> <p>\u56e0\u6b64,\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u5230\u4f7f\u7528\u6570\u7ec4\u5feb\u901f\u5b58\u50a8\u4e0e\u5224\u5b9a<code>\u5bf9\u89d2\u7ebf/\u884c/\u5217</code>\u662f\u5426\u5b58\u5728\u522b\u7684\u7687\u540e \u56e0\u4e3a\u6211\u4eec\u662f**\u9010\u884c\u641c\u7d22\u9012\u5f52**\u7684,\u4e0d\u9700\u8981\u5b58\u50a8\u8be5\u884c\u662f\u5426\u6709\u522b\u7684\u7687\u540e</p> <p><code>chk[0]</code>\u50a8\u5b58\u4e86\u68cb\u5b50\u7684\u5217\u6570\uff0c\u6bcf\u4e00\u6b21\u8fdb\u884c<code>ans[l]=i</code>\uff0c\u4f7f<code>chk[0][i]</code>\u6807\u8bb0\u4e3a\u5df2\u4f7f\u7528\uff1b</p> <p><code>chk[1]</code>\u548c<code>chk[2]</code>\u50a8\u5b58\u5bf9\u89d2\u7ebf\u4e0a\u7684\u68cb\u5b50\u5206\u5e03\u60c5\u51b5\uff1a</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E6%B7%B1%E6%90%9C/#_7","title":"\u4ee3\u7801","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\n\nusing namespace std;\nint ans[14],chk[3][28],cnt,n;\nvoid go(int l){\n    if(l&gt;n){    //\u627e\u5230\u4e86\u4e00\u79cd\u6ee1\u8db3\u6761\u4ef6\u7684\u516b\u7687\u540e\u6392\u5217!\n        cnt++;\n        if(cnt&lt;=3){ //\u7279\u5224\u662f\u7b2c\u51e0\u4e2a,\u8f93\u51fa\n            for(int i=1;i&lt;=n;i++)cout&lt;&lt;ans[i]&lt;&lt;' ';\n            cout&lt;&lt;endl;\n        }\n        return;\n    }\n    for(int i=1;i&lt;=n;i++){\n        if(!(chk[0][i])&amp;&amp;!(chk[1][l/\u5728\u8be5\u884c\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u4ee5\u653e\u7f6e\u7687\u540e\u7684\u5730\u65b9,\u5411\u4e0b\u9012\u5f52\n            chk[0][i]=1;chk[1][l+i]=1;chk[2][l-i+n]=1;\n            ans[l]=i;\n            go(l+1);\n            chk[0][i]=chk[1][l+i]=chk[2][l-i+n]=0;\n        }\n        //\u5982\u679c\u8be5\u884c\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u4e00\u4e2a\u53ef\u4ee5\u653e\u5230\u5730\u65b9,\u5219\u65e0\u529f\u800c\u8fd4!\n    }\n\n}\nint main() {\n    cin&gt;&gt;n;\n    go(1);\n    cout&lt;&lt;cnt;\n    return 0;\n}\n</code></pre> <p>\u6446\u8131\u4f20\u7edf\u601d\u60f3!\u63a5\u53d7\u9012\u5f52\u601d\u60f3!</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/","title":"\u8d2a\u5fc3","text":"<p>\u4e13\u9898 | \u8d2a\u5fc3</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/#_1","title":"\u8d2a\u5fc3","text":"<p>zhuanlan.zhihu.com</p> <p>\u7ecf\u5178\u7b97\u6cd5\u601d\u60f35\u2014\u2014\u8d2a\u5fc3\uff08greedy algorithm\uff09</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/#_2","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u57fa\u672c\u601d\u8def","text":"<p>1.\u5efa\u7acb\u6570\u5b66\u6a21\u578b\u6765\u63cf\u8ff0\u95ee\u9898\u3002</p> <p>2.\u628a\u6c42\u89e3\u7684\u95ee\u9898\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u95ee\u9898\u3002</p> <p>3.\u5bf9\u6bcf\u4e00\u5b50\u95ee\u9898\u6c42\u89e3\uff0c\u5f97\u5230\u5b50\u95ee\u9898\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u3002</p> <p>4.\u628a\u5b50\u95ee\u9898\u7684\u89e3\u5c40\u90e8\u6700\u4f18\u89e3\u5408\u6210\u539f\u6765\u89e3\u95ee\u9898\u7684\u4e00\u4e2a\u89e3\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/#_3","title":"\u8d2a\u5fc3\u7b97\u6cd5\u9002\u7528\u7684\u95ee\u9898","text":"<p>\u8d2a\u5fc3\u7b56\u7565\u7684\u524d\u63d0\u662f\uff1a\u5c40\u90e8\u6700\u4f18\u7b56\u7565\u80fd\u5bfc\u81f4\u4ea7\u751f\u5168\u5c40\u6700\u4f18\u89e3\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/#1","title":"\u4f8b\u9898 #1 \u6392\u961f\u63a5\u6c34","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u6709 \\(n\\) \u4e2a\u4eba\u5728\u4e00\u4e2a\u6c34\u9f99\u5934\u524d\u6392\u961f\u63a5\u6c34\uff0c\u5047\u5982\u6bcf\u4e2a\u4eba\u63a5\u6c34\u7684\u65f6\u95f4\u4e3a \\(T_i\\)\uff0c\u8bf7\u7f16\u7a0b\u627e\u51fa\u8fd9 \\(n\\) \u4e2a\u4eba\u6392\u961f\u7684\u4e00\u79cd\u987a\u5e8f\uff0c\u4f7f\u5f97 \\(n\\) \u4e2a\u4eba\u7684\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\u6700\u5c0f\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u6574\u6570 \\(n\\)\u3002</p> <p>\u7b2c\u4e8c\u884c \\(n\\) \u4e2a\u6574\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6574\u6570 \\(T_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u4eba\u7684\u7b49\u5f85\u65f6\u95f4 \\(T_i\\)\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u6587\u4ef6\u6709\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u4e3a\u4e00\u79cd\u5e73\u5747\u65f6\u95f4\u6700\u77ed\u7684\u6392\u961f\u987a\u5e8f\uff1b\u7b2c\u4e8c\u884c\u4e3a\u8fd9\u79cd\u6392\u5217\u65b9\u6848\u4e0b\u7684\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\uff08\u8f93\u51fa\u7ed3\u679c\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d\uff09\u3002</p> <p>\u63d0\u793a</p> <p>\\(n \\leq 1000,t_i \\leq 10^6\\)\uff0c\u4e0d\u4fdd\u8bc1 \\(t_i\\) \u4e0d\u91cd\u590d\u3002</p> <p>\u5f53 \\(t_i\\) \u91cd\u590d\u65f6\uff0c\u6309\u7167\u8f93\u5165\u987a\u5e8f\u5373\u53ef\uff08sort \u662f\u53ef\u4ee5\u7684\uff09</p> <pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\nconst int N=1e5;\n\n\nint idx,ans;\nstruct node{\n    int num,id;\n}h[N];\nbool cmp(node a,node b){\n    return a.num&lt;b.num;\n}\nsigned main(){\n    int n,idx=0;\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        int tmp;\n        cin&gt;&gt;tmp;\n        idx++;\n        h[idx]={tmp,idx};\n    } \n    sort(h+1,h+n+1,cmp);\n    for(int i=1;i&lt;=n;i++)cout&lt;&lt;h[i].id&lt;&lt;' ';\n    for(int i=1;i&lt;n;i++){\n        ans+=h[i].num*(n-i);\n    }\n    printf(\"\\n%.2lf\",1.00*ans/n);\n    return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/#2-noip2004","title":"\u4f8b\u9898 #2 [NOIP2004 \u63d0\u9ad8\u7ec4] \u5408\u5e76\u679c\u5b50","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5728\u4e00\u4e2a\u679c\u56ed\u91cc\uff0c\u591a\u591a\u5df2\u7ecf\u5c06\u6240\u6709\u7684\u679c\u5b50\u6253\u4e86\u4e0b\u6765\uff0c\u800c\u4e14\u6309\u679c\u5b50\u7684\u4e0d\u540c\u79cd\u7c7b\u5206\u6210\u4e86\u4e0d\u540c\u7684\u5806\u3002\u591a\u591a\u51b3\u5b9a\u628a\u6240\u6709\u7684\u679c\u5b50\u5408\u6210\u4e00\u5806\u3002</p> <p>\u6bcf\u4e00\u6b21\u5408\u5e76\uff0c\u591a\u591a\u53ef\u4ee5\u628a\u4e24\u5806\u679c\u5b50\u5408\u5e76\u5230\u4e00\u8d77\uff0c\u6d88\u8017\u7684\u4f53\u529b\u7b49\u4e8e\u4e24\u5806\u679c\u5b50\u7684\u91cd\u91cf\u4e4b\u548c\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u6240\u6709\u7684\u679c\u5b50\u7ecf\u8fc7 \\(n-1\\) \u6b21\u5408\u5e76\u4e4b\u540e\uff0c \u5c31\u53ea\u5269\u4e0b\u4e00\u5806\u4e86\u3002\u591a\u591a\u5728\u5408\u5e76\u679c\u5b50\u65f6\u603b\u5171\u6d88\u8017\u7684\u4f53\u529b\u7b49\u4e8e\u6bcf\u6b21\u5408\u5e76\u6240\u8017\u4f53\u529b\u4e4b\u548c\u3002</p> <p>\u56e0\u4e3a\u8fd8\u8981\u82b1\u5927\u529b\u6c14\u628a\u8fd9\u4e9b\u679c\u5b50\u642c\u56de\u5bb6\uff0c\u6240\u4ee5\u591a\u591a\u5728\u5408\u5e76\u679c\u5b50\u65f6\u8981\u5c3d\u53ef\u80fd\u5730\u8282\u7701\u4f53\u529b\u3002\u5047\u5b9a\u6bcf\u4e2a\u679c\u5b50\u91cd\u91cf\u90fd\u4e3a \\(1\\) \uff0c\u5e76\u4e14\u5df2\u77e5\u679c\u5b50\u7684\u79cd\u7c7b \u6570\u548c\u6bcf\u79cd\u679c\u5b50\u7684\u6570\u76ee\uff0c\u4f60\u7684\u4efb\u52a1\u662f\u8bbe\u8ba1\u51fa\u5408\u5e76\u7684\u6b21\u5e8f\u65b9\u6848\uff0c\u4f7f\u591a\u591a\u8017\u8d39\u7684\u4f53\u529b\u6700\u5c11\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u7684\u4f53\u529b\u8017\u8d39\u503c\u3002</p> <p>\u4f8b\u5982\u6709 \\(3\\) \u79cd\u679c\u5b50\uff0c\u6570\u76ee\u4f9d\u6b21\u4e3a \\(1\\) \uff0c \\(2\\) \uff0c \\(9\\) \u3002\u53ef\u4ee5\u5148\u5c06 \\(1\\) \u3001 \\(2\\) \u5806\u5408\u5e76\uff0c\u65b0\u5806\u6570\u76ee\u4e3a \\(3\\) \uff0c\u8017\u8d39\u4f53\u529b\u4e3a \\(3\\) \u3002\u63a5\u7740\uff0c\u5c06\u65b0\u5806\u4e0e\u539f\u5148\u7684\u7b2c\u4e09\u5806\u5408\u5e76\uff0c\u53c8\u5f97\u5230\u65b0\u7684\u5806\uff0c\u6570\u76ee\u4e3a \\(12\\) \uff0c\u8017\u8d39\u4f53\u529b\u4e3a \\(12\\) \u3002\u6240\u4ee5\u591a\u591a\u603b\u5171\u8017\u8d39\u4f53\u529b \\(=3+12=15\\) \u3002\u53ef\u4ee5\u8bc1\u660e \\(15\\) \u4e3a\u6700\u5c0f\u7684\u4f53\u529b\u8017\u8d39\u503c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u5171\u4e24\u884c\u3002 \u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570 \\(n(1\\leq n\\leq 10000)\\) \uff0c\u8868\u793a\u679c\u5b50\u7684\u79cd\u7c7b\u6570\u3002</p> <p>\u7b2c\u4e8c\u884c\u5305\u542b \\(n\\) \u4e2a\u6574\u6570\uff0c\u7528\u7a7a\u683c\u5206\u9694\uff0c\u7b2c \\(i\\) \u4e2a\u6574\u6570 \\(a_i(1\\leq a_i\\leq 20000)\\) \u662f\u7b2c \\(i\\) \u79cd\u679c\u5b50\u7684\u6570\u76ee\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e00\u4e2a\u6574\u6570\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u7684\u4f53\u529b\u8017\u8d39\u503c\u3002\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u8fd9\u4e2a\u503c\u5c0f\u4e8e \\(2^{31}\\) \u3002</p> <p>\u63d0\u793a</p> <p>\u5bf9\u4e8e\u5168\u90e8\u7684\u6570\u636e\uff0c\u4fdd\u8bc1\u6709 \\(n \\le 10000\\)\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/#_4","title":"\u5806","text":"<ul> <li> <p>Heap\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u5177\u6709\u4ee5\u4e0b\u7684\u7279\u70b9\uff1a 1\uff09\u5b8c\u5168\u4e8c\u53c9\u6811\uff1b 2\uff09heap\u4e2d\u5b58\u50a8\u7684\u503c\u662f**\u504f\u5e8f**\uff1b</p> </li> <li> <p>Min-heap \u5c0f**\u6839\u5806: \u4efb\u610f\u7236\u8282\u70b9\u7684\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5b50\u8282\u70b9\u7684\u503c\uff1b\u5373\u5bf9\u4e8e\u4efb\u4f55\u5b50\u6811\uff0c\u5176\u6839\u2264\u5176\u4e2d\u4efb\u4f55\u8282\u70b9 **Max-heap \u5927\u6839\u5806: \u4efb\u610f\u7236\u8282\u70b9\u7684\u503c\u5927\u4e8e\u6216\u7b49\u4e8e\u5b50\u8282\u70b9\u7684\u503c\uff1b</p> </li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/#priority_queue","title":"Priority_queue","text":"<p>\u5b9a\u4e49\u65b9\u5f0f</p> <pre><code>priority_queue&lt;int&gt; pq;//\u9ed8\u8ba4\u6784\u5efa\u7684\u662f\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u6240\u4ee5\u6bcf\u6b21\u4ece\u5934\u53d6\u6570\u636e\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u4ece\u5927\u5230\u5c0f\u7684\u961f\u5217\u6392\u5e8f.\n//or\npriority_queue&lt;int, vector&lt;int&gt;, less&lt;int&gt; &gt;\n</code></pre> <p>\u5c0f\u6839\u5806\u5b9a\u4e49\u65b9\u5f0f</p> <pre><code>priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt; &gt;//greater\u4ee3\u8868\u8d8a\u5927\u7684\u8d8a\u6df1\n</code></pre> <p>\u6bcf\u6b21\u53d6\u51fa\u6240\u6709\u5806\u4e2d\u6570\u91cf\u6700\u5c11\u76842\u5806\uff0c\u5408\u5e76\u540e\u653e\u56de\u5176\u5b83\u5806\u4e2d</p> <p>\u5b9e\u73b0\u65b9\u6cd5\uff1apriority_queue</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint n,a,ans;\npriority_queue&lt;int&gt; pq;\nsigned main(){\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a;pq.push(-a);\n\n    }\n    while(pq.size()){\n        int a,b;\n        a=-pq.top();pq.pop();\n        if(pq.size()){\n            b=-pq.top();pq.pop();\n        ans+=a+b;\n        pq.push(-a-b);\n        }\n\n    }\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/#_5","title":"\u7ec3\u4e60","text":"<p>www.luogu.com.cn</p> <p>\u5e26\u9ad8\u7cbe\u5ea6\u4e58\u9664 \u96be\u5ea6 \u666e\u53ca+/\u63d0\u9ad8</p> <p>www.luogu.com.cn</p> <p>\u6a21\u62df\u8d2a\u5fc3\u6392\u5e8f \u96be\u5ea6 \u666e\u53ca-</p> <p>www.luogu.com.cn</p> <p>[NOIP1999 \u666e\u53ca\u7ec4] \u5bfc\u5f39\u62e6\u622a \u666e\u53ca/\u63d0\u9ad8-</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/#_6","title":"\u53cd\u6094\u8d2a\u5fc3","text":""},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/#1-buy-low-sell-high","title":"\u4f8b\u9898 #1 Buy Low Sell High","text":"<p>\u9898\u9762\u7ffb\u8bd1</p> <p>\u9898\u76ee: \u5df2\u77e5\u63a5\u4e0b\u6765N\u5929\u7684\u80a1\u7968\u4ef7\u683c,\u6bcf\u5929\u4f60\u53ef\u4ee5\u4e70\u8fdb\u4e00\u80a1\u80a1\u7968,\u5356\u51fa\u4e00\u80a1\u80a1\u7968,\u6216\u8005\u4ec0\u4e48\u4e5f\u4e0d\u505a.N\u5929\u4e4b\u540e\u4f60\u62e5\u6709\u7684\u80a1\u7968\u5e94\u4e3a0,\u5f53\u7136,\u5e0c\u671b\u8fd9N\u5929\u5185\u80fd\u591f\u8d5a\u8db3\u591f\u591a\u7684\u94b1. \u8f93\u5165: \u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570\u5929\u6570N(2&lt;=N&lt;=300000). \u7b2c\u4e8c\u884cN\u4e2a\u6570\u5b57p1,p2...pN(1&lt;=pi&lt;=10^6),\u8868\u793a\u6bcf\u5929\u7684\u4ef7\u683c. \u8f93\u51fa: N\u5929\u7ed3\u675f\u540e\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6. \u6837\u4f8b\u89e3\u91ca: \u6837\u4f8b1:\u5206\u522b\u5728\u4ef7\u683c\u4e3a5,4,2\u7684\u65f6\u5019\u4e70\u5165,\u5206\u522b\u5728\u4ef7\u683c\u4e3a9,12,10\u7684\u65f6\u5019\u5356\u51fa,\u603b\u5229\u6da6\u4e3a\\(-5-4+9+12-2+10=20\\) . \u7ffb\u8bd1\u8d21\u732e\u8005UID\uff1a36080</p> <p>\u8fd9\u9053\u9898\u4e00\u5f00\u59cb\u4e5f\u8bb8\u6211\u4eec\u5e76\u4e0d\u4f1a\u60f3\u5230\u8d2a\u5fc3\uff0c\u56e0\u4e3a\u5f88\u660e\u663e\u6ca1\u6709\u660e\u786e\u7684\u9636\u6bb5\u561b\uff0c\u5e76\u4e14\u597d\u50cf\u8d2a\u5fc3\u9009\u4e3e\u5bf9\u540e\u9762\u4f1a\u4ea7\u751f\u5f71\u54cd\u3002</p> <p>\u4f46\u5b9e\u9645\u4e0a\u672c\u9898\u5c31\u662f\u4e00\u79cd\u8d2a\u5fc3\u3002</p> <p>\u6211\u4eec\u9996\u5148\u8003\u8651\u8d2a\u5fc3\u7b56\u7565\u3002\u6211\u4eec\u628a\u6bcf\u4e00\u5929\u770b\u6210\u4e00\u4e2a\u7269\u54c1\uff0c\u5047\u8bbe\u5f53\u524d\u6211\u4eec\u5728\u7b2ci+1\u5929\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u5171\u6709i\u4e2a\u7269\u54c1\uff08\u4e0d\u6392\u9664\u4e00\u4e9b\u7269\u54c1\u5df2\u7ecf\u88ab\u9009\u62e9\uff09\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u8d2a\u5fc3\u7b2c\u9009\u62e9\u5dee\u4ef7\u6700\u5927\u7684\u7269\u54c1\u5373\u53ef\u3002</p> <p>\u53ef\u662f\u8fd9\u4e2a\u7b56\u7565\u5f88\u660e\u663e\u53ea\u5c40\u9650\u4e8e\u5f53\u524d\u9636\u6bb5\uff0c\u5373\u4ec5\u9650\u4e8e\u7b2ci+1\u53ca\u4ee5\u524d\u7684\u4fe1\u606f\uff0c\u65e0\u6cd5\u987e\u53ca\u540e\u9762\u7684\u4fe1\u606f\u3002\u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4\u7f51\u7edc\u6d41\u7684\u53cd\u6094\u8fb9\uff0c\u5c31\u53ef\u4ee5\u5927\u81f4\u77e5\u9053\u505a\u6cd5\u4e86\u3002\u5047\u8bbe\u7b2ca\u5929\u7684\u80a1\u7968\u5728\u7b2cb\u5929\u5356\u51fa\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5982\u679c\u5176\u5728\u7b2cc\u5929\u5356\u51fa\u4f1a\u66f4\u6709\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6267\u884c\uff1a\u4e70\u7b2cb\u5929\u7684\u80a1\u7968\u5e76\u4e14\u5728\u7b2cc\u5929\u5356\u51fa\u3002\u8fd9\u6837\u5c31\u7b49\u4ef7\u4e8e\u6211\u4eec\u4e70\u4e86\u7b2ca\u5929\u7684\u80a1\u7968\u540e\u5728\u7b2cc\u5929\u5356\u51fa\u4e86\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u7269\u54c1\u7684\u4ef7\u503c val \u7a76\u7adf\u5e94\u8be5\u662f\u591a\u5c11\u5462\uff1f\u8bbe\u7b2c i \u5929\u7684\u4ef7\u683c\u4e3a \\(a_i\\)\u200b\uff0c\u5219\u6709 \\(a_j\u200b\u2212a_i\u200b+a_k\u200b\u2212val=a_k\u200b\u2212a_i\u200b\\)\uff0c\u5316\u7b80\u5f97 \\(val=a_j\\)\u200b\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u4fbf\u8bbe\u8ba1\u51fa\u4e86\u4e00\u4e2a\u65b0\u7684\u7b97\u6cd5\uff1a\u7ef4\u62a4\u4e00\u4e2a\u53ef\u91cd\u96c6\u5408\uff0c\u4ee3\u8868\u300c\u53ef\u9009\u7684\u7269\u54c1\u7684\u4ef7\u683c\u300d\u3002\u4ece\u524d\u5411\u540e\u904d\u5386\u6bcf\u4e00\u5929\uff0c\u5bf9\u4e8e\u7b2c i \u5929\uff0c\u627e\u5230\u96c6\u5408\u4e2d\u6700\u5c0f\u7684\u4ef7\u683c \\(a_j\\)\u200b\uff0c\u5e76\u5411\u96c6\u5408\u4e2d\u63d2\u5165 \\(a_i\\)\u200b\uff0c\u4ee3\u8868 \\(a_i\\)\u200b \u8fd9\u4e00\u5929\u53ef\u9009\u3002\u82e5 \\(a_i\u200b&gt;a_j\u200b\\)\uff0c\u5219\u628a\u7b54\u6848\u52a0\u4e0a \\(a_i\u200b\u2212a_j\u200b\\)\uff0c\u5e76\u5411\u96c6\u5408\u4e2d\u518d\u6b21\u52a0\u5165 \\(a_i\\)\\(\u200b\\)\uff0c\u4ee3\u8868\u5047\u60f3\u7684\u53cd\u6094\u7269\u54c1\uff0c\u5e76\u5c06 \\(a_j\\)\u200b \u4ece\u96c6\u5408\u4e2d\u5220\u9664\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5806\u7ef4\u62a4\u8fd9\u4e2a\u96c6\u5408\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n \\log n)\\)\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define pii pair&lt;int,int&gt;\n#define ps second\n#define pf first\n\n\n#define rd read()\ninline int read(){\n    int xx=0,ff=1;\n    char c=getchar();\n    while(c&lt;'0'||c&gt;'9') {if(c=='-') ff=-1;c=getchar();}\n    while(c&gt;='0'&amp;&amp;c&lt;='9') xx=xx*10+(c-'0'),c=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\n\nconst int M=2e6+5;\nconst int N=3e5+5;\nconst int INF=1e9+5;\nconst int MOD=1e9+7;\n\nint n,ans;\npriority_queue&lt;int&gt; q;\n\nsigned main(){\n    n=rd;\n    for(int i=1;i&lt;=n;i++){\n        int k=rd;\n        if(q.size()&amp;&amp;-q.top()&lt;k)ans+=k+q.top(),q.pop(),q.push(-k);\n        q.push(-k);\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%B4%AA%E5%BF%83/#2","title":"\u4f8b\u9898 #2 \u751f\u65e5\u793c\u7269","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>ftiasch 18 \u5c81\u751f\u65e5\u7684\u65f6\u5019\uff0clqp18_31 \u7ed9\u5979\u770b\u4e86\u4e00\u4e2a\u795e\u5947\u7684\u5e8f\u5217 \\(A _ 1\\), \\(A _ 2\\), ..., \\(A _ N\\)\u3002 \u5979\u88ab\u5141\u8bb8\u9009\u62e9\u4e0d\u8d85\u8fc7 \\(M\\) \u4e2a\u8fde\u7eed\u7684\u90e8\u5206\u4f5c\u4e3a\u81ea\u5df1\u7684\u751f\u65e5\u793c\u7269\u3002</p> <p>\u81ea\u7136\u5730\uff0cftiasch \u60f3\u8981\u77e5\u9053\u9009\u62e9\u5143\u7d20\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002\u4f60\u80fd\u5e2e\u52a9\u5979\u5417?</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c 1 \u884c\uff0c\u4e24\u4e2a\u6574\u6570 \\(N\\) (\\(1 \\le  N \\le 10 ^ {5}\\) ) \u548c \\(M\\) (\\(0 \\le M \\le 10 ^ 5\\))\uff0c\u8868\u793a\u5e8f\u5217\u7684\u957f\u5ea6\u548c\u53ef\u4ee5\u9009\u62e9\u7684\u90e8\u5206\u3002</p> <p>\u7b2c 2 \u884c\uff0c \\(N\\) \u4e2a\u6574\u6570 \\(A_1\\), \\(A_2\\), ..., \\(A_N\\) (\\(0 \\le \\mid A_i\\mid \\le 10^4\\))\uff0c\u8868\u793a\u5e8f\u5217\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5927\u7684\u548c\u3002</p> <pre><code>/*\n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n      - Alt/nxt pos'\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n#define itn int\n// #define inr intw\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read()\n{\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9')\n    {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n        xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out)\n{\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\n#define ell dbg('\\n')\nconst char el = '\\n';\nconst bool enable_dbg = 1;\ntemplate &lt;typename T, typename... Args&gt;\nvoid dbg(T s, Args... args)\n{\n    if constexpr (enable_dbg)\n    {\n        cerr &lt;&lt; s;\n        if (1) cerr &lt;&lt; ' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\n#define zerol = 1\n#ifdef zerol\n#define cdbg(x...)            \\\n    do                        \\\n    {                         \\\n        cerr &lt;&lt; #x &lt;&lt; \" -&gt; \"; \\\n        err(x);               \\\n    } while (0)\nvoid err()\n{\n    cerr &lt;&lt; endl;\n}\ntemplate &lt;template &lt;typename...&gt; class T, typename t, typename... A&gt;\nvoid err(T&lt;t&gt; a, A... x)\n{\n    for (auto v : a) cerr &lt;&lt; v &lt;&lt; ' ';\n    err(x...);\n}\ntemplate &lt;typename T, typename... A&gt;\nvoid err(T a, A... x)\n{\n    cerr &lt;&lt; a &lt;&lt; ' ';\n    err(x...);\n}\n#else\n#define dbg(...)\n#endif\n\nconst int N = 3e5 + 5;\nconst int INF = 1e18;\nconst int M = 1e7;\nconst int MOD = 1e9 + 7;\n\nstruct node\n{\n    int v, id;\n    bool operator&lt;(const node &amp;b) const\n    {\n        return abs(v) &gt; abs(b.v);\n    }\n};\n\nint n, m, k, x, ans, cnt = 1;\nint a[N], l[N], r[N];\nbool f[N];\n\npriority_queue&lt;node&gt; pq;\n\nbool check(int x)\n{\n    return ((0 &lt; l[x] &amp;&amp; r[x] &lt; n + 1) || a[x] &gt; 0);\n}\nvoid del(int x)\n{\n    f[x] = 1;\n    l[r[x]] = l[x], r[l[x]] = r[x];\n}\n\nvoid solve()\n{\n    n = rd, m = rd;\n    for (int i = 1; i &lt;= n; i++)\n    {\n        x = rd;\n        if (!x)\n            continue;\n        if ((x &gt;= 0 &amp;&amp; a[cnt] &gt;= 0) || (x &lt;= 0 &amp;&amp; a[cnt] &lt;= 0))\n            a[cnt] += x;\n        else\n            a[++cnt] = x;\n    }\n    n = cnt;\n    for (int i = 1; i &lt;= n; i++)\n    {\n        l[i] = i - 1, r[i] = i + 1;\n        if (a[i] &gt; 0)\n        {\n            k++;\n            ans += a[i];\n        }\n        pq.push({a[i], i});\n    }\n    while (k &gt; m)\n    {\n        if (pq.empty())\n            break;\n        x = pq.top().id;\n        pq.pop();\n        if (f[x])\n            continue;\n        if (check(x))\n        {\n            ans -= abs(a[x]);\n            a[x] += a[l[x]] + a[r[x]];\n            del(l[x]), del(r[x]);\n            pq.push({a[x], x});\n            k--;\n        }\n    }\n\n    cout &lt;&lt; ans &lt;&lt; endl;\n}\n\nsigned main()\n{\n    // freopen(\".in\",\"r\",stdin);\n    // freopen(\".in\",\"w\",stdout);\n\n    int T = 1;\n    while (T--)\n    {\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92%E4%B8%8E%E9%80%92%E6%8E%A8/","title":"\u9012\u5f52\u4e0e\u9012\u63a8","text":""},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92%E4%B8%8E%E9%80%92%E6%8E%A8/#1","title":"\u4f8b\u9898 #1 \u6c49\u8bfa\u5854\u95ee\u9898","text":"<p>1205</p> <p>\u3010\u9898\u76ee\u63cf\u8ff0\u3011</p> <p>\u7ea619\u4e16\u7eaa\u672b\uff0c\u5728\u6b27\u5dde\u7684\u5546\u5e97\u4e2d\u51fa\u552e\u4e00\u79cd\u667a\u529b\u73a9\u5177\uff0c\u5728\u4e00\u5757\u94dc\u677f\u4e0a\u6709\u4e09\u6839\u6746\uff0c\u6700\u5de6\u8fb9\u7684\u6746\u4e0a\u81ea\u4e0a\u800c\u4e0b\u3001\u7531\u5c0f\u5230\u5927\u987a\u5e8f\u4e32\u7740\u753164\u4e2a\u5706\u76d8\u6784\u6210\u7684\u5854\u3002\u76ee\u7684\u662f\u5c06\u6700\u5de6\u8fb9\u6746\u4e0a\u7684\u76d8\u5168\u90e8\u79fb\u5230\u4e2d\u95f4\u7684\u6746\u4e0a\uff0c\u6761\u4ef6\u662f\u4e00\u6b21\u53ea\u80fd\u79fb\u52a8\u4e00\u4e2a\u76d8\uff0c\u4e14\u4e0d\u5141\u8bb8\u5927\u76d8\u653e\u5728\u5c0f\u76d8\u7684\u4e0a\u9762\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u8457\u540d\u7684\u95ee\u9898\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u6559\u6750\u4e0a\u90fd\u6709\u8fd9\u4e2a\u95ee\u9898\u3002\u7531\u4e8e\u6761\u4ef6\u662f\u4e00\u6b21\u53ea\u80fd\u79fb\u52a8\u4e00\u4e2a\u76d8\uff0c\u4e14\u4e0d\u5141\u8bb8\u5927\u76d8\u653e\u5728\u5c0f\u76d8\u4e0a\u9762\uff0c\u6240\u4ee564\u4e2a\u76d8\u7684\u79fb\u52a8\u6b21\u6570\u662f\uff1a18,446,744,073,709,551,615</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5929\u6587\u6570\u5b57\uff0c\u82e5\u6bcf\u4e00\u5fae\u79d2\u53ef\u80fd\u8ba1\u7b97(\u5e76\u4e0d\u8f93\u51fa)\u4e00\u6b21\u79fb\u52a8\uff0c\u90a3\u4e48\u4e5f\u9700\u8981\u51e0\u4e4e\u4e00\u767e\u4e07\u5e74\u3002\u6211\u4eec\u4ec5\u80fd\u627e\u51fa\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u5e76\u89e3\u51b3\u8f83\u5c0fN\u503c\u65f6\u7684\u6c49\u8bfa\u5854\uff0c\u4f46\u5f88\u96be\u7528\u8ba1\u7b97\u673a\u89e3\u51b364\u5c42\u7684\u6c49\u8bfa\u5854\u3002</p> <p>\u5047\u5b9a\u5706\u76d8\u4ece\u5c0f\u5230\u5927\u7f16\u53f7\u4e3a1, 2, ...</p> <p>\u3010\u8f93\u5165\u3011</p> <p>\u8f93\u5165\u4e3a\u4e00\u4e2a\u6574\u6570(\u5c0f\u4e8e20\uff09\u540e\u9762\u8ddf\u4e09\u4e2a\u5355\u5b57\u7b26\u5b57\u7b26\u4e32\u3002</p> <p>\u6574\u6570\u4e3a\u76d8\u5b50\u7684\u6570\u76ee\uff0c\u540e\u4e09\u4e2a\u5b57\u7b26\u8868\u793a\u4e09\u4e2a\u6746\u5b50\u7684\u7f16\u53f7\u3002</p> <p>\u3010\u8f93\u51fa\u3011</p> <p>\u8f93\u51fa\u6bcf\u4e00\u6b65\u79fb\u52a8\u76d8\u5b50\u7684\u8bb0\u5f55\u3002\u4e00\u6b21\u79fb\u52a8\u4e00\u884c\u3002</p> <p>\u6bcf\u6b21\u79fb\u52a8\u7684\u8bb0\u5f55\u4e3a\u4f8b\u5982 a-&gt;3-&gt;b \u7684\u5f62\u5f0f\uff0c\u5373\u628a\u7f16\u53f7\u4e3a3\u7684\u76d8\u5b50\u4ecea\u6746\u79fb\u81f3b\u6746\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E9%80%92%E5%BD%92%E4%B8%8E%E9%80%92%E6%8E%A8/#2","title":"\u4f8b\u9898 #2 \u9012\u63a8&amp;\u77e9\u5f62","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u51fa\u4e00\u4e2a \\(n \\times n\\) \u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e2d\uff0c\u6709\u4e9b\u683c\u5b50\u88ab\u67d3\u6210\u767d\u8272\uff0c\u6709\u4e9b\u683c\u5b50\u88ab\u67d3\u6210\u9ed1\u8272\uff0c\u73b0\u8981\u6c42\u77e9\u9635\u4e2d\u767d\u8272**\u77e9\u5f62**\u7684\u6570\u91cf\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\uff0c\u4e00\u4e2a\u6574\u6570 \\(n\\)\uff0c\u8868\u793a\u77e9\u5f62\u7684\u5927\u5c0f\u3002</p> <p>\u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u884c \\(n\\) \u4e2a\u5b57\u7b26\uff0c\u8fd9\u4e9b\u5b57\u7b26\u4e3a \\(\\verb!W!\\) \u6216 \\(\\verb!B!\\)\u3002\u5176\u4e2d \\(\\verb!W!\\) \u8868\u793a\u767d\u683c\uff0c\\(\\verb!B!\\) \u8868\u793a\u9ed1\u683c\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u4e3a\u767d\u8272\u77e9\u5f62\u6570\u91cf\u3002</p> <p>\u5bf9\u4e8e\\(100\\%\\)\u7684\u6570\u636e\uff0c\\(n \u2264 150\\)\uff1b</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/CDQ%E5%88%86%E6%B2%BB/","title":"CDQ\u5206\u6cbb\uff08\u504f\u5e8f\u95ee\u9898\uff09","text":"<p>\u3010\u6a21\u677f\u3011\u4e09\u7ef4\u504f\u5e8f\uff08\u964c\u4e0a\u82b1\u5f00\uff09</p> <p>\u8fd9\u662f\u4e00\u9053\u6a21\u677f\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 bitset\uff0cCDQ \u5206\u6cbb\uff0cKD-Tree \u7b49\u65b9\u5f0f\u89e3\u51b3\u3002\u672c\u9898\u6211\u4eec\u4f7f\u7528CDQ\u5206\u6cbb\u3002</p> <p>\u6709 \\(n\\) \u4e2a\u5143\u7d20\uff0c\u7b2c \\(i\\) \u4e2a\u5143\u7d20\u6709 \\(a_i,b_i,c_i\\) \u4e09\u4e2a\u5c5e\u6027\uff0c\u8bbe \\(f(i)\\) \u8868\u793a\u6ee1\u8db3 \\(a_j \\leq a_i\\) \u4e14 \\(b_j \\leq b_i\\) \u4e14 \\(c_j \\leq c_i\\) \u4e14 \\(j \\ne i\\) \u7684 \\(j\\) \u7684\u6570\u91cf\u3002</p> <p>\u5bf9\u4e8e \\(d \\in [0, n)\\)\uff0c\u6c42 \\(f(i) = d\\) \u7684\u6570\u91cf\u3002</p> <p>\u8f93\u51fa \\(n\\) \u884c\uff0c\u7b2c \\(d + 1\\) \u884c\u8868\u793a \\(f(i) = d\\) \u7684 \\(i\\) \u7684\u6570\u91cf\u3002</p> <p>$ 1 \\leq n \\leq 10^5\\(\uff0c\\)1 \\leq a_i, b_i, c_i \\le k \\leq 2 \\times 10^5 $\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/CDQ%E5%88%86%E6%B2%BB/#cdq_1","title":"CDQ\u5206\u6cbb","text":"<p>https://oi-wiki.org/misc/cdq-divide/</p> <p>\u6211\u4eec\u5148\u4ece\u4e8c\u7ef4\u504f\u5e8f\u6765\u5f15\u5165\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/CDQ%E5%88%86%E6%B2%BB/#_1","title":"\u4e8c\u7ef4\u504f\u5e8f","text":"<p>****\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a\\(n\\)\u7684\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5e8f\u5217\u90fd\u6709\\(a,b\\)\u4e24\u79cd\u5c5e\u6027\uff0c\u8ba9\u4f60\u6c42\u5177\u6709\u67d0\u4e9b\u5173\u7cfb\u7684\u70b9\u5bf9\\((i,j)\\)\u4e2a\u6570\u3002\u4e00\u822c\u601d\u8def\u662f\u5148\u786e\u5b9a\u4e00\u7ef4\u7684\u987a\u5e8f\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7b2c\u4e8c\u7ef4\u3002</p> <p>\u9006\u5e8f\u5bf9\u7684\u6811\u72b6\u6570\u7ec4\u505a\u6cd5\u5176\u5b9e\u5c31\u662f\u5e94\u7528\u4e86\u4e8c\u7ef4\u504f\u5e8f\u7684\u601d\u60f3\u3002</p> <p>\u9006\u5e8f\u5bf9</p> <p>\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e00\u6bb5\u6b63\u6574\u6570\u5e8f\u5217\uff0c\u9006\u5e8f\u5bf9\u5c31\u662f\u5e8f\u5217\u4e2d \\(a_i&gt;a_j\\) \u4e14 \\(i&lt;j\\) \u7684\u6709\u5e8f\u5bf9\u3002\u8bf7\u7b97\u51fa\u7ed9\u5b9a\u7684\u4e00\u6bb5\u6b63\u6574\u6570\u5e8f\u5217\u4e2d\u9006\u5e8f\u5bf9\u7684\u6570\u76ee\u3002\u6ce8\u610f\u5e8f\u5217\u4e2d\u53ef\u80fd\u6709\u91cd\u590d\u6570\u5b57\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define N 100010\n#define int long long\nint a[N], tmp[N];\nint cnt;\n\nvoid merge(int left, int mid, int right) {\n    int i, j, k;\n    i = left;\n    j = mid + 1;\n    k = left;\n    while (i &lt;= mid &amp;&amp; j &lt;= right) {\n        if (a[i] &gt; a[j]) {\n            cnt += j - k;//\u6216\u8005cnt += mid-i+1;\n            tmp[k++] = a[j++];\n        } else {\n            tmp[k++] = a[i++];\n        }\n    }\n    while (i &lt;= mid)\n        tmp[k++] = a[i++];\n    while (j &lt;= right)\n        tmp[k++] = a[j++];\n\n    for (i = left; i &lt;= right; i++)\n        a[i] = tmp[i];\n}\n\nvoid merge_sort(int left, int right) {\n    int mid;\n    if (left == right)\n        return;\n    mid = (left + right) / 2;\n    merge_sort(left, mid);\n    merge_sort(mid + 1, right);\n    merge(left, mid, right);\n}\n\nsigned main() {\n    int i, n;\n\n    scanf(\"%lld\", &amp;n);\n    for (i = 1; i &lt;= n; i++)\n        scanf(\"%lld\", &amp;a[i]);\n\n    merge_sort(1, n);\n\n    printf(\"%lld\\n\", cnt);\n\n    for(int i=1;i&lt;=n;i++){\n        cout&lt;&lt;a[i]&lt;&lt;' ';\n    }\n    return 0;\n}\n</code></pre> <p>\u5bf9\u4e8e\u6240\u6709\u6570\u636e\uff0c\\(n \\leq 5 \\times 10^5\\)</p> <p>\u601d\u8def</p> <p>\u6211\u4eec\u7ef4\u62a4\u503c\u57df\u6811\u72b6\u6570\u7ec4\uff0c\u4ece\u5de6\u5f80\u53f3\u9010\u6e10\u52a0\u5165\\(a_i\\)\uff0c\u5e76\u4e14\u6c42\u51fa\u6811\u72b6\u6570\u7ec4\u4e2d\u503c\u57df\u5728\\(1\\sim a_i\\)\u7684\u524d\u7f00\u548c\\(q_i\\)\u5373\u53ef\uff08\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u548c\uff09\uff0c\u7136\u540e\u7528\\(i-q_i\\)\u5c31\u6c42\u51fa\u4e86\u4e0b\u6807\u5728i\u4e4b\u524d\u4e14\u503c\u6bd4a_i\u5927\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u4e3a\u4e86\u4f18\u5316\u7a7a\u95f4\uff0c\u6211\u4eec\u79bb\u6563\u5316\u4e00\u4e0b\u5373\u53ef\u3002</p> <p>\u5148\u5c06\u6570\u636e\u6392\u5e8f\uff0c\u518d\u7528 \\(1 \\sim n\\) \u5206\u522b\u5bf9\u5e94 \\(n\\) \u4e2a\u6570\u8868\u793a\u5b83\u4eec\u7684\u76f8\u5bf9\u5927\u5c0f\uff0c\u5bf9\u65b0\u7684\u5e8f\u5217\u5efa\u6811\u72b6\u6570\u7ec4\u7a7a\u95f4\u5c31\u591f\u4e86\u3002\u5bf9\u4e8e\u76f8\u7b49\u7684\u503c\uff0c\u6211\u4eec\u8ba9\u8d8a\u9760\u8fd1\u5de6\u8fb9\u7684\u76f8\u5bf9\u5927\u5c0f\u8d8a\u5c0f\u5373\u53ef\u3002</p> <p>\u7ec3\u4e60</p> <p>www.luogu.com.cn</p> <p>\u5728\u6570\u8f74 \\(OX\\) \u4e0a\u6709 \\(n\\) \u4e2a\u70b9\u3002\u7b2c \\(i\\) \u4e2a\u70b9\u6700\u521d\u5728\u5750\u6807 \\(x_i\\)\uff0c \u5e76\u4e14\u6709\u4e00\u4e2a\u901f\u5ea6 \\(v_i\\)\uff0c\\(x_i\\) \u4e92\u4e0d\u76f8\u540c\u3002\u7b2c \\(i\\) \u4e2a\u70b9\u5728 \\(t\\) \u65f6\u523b\u7684\u5750\u6807\u4e3a \\(x_i + t \\cdot v_i\\) \uff08\\(t\\) \u53ef\u80fd\u4e0d\u662f\u6574\u6570\uff09\u3002</p> <p>\u5bf9\u4e8e\u4e24\u4e2a\u70b9 \\(i\\) \u548c \\(j\\)\uff0c\u8bbe \\(d(i,j)\\) \u4e3a \\(i\\) \u548c \\(j\\) \u5728\u4efb\u610f\u65f6\u523b\u4e0b\u7684\u53ef\u80fd\u7684\u6700\u5c0f\u8ddd\u79bb\uff08\u65f6\u523b\u53ef\u80fd\u4e0d\u662f\u6574\u6570\uff09\u3002\u5982\u679c \\(i\\) \u548c \\(j\\) \u5728\u67d0\u4e00\u65f6\u523b\u91cd\u5408\uff0c\u90a3\u4e48 \\(d(i,j)=0\\)\u3002</p> <p>\u4f60\u7684\u4efb\u52a1\u662f\u8ba1\u7b97\u51fa\u4e0b\u9762\u8fd9\u4e2a\u5f0f\u5b50\u7684\u503c\uff08\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb\u4e4b\u548c\uff09\uff1a</p> <p>\\(\\sum_{1\\leq i &lt; j \\leq n}d(i,j)\\)</p> <p>\u672c\u9898\u8981\u6c42\u4efb\u610f\u4e24\u70b9\u4e2d\u95f4\u7684\u6700\u5c0f\u8ddd\u79bb\u4e4b\u548c\uff0c\u5e76\u4e14\u6ca1\u6709\u8bf4\u8981\u5728\u540c\u4e00\u65f6\u95f4\u53d6\u5230\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u8fd9\u4e24\u4e2a\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb\u8981\u4e48\u662f \\(0\\)\uff0c\u8981\u4e48\u662f\u521d\u59cb\u8ddd\u79bb\u3002</p> <p>\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u662f \\(0\\) \u5462\uff1f\u5f88\u5bb9\u6613\u53ef\u4ee5\u77e5\u9053\uff0c\u8bbe\u8fd9\u4e24\u4e2a\u70b9\u4e3a \\(i,j\\)\uff0c\u5982\u679c \\(x_i&lt;x_j\\) \u4e14 \\(v_i&gt;v_j\\)\uff0c\u90a3\u4e48 \\(d(i,j)=0\\)\u3002\u5c31\u662f\u5e38\u8bf4\u7684\u8ffd\u53ca\u95ee\u9898\u3002</p> <p>\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u662f\u521d\u59cb\u8ddd\u79bb\u5462\uff1f\u5f53\u7136\u5c31\u662f\u8ffd\u4e0d\u4e0a\u7684\u60c5\u51b5\uff0c\u5373 \\(x_i&lt;x_j\\) \u4e14 \\(v_i&lt;v_j\\)\u3002</p> <p>\u6240\u4ee5\u672c\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u6c42\u6240\u6709 \\(i,j\\) \u4f7f\u5f97 \\(x_i&lt;x_j\\) \u4e14 \\(v_i\u2264v_j\\)\uff0c\u6c42 \\(x_j-x_i\\)\u3002</p> <p>\u4e4d\u4e00\u770b\u524d\u9762\u7684\u6761\u4ef6\uff0c\u90a3\u4e0d\u5c31\u662f\u4e8c\u7ef4\u504f\u5e8f\u561b\uff08\u7c7b\u4f3c\u9006\u5e8f\u5bf9\uff0c\u53ea\u4e0d\u8fc7\u662f\u987a\u5e8f\u5bf9\uff09\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5f80\u4e8c\u7ef4\u504f\u5e8f\u4e0a\u53bb\u60f3\u3002</p> <p>\u4e8c\u7ef4\u504f\u5e8f\u6700\u5e38\u7528\u7684\u662f\u4ec0\u4e48\uff1f\u6811\u72b6\u6570\u7ec4\u3002\u56de\u987e\u4e00\u4e0b\u9006\u5e8f\u5bf9\u7684\u6811\u72b6\u6570\u7ec4\u505a\u6cd5\u662f\u600e\u4e48\u6837\u7684\u3002\u6211\u4eec\u7ef4\u62a4\u503c\u57df\u6811\u72b6\u6570\u7ec4\uff0c\u4ece\u5de6\u5f80\u53f3\u9010\u6e10\u52a0\u5165 \\(a_i\\)\uff08\u5373\u5728 \\(a_i\\) \u5904 \\(+1\\)\uff09\uff0c\u5e76\u4e14\u6c42\u51fa\u6811\u72b6\u6570\u7ec4\u4e2d\u503c\u57df\u5728 \\(1\\sim a_i\\) \u7684\u524d\u7f00\u548c \\(q_i\\) \u5373\u53ef\uff08\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u548c\uff09\uff0c\u7136\u540e\u7528 \\(i-q_i\\) \u5c31\u6c42\u51fa\u4e86\u4e0b\u6807\u5728 \\(i\\) \u4e4b\u524d\u4e14\u503c\u6bd4 \\(a_i\\) \u5927\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u90a3\u4e48\u672c\u9898\u8981\u6c42\u7684\u662f\u503c\uff0c\u800c\u4e0d\u662f\u4e2a\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4e00\u4e2a\u8bb0\u5f55 \\(x_i\\) \u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u4e3a\u6743\u503c\u6811\u72b6\u6570\u7ec4\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \\(A\\)\uff1b\u4e00\u4e2a\u8bb0\u5f55 \\(x_i\\) \u7684\u503c\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \\(B\\)\u3002</p> <p>\u6309\u7167 \\(v_i\\) \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6211\u4eec\u904d\u5386 \\(i\\)\u3002\u5f53\u6211\u4eec\u904d\u5386\u5230\u4e00\u4e2a \\(x_i\\)\uff0c\u6211\u4eec\u5c31\u5728 \\(A\\) \u4e2d\u67e5\u8be2\u6ee1\u8db3 \\(x_j&lt;x_i\\) \u7684 \\(x_j\\) \u7684\u4e2a\u6570\uff0c\u8bb0\u4e3a \\(cnt_i\\)\uff0c\u7136\u540e\u5728 \\(B\\) \u4e2d\u6c42\u51fa\u8fd9\u4e9b \\(x_j\\) \u7684\u548c\uff0c\u6211\u4eec\u8bb0\u4e3a \\(sum_i\\)\u3002\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u7b54\u6848\u5e94\u8be5\u52a0\u4e0a \\(x_i\\times cnt_i-sum_i\\)\u3002</p> <p>\u6700\u540e\u6211\u4eec\u5c06 \\(x_i\\) \u5206\u522b\u63d2\u5165 \\(A,B\\) \u4e2d\u3002\u6ce8\u610f\uff0c\\(x_i\\) \u5728 \\(B\\) \u4e2d\u63d2\u5165\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5e94\u8be5\u548c \\(A\\) \u4e2d\u7684\u4e00\u6837\u3002</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . FancyKnowledge .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\n#include&lt;bits/stdc++.h&gt;\n\n//\n#define int long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n#define err(fmt, ...) fprintf(stderr, \"[%d] : \" fmt \"\\n\", __LINE__, ##__VA_ARGS__)\n///*\n#define pr pair&lt;double,int&gt;\n#define pf first\n#define ps second\n#define pb push_back\n//*/\n\n//\nusing namespace std;\n//\nconst int N=2e5+5;\nconst int M=1e3;\nconst int MOD=1e9+7;\nconst int MMOD=903250223;\nconst int INF=1e9;\nconst int IINF=1e18;\nconst db eps=1e-9;\n//\nint n,m,x,y;\n\nint to[N],ans;\nint c[2][N&lt;&lt;2];//\u4e24\u68f5\u6811\u72b6\u6570\u7ec4\n\nstruct node{\n    int x,v;\n}a[N];\n\n\nint lowbit(int x) {\n    return x&amp;-x;\n}\n\n\nvoid add(int f,int i,int x) {//\u5728\u4f4d\u7f6ei\u52a0\u4e0ax\n    while(i&lt;=n) {\n        c[f][i]+=x;\n        i+=lowbit(i);\n    }\n}\n\n\nint query(int f,int x) {\n    int res=0;\n    while(x) {\n        res+=c[f][x];\n        x-=lowbit(x);\n    }\n    return res;\n}\n\nbool cmp(node a,node b){\n    if(a.v==b.v)return a.x&lt;b.x;//v\u76f8\u540c\u65f6\u4e5f\u8ffd\u4e0d\u4e0a\n    return a.v&lt;b.v;\n}\n\nsigned main() {\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i].x;\n        to[i]=a[i].x;\n    }\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i].v;\n    }\n    sort(to+1,to+n+1);\n    for(int i=1;i&lt;=n;i++){\n        a[i].x=lower_bound(to/\u79bb\u6563\u5316\uff0c\u5c06\u503ca_i\u79bb\u6563\u4e3a\u7b2cx\u5927\n    }\n\n    sort(a+1,a+n+1,cmp);\n\n    for(int i=1;i&lt;=n;i++){\n        int sum=query(1,a[i].x-1);\n        add(1,a[i].x,to[a[i].x]);\n        int cnt=query(0,a[i].x-1);\n        add(0,a[i].x,1);\n        ans+=cnt*to[a[i].x]-sum;\n\n\n    }\n\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre> <p>\u6ce8\u610f\u672c\u9898\u9700\u8981\u79bb\u6563\u5316\u3002</p> a.x 2 5 13 9 to\u6392\u5e8f\u540e 2 5 9 13 a.x\u79bb\u6563\u5316\u540e 1 2 4 3 <p>\\(a_i.x\\) \u79bb\u6563\u5316\u540e\u7684\u503c\u5373 \\(a_i.x\\) \u5728\u6240\u6709 \\(x\\) \u4e2d\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u7684\u6392\u540d\u3002\u8fd9\u6837\u5373\u53ef\u628a\u503c\u57df\u6620\u5c04\u5230 \\(n\\)\u3002</p> <p>\u6ce8\u610f\u6811\u72b6\u6570\u7ec4\u7a7a\u95f4\u5927\u5c0f\u4e0d\u80fd\u53ea\u5f00 \\(n\\)\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/CDQ%E5%88%86%E6%B2%BB/#_2","title":"\u4e09\u7ef4\u504f\u5e8f","text":"<p>CDQ \u5206\u6cbb\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5206\u6cbb\u65b9\u6cd5\uff0c\u901a\u5e38\u7528\u6765\u89e3\u51b3\u4e00\u7c7b\u201c\u5b58\u5728\u4fee\u6539\uff0c\u4f46\u4fee\u6539\u72ec\u7acb\u3001\u5141\u8bb8\u79bb\u7ebf\u201d\u7684\u6570\u636e\u7ed3\u6784\u9898\u3002\u5b9e\u9645\u4e0a\u5b83\u7684\u672c\u8d28\u662f\u6309\u65f6\u95f4\u5206\u6cbb\uff0c\u82e5\u8981\u5904\u7406\u65f6\u95f4\\([l,r]\\)\u4e0a\u7684\u4fee\u6539\u4e0e\u8be2\u95ee\u64cd\u4f5c\uff0c\u5c31\u5148\u5904\u7406\\([l,mid]\\)\u4e0a\u7684\u4fee\u6539\u5bf9\\([mid+1,r]\\)\u4e0a\u7684\u8be2\u95ee\u7684\u5f71\u54cd\uff0c\u4e4b\u540e\u518d\u9012\u5f52\u5904\u7406\\([l,mid][mid+1,r]\\)\uff0c\u6839\u636e\u95ee\u9898\u7684\u4e0d\u540c\uff0c\u8fd9\u51e0\u4e2a\u6b65\u9aa4\u7684\u987a\u5e8f\u6709\u65f6\u4e5f\u4f1a\u4e0d\u4e00\u6837\u3002</p> <p>CDQ \u5206\u6cbb\u9002\u7528\u4e8e\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\u7684\u6570\u636e\u7ed3\u6784\u9898\uff1a</p> <p>\uff08 1 \uff09\u4fee\u6539\u64cd\u4f5c\u5bf9\u8be2\u95ee\u7684\u8d21\u732e\u72ec\u7acb\uff0c\u4fee\u6539\u64cd\u4f5c\u4e4b\u95ee\u4e92\u4e0d\u5f71\u54cd\u6548\u679c\u3002</p> <p>\uff08 2 \uff09\u9898\u76ee\u5141\u8bb8\u4f7f\u7528\u79bb\u7ebf\u7b97\u6cd5\u3002</p> <p></p> <p></p> <p></p> <p>\u603b\u7ed3</p> <p>\u4e09\u7ef4\u504f\u5e8f\u5c31\u662f\u5728\u4e8c\u7ef4\u504f\u5e8f\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e00\u7ef4\u3002 \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5e8f\u5217\u90fd\u6709a\uff0cb\uff0cc\u4e09\u79cd\u5c5e\u6027\uff0c\u8ba9\u4f60\u6c42\u5177\u6709\u67d0\u4e9b\u5173\u7cfb\u7684\u70b9\u5bf9\uff08i\uff0cj\uff09\u4e2a\u6570\u3002\u4e00\u822c\u601d\u8def\u662f\u5148\u786e\u5b9a\u4e00\u7ef4\u7684\u987a\u5e8f\uff0c\u5206\u6cbb\u7ef4\u62a4\u7b2c\u4e8c\u7ef4\uff0c\u518d\u7ed3\u5408\u4e0a\u8fb9\u7684\u4e8c\u7ef4\u504f\u5e8f\u4e2d\u7684\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7b2c\u4e09\u7ef4\u3002</p> <ul> <li> <p>\u627e\u5230\u8fd9\u4e2a\u5e8f\u5217\u7684\u4e2d\u70b9 mid</p> </li> <li> <p>\u5c06\u6240\u6709\u70b9\u5bf9\uff08i,j\uff09\u5212\u5206\u4e3a 3 \u7c7b \u7b2c\u4e00\u7c7b\u662f\\([l,i,j,mid,r]\\) \u7b2c\u4e8c\u7c7b\u662f\\([l,i,mid,j,r]\\) \u7b2c\u4e09\u7c7b\u662f\\([l,mid,i,j,r]\\)</p> </li> <li> <p>\u5c06 \u8fd9\u4e2a\u5e8f\u5217\u62c6\u6210\u4e24\u4e2a\u5e8f\u5217\uff081\uff0cmid\uff09\u548c (mid+1,n) \u4f1a\u53d1\u73b0\u7b2c\u4e00\u7c7b\u70b9\u5bf9\u548c\u7b2c\u4e09\u7c7b\u70b9\u5bf9\u90fd\u5728\u8fd9\u4e24\u4e2a\u5e8f\u5217\u4e4b\u4e2d\uff0c\u9012\u5f52\u7684\u53bb\u89e3\u51b3\u8fd9\u4e24\u7c7b\u70b9\u5bf9</p> </li> </ul> <p>\u901a\u8fc7\u5206\u6cbb\u6765\u89e3\u51b3\u7b2c\u4e8c\u7c7b\u70b9\u5bf9</p> <p>\u672c\u9898\u601d\u8def</p> <p>\u5148\u6309\\(x\\)\u6392\u5e8f\u3002</p> <p>\u5206\u6cbb\u65f6\u6bcf\u6b21\u5c06\u524d\u534a\u8fb9\u3001\u540e\u534a\u8fb9\u5206\u522b\u6309\\(y\\)\u6392\u5e8f\u3002\u867d\u7136\u73b0\u5728\\(x\\)\u7684\u987a\u5e8f\u88ab\u6253\u4e71\u4e86\uff0c\u4f46\u662f\u524d\u534a\u8fb9\u8fd8\u662f\u90fd\u5c0f\u4e8e\u540e\u534a\u8fb9\u7684\uff0c\u6240\u4ee5\u8981\u662f\u53ea\u8ba1\u7b97\u524d\u534a\u8fb9\u5bf9\u540e\u534a\u8fb9\u7684\u504f\u5e8f\u5173\u7cfb\uff0c\u662f\u4e0d\u4f1a\u53d7\u5230\\(x\\)\u7684\u5f71\u54cd\u7684\u3002</p> <p>\u7ef4\u62a4\u540e\u4e00\u534a\u7684\u6307\u9488\\(i\\)\uff0c\u524d\u4e00\u534a\u7684\u6307\u9488\\(j\\)\uff0c\u6bcf\u6b21\u5c06i\u540e\u79fb\u4e00\u4f4d\u65f6\uff0c\u82e5\\(y_j\u2264y_i\\)\u5219\u4e0d\u65ad\u540e\u79fb\\(j\\)\uff0c\u5e76\u4e0d\u65ad\u5c06\\(z_j\\)\u52a0\u5165\u6811\u72b6\u6570\u7ec4\u3002\u7136\u540e\u518d\u67e5\u8be2\u6811\u72b6\u6570\u7ec4\u4e2d\u6709\u591a\u5c11\u6570\u5c0f\u4e8e\u7b49\u4e8e\\(z_i\\)\uff08\u6811\u72b6\u6570\u7ec4\u6c42\u524d\u7f00\u548c\uff09\u3002 </p> <p>\u6700\u540e\u8981\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\u3002</p> <p>\u4ee3\u7801</p> <p>\u66b4\u529b</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . FancyKnowledge .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\n#include&lt;bits/stdc++.h&gt;\n\n//\n#define int long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n#define err(fmt, ...) fprintf(stderr, \"[%d] : \" fmt \"\\n\", __LINE__, ##__VA_ARGS__)\n///*\n#define pr pair&lt;double,int&gt;\n#define pf first\n#define ps second\n#define pb push_back\n//*/\n\n//\nusing namespace std;\n//\nconst int N=2e5+5;\nconst int M=1e3;\nconst int MOD=1e9+7;\nconst int MMOD=903250223;\nconst int INF=1e9;\nconst int IINF=1e18;\nconst db eps=1e-9;\n//\nint n,m,a[N],b[N],c[N],q,s[N],k,idx,len[N],ans,res,tmp,cnt[N],id[N];\n\nint d(int x){\n    int res=0;\n    for(int i=1;i&lt;=n;i++){\n        if(i==x)continue;\n        if(a[i]&lt;=a[x]&amp;&amp;b[i]&lt;=b[x]&amp;&amp;c[i]&lt;=c[x])res++;\n    }\n    return res;\n}\n\nsigned main(){\n\n//  freopen(\".in\",\"r\",stdin);\n//  freopen(\".out\",\"w\",stdout);\n//  freopen(\".txt\",\"w\",stderr);\n\n    cin&gt;&gt;n&gt;&gt;k;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i]&gt;&gt;b[i]&gt;&gt;c[i];\n\n    }\n\n    for(int i=1;i&lt;=n;i++){\n        cnt[d(i)]++;\n    }\n\n    for(int i=0;i&lt;n;i++){\n        cout&lt;&lt;cnt[i]&lt;&lt;endl;\n    }\n    return 0;\n}\n\n//check your long long and the size of memery!!!\n</code></pre> <p>CDQ \u5206\u6cbb\u5d4c\u5957</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Coding by Ntsc .\n       . FancyKnowledge .\n       . Prove Yourself .\n/*////////ACACACACACACAC///////////\n\n//\n#include&lt;bits/stdc++.h&gt;\n\n//\n#define int long long\n#define ull unsigned long long\n#define db double\n#define endl '\\n'\n#define err(fmt, ...) fprintf(stderr, \"[%d] : \" fmt \"\\n\", __LINE__, ##__VA_ARGS__)\n///*\n#define pr pair&lt;double,int&gt;\n#define pf first\n#define ps second\n#define pb push_back\n//*/\n\n//\nusing namespace std;\n\n\n\n#define rd read()\ninline int read() {\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9') xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\ninline void write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n//\nconst int N=2e5+5;\nconst int M=1e3;\nconst int MOD=1e9+7;\nconst int MMOD=903250223;\nconst int INF=1e9;\nconst int IINF=1e18;\nconst db eps=1e-9;\n//\nint n,m,ans[N],q,d[N],k,idx,len[N],res,tmp,cnt[N],id[N];\n\nstruct node{\n    int a,b,c,f;\n    int *ans;\n}a[N],b[N],c[N];\n\nbool cmp(node x,node y){\n    if(x.a == y.a&amp;&amp;x.b==y.b)return x.c&lt;y.c;\n    if(x.a==y.a)return x.b&lt;y.b;\n    return x.a&lt;y.a;\n}\n\nvoid cdq2(int l,int r){\n    if(l==r)return;\n    int mid = (l/2;\n    cdq2(l,mid);\n    cdq2(mid+1,r);\n    int i=l,k=mid+1,j=l,cnt=0;\n    for(;i&lt;=r;i++){\n        if((k&gt;r||b[j].c&lt;=b[k].c)&amp;&amp;j&lt;=mid)c[i]=b[j++],cnt+=c[i].f;\n        else{\n            c[i]=b[k++];\n            if(!c[i].f)*c[i].ans+=cnt;\n        }\n    }\n    for(i=l;i&lt;=r;i++)b[i]=c[i];\n\n}\n\nvoid cdq1(int l,int r){\n    if(l==r)return;\n    int mid = (l/2;\n    cdq1(l,mid);\n    cdq1(mid+1,r);\n\n    int i=l,k=mid+1,j=l;\n    for(;i&lt;=r;i++){\n        if((k&gt;r||a[j].b&lt;=a[k].b)&amp;&amp;j&lt;=mid)b[i]=a[j++],b[i].f=1;\n        else b[i]=a[k++],b[i].f=0;\n    }\n    for(int i=l;i&lt;=r;i++)a[i]=b[i];\n\n    cdq2(l,r);\n}\nsigned main(){\n\n//  freopen(\".in\",\"r\",stdin);\n//  freopen(\".out\",\"w\",stdout);\n//  freopen(\".txt\",\"w\",stderr);\n\n    cin&gt;&gt;n&gt;&gt;k;\n    for(int i=1;i&lt;=n;i++){\n        a[i].a=rd;a[i].b=rd;a[i].c=rd;\n        a[i].ans=&amp;ans[i];\n\n    }sort(a+1,a+n+1,cmp);\n\n    for(int i=n-1;i;i--){\n        if(a[i].a==a[i+1].a&amp;&amp;a[i].b==a[i+1].b&amp;&amp;a[i].c==a[i+1].c)*a[i].ans=*a[i+1].ans+1;\n    }\n\n    cdq1(1,n);\n\n    for(int i=1;i&lt;=n;i++)d[ans[i]]++;\n    for(int i=0;i&lt;n;i++)cout&lt;&lt;d[i]&lt;&lt;endl;\n    return 0;\n}\n\n//check your long long and the size of memery!!!\n</code></pre> <p>\u6811\u72b6\u6570\u7ec4cdq\u5206\u6cbb</p> <p>www.luogu.com.cn</p> <pre><code>/*\nCB Ntsc111\n*/\n\n#include &lt;bits/stdc++.h&gt; m\nusing namespace std;\n\n#define ull unsigned int\n#define pii pair&lt;int, int&gt;\n#define pf to\n#define ps second\n#define pb push_back\n#define int long long\n\n#define err cerr &lt;&lt; \"Error\"\n#define rd read()\n\n#define ot write\n#define nl putchar('\\n')\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int mxxlog = 10;\nint INF = 1e18 + 7;\nconst int N = 5e5 + 5;\n\nint n, k;\nint ans[N], d[N];\nint tr[N];\nstruct node {\n  int a, b, c, *id;\n} a[N], b[N], c[N], tmp[N];\n\nint stk[N], top;\n\ninline int lowbit(int x) { return x &amp; -x; }\n\nvoid add(int x, int v = 1) {\n  while (x &lt;= N) {\n    // cerr &lt;&lt; x &lt;&lt; endl;\n    tr[x] += v;\n    x += lowbit(x);\n  }\n}\n\nint query(int x) {\n  int res = 0;\n  while (x) {\n    res += tr[x];\n    x -= lowbit(x);\n  }\n  return res;\n}\n\nvoid cdq(int l, int r) {\n  // cout &lt;&lt; l &lt;&lt; ' ' &lt;&lt; r &lt;&lt; endl;\n  if (l == r)\n    return;\n  int mid = l + r &gt;&gt; 1;\n  cdq(l, mid);\n  cdq(mid + 1, r);\n\n  int i = l, j = mid + 1, k = l - 1;\n\n  while (i &lt;= mid &amp;&amp; j &lt;= r) {\n    if (a[i].b &lt;= a[j].b) {\n      // *a[i].id += query(a[i].c);\n      add(a[i].c);\n      stk[++top] = a[i].c;\n      tmp[++k] = a[i];\n      i++;\n    } else {\n      *a[j].id += query(a[j].c);\n      // cerr&lt;&lt;a[j].id-ans&lt;&lt;':'&lt;&lt; query(a[j].c)&lt;&lt;endl;\n      // add(a[j].c);\n      // stk[++top] = a[j].c;\n      tmp[++k] = a[j];\n      j++;\n    }\n  }\n\n  while (i &lt;= mid)\n    tmp[++k] = a[i++];\n  while (j &lt;= r) {\n    tmp[++k] = a[j];\n      // cerr&lt;&lt;j&lt;&lt;'-'&lt;&lt; query(a[j].c)&lt;&lt;endl;\n    *a[j].id += query(a[j].c);\n    j++;\n  }\n  while (top) {\n    add(stk[top--], -1);\n  }\n  memset(tr,0,sizeof tr);\n  // cerr &lt;&lt; \"dbg:\" &lt;&lt; l &lt;&lt; ' ' &lt;&lt; r &lt;&lt; endl;\n  for (int i = l; i &lt;= r; i++) {\n    // cerr &lt;&lt; tmp[i].a &lt;&lt; ' ' &lt;&lt; tmp[i].b &lt;&lt; ' ' &lt;&lt; tmp[i].c &lt;&lt; endl;\n    a[i] = tmp[i];\n  }\n}\nbool cmp(node x, node y) {\n  if (x.a == y.a &amp;&amp; x.b == y.b)\n    return x.c &lt; y.c;\n  if (x.a == y.a)\n    return x.b &lt; y.b;\n  return x.a &lt; y.a;\n}\nsigned main() {\n  n = rd, k = rd;\n  for (int i = 1; i &lt;= n; i++) {\n    a[i].a = rd, a[i].b = rd, a[i].c = rd, a[i].id = &amp;ans[i];\n  }\n\n  sort(a + 1, a + n + 1, cmp);\n\n  for (int i = n - 1; i; i--) {\n    if (a[i].a == a[i + 1].a &amp;&amp; a[i].b == a[i + 1].b &amp;&amp; a[i].c == a[i + 1].c)\n      *a[i].id = *a[i + 1].id + 1;\n  }\n\n  // cerr &lt;&lt; \"OK\";\n  cdq(1, n);\n  for (int i = 1; i &lt;= n; i++)\n    d[ans[i]]++;\n  for (int i = 0; i &lt; n; i++)\n    printf(\"%lld\\n\",d[i]);\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/CDQ%E5%88%86%E6%B2%BB/#_3","title":"\u6269\u5c55\uff1a\u56db\u7ef4\u504f\u5e8f","text":"<p>\u7ef4\u62a4\u56db\u7ef4\u504f\u5e8f\uff0c\u6211\u4eec\u6050\u6015\u4e0d\u80fd\u6309\u6392\u5e8f+\u5206\u6cbb+\u6811\u72b6\u6570\u7ec4\u8fd9\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u7ec4\u5408\u6765\u89e3\u51b3\u4e86\u3002</p> <p>\u5176\u5b9e\u6211\u4eec\u7684CDQ\u5206\u6cbb\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u5982\u4e0b\uff1a</p> <p>www.luogu.com.cn</p> <p>\u6211\u4eec\u5047\u8bbe\u56db\u7ef4\u504f\u5e8f\u76844\u4e2a\u5173\u952e\u5b57\u4e3a\\(x,y,z,k\\)\u3002</p> <p>\u6211\u4eec\u6309\\(x\\)\u4ece\u5c0f\u5230\u5927\uff08\u4e5f\u6709\u53ef\u80fd\u662f\u522b\u7684\u987a\u5e8f\uff09\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u4e2d\u95f4\u5206\u6cbb\u3002\u90a3\u4e48\u5bf9\u4e8e\u533a\u95f4\\([l,mid][mid+1,r]\\)\u4e2d\u5206\u522b\u6309\u7167\\(y\\)\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p> <p>\u8fd9\u6837\u6211\u4eec\u80fd\u4fdd\u8bc1\u5de6\u8fb9\u7684\\(x\\)\u4e00\u5b9a\u5c0f\u4e8e\u53f3\u8fb9\u7684x\u3002\u90a3\u4e48\u5bf9\u4e8e\u5de6\u53f3\u533a\u95f4\uff0c\u6211\u4eec\u6709\u53ef\u4ee5\u7ee7\u7eed\u5206\u6cbb\uff0c\u7136\u540e\u6309\\(z\\)\u7684\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u7ee7\u7eed\u5206\u6cbb\u4e0b\u53bb\uff0c\u6309\u7167\\(k\\)\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u533a\u95f4\u5206\u62108\u5757\uff0c\u6ee1\u8db3\u5de6\u8fb9\u7684\u5757\u4e2d\u7684\\(x,y,z\\)\u90fd\u5c0f\u4e8e\u53f3\u8fb9\u7684\u5757\u3002</p> <p>\u8fd9\u5c31\u662fCDQ\u7684\u5d4c\u5957\u3002\u5bf9\u4e8e\u5904\u74064\u4e2a\u5173\u952e\u5b57\u7684\u504f\u5e8f\uff08\u56db\u7ef4\u504f\u5e8f\uff09\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4e09\u5c42\u5d4c\u5957\u3002\u5bf9\u4e8e\u9ad8\u7ef4\u504f\u5e8f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5d4c\u5957\u4e0b\u53bb\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/CDQ%E5%88%86%E6%B2%BB/#_4","title":"\u7ec3\u4e60","text":"<p>www.luogu.com.cn</p> <p>\u9ad8\u7ef4\u504f\u5e8f\u7279\u6b8a\u6027\u8d28\u7684\u6c42\u89e3</p> <p>\u9898\u76ee\u8be6\u60c5 - \u6709\u6839\u6811\u4e0a\u6c42\u516b\u7ef4\u504f\u5e8f - \u4e91\u6597\u5b66\u9662</p> <p>\u5229\u7528\u504f\u5e8f\u503c\u57df\u975e\u5e38\u5c0f\u800c\u5b9e\u73b0\u504f\u5e8f\u6761\u4ef6\u591a\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528\u6876\u6765\u8bb0\u5f55\u7b54\u6848\uff0c\u5e76\u4e14\u8003\u8651\u5982\u4f55\u5feb\u901f\u5730\u7edf\u8ba1\u7b54\u6848\u3002</p> <p></p> <p></p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/","title":"\u4e8c\u5206","text":"<ul> <li>\u7cbe\u5ea6\u63a7\u5236\uff1a\u7531\u4e8eWQS\u4e8c\u5206\u6d89\u53ca\u5230\u5b9e\u6570\u53c2\u6570\u7684\u4e8c\u5206\uff0c\u56e0\u6b64\u9700\u8981\u63a7\u5236\u4e8c\u5206\u641c\u7d22\u7684\u7cbe\u5ea6\uff0c\u4ee5\u907f\u514d\u6d6e\u70b9\u6570\u7cbe\u5ea6\u95ee\u9898\u3002 WQS\u4e8c\u5206\u662f\u4e00\u79cd\u9ad8\u7ea7\u7684\u7b97\u6cd5\u6280\u5de7\uff0c\u5b83\u8981\u6c42\u7b97\u6cd5\u8bbe\u8ba1\u8005\u6709\u8f83\u5f3a\u7684\u6570\u5b66\u5efa\u6a21\u80fd\u529b\u548c\u5bf9\u95ee\u9898\u7684\u6df1\u523b\u7406\u89e3\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0cWQS\u4e8c\u5206\u53ef\u4ee5\u89e3\u51b3\u4e00\u4e9b\u4f20\u7edf\u65b9\u6cd5\u96be\u4ee5\u5904\u7406\u7684\u95ee\u9898\uff0c\u4f46\u5b83\u4e5f\u9700\u8981\u6839\u636e\u5177\u4f53\u95ee\u9898\u8fdb\u884c\u9002\u5f53\u7684\u8c03\u6574\u548c\u4f18\u5316\u3002</li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/#_1","title":"\u4e8c\u5206","text":""},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/#_2","title":"\u4e8c\u5206\u7f16\u53f7","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5355\u8c03\u6027\u7684\u6570\u7ec4,\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7f16\u53f7,\u5982\u679ca[mid]&lt;ans,\u90a3\u4e48mid\u5c31\u5f80a[]\u66f4\u5927\u7684\u90a3\u8fb9\u8d70</p> <pre><code>while(r&gt;l){\n    mid=(l/2;\n    if(judge(mid))l=mid;\n    else r=mid;\n}\n</code></pre> <p>\u6ce8\u610f\u4e8c\u5206\u4ee3\u7801\u7684\u5199\u6cd5\u7ec6\u8282\u548c\u4f60\u7684check\u51fd\u6570\u6709\u5173\uff01\uff08\u5176\u5b9e\u662f\u548c\u4f60\u5728\u5bf9\u4e8e\u6070\u597d\u6ee1\u8db3\u8981\u6c42\u65f6check\u8fd4\u56de\u503c\u6709\u5173\uff09</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/#_3","title":"\u4e8c\u5206\u7b54\u6848","text":"<p>\u4e8c\u5206\u7b54\u6848\u601d\u8def:\u4e8c\u5206\u4e00\u4e2a\u731c\u6d4b\u7684\u7b54\u6848mid,\u8fdb\u884c\u5224\u5b9a,\u5982\u679c\u8ba1\u7b97\u51fa\u771f\u6b63\u7684\u7b54\u6848q\u4e0d\u80fd\u8fbe\u5230\u6b64mid(<code>a-mid&lt;0</code>)mid\u5c31\u53d8\u5c0f(<code>mid=l</code>)</p> <p>\u5426\u5219<code>mid=r</code></p> <p>\u4e0b\u9762\u662f\u5b9e\u6570\u57df\u7684\u4e8c\u5206\u7b54\u6848\u3002\u5982\u679c\u53ea\u662f\u6574\u6570\u57df\uff0c\u5219\u548c\u4e0a\u9762\u7684\u65e0\u5f02\uff08\u53c2\u8003https://www.luogu.com.cn/problem/P1873\uff09\u3002</p> <pre><code>double l=?,r=?,mid;\nwhile(r-l&gt;=0.00001){\n    mid=(l/2;\n    if(sum(mid)&gt;=0)l=mid;\n    else r=mid;\n}\n</code></pre> <p>\u65e0\u8bba\u4f55\u79cd\u4e8c\u5206,\u8bf7\u660e\u786e\u4e8c\u5206\u7684\u4e0a\u4e0b\u754c(l,r\u7684\u521d\u59cb\u503c)</p> <p>\u4e8c\u5206\u6a21\u677f\uff0c\u53ef\u7528\u3002</p> <pre><code>int l=0,r=mxd;\n    while(l&lt;=r){\n        int mid=l+r&gt;&gt;1;\n        if(judge(mid))l=mid+1;\n        else r=mid-1;\n    }\n    cout&lt;&lt;r&lt;&lt;endl;\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/#wqs","title":"wqs \u4e8c\u5206","text":"<p>WQS\u4e8c\u5206\uff0c\u5168\u79f0\u4e3aWang Qifan's Binary Search\uff0c\u662f\u4e00\u79cd\u57fa\u4e8e\u4e8c\u5206\u641c\u7d22\u7684\u7b97\u6cd5\u6280\u5de7\uff0c\u7531Wang Qifan\uff08\u738b\u5d0e\u51e1\uff09\u63d0\u51fa\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u4e00\u7c7b\u7279\u6b8a\u7684\u4f18\u5316\u95ee\u9898\uff0c\u8fd9\u7c7b\u95ee\u9898\u901a\u5e38\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff1a\u4e00\u4e2a\u662f\u9700\u8981\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\uff0c\u53e6\u4e00\u4e2a\u662f\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u7684\u9650\u5236\u51fd\u6570\u3002WQS\u4e8c\u5206\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u9650\u5236\u51fd\u6570\u7684\u53c2\u6570\u4e8c\u5206\uff0c\u4ece\u800c\u5728\u6ee1\u8db3\u9650\u5236\u6761\u4ef6\u7684\u524d\u63d0\u4e0b\uff0c\u5bfb\u627e\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u89e3\u3002</p> <p>\u4ee5\u4e0b\u662fWQS\u4e8c\u5206\u7684\u57fa\u672c\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u53c2\u6570\u4e8c\u5206\uff1a\u5c06\u9650\u5236\u51fd\u6570\u7684\u53c2\u6570\u8fdb\u884c\u4e8c\u5206\uff0c\u901a\u5e38\u662f\u4e8c\u5206\u4e00\u4e2a\u5b9e\u6570\u53c2\u6570\u3002</p> </li> <li> <p>\u8bc4\u4f30\u51fd\u6570\uff1a\u5b9a\u4e49\u4e00\u4e2a\u8bc4\u4f30\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u80fd\u591f\u6839\u636e\u5f53\u524d\u7684\u53c2\u6570\u503c\uff0c\u8ba1\u7b97\u51fa\u5728\u6ee1\u8db3\u9650\u5236\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u76ee\u6807\u51fd\u6570\u7684\u67d0\u79cd\u5ea6\u91cf\uff08\u6bd4\u5982\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\uff09\u3002</p> </li> <li> <p>\u4e8c\u5206\u641c\u7d22\uff1a\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u6765\u5bfb\u627e\u6700\u4f18\u7684\u53c2\u6570\u503c\uff0c\u4f7f\u5f97\u8bc4\u4f30\u51fd\u6570\u7684\u503c\u6700\u4f18\u3002</p> </li> <li> <p>\u68c0\u67e5\u548c\u8c03\u6574\uff1a\u5728\u6bcf\u6b21\u4e8c\u5206\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\uff0c\u68c0\u67e5\u5f53\u524d\u53c2\u6570\u503c\u662f\u5426\u6ee1\u8db3\u6240\u6709\u7684\u9650\u5236\u6761\u4ef6\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5219\u8c03\u6574\u53c2\u6570\u7684\u8303\u56f4\uff0c\u7ee7\u7eed\u8fdb\u884c\u4e8c\u5206\u641c\u7d22\u3002 WQS\u4e8c\u5206\u901a\u5e38\u7528\u4e8e\u4ee5\u4e0b\u7c7b\u578b\u7684\u95ee\u9898\uff1a</p> </li> <li> <p>\u5e26\u9650\u5236\u7684\u6700\u4f18\u5316\u95ee\u9898\uff1a\u9700\u8981\u5728\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u627e\u5230\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u89e3\u3002</p> </li> <li> <p>\u7f51\u7edc\u6d41\u95ee\u9898\uff1a\u5728\u67d0\u4e9b\u7f51\u7edc\u6d41\u95ee\u9898\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7WQS\u4e8c\u5206\u6765\u5bfb\u627e\u6700\u5927\u6d41\u6216\u6700\u5c0f\u5272\u7684\u4f18\u5316\u89e3\u3002</p> </li> <li> <p>\u52a8\u6001\u89c4\u5212\u95ee\u9898\uff1a\u5728\u52a8\u6001\u89c4\u5212\u95ee\u9898\u4e2d\uff0c\u6709\u65f6\u53ef\u4ee5\u901a\u8fc7WQS\u4e8c\u5206\u6765\u4f18\u5316\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e2d\u7684\u53c2\u6570\u3002 WQS\u4e8c\u5206\u7684\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u8bbe\u8ba1\u8bc4\u4f30\u51fd\u6570\u548c\u5982\u4f55\u5904\u7406\u9650\u5236\u6761\u4ef6\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5173\u952e\u70b9\uff1a</p> </li> <li> <p>\u8bc4\u4f30\u51fd\u6570\u7684\u8bbe\u8ba1\uff1a\u9700\u8981\u6839\u636e\u95ee\u9898\u7684\u5177\u4f53\u7279\u70b9\u8bbe\u8ba1\u4e00\u4e2a\u6709\u6548\u7684\u8bc4\u4f30\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u80fd\u591f\u53cd\u6620\u51fa\u53c2\u6570\u53d8\u5316\u5bf9\u76ee\u6807\u51fd\u6570\u7684\u5f71\u54cd\u3002</p> </li> <li> <p>\u9650\u5236\u6761\u4ef6\u7684\u5904\u7406\uff1a\u5728\u4e8c\u5206\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u786e\u4fdd\u6bcf\u6b21\u8bc4\u4f30\u90fd\u662f\u5728\u6ee1\u8db3\u9650\u5236\u6761\u4ef6\u7684\u524d\u63d0\u4e0b\u8fdb\u884c\u7684\u3002</p> </li> </ol>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/#_4","title":"\u6574\u4f53\u4e8c\u5206 | [\u56fd\u5bb6\u96c6\u8bad\u961f] \u77e9\u9635\u4e58\u6cd5","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u4f60\u4e00\u4e2a \\(n \\times n\\) \u7684\u77e9\u9635\uff0c\u4e0d\u7528\u7b97\u77e9\u9635\u4e58\u6cd5\uff0c\u4f46\u662f\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u5b50\u77e9\u5f62\u7684\u7b2c \\(k\\) \u5c0f\u6570\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u77e9\u9635\u5927\u5c0f \\(n\\) \u548c\u8be2\u95ee\u7ec4\u6570 \\(q\\)\u3002</p> <p>\u7b2c \\(2\\) \u5230\u7b2c \\((n + 1)\\) \u884c\uff0c\u6bcf\u884c \\(n\\) \u4e2a\u6574\u6570\uff0c\u8868\u793a\u8fd9\u4e2a\u77e9\u9635\u3002\u7b2c \\((i + 1)\\) \u884c\u7684\u7b2c \\(j\\) \u4e2a\u6570\u8868\u793a\u77e9\u9635\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u6570 \\(a_{i, j}\\)\u3002</p> <p>\u63a5\u4e0b\u6765 \\(q\\) \u884c\uff0c\u6bcf\u884c\u4e94\u4e2a\u6574\u6570 \\(x_1, y_1, x_2, y_2, k\\)\uff0c\u8868\u793a\u4e00\u7ec4\u8be2\u95ee\uff0c\u8981\u6c42\u627e\u5230\u4ee5 \\((x_1, y_1)\\) \u4e3a\u5de6\u4e0a\u89d2\uff0c\\((x_2, y_2)\\) \u4e3a\u53f3\u4e0b\u89d2\u7684\u5b50\u77e9\u5f62\u4e2d\u7684\u7b2c \\(k\\) \u5c0f\u6570\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/#_5","title":"\u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a","text":"<ul> <li> <p>\u5bf9\u4e8e \\(20\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(n \\leq 100\\)\uff0c\\(q \\leq 10^3\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(40\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(n \\leq 300\\)\uff0c\\(q \\leq 10^4\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(60\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(n \\leq 400\\)\uff0c\\(q \\leq 3 \\times 10^4\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(1 \\leq n \\leq 500\\)\uff0c\\(1 \\leq q \\leq 6 \\times 10^4\\)\uff0c\\(0 \\leq a_{i, j} \\leq 10^9\\)\u3002</p> </li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/#_6","title":"\u601d\u8def","text":"<p>\u770b\u8d77\u6765\u597d\u50cf\u662f\u4f7f\u7528\u4e3b\u5e2d\u6811\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u4e8c\u7ef4\u7684\u6211\u4eec\u6709\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u53ef\u6301\u4e45\u5316\u4e8c\u7ef4\u503c\u57df\u7ebf\u6bb5\u6811\u5417\uff1f</p> <p>\u8fd9\u91cc\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u65b0\u79bb\u7ebf\u7b97\u6cd5\uff0c\u53eb\u505a**\u6574\u4f53\u4e8c\u5206**\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/#_7","title":"\u6574\u4f53\u4e8c\u5206","text":"<p>\u6574\u4f53\u4e8c\u5206\u662f\u4e00\u79cd\u7b97\u6cd5\u601d\u60f3\uff0c\u901a\u5e38\u7528\u4e8e\u89e3\u51b3\u4e00\u4e9b\u7279\u5b9a\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u95ee\u9898\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u5904\u7406\u5e8f\u5217\u6216\u6811\u5f62\u7ed3\u6784\u4e2d\u7684\u95ee\u9898\uff0c\u901a\u8fc7\u9012\u5f52\u5730\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3a\u4e24\u4e2a\u76f8\u5bf9\u7b49\u7684\u90e8\u5206\uff0c\u7136\u540e\u5728\u6bcf\u4e00\u90e8\u5206\u72ec\u7acb\u5730\u8fdb\u884c\u5904\u7406\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u5408\u5e76\u8d77\u6765\u3002</p> <p>\u4ee5\u4e0b\u662f\u6574\u4f53\u4e8c\u5206\u7684\u57fa\u672c\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u5212\u5206\uff1a\u5c06\u95ee\u9898\u89c4\u6a21\u8f83\u5927\u7684\u6570\u636e\u96c6\u5212\u5206\u4e3a\u4e24\u4e2a\u89c4\u6a21\u8f83\u5c0f\u7684\u5b50\u96c6\u3002</p> </li> <li> <p>\u9012\u5f52\u5904\u7406\uff1a\u5bf9\u6bcf\u4e2a\u5b50\u96c6\u9012\u5f52\u5730\u5e94\u7528\u76f8\u540c\u7684\u5904\u7406\u65b9\u6cd5\u3002</p> </li> <li> <p>\u5408\u5e76\u7ed3\u679c\uff1a\u5c06\u5b50\u96c6\u7684\u5904\u7406\u7ed3\u679c\u5408\u5e76\u8d77\u6765\uff0c\u5f62\u6210\u6574\u4e2a\u6570\u636e\u96c6\u7684\u5904\u7406\u7ed3\u679c\u3002 \u6574\u4f53\u4e8c\u5206\u5728\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\u4e0b\u7279\u522b\u6709\u7528\uff1a</p> </li> <li> <p>\u79bb\u7ebf\u7b97\u6cd5\uff1a\u5728\u65e0\u6cd5\u5373\u65f6\u5904\u7406\u67e5\u8be2\u7684\u95ee\u9898\u4e2d\uff0c\u53ef\u4ee5\u5148\u5c06\u6240\u6709\u67e5\u8be2\u79bb\u7ebf\u4e0b\u6765\uff0c\u7136\u540e\u4f7f\u7528\u6574\u4f53\u4e8c\u5206\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u3002</p> </li> <li> <p>\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\uff1a\u5728\u5904\u7406\u533a\u95f4\u95ee\u9898\u65f6\uff0c\u6574\u4f53\u4e8c\u5206\u53ef\u4ee5\u7528\u6765\u51cf\u5c11\u95ee\u9898\u7684\u89c4\u6a21\uff0c\u5c06\u5927\u533a\u95f4\u95ee\u9898\u8f6c\u5316\u4e3a\u5c0f\u533a\u95f4\u95ee\u9898\u3002</p> </li> <li> <p>\u53ef\u5e76\u5806\uff1a\u5728\u5904\u7406\u4e00\u4e9b\u9700\u8981\u52a8\u6001\u5408\u5e76\u548c\u5206\u88c2\u7684\u6570\u636e\u7ed3\u6784\u95ee\u9898\u65f6\uff0c\u6574\u4f53\u4e8c\u5206\u53ef\u4ee5\u7528\u6765\u4f18\u5316\u5408\u5e76\u548c\u5206\u88c2\u7684\u6548\u7387\u3002 \u6574\u4f53\u4e8c\u5206\u7684\u4e00\u4e2a\u5178\u578b\u5e94\u7528\u662f\u5728\u5904\u7406\u79bb\u7ebf\u533a\u95f4\u4fee\u6539\u95ee\u9898\u65f6\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u6570\u7ec4\u4e0a\u8fdb\u884c\u591a\u6b21\u533a\u95f4\u4fee\u6539\u67e5\u8be2\u64cd\u4f5c\uff0c\u6574\u4f53\u4e8c\u5206\u53ef\u4ee5\u7528\u6765\u9ad8\u6548\u5730\u5904\u7406\u8fd9\u4e9b\u64cd\u4f5c\u3002 \u5728\u4f7f\u7528\u6574\u4f53\u4e8c\u5206\u65f6\uff0c\u901a\u5e38\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a</p> </li> <li> <p>\u786e\u4fdd\u95ee\u9898\u53ef\u4ee5\u9012\u5f52\u5730\u5212\u5206\u4e3a\u4e24\u4e2a\u76f8\u5bf9\u7b49\u7684\u90e8\u5206\u3002</p> </li> <li> <p>\u5904\u7406\u5b50\u95ee\u9898\u65f6\uff0c\u786e\u4fdd\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u5b50\u95ee\u9898\u7684\u89e3\u3002</p> </li> <li> <p>\u5408\u5e76\u7ed3\u679c\u65f6\uff0c\u786e\u4fdd\u80fd\u591f\u6b63\u786e\u5730\u6574\u5408\u5b50\u95ee\u9898\u7684\u89e3\u3002</p> </li> </ol>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/#code","title":"Code","text":"<pre><code>/*                                                                                \n                      Keyblinds Guide\n                    ###################\n      @Ntsc 2024\n\n      - Ctrl+Alt+G then P : Enter luogu problem details\n      - Ctrl+Alt+B : Run all cases in CPH\n      - ctrl+D : choose this and dump to the next\n      - ctrl+Shift+L : choose all like this\n      - ctrl+K then ctrl+W: close all\n\n*/\n#include &lt;bits/stdc++.h&gt;\n#include &lt;queue&gt;\nusing namespace std;\n\n#define rep(i, l, r) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(i, r, l) for (int i = r, END##i = l; i &gt;= END##i; --i)\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n// #define innt int\n// #define inr int\n// #define mian main\n// #define iont int\n\n#define rd read()\nint read(){\n    int xx = 0, ff = 1;\n    char ch = getchar();\n    while (ch &lt; '0' || ch &gt; '9') {\n        if (ch == '-')\n            ff = -1;\n        ch = getchar();\n    }\n    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n      xx = xx * 10 + (ch - '0'), ch = getchar();\n    return xx * ff;\n}\nvoid write(int out) {\n    if (out &lt; 0)\n        putchar('-'), out = -out;\n    if (out &gt; 9)\n        write(out / 10);\n    putchar(out % 10 + '0');\n}\n\nconst char el='\\n';\nconst bool enable_dbg = 0;\ntemplate &lt;typename T,typename... Args&gt;\nvoid dbg(T s,Args... args) {\n    if constexpr (enable_dbg){\n    cerr &lt;&lt; s &lt;&lt; ' ';\n        if constexpr (sizeof...(Args))\n            dbg(args...);\n    }\n}\n\nconst int N = 3e3 + 5;\nconst int INF = 1e18;\nconst int M = 1e6;\nconst int MOD = 1e9 + 7;\n\nstruct node{\n    int x,y,u,v;\n    int k,id;\n}q[M],q1[M],q2[M];\n\nint tot,ans[M];\nint n,m,t[N][N];\n\n\nnamespace ctree{\n\n    inline int lowbit(int x){\n        return x&amp;-x;\n    }\n\n    void add(int x,int y,int v){\n        for(int i=x;i&lt;=n;i+=lowbit(i)){\n            for(int j=y;j&lt;=n;j+=lowbit(j)){\n                t[i][j]+=v;\n            }\n        }\n    }\n\n    int query(int x,int y){\n        int res=0;\n        for(int i=x;i;i-=lowbit(i)){\n            for(int j=y;j;j-=lowbit(j)){\n                res+=t[i][j];\n            }\n        }\n        return res;\n    }\n}using namespace ctree;\n\nvoid solve(int l,int r,int x,int y){\n    dbg(l,r,x,y,el);\n    if(l&gt;r)return ;\n    if(x==y){//\u5df2\u7ecf\u8d70\u5230\u4e86\u4e00\u4e2a\u6570\u5b57\u4e0a\uff0c\u4e14\u8be5\u6570\u5bf9\u5f53\u524d\u533a\u95f4\u5185\u7684\u64cd\u4f5c\u90fd\u6709\u8d21\u732e\uff0c\u90a3\u4e48\u8d21\u732e\u7b54\u6848\n        for(int i=l;i&lt;=r;i++){\n            if(q[i].id)ans[q[i].id]=x;\n        }\n        return ;\n    }\n\n    int len1=0,len2=0,mid=x+y&gt;&gt;1;\n    for(int i=l;i&lt;=r;i++){\n        if(!q[i].id){\n            if(q[i].k&lt;=mid)add(q[i].x,q[i].y,1),q1[++len1]=q[i];\n            else q2[++len2]=q[i];\n        }else{\n            int t=query(q[i].u,q[i].v)-query(q[i].x-1,q[i].v)-query(q[i].u,q[i].y-1)/\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\uff0c\u96f7\u96e8\u4e8c\u7ef4\u524d\u7f00\u548c\uff0c\u63d0\u53d6\u5b50\u77e9\u9635\n            if(t&gt;=q[i].k)q1[++len1]=q[i];\n            else q[i].k-=t,q2[+/\u66f4\u65b0\u540e\u4e22\u5230\u53f3\u8fb9\n        }\n    }\n\n    for(int i=1;i&lt;=len1;i++)q[l+i-1]=q1[i];\n    for(int i=1;i&lt;=len2;i++)q[l/\u91cd\u65b0\u5206\u914d\u6240\u6709\u64cd\u4f5c\n    for(int i=l;i&lt;=l+len1-1;i++){\n        if(!q[i].id&amp;&amp;q[i].k&lt;=mid)add(q[i].x,q[i].y,-1);\n    }\n\n    solve(l,l/\u6ce8\u610f\u533a\u95f4\u4e0b\u6807\n    solve(l+len1,r,mid+1,y);\n}\n\nvoid solve(){\n    n=rd,m=rd;\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=n;j++){\n            int a=rd;\n            q[++tot]=(node){i,j,0,0,a,0};\n        }\n    }\n    dbg(\"ok\");\n    for(int i=1;i&lt;=m;i++){\n        int x=rd,y=rd,a=rd,b=rd,k=rd;\n        q[++tot]=(node){x,y,a,b,k,i};\n    }\n\n    dbg(\"ok\");\n    solve(1,tot,-INF,INF);\n    dbg(\"ok\");\n    for(int i=1;i&lt;=m;i++){\n        cout&lt;&lt;ans[i]&lt;&lt;endl;\n    }\n}\n\nsigned main() {\n    int T=1;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/#_8","title":"\u4e09\u5206","text":""},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E4%BA%8C%E5%88%86/#1","title":"\u4f8b\u9898 #1","text":"<p>\u7ed9\u5b9a \\(n\\) \u4e2a\u4e8c\u6b21\u51fd\u6570 \\(f_1(x),f_2(x),\\dots,f_n(x)\\)\uff08\u5747\u5f62\u5982 \\(ax^2+bx+c\\)\uff09\uff0c\u8bbe \\(F(x)=\\max\\{f_1(x),f_2(x),...,f_n(x)\\}\\)\uff0c\u6c42 \\(F(x)\\) \u5728\u533a\u95f4 \\([0,1000]\\) \u4e0a\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u7b2c\u4e00\u884c\u4e3a\u6b63\u6574\u6570 \\(T\\)\uff0c\u8868\u793a\u6709 \\(T\\) \u7ec4\u6570\u636e\u3002</p> <p>\u6bcf\u7ec4\u6570\u636e\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570 \\(n\\)\uff0c\u63a5\u7740 \\(n\\) \u884c\uff0c\u6bcf\u884c \\(3\\) \u4e2a\u6574\u6570 \\(a,b,c\\)\uff0c\u7528\u6765\u8868\u793a\u6bcf\u4e2a\u4e8c\u6b21\u51fd\u6570\u7684 \\(3\\) \u4e2a\u7cfb\u6570\uff0c\u6ce8\u610f\u4e8c\u6b21\u51fd\u6570\u6709\u53ef\u80fd\u9000\u5316\u6210\u4e00\u6b21\u3002</p> <p>\u867d\u7136\u7cbe\u5ea6\u8981\u6c42\u4e0d\u9ad8\uff0c\u4f46\u662feps\u8fd8\u662f\u8981\u8db3\u591f\u5c0f\uff01\uff08\u5728\u590d\u6742\u5ea6\u8303\u56f4\u5185\uff09</p> <p>\u6ce8\u610f\u52a0\u51cfeps\u82e5\u5e72\u500d\u53d6m1,m2\u4f1aTLE</p> <pre><code>const double eps=1e-12;//\u7cbe\u5ea6\u5f00\u9ad8\uff01\nint a[N],b[N],n,c[N];\n\ndouble f(double x,int i){\n    return x*x*a[i]+x*b[i]+c[i];\n}\ndouble check(double x){\n    double res=f(x,1);\n    for(int i=2;i&lt;=n;i++)res=max(res,f(x,i));\n    return res;\n}\n\nsigned main(){\n    int T=rd;\n    // cerr&lt;&lt;eps&lt;&lt;endl;\n    while(T--){\n        n=rd;\n        for(int i=1;i&lt;=n;i++)a[i]=rd,b[i]=rd,c[i]=rd;\n        double l=0,r=INF;\n        while(r-l&gt;eps){\n            double m1=l+(r-l)/3.0;\n            double m2=r-(r-l)/3.0;\n            if(check(m1)&gt;check(m2))l=m1;\n            else r=m2;\n            // cerr&lt;&lt;m1&lt;&lt;' '&lt;&lt;m2&lt;&lt;' '&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;endl;\n        }\n        // cerr&lt;&lt;\"l=\"&lt;&lt;l&lt;&lt;endl;\n        printf(\"%.4lf\\n\",check(l));\n\n    }\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%88%86%E6%B2%BB/","title":"\u5206\u6cbb","text":"<p>\u4f8b\u9898</p> <p>\u9898\u89e3 | \u5e73\u9762\u6700\u8fd1\u70b9\u5bf9</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%88%86%E6%B2%BB/#1","title":"\u4f8b\u9898 #1 \u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u5b9a\u5e73\u9762\u4e0a \\(n\\) \u4e2a\u70b9\uff0c\u627e\u51fa\u5176\u4e2d\u7684\u4e00\u5bf9\u70b9\u7684\u8ddd\u79bb\uff0c\u4f7f\u5f97\u5728\u8fd9 \\(n\\) \u4e2a\u70b9\u7684\u6240\u6709\u70b9\u5bf9\u4e2d\uff0c\u8be5\u8ddd\u79bb\u4e3a\u6240\u6709\u70b9\u5bf9\u4e2d\u6700\u5c0f\u7684</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\uff1a\\(n\\) \uff0c\u4fdd\u8bc1 \\(2\\le n\\le 200000\\) \u3002</p> <p>\u63a5\u4e0b\u6765 \\(n\\) \u884c\uff1a\u6bcf\u884c\u4e24\u4e2a\u5b9e\u6570\uff1a\\(x\\ y\\) \uff0c\u8868\u793a\u4e00\u4e2a\u70b9\u7684\u884c\u5750\u6807\u548c\u5217\u5750\u6807\uff0c\u4e2d\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u4ec5\u4e00\u884c\uff0c\u4e00\u4e2a\u5b9e\u6570\uff0c\u8868\u793a\u6700\u77ed\u8ddd\u79bb\uff0c\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e\u9762 \\(4\\) \u4f4d\u3002</p> <p>\u6570\u636e\u4fdd\u8bc1 \\(0\\le x,y\\le 10^9\\)</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%88%86%E6%B2%BB/#_2","title":"\u601d\u8def","text":"<p>\u6a21\u62df\u4ee5\u4e0b\u7b97\u6cd5</p> <p></p> <p>\u5148\u4e0d\u65ad\u5f80\u4e0b\u5206\uff0c\u4e00\u76f4\u5206\u5230[1,2]\u548c[3,3]</p> <p>\u53d1\u73b01,2\u662f\u76f8\u90bb\u70b9\uff0c1\u76f4\u63a5\u8fd4\u56de\u8ddd\u79bb\u5dee\uff0cd\u21924</p> <p>\u53d1\u73b03,3\u662f\u540c\u4e00\u4e2a\u70b9\uff0c\u8ddd\u79bb\u65e0\u9650\u2192\u65e0\u9650\uff0c\u7684\u4e0d\u53d8</p> <p>\u63a5\u4e0b\u6765\u8de8\u4e2d\u7ebf\u5904\u7406\uff08\u5728\u7ebf\u4e0a\u7684\u770b\u4f5c\u5c5e\u4e8e\u5de6\u8fb9\uff09\uff0c\u53d1\u73b01,3\u6bd41,2\u8fd1\uff0cd\u21922</p> <p></p> <p>\u5206\u5b8c[1,3]\u518d\u5206[4,6]</p> <p>4,5\u540c\u4e0a\uff0cd\u21922</p> <p>6,6\u540c\u4e0a\uff0cd\u4e0d\u53d8</p> <p>\u8de8\u4e2d\u7ebf\uff08\u56fe\u4e2d\u659c\u7ebf\uff09\u5904\u7406\uff0c\u53d1\u73b04,6\u8ddd\u79bb&gt;d\uff0c\u4e0d\u7ba1</p> <p>\u8fd4\u56de\u5230[1,6]\uff0c\u5de6\u53f3\u8fb9\u7684d\u6700\u5c0f\u503c\u90fd\u5df2\u7ecf\u5904\u7406\u597d\u4e86\uff0c[1,3]\u4e3a2.0\uff0c[4,6]\u4e3a2.2</p> <p>\u63a5\u4e0b\u6765\u8de8\u4e2d\u7ebf\u5904\u7406\uff08\u7eff\u7ebf\uff09\u53d1\u73b03,5\u8ddd\u79bb\u548c\u5de6\u8fb9\u7684d\u76f8\u540c\uff0c\u4e0d\u66f4\u65b0</p> <p>\u4f46\u8de8\u4e2d\u7ebf\u5904\u7406\u8fd8\u662f\u5fc5\u8981\u7684\uff01</p> <p></p> <p>\u5728[7,9]\u548c[1,11]\u4e2d\uff0cd\u6700\u5c0f\u503c\u90fd\u662f\u7531\u8de8\u4e2d\u7ebf\u7684\u60c5\u51b5\u5f97\u6765\u7684</p> <p>\u672c\u9898\u91cd\u70b9</p> <ul> <li> <p>\u8de8\u4e2d\u7ebf\u70b9\u7684\u8ddd\u79bb\u8ba1\u7b97</p> </li> <li> <p>\u5206\u6cbb\u601d\u8def</p> </li> </ul> <p>\u6211\u4eec\u6765\u8be6\u7ec6\u770b\u4e00\u4e0b\u8de8\u4e2d\u7ebf\u7684\u7b97\u6cd5</p> <p></p> <p>\u5f53\u8ba1\u7b97\u5230\u8de8\u4e2d\u7ebf\u65f6\uff0c\u5de6\u53f3\u4e24\u8fb9\u7684d\u7684\u6700\u5c0f\u503c \\(d_l,d_r\\) \u5df2\u7ecf\u8ba1\u7b97\u51fa\u6765\u4e86</p> <p>\u8fd9\u65f6\u5019\u8ba1\u7b97 \\(d_l,d_r\\) \u7684\u6700\u5c0f\u503c\u4e3a \\(d_{min}\\)\uff0c\u5c06\u79bb\u4e2d\u7ebf\u6c34\u5e73\u8ddd\u79bb\u2264d_{min}\u7684\u70b9\u5904\u7406\u51fa\u6765\uff08\u5373\u56fe\u4e2d\u7eff\u865a\u7ebf\u8303\u56f4\u5185\u7684\u70b9\uff09</p> <p>\u56e0\u4e3a\u76ee\u524d\u8981\u627e\u7684\u662f\u8de8\u4e2d\u7ebf\u7684\u4e24\u70b9\u95f4\u8ddd\u79bbd\uff0c\u5982\u679c\u6709\u4e00\u8fb9\u7684\u70b9\u5230\u4e2d\u7ebf\u6c34\u5e73\u8ddd\u79bb\u5c31&gt;d_{min}\u7684\u8bdd\uff0c\u53d6d_{min}\u6700\u4f18\uff0c\u5c31\u4e0d\u9700\u8981\u8003\u8651\u4e86\uff0c\u5c06\u8fd9\u4e9b\u70b9\u5904\u7406\u6389\uff0c\u7b49\u4e0b\u76f4\u63a5\u8df3\u8fc7</p> <p>\u8865\u5145\u77e5\u8bc6</p> <p>\u51fd\u6570 double fabs (double x) \u8fd4\u56de\u6d6e\u70b9\u6570 x \u7684\u7edd\u5bf9\u503c\u3002. \u6ce8\u610f\uff1a <code>fabs ()</code> \u51fd\u6570\u53ef\u4ee5\u7528\u4e8e double\u3001float \u548c long double \u7c7b\u578b\u7684\u53c2\u6570\u3002. \u5982\u679c\u9700\u8981\u8ba1\u7b97\u6574\u6570\u7684\u7edd\u5bf9\u503c\uff0c\u5e94\u8be5\u4f7f\u7528 <code>abs ()</code></p> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <p></p> <p></p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%88%86%E6%B2%BB/#code-28-tle","title":"code <code>28 TLE</code>","text":"<pre><code>/*////////ACACACACACACAC///////////\n       . Code by Ntsc .\n       . Love by Liye .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\n#define i1n int i=1;i&lt;=n;i++\n#define in1 int i=n;i&gt;=1;i--\nusing namespace std;\n\nconst int N=2e5+5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint n,ans;\nstruct node{\n    db x,y;\n}a[N],b[N];\nbool cmp(node a,node b){\n    return a.x&lt;b.x;\n}\nbool cmpy(node a,node b){\n    return a.y&lt;b.y;\n}\ndb dis(node a,node b){\n    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\ndb solve(int l,int r){\n    if(l==r)return 2e9;//l\u548cr\u662f\u540c\u4e00\u4e2a\u70b9\uff0c\u4e0d\u5904\u7406\n    if(l==r-1)return dis(a[l],a[r]); //l,r\u4e24\u70b9\u76f8\u90bb\n    //\u5206\u88c2 \n    int mid=(l/2;\n    db d=min(solve(l,mid),solve(mid+1,r));\n    //\u8de8\u4e2d\u7ebf\u5bfb\u627e\u66f4\u4f18\u89e3\n    int k=0;\n    for(int i=1;i&lt;=r;i++){\n        if(fabs(a[i].x-a[mid].x)&lt;d)b[+/\u627e\u51fa\u7eff\u865a\u7ebf\u8303\u56f4\u5185\u7684\u70b9\uff0c\u52a0\u5165\u6570\u7ec4b[] \n\n    }\n    sort(b/\u6309y\u6392\u5e8f ,\u76ee\u7684\u5728\u4e8e\u540e\u9762\u5224\u5b9a\"b[i].y-b[i].y&lt;d\"\u65f6,\u53ea\u8981\u53d1\u73b0\u4e00\u4e2a\u4e0d\u6ee1\u8db3,\u540e\u9762\u7684\u4e00\u5b9a\u90fd\u4e0d\u6ee1\u8db3,\u5faa\u73af\u7ec8\u6b62 \n    for(int i=1;i&lt;k;i++){//\u66b4\u529b\u679a\u4e3e5\u4e2a\u70b9\n        //\u4ece\u8be5\u70b9u\u4e0a\u9762\u7684\u4e00\u4e2a\u70b9v_1\u5f00\u59cb,\u9010\u6e10\u5411\u4e0a\u679a\u4e3e\u70b9v_i ,\u6c42u-&gt;v_i\u4e4b\u95f4\u7684\u8ddd\u79bb\n        //\u4e0d\u9700\u8981\u679a\u4e3eu\u4e0b\u9762\u7684\u70b9v_j,\u56e0\u4e3a\u8fd9\u4e9b\u60c5\u51b5\u5728\u679a\u4e3ev_j\u65f6\u5c31\u6c42\u8fc7\u4e86v_j-&gt;u\u4e86(\u7ed3\u5408\u56fe\u50cf\u7406\u89e3!) \n        for(int j=i/\"b[i].y-b[i].y&lt;d\"\u5373 \u4e24\u4e2a\u70b9\u7684y\u5dee\u503c&lt;d,\u5982\u679cy\u5dee\u503c\u90fd&gt;=d,\u5b83\u4eec\u95f4\u7684\u8ddd\u79bb\u4e0d\u53ef\u80fd&lt;d,\u6ca1\u5fc5\u8981\u7ee7\u7eed\u4e0b\u53bb\u4e86 \n            d=min(d,dis(b[i],b[j]));\n        }\n    }\n    rtn d;\n}\nsigned main(){\n    cin&gt;&gt;n;\n    for(i1n)cin&gt;&gt;a[i].x&gt;&gt;a[i].y;\n    sort(a+1,a+n+1,cmp);\n    printf(\"%.4lf\",solve(1,n));\n    return 0;\n}\n</code></pre> <p>P7883 \u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u52a0\u5f3a\u7248\uff09\u4ee3\u7801</p> <pre><code>\n</code></pre> <p>\u539f\u9898\uff1aP1257 \u5e73\u9762\u4e0a\u7684\u6700\u63a5\u8fd1\u70b9\u5bf9 \u4ee3\u7801</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%88%86%E6%B2%BB/#2","title":"\u4f8b\u9898 #2 \u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u52a0\u5f3a\u7248\uff09","text":"<p>\u7ed9\u5b9a \\(n\\) \u4e2a\u4e8c\u7ef4\u6b27\u51e0\u91cc\u5f97\u5e73\u9762\u4e0a\u7684\u70b9 \\(p_1, p_2, \\dots, p_n\\)\uff0c\u8bf7\u8f93\u51fa\u8ddd\u79bb\u6700\u8fd1\u7684\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u3002</p> <p>\u5bf9\u4e8e \\(100 \\%\\) \u7684\u6570\u636e\uff0c\\(2 \\leq n \\leq 4 \\times 10^5\\)\uff0c\\(-10^7 \\leq x_i, y_i \\leq 10^7\\)\u3002</p> <p>\u672c\u9898\u76ee\u6807\u590d\u6742\u5ea6\u662f \\(O(n \\log ^2 n)\\)\u3002\u8bbe\u7f6e 350ms \u65f6\u9650\u7684\u539f\u56e0\u662f\uff1a</p> <ol> <li>\\(O(n \\log ^2 n)\\) \u53c2\u8003\u4ee3\u7801\u4f7f\u7528 <code>cin</code> \u4e0d\u4f1a TLE\u3002\u6700\u5feb\u7684 std \u80fd \\(&lt;\\) 100ms\u3002</li> </ol>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%88%86%E6%B2%BB/#_3","title":"\u601d\u8def","text":"<p>\u8fd9\u9898\u6211\u4eec\u6765\u7528kd\u6811\u89e3\u51b3\u3002kd\u6811\u6a21\u677f\u2014\u2014\u4e0a\u7ebf\uff01</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8FAstar%E4%B8%8EIDAstar/","title":"\u542f\u53d1\u5f0fAstar\u4e0eIDAstar","text":"<p>\u4e13\u9898 | \u542f\u53d1\u5f0fA* IDA*</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8FAstar%E4%B8%8EIDAstar/#_1","title":"\u6982\u8ff0","text":"<p>\u5171\u6027\uff1a</p> <p></p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8FAstar%E4%B8%8EIDAstar/#a","title":"A*","text":"<p>\u5177\u4f53\u9898\u76ee\u5177\u4f53\u5206\u6790\uff1a</p> <p></p> <p>\u505a\u6cd5</p> <p></p> <p>\u6ce8\uff1a\u4e09\u5143\u7ec4\u4e3a\uff08\u5f53\u524d\u4ee3\u4ef7+\u4f30\u4ef7\uff0c\u5f53\u524d\u70b9\u7f16\u53f7\uff0c\u5f53\u524d\u70b9\u5230\u8d77\u70b9\u7684\u8ddd\u79bb\uff09</p> <p>\u90a3\u4e48\u5728\u8fd9\u9053\u9898\u76ee\u4e2d\uff0c\u4f30\u4ef7\u6709\u4ec0\u4e48\u4f5c\u7528\u5462\uff1f</p> <p>\u4f20\u7edf\u7684\u6700\u77ed\u8def\uff0c\u6211\u4eec\u53ea\u662f\u4e0d\u65ad\u7528\u6700\u5c0f\u503c\u53bb\u66f4\u65b0\u5230\u8fbe\u7ec8\u70b9T\u7684\u6700\u77ed\u8def\uff0c\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u5f53\u524d\u8fd9\u6761\u8def\u662f\u70b9\u51fb\u77ed\u7684\u3002\u5982\u679c\u6211\u4eec\u7528A*\u7b97\u6cd5\uff0c\u6211\u4eec\u5c31\u80fd\u63a7\u5236bfs\u5148\u8d70\u7b2c\u4e00\u77ed\u7684\uff0c\u518d\u8d70\u7b2c\u4e8c\u77ed\u7684...\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u7b2cK\u77ed\u7684\u4e86\u3002</p> <p>\u6ce8\u610f\u8fd9\u4e9b</p> <p></p> <p>\u6572\u4e00\u904d\u4ee3\u7801</p> <pre><code>/*////////ACACACACACACAC///////////\n       . Code by Ntsc .\n       . Love by Liye .\n/*////////ACACACACACACAC///////////\n\n#include&lt;bits/stdc++.h&gt;\n#define ll long long\n#define db double\n#define rtn return\nusing namespace std;\n\nconst int N=1e5;\nconst int M=1e5;\nconst int Mod=1e5;\nconst int INF=1e5;\n\nint h[N],rh[N],to[M],w[M],ne[M],tot;\nvoid add(int h[],int a,int b,int c){\n    to[++tot]=b,w[tot]=c,ne[tot]=h[a],h[a]=tot;\n}\n\nint n,m,s,t,k;\nint f[N],vis[N],cnt[N];\nstruct node{\n    int s,v,d;\n    bool operator &lt;(const node &amp;x)const{\n        return s&gt;x.s;\n    }\n};\n\nvoid djstr(){\n    memset(f,0x3f,sizeof f);\n    priority_queue&lt;pair&lt;int,int&gt;&gt; q;\n    q.push(make_pair(0,t));\n    while(q.size()){\n        pair&lt;int,int&gt; tmp=q.top();\n        q.pop();\n        int u=tmp.second;\n        if(vis[u])continue;\n        vis[u]=1;\n        for(int i=rh[u];i;i=ne[i]){\n            int v=to[i];\n            if(f[v]&gt;f[u]+w[i]){\n                f[v]=f[u]/f[v]\u662f\u70b9v\u5230t\u7684\u5f53\u524d\u8ddd\u79bb(\u5f53\u524d\u7684djstr\u662f\u9884\u5904\u7406\u4f30\u4ef7\u51fd\u6570\u7684,\u628at\u5f53\u4f5c\u8d77\u70b9)\uff0c\u4e5f\u662f\u5176\u4f30\u4ef7\u51fd\u6570 \n                q.push(make_pair(-f[v],v));\n            }\n        }\n    }\n}\n\nint ax(){\n    priority_queue&lt;node&gt; pq;\n    node a={f[s],s,0};\n    pq.push(a);\n    while(pq.size()){\n        node tmp=pq.top();pq.pop();\n        int u=tmp.v,d=tmp.d;\n        cnt[u]++;\n        if(cnt[t]==k)return d;\n        for(int i=h[u];i;i=ne[i]){\n            int v=to[i];\n            if(cnt[v]&lt;k){\n                node a={d+w[i]+f[v],v,d+w[i]};\n                pq.push(a);\n            }\n        }\n    }\n    return -1;\n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=m;i++){\n        int a,b,c;\n        cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;\n        add(h,a,b,c);add(rh,b,a,c);\n    }\n    cin&gt;&gt;s&gt;&gt;t&gt;&gt;k;\n    if(s==t)k++;//\u5982\u679cs,t\u91cd\u5408,\u90a3\u4e480\u662f\u6700\u77ed\u7684,A*\u4f1a\u7edf\u8ba1\u8fd9\u4e00\u6761,\u4f46\u9898\u76ee\u8981\u6c42\u4e0d\u80fd\u7b97\u8fd9\u6761\u8def,\u56e0\u6b64\u5b9e\u9645\u4e0a\u5e94\u8be5\u8981\u6c42\u7b2cK+1\u6761\u8def \n    djstr();\n    cout&lt;&lt;ax()&lt;&lt;endl;\n    return 0;\n}\n</code></pre> <p>\u6ce8\u610f\uff01A*\u5c31\u662f\u53d8\u5f62\u7684Dijkstra\uff01</p> <p>\u6838\u5fc3\u601d\u8def\uff1a\u53cd\u641c\u6c42\u4f30\u4ef7\uff0c\u6b63\u641c\u5e26\u4f30\u4ef7\u6c42\u7b2cK\u77ed</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8FAstar%E4%B8%8EIDAstar/#ida","title":"IDA*","text":"<p>230 IDA\u7b97\u6cd5 Booksort_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u540c\u6837\u7684\uff0c\u5177\u4f53\u9898\u76ee\u5177\u4f53\u5206\u6790\uff1a</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u5f88\u660e\u663e\u7684\u53d1\u73b0\u63d0\u793a**\u8fed\u4ee3\u52a0\u6df1**\u7684\u5b57\u773c\uff1a</p> <p></p> <p></p> <p>\u6ce8\u610f\u89c2\u5bdf\u4e3a\u4ec0\u4e48\u8981\u00f72</p> <p></p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8FAstar%E4%B8%8EIDAstar/#bfs","title":"\u77e5\u8bc6\u6269\u5c55\uff1a\u53cc\u5411BFS","text":"<p>\u653e\u56fe\uff0c\u79d2\u61c2</p> <p></p> <p>\u672c\u9898\u4e2d\u4e00\u8fb9BFS\u4ece\u521d\u59cb\u72b6\u6001\u5f00\u59cb\u641c\uff0c\u4e00\u8fb9BFS\u4ece\u6392\u597d\u5e8f\u540e\u5f00\u59cb\u641c\uff08\u6253\u4e71\u5730\u641c\uff09\uff0c\u9650\u5236\u6b65\u6570\u4e3a2\uff0c\u5982\u679c\u6709\u4e00\u5bf9BFS\u641c\u7d22\u6700\u7ec8\u72b6\u6001\u76f8\u540c\uff0c\u5373\u627e\u5230\u4e00\u6761\u7b26\u5408\u7ebf\u8def</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8FAstar%E4%B8%8EIDAstar/#ida_1","title":"IDA*\u7b97\u6cd5","text":"<p>\u8003\u5bdf\u4ee5\u4e0b\u6848\u4f8b</p> <p></p> <p>\u6211\u4eec\u53d1\u73b0\u4e863\u4e2a\u9519\u8bef\u8fde\u63a5\uff0c\u5206\u522b\u4e3a**1-4\uff0c5-2\uff0c3-6**</p> <p>\u5728\u6781\u4f73\u72b6\u6001\u4e0b\uff0c\u6211\u4eec\u4e00\u6b21\u64cd\u4f5c\u6700\u591a\u80fd\u4fee\u6b633\u4e2a\u9519\u8bef\u8fde\u63a5\u3002\u90a3\u4e48\u6211\u4eec\u6bcfDFS\u5230\u4e00\u4e2a\u72b6\u6001\uff0c\u5c31\u53bb\u7edf\u8ba1\u5f53\u524d\u8fd8\u5269\u4e0b\u7684\u9519\u8bef\u72b6\u6001\u7684\u4e2a\u6570n\uff0c\u5982\u679c\\(\\lceil n\\div 3\\rceil + \u5f53\u524d\u5df2\u7ecf\u79fb\u52a8\u7684\u6b65\u6570 &gt; 4\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8fdb\u884c\u526a\u679d\u3002</p> <p>\u600e\u4e48\u6837\uff0c\u662f\u4e0d\u662f\u60f3\u6cd5\u5f88\u7b80\u5355\uff1f</p> <p></p> <p>IDA*\u7b97\u6cd5\u9700\u8981\u5177\u4f53\u9898\u76ee\u5177\u4f53\u8ba8\u8bba\uff0c\u6ca1\u6709\u56fa\u5b9a\u7684\u4ee3\u7801\u6a21\u677f\uff0c\u8fd9\u91cc\u4e5f\u5c31\u4e0d\u5199\u4e86</p> <p>\u672c\u9898\u7684**IDA*\u6838\u5fc3\u601d\u60f3**\u662f\uff1a</p> <p>\u5236\u5b9a\u4e00\u4e2a\u4f30\u4ef7\u51fd\u6570\uff0c\u6c42\u51fa\u5f53\u524d\u72b6\u6001\u4e0b\u8fbe\u5230\u76ee\u7684\u8fd8\u9700\u8981\u7684\u6700\u5c11\u6b65\u6570\uff08\u5047\u8bbe\u4e00\u5207\u7406\u60f3\uff09\uff0c\u5982\u679c\u4ecd\u7136\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\uff0c\u5c31\u679c\u65ad\u780d\u6389\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/","title":"\u542f\u53d1\u5f0f\u5408\u5e76","text":"<p>\u6458\u6284\u5b66\u4e60\u7b14\u8bb0 | \u542f\u53d1\u5f0f\u5408\u5e76</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_1","title":"\u542f\u53d1\u5f0f\u5408\u5e76","text":"<p>\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u4e00\u53e5\u8bdd\u5c31\u662f\u5728\u5408\u5e76\u96c6\u5408\u7684\u65f6\u5019\u4e0d\u6309\u7167\u6307\u4ee4\u65b9\u5411\u5408\u5e76\uff0c\u800c\u662f\u9009\u62e9\u628a\u5c0f\u7684\u96c6\u5408\u5408\u5e76\u5165\u5927\u96c6\u5408\u4e2d\uff0c\u5e76\u5bf9\u96c6\u5408\u6027\u8d28\u901a\u8fc7\u91cd\u65b0\u6620\u5c04\u7684\u65b9\u5f0f\u4fee\u6539\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#1-hnoi2009","title":"\u4f8b\u9898 #1 \u542f\u53d1\u5f0f\u5408\u5e76 | [HNOI2009] \u68a6\u5e7b\u5e03\u4e01","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\\(n\\) \u4e2a\u5e03\u4e01\u6446\u6210\u4e00\u884c\uff0c\u8fdb\u884c \\(m\\) \u6b21\u64cd\u4f5c\u3002\u6bcf\u6b21\u5c06\u67d0\u4e2a\u989c\u8272\u7684\u5e03\u4e01\u5168\u90e8\u53d8\u6210\u53e6\u4e00\u79cd\u989c\u8272\u7684\uff0c\u7136\u540e\u518d\u8be2\u95ee\u5f53\u524d\u4e00\u5171\u6709\u591a\u5c11\u6bb5\u989c\u8272\u3002</p> <p>\u4f8b\u5982\uff0c\u989c\u8272\u5206\u522b\u4e3a \\(1,2,2,1\\) \u7684\u56db\u4e2a\u5e03\u4e01\u4e00\u5171\u6709 \\(3\\) \u6bb5\u989c\u8272.</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_2","title":"\u601d\u8def","text":"<p>\u5bf9\u4e8e\u4fee\u6539\u989c\u8272\u540e\u7684\u7ef4\u62a4\u7b54\u6848\uff0c\u6211\u4eec\u626b\u63cf\u4e00\u904d\u88ab\u4fee\u6539\u7684\u989c\u8272\u3002\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u5bf9\u4e8e\u7b2ci\u4e2a\u5e03\u4e01\uff0c\u5982\u679c\\(col_i\u2260col_{i+1}\\)\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f1\u7684\u8d21\u732e\u3002\u90a3\u4e48\u6211\u4eec\u66b4\u529b\u626b\u63cf\u4e00\u904d\u88ab\u4fee\u6539\u7684\u989c\u8272\uff0c\u770b\u770b\u6bcf\u4e00\u4e2a\u8fd9\u79cd\u989c\u8272\u7684\u5e03\u4e01\u7684\u4e24\u65c1\u7684\u5e03\u4e01\u7684\u989c\u8272\u662f\u5426\u548c\u4ed6\u4e0d\u540c\u3002\u5982\u679c\u4e0d\u540c\u5219\u8fdb\u4e00\u6b65\u8003\u8651\u4fee\u6539\u540e\u662f\u5426\u4e0d\u540c\u3002\u5982\u679c\u4fee\u6539\u540e\u76f8\u540c\uff0c\u5219\u7b54\u6848-1\u3002</p> <p>\u6211\u4eec\u5bf9\u6bcf\u4e00\u79cd\u989c\u8272\u62c9\u4e00\u6761\u94fe\u8868\u6765\u7ef4\u62a4\u8be5\u989c\u8272\u7684\u5e03\u4e01\u3002\u7136\u540e\u5728\u5408\u5e76\u65f6\u5148\u626b\u63cf\uff08\u89c1\u4e0a\uff09\uff0c\u7136\u540e\u542f\u53d1\u5f0f\u5408\u5e76\u3002</p> <p>\u6620\u5c04\u8bf4\u660e\uff1a\u5982\u679c\\(col_i\\)\u7684\u6570\u91cf\u4e3a10\uff0c\\(col_j\\)\u7684\u6570\u91cf\u4e3a6\uff0c\u90a3\u4e48\u5982\u679c\u8981\u628a\\(col_i\\)\u53d8\u6210\\(col_j\\)\uff0c\u6309\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u6211\u4eec\u5c31\u4f1a\u628a\\(col_j\\)\u7684\u5408\u5e76\u5165\\(col_i\\)\uff0c\u90a3\u4e48\u8fd9\u6837\u989c\u8272\u5c31\u4e0d\u5bf9\u4e86\u3002\u6240\u4ee5\u8fd9\u65f6\u6211\u4eec\u628a\u6620\u5c04\u5173\u7cfb\u8c03\u6574\u4e3a\\(col'_i\u2192col_j,col'_j\u2192col_i\\)\u5373\u53ef\u3002\u5373\u6bcf\u4e00\u6761\u94fe\u8868\u7684\u5934\u90e8\u4e0d\u662f\\(col\\)\uff0c\u800c\u662f\\(col'\\)</p> <pre><code>/*\nCB Ntsc\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n// #define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define ps second\n\n#define rd read()\n// #define nl putc('\\n')\n#define ot write\n#define nl putchar('\\n')\ninline int rd\n{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out)\n{\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\n\nbool f1;\nconst int INF = 1e9;\nconst int N = 2e6+50;\nconst int M = 10;\n\nint n,ans,m,idx;\nint p[N];//\u6620\u5c04\nint to[N],h[N],sz[N],nxt[N],col[N];\nvoid add(int a,int b){\n    to[++idx]=b,nxt[idx]=h[a],h[a]=idx;\n    sz[a]++;\n}\n\nvoid merge(int &amp;x,int &amp;y){\n    if(x==y)return ;\n    if(sz[x]&gt;sz[y]){\n        swap(x,y);\n    }\n    for(int i=h[x];i;i=nxt[i]){\n        int v=to[i];\n        ans-=(col[v-1]==y)+(col[v+1]==y);\n    }\n    for(int i=h[x];i;i=nxt[i]){\n        int v=to[i];\n        col[v]=y;\n        if(!nxt[i]){\n            nxt[i]=h[y],h[y]=h[x];break;\n        }\n    }\n    h[x]=0;\n    sz[y]+=sz[x];sz[x]=0;\n}\nsigned main(){\n    n=rd,m=rd;\n    for(int i=1;i&lt;=n;i++){\n        col[i]=rd;\n\n        if(col[i]!=col[i-1])ans++;\n        add(col[i],i);\n    }\n\n    for(int i=0;i&lt;N;i++)p[i]=i;\n\n    while(m--){\n        int op=rd;\n        if(op==2){\n            cout&lt;&lt;ans&lt;&lt;endl;\n        }else{\n            int x=rd,y=rd;\n            merge(p[x],p[y]);\n        }\n    }\n    return 0;\n}\n/*\n2 5\n0 1 1 1 1\n0 1 1 2 4\n0 2 1 2 1\n0 2 1 1 4\n*/\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#2-dsu-on-tree-lomsat-gelral","title":"\u4f8b\u9898 #2 dsu on tree \u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76 | Lomsat gelral","text":"<p>\u9898\u9762\u7ffb\u8bd1</p> <ul> <li> <p>\u6709\u4e00\u68f5  \\(n\\) \u4e2a\u7ed3\u70b9\u7684\u4ee5  \\(1\\) \u53f7\u7ed3\u70b9\u4e3a\u6839\u7684**\u6709\u6839\u6811**\u3002</p> </li> <li> <p>\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e00\u4e2a\u989c\u8272\uff0c\u989c\u8272\u662f\u4ee5\u7f16\u53f7\u8868\u793a\u7684\uff0c \\(i\\) \u53f7\u7ed3\u70b9\u7684\u989c\u8272\u7f16\u53f7\u4e3a  \\(c_i\\)\u3002</p> </li> <li> <p>\u5982\u679c\u4e00\u79cd\u989c\u8272\u5728\u4ee5  \\(x\\) \u4e3a\u6839\u7684\u5b50\u6811\u5185\u51fa\u73b0\u6b21\u6570\u6700\u591a\uff0c\u79f0\u5176\u5728\u4ee5  \\(x\\) \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u5360**\u4e3b\u5bfc\u5730\u4f4d**\u3002\u663e\u7136\uff0c\u540c\u4e00\u5b50\u6811\u4e2d\u53ef\u80fd\u6709\u591a\u79cd\u989c\u8272\u5360\u4e3b\u5bfc\u5730\u4f4d\u3002</p> </li> <li> <p>\u4f60\u7684\u4efb\u52a1\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a  \\(i\\in[1,n]\\)\uff0c\u6c42\u51fa\u4ee5  \\(i\\) \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u989c\u8272\u7684\u7f16\u53f7\u548c\u3002</p> </li> <li> <p>\\(n\\le 10^5,c_i\\le n\\)</p> </li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/#_3","title":"\u601d\u8def","text":"<p>\u66b4\u529b\u7b97\u6cd5\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u90fd\u626b\u63cf\u4e00\u4e0b\u5176\u5b50\u6811\u7edf\u8ba1\u7b54\u6848\u3002\\(O(n^2)\\)</p> <p>\u90a3\u4e48\u6211\u4eec\u5b50\u6811\u7684\u4fe1\u606f\u662f\u5426\u53ef\u4ee5\u88ab\u5176\u7236\u4eb2\u8282\u70b9\u52a0\u4ee5\u5229\u7528\u5462\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\u7684\u3002\u52a0\u4e0a\u8282\u70b9u\u7684\u513f\u5b50\u6709\\(v_1,v_2,v_3\\)\uff0c\u5176\u4e2d\\(v_1\\)\u662f\u5176\u91cd\u513f\u5b50\uff08\u5373\u5b50\u6811\u5927\u5c0f\u6700\u5927\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u89e3\u51b3\\(v_2,v_3\\)\u7684\u95ee\u9898\uff08\u89e3\u51b3\\(v_2\\)\uff0c\u6e05\u7a7acnt\uff0c\u89e3\u51b3\\(v_3\\)\uff0c\u6e05\u7a7acnt\uff09\uff0c\u6700\u540e\u89e3\u51b3\\(v_1\\)\uff0c\u6b64\u65f6\u4e0d\u6e05\u7a7acnt\uff0c\u5373\u6211\u4eec\u4fdd\u7559\\(v_1\\)\u7684\u4fe1\u606f\u3002\u8fd9\u65f6\u6211\u4eec\u518d\u89e3\u51b3u\u7684\u95ee\u9898\u65f6\u5c31\u53ea\u9700\u8981\u904d\u5386\\(u,v_2,v_3\\)\u5373\u53ef\u4e86\uff0c\\(v_1\\)\u7684\u4fe1\u606f\u6211\u4eec\u53ef\u4ee5\u7ee7\u627f\u8fc7\u6765\u3002</p> <p>\u8fd9\u6837\u7684\u8bdd\u590d\u6742\u5ea6\u53ef\u4ee5\u964d\u81f3O(n \\log n)</p> <p>\u8ba1\u7b97\u590d\u6742\u5ea6\u7684\u65b9\u6cd5\u540c\u6811\u94fe\u5256\u5206\uff0c\u5373\u8003\u8651\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u3002\u8fd9\u91cc\u7b80\u5355\u8bf4\u4e00\u4e0b\u3002\u4e00\u4e2a\u70b9u\u4f1a\u88ab\u91cd\u590d\u904d\u5386\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u70b9\u4f4d\u4e8e\u8f7b\u5b50\u6811\u4e2d\u3002\u90a3\u4e48\u8fd9\u4e2a\u70b9\u4f1a\u5728\u591a\u5c11\u4e2a\u8f7b\u5b50\u6811\u4e2d\u5c31\u610f\u5473\u7740\u8fd9\u4e2a\u70b9\u4f1a\u88ab\u91cd\u590d\u904d\u5386\u591a\u5c11\u6b21\u3002\u70b9u\u4f1a\u5728\u591a\u5c11\u4e2a\u8f7b\u5b50\u6811\u4e2d\u7b49\u4ef7\u4e8eu\u5230\u6839\u7684\u8def\u5f84\u4e2d\u4f1a\u6709\u591a\u5c11\u6761\u8f7b\u8fb9\u3002\u53ef\u4ee5\u8bc1\u660e\u8f7b\u8fb9\u6570\u91cf\\(&lt;\\log n\\)</p> <pre><code>/*\nEdit by Ntsc.\n*/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long\n#define ull unsigned long long\n#define pii pair&lt;int, int&gt;\n#define pf first\n#define rep(i, a, b) for(int i = a; i &lt;= b; ++i)\n#define per(i, a, b) for(int i = a; i &gt;= b; --i)\n\n#define rd read()\n#define ot write\n#define nl putchar('\\n')\ninline int rd{\n    int xx=0,ff=1;\n    char ch=getchar();\n    while(ch&lt;'0'||ch&gt;'9') {if(ch=='-') ff=-1;ch=getchar();}\n    while(ch&gt;='0'&amp;&amp;ch&lt;='9') xx=xx*10+(ch-'0'),ch=getchar();\n    return xx*ff;\n}\ninline void write(int out){\n    if(out&lt;0) putchar('-'),out=-out;\n    if(out&gt;9) write(out/10);\n    putchar(out%10+'0');\n}\nconst int N=1e5+3;\nint sum,mx,n,m;\nint sz[N],col[N],son[N],cnt[N],ans[N];\nvector&lt;int&gt; e[N];\n\nvoid add(int a,int b){\n    e[a].push_back(b);\n    e[b].push_back(a);\n}\n\nint dfs(int x,int fa){\n    sz[x]=1;\n    for(auto v:e[x]){\n        if(v==fa)continue;\n        sz[x]+=dfs(v,x);\n        if(sz[v]&gt;sz[son[x]])son[x]=v;\n    }\n    return sz[x];\n\n}\nvoid update(int x,int fa,int sg,int ps){\n    int c=col[x];\n    cnt[c]+=sg;\n    if(cnt[c]&gt;mx)mx=cnt[c],sum=c;\n    else if(cnt[c]==mx)sum+=c;\n\n    for(auto v:e[x]){\n        if(v==fa||v==ps)continue;\n        update(v,x,sg,ps);\n    }\n\n}\n\nvoid dfs(int x,int fa,int tp){\n    for(auto v:e[x]){\n        if(v==fa||v==son[x])continue;\n        dfs(v,x,0);\n    }\n    if(son[x])dfs(son[x],x,1);\n    update(x,fa,1,son[x]);\n\n    ans[x]=sum;\n\n    if(!tp){\n        //x\u662f\u8f7b\u513f\u5b50\n        update(x,fa,-1,0);\n        sum=mx=0;\n    }\n}\n\nsigned main(){\n    n=rd;\n    for(int i=1;i&lt;=n;i++)col[i]=rd;\n\n    for(int i=1;i&lt;n;i++){\n        int a=rd,b=rd;\n        add(a,b);\n    }\n    dfs(1,0);\n    dfs(1,0,1);\n\n    for(int i=1;i&lt;=n;i++)cout&lt;&lt;ans[i]&lt;&lt;' ';\n    return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/","title":"\u62d3\u6251\u6392\u5e8f","text":"<p>\u767e\u79d1 \u5bf9\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe(Directed Acyclic Graph\u7b80\u79f0DAG)G\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u662f\u5c06G\u4e2d\u6240\u6709\u9876\u70b9\u6392\u6210\u4e00\u4e2a\u7ebf\u6027\u5e8f\u5217\uff0c\u4f7f\u5f97\u56fe\u4e2d\u4efb\u610f\u4e00\u5bf9\u9876\u70b9u\u548cv\uff0c\u82e5\u8fb9 \\(&lt;u,v&gt;\u2208E(G)\\) \uff0c\u5219u\u5728\u7ebf\u6027\u5e8f\u5217\u4e2d\u51fa\u73b0\u5728v\u4e4b\u524d\u3002\u901a\u5e38\uff0c\u8fd9\u6837\u7684\u7ebf\u6027\u5e8f\u5217\u79f0\u4e3a\u6ee1\u8db3\u62d3\u6251\u6b21\u5e8f(Topological Order)\u7684\u5e8f\u5217\uff0c\u7b80\u79f0\u62d3\u6251\u5e8f\u5217\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u7531\u67d0\u4e2a\u96c6\u5408\u4e0a\u7684\u4e00\u4e2a\u504f\u5e8f\u5f97\u5230\u8be5\u96c6\u5408\u4e0a\u7684\u4e00\u4e2a\u5168\u5e8f\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u79f0\u4e4b\u4e3a\u62d3\u6251\u6392\u5e8f\u3002</p> <p>\u62d3\u6251\u6392\u5e8f\u5e38\u7528\u6765\u786e\u5b9a\u4e00\u4e2a\u4f9d\u8d56\u5173\u7cfb\u96c6\u4e2d\uff0c\u4e8b\u7269\u53d1\u751f\u7684\u987a\u5e8f\u3002\u4f8b\u5982\uff0c\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5c06\u9879\u76ee\u62c6\u5206\u6210A\u3001B\u3001C\u3001D\u56db\u4e2a\u5b50\u90e8\u5206\u6765\u5b8c\u6210\uff0c\u4f46A\u4f9d\u8d56\u4e8eB\u548cD\uff0cC\u4f9d\u8d56\u4e8eD\u3002\u4e3a\u4e86\u8ba1\u7b97\u8fd9\u4e2a\u9879\u76ee\u8fdb\u884c\u7684\u987a\u5e8f\uff0c\u53ef\u5bf9\u8fd9\u4e2a\u5173\u7cfb\u96c6\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u5f97\u51fa\u4e00\u4e2a\u7ebf\u6027\u7684\u5e8f\u5217\uff0c\u5219\u6392\u5728\u524d\u9762\u7684\u4efb\u52a1\u5c31\u662f\u9700\u8981\u5148\u5b8c\u6210\u7684\u4efb\u52a1\u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u5f97\u5230\u7684\u6392\u5e8f\u5e76\u4e0d\u662f\u552f\u4e00\u7684\uff01\u5c31\u597d\u50cf\u4f60\u65e9\u4e0a\u7a7f\u8863\u670d\u53ef\u4ee5\u5148\u7a7f\u4e0a\u8863\u4e5f\u53ef\u4ee5\u5148\u7a7f\u88e4\u5b50\uff0c\u53ea\u8981\u91cc\u9762\u7684\u8863\u670d\u5728\u5916\u9762\u7684\u8863\u670d\u4e4b\u524d\u7a7f\u5c31\u884c\u3002</p> <p>\u5b9e\u73b0</p> <p>\u5728\u56fe\u8bba\u4e2d\uff0c\u62d3\u6251\u6392\u5e8f\uff08Topological Sorting\uff09\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG, Directed Acyclic Graph\uff09\u7684\u6240\u6709\u9876\u70b9\u7684\u7ebf\u6027\u5e8f\u5217\u3002\u4e14\u8be5\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u4e0b\u9762\u4e24\u4e2a\u6761\u4ef6\uff1a</p> <ul> <li> <p>\u6bcf\u4e2a\u9876\u70b9\u51fa\u73b0\u4e14\u53ea\u51fa\u73b0\u4e00\u6b21\u3002</p> </li> <li> <p>\u82e5\u5b58\u5728\u4e00\u6761\u4ece\u9876\u70b9 A \u5230\u9876\u70b9 B \u7684\u8def\u5f84\uff0c\u90a3\u4e48\u5728\u5e8f\u5217\u4e2d\u9876\u70b9 A \u51fa\u73b0\u5728\u9876\u70b9 B \u7684\u524d\u9762\u3002 \u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\u624d\u6709\u62d3\u6251\u6392\u5e8f\uff0c\u975eDAG\u56fe\u6ca1\u6709\u62d3\u6251\u6392\u5e8f\u4e00\u8bf4\u3002</p> </li> </ul> <p>\u4f8b\u5982\uff0c\u4e0b\u9762\u8fd9\u4e2a\u56fe\uff1a</p> <p></p> <p>\u5b83\u662f\u4e00\u4e2a DAG \u56fe\uff0c\u90a3\u4e48\u5982\u4f55\u5199\u51fa\u5b83\u7684\u62d3\u6251\u6392\u5e8f\u5462\uff1f\u8fd9\u91cc\u8bf4\u4e00\u79cd\u6bd4\u8f83\u5e38\u7528\u7684\u65b9\u6cd5\uff1a</p> <p>\u4ece DAG \u56fe\u4e2d\u9009\u62e9\u4e00\u4e2a \u6ca1\u6709\u524d\u9a71\uff08\u5373\u5165\u5ea6\u4e3a0\uff09\u7684\u9876\u70b9\u5e76\u8f93\u51fa\u3002 \u4ece\u56fe\u4e2d\u5220\u9664\u8be5\u9876\u70b9\u548c\u6240\u6709\u4ee5\u5b83\u4e3a\u8d77\u70b9\u7684\u6709\u5411\u8fb9\u3002 \u91cd\u590d 1 \u548c 2 \u76f4\u5230\u5f53\u524d\u7684 DAG \u56fe\u4e3a\u7a7a\u6216\u5f53\u524d\u56fe\u4e2d\u4e0d\u5b58\u5728\u65e0\u524d\u9a71\u7684\u9876\u70b9\u4e3a\u6b62\u3002\u540e\u4e00\u79cd\u60c5\u51b5\u8bf4\u660e\u6709\u5411\u56fe\u4e2d**\u5fc5\u7136\u5b58\u5728\u73af**\u3002</p> <p>\u4e8e\u662f\uff0c\u5f97\u5230\u62d3\u6251\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u662f { 1, 2, 4, 3, 5 }\u3002</p> <p>\u901a\u5e38\uff0c\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u53ef\u4ee5\u6709**\u4e00\u4e2a\u6216\u591a\u4e2a**\u62d3\u6251\u6392\u5e8f\u5e8f\u5217\u3002</p> <pre><code>void topu(){\n    for(int i=1;i&lt;=n;i++)if(!in[i])q.push(i);//\u70b9\u7684\u5165\u5ea6\n\n    while(q.size()){\n        int u=q.front();\n\n        cout&lt;&lt;u&lt;&lt;' ';//\u8f93\u51fatopu\u5e8f\n\n        q.pop();\n        if(vis[u])continue;\n        vis[u]=1;\n        for(auto v:e[u]){\n            if(vis[v])continue;\n            in[v]--;\n            if(!in[v])q.push(v);\n        }\n    }\n}\n</code></pre> <p>\u62d3\u6251\u6392\u5e8f\u7684\u5e94\u7528</p> <p>\u62d3\u6251\u6392\u5e8f\u901a\u5e38\u7528\u6765\u201c\u6392\u5e8f\u201d\u5177\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u4efb\u52a1\u3002</p> <p>\u6bd4\u5982\uff0c\u5982\u679c\u7528\u4e00\u4e2aDAG\u56fe\u6765\u8868\u793a\u4e00\u4e2a\u5de5\u7a0b\uff0c\u5176\u4e2d\u6bcf\u4e2a\u9876\u70b9\u8868\u793a\u5de5\u7a0b\u4e2d\u7684\u4e00\u4e2a\u4efb\u52a1\uff0c\u7528\u6709\u5411\u8fb9 \u8868\u793a\u5728\u505a\u4efb\u52a1 B \u4e4b\u524d\u5fc5\u987b\u5148\u5b8c\u6210\u4efb\u52a1 A\u3002\u6545\u5728\u8fd9\u4e2a\u5de5\u7a0b\u4e2d\uff0c\u4efb\u610f\u4e24\u4e2a\u4efb\u52a1\u8981\u4e48\u5177\u6709\u786e\u5b9a\u7684\u5148\u540e\u5173\u7cfb\uff0c\u8981\u4e48\u662f\u6ca1\u6709\u5173\u7cfb\uff0c\u7edd\u5bf9\u4e0d\u5b58\u5728\u4e92\u76f8\u77db\u76fe\u7684\u5173\u7cfb\uff08\u5373\u73af\u8def\uff09\u3002 \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 https://blog.csdn.net/lisonglisonglisong/article/details/45543451</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8E%92%E5%BA%8F/","title":"\u6392\u5e8f","text":"<p>\u4e13\u9898 | \u5206\u6cbb&amp;\u6392\u5e8f&amp;\u504f\u5e8f</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8E%92%E5%BA%8F/#_1","title":"\u6392\u5e8f","text":""},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8E%92%E5%BA%8F/#_2","title":"\u7b80\u5355\u6392\u5e8f","text":"<p>\u5806\u6392\u5e8f</p> <p>\u5168\u90e8\u5165\u4f18\u5148\u961f\u5217\uff0c\u7136\u540e\u5168\u90e8\u51fa\u3002</p> <p>sort</p> <p>\u4e0d\u7528\u591a\u8bf4\u4e86\u3002 </p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8E%92%E5%BA%8F/#_3","title":"\u8ba1\u6570\u6392\u5e8f","text":"<p>\u5148\u7edf\u8ba1\u4e00\u904d<sub>~\u5854\u59ec\u5a05</sub>~\u6876\uff0c\u7136\u540e\u5c06\u6876\u524d\u7f00\u548c\uff0c\u6700\u540e\u4ece\u6876\u4e2d\u5f97\u5230\u6392\u5e8f\u3002</p> <pre><code>for(int i=1;i&lt;=n;i++)cnt[a[i]]++;\nfor(int i=1;i&lt;M;i++)cnt[i]+=cnt{i-1};\nfor(int i=1;i&lt;=n;i++)rk[i]=cnt[a[i]],b[cnt[a[i]]--]=a[i];\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8E%92%E5%BA%8F/#_4","title":"\u57fa\u6570\u6392\u5e8f","text":"<p>\u57fa\u6570\u6392\u5e8f\u901a\u8fc7\u82e5\u5e72\u4e2a\u5173\u952e\u5b57\u6392\u5e8f\u3002\u5047\u8bbe\u5bf9int\u6570\u5b57\u8fdb\u884c\u6392\u5e8f\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u6570\u5b57n\u7684\u4e8c\u8fdb\u5236\u5c0f16\u4f4d\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u592716\u4f4d\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u3002\u7136\u540e\u5148\u5bf9\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u8ba1\u6570\u6392\u5e8f\uff0c\u7136\u540e\u5bf9\u7b2c\u4e00\u5173\u952e\u5b57\u8fdb\u884c\u8ba1\u6570\u6392\u5e8f\u3002\u8fd9\u6837\u7684\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\uff0c\u56e0\u4e3a\u8ba1\u6570\u6392\u5e8f\u7684\u4ece\u524d\u5f80\u540e\uff0c\u5bf9\u4e8e\u503c\u76f8\u540c\u7684\u6570\u76f8\u5bf9\u987a\u5e8f\u4e0d\u4f1a\u6539\u53d8\u7684\u3002</p> <p>\u4ee3\u7801\u53ef\u4ee5\u53c2\u8003\u5b66\u4e60\u7b14\u8bb0 | SA\u540e\u7f00\u6570\u7ec4\u8ba1\u7b97\u51fd\u6570</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8E%92%E5%BA%8F/#_5","title":"\u5f52\u5e76\u6392\u5e8f","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define N 100010\n#define int long long\nint a[N], tmp[N];\nint cnt;\n\nvoid merge(int left, int mid, int right) {\n    int i, j, k;\n    i = left;\n    j = mid + 1;\n    k = left;\n    while (i &lt;= mid &amp;&amp; j &lt;= right) {\n        if (a[i] &gt; a[j]) {\n            cnt += j - k;//\u6216\u8005cnt += mid-i+1;\n            tmp[k++] = a[j++];\n        } else {\n            tmp[k++] = a[i++];\n        }\n    }\n    while (i &lt;= mid)\n        tmp[k++] = a[i++];\n    while (j &lt;= right)\n        tmp[k++] = a[j++];\n\n    for (i = left; i &lt;= right; i++)\n        a[i] = tmp[i];\n}\n\nvoid merge_sort(int left, int right) {\n    int mid;\n    if (left == right)\n        return;\n    mid = (left + right) / 2;\n    merge_sort(left, mid);\n    merge_sort(mid + 1, right);\n    merge(left, mid, right);\n}\n\nsigned main() {\n    int i, n;\n\n    scanf(\"%lld\", &amp;n);\n    for (i = 1; i &lt;= n; i++)\n        scanf(\"%lld\", &amp;a[i]);\n\n    merge_sort(1, n);\n\n    printf(\"%lld\\n\", cnt);\n\n    for(int i=1;i&lt;=n;i++){\n        cout&lt;&lt;a[i]&lt;&lt;' ';\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8E%92%E5%BA%8F/#_6","title":"\u81ea\u5b9a\u4e49\u89c4\u5219\u6392\u5e8f","text":""},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8E%92%E5%BA%8F/#1noip1998","title":"\u4f8b\u9898 #1[NOIP1998 \u63d0\u9ad8\u7ec4] \u62fc\u6570","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u8bbe\u6709 \\(n\\) \u4e2a\u6b63\u6574\u6570 \\(a_1 \\dots a_n\\)\uff0c\u5c06\u5b83\u4eec\u8054\u63a5\u6210\u4e00\u6392\uff0c\u76f8\u90bb\u6570\u5b57\u9996\u5c3e\u76f8\u63a5\uff0c\u7ec4\u6210\u4e00\u4e2a\u6700\u5927\u7684\u6574\u6570\u3002</p> <p>\u6309a+b&gt;b+a\u6392\u5e8f\uff01\u4e0d\u8981\u6309a&gt;b\u6392\u5e8f\uff08hack\uff1a\uff09</p> <pre><code>6\n321 32 407 135 13 217\n</code></pre> <pre><code>4073232121713513\n</code></pre> <p>WA ans\uff1a</p> <p>4073213221713513</p> <pre><code>string s[N];\n\nbool cmp(string a,string b){\n    return a+b&gt;b+a;\n}\nsigned main() {\n//    freopen(\"tree.in\", \"r\", stdin);\n//    freopen(\"tree.out\", \"w\", stdout);\n    cin&gt;&gt;n;\n    for(int i=1;i&lt;=n;i++)cin&gt;&gt;s[i];\n    sort(s+1,s+n+1,cmp);\n    for(int i=1;i&lt;=n;i++)cout&lt;&lt;s[i];\n    return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8E%92%E5%BA%8F/#_7","title":"\u6392\u5e8f","text":"<p>\u4e00\u4e2a\u4e0d\u540c\u7684\u503c\u7684\u5347\u5e8f\u6392\u5e8f\u6570\u5217\u6307\u7684\u662f\u4e00\u4e2a\u4ece\u5de6\u5230\u53f3\u5143\u7d20\u4f9d\u6b21\u589e\u5927\u7684\u5e8f\u5217\uff0c\u4f8b\u5982\uff0c\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u5217 \\(A,B,C,D\\) \u8868\u793a \\(A&lt;B,B&lt;C,C&lt;D\\)\u3002\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u5c06\u7ed9\u4f60\u4e00\u7cfb\u5217\u5f62\u5982 \\(A&lt;B\\) \u7684\u5173\u7cfb\uff0c\u5e76\u8981\u6c42\u4f60\u5224\u65ad\u662f\u5426\u80fd\u591f\u6839\u636e\u8fd9\u4e9b\u5173\u7cfb\u786e\u5b9a\u8fd9\u4e2a\u6570\u5217\u7684\u987a\u5e8f\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6b63\u6574\u6570 \\(n,m\\)\uff0c\\(n\\) \u8868\u793a\u9700\u8981\u6392\u5e8f\u7684\u5143\u7d20\u6570\u91cf\uff0c\\(2\\leq n\\leq 26\\)\uff0c\u7b2c \\(1\\) \u5230 \\(n\\) \u4e2a\u5143\u7d20\u5c06\u7528\u5927\u5199\u7684 \\(A,B,C,D,\\dots\\) \u8868\u793a\u3002\\(m\\) \u8868\u793a\u5c06\u7ed9\u51fa\u7684\u5f62\u5982 \\(A&lt;B\\) \u7684\u5173\u7cfb\u7684\u6570\u91cf\u3002</p> <p>\u63a5\u4e0b\u6765\u6709 \\(m\\) \u884c\uff0c\u6bcf\u884c\u6709 \\(3\\) \u4e2a\u5b57\u7b26\uff0c\u5206\u522b\u4e3a\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\uff0c\u4e00\u4e2a <code>&lt;</code> \u7b26\u53f7\uff0c\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\uff0c\u8868\u793a\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u82e5\u6839\u636e\u524d \\(x\\) \u4e2a\u5173\u7cfb\u5373\u53ef\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u5143\u7d20\u7684\u987a\u5e8f <code>yyy..y</code>\uff08\u5982 <code>ABC</code>\uff09\uff0c\u8f93\u51fa</p> <p><code>Sorted sequence determined after xxx relations: yyy...y.</code></p> <p>\u82e5\u6839\u636e\u524d \\(x\\) \u4e2a\u5173\u7cfb\u5373\u53d1\u73b0\u5b58\u5728\u77db\u76fe\uff08\u5982 \\(A&lt;B,B&lt;C,C&lt;A\\)\uff09\uff0c\u8f93\u51fa</p> <p><code>Inconsistency found after x relations.</code></p> <p>\u82e5\u6839\u636e\u8fd9 \\(m\\) \u4e2a\u5173\u7cfb\u65e0\u6cd5\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u5143\u7d20\u7684\u987a\u5e8f\uff0c\u8f93\u51fa</p> <p><code>Sorted sequence cannot be determined.</code></p> <p>\uff08\u63d0\u793a\uff1a\u786e\u5b9a \\(n\\) \u4e2a\u5143\u7d20\u7684\u987a\u5e8f\u540e\u5373\u53ef\u7ed3\u675f\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u786e\u5b9a\u987a\u5e8f\u4e4b\u540e\u51fa\u73b0\u77db\u76fe\u7684\u60c5\u51b5\uff09</p> <p>\\(2 \\leq n \\leq 26,1 \\leq m \\leq 600\\)\u3002</p> <p>\u8fd9\u9898\u4f60\u53ef\u80fd\u4f1a\u60f3\u5230\u94fe\u8868+\u641c\u7d22\uff0c\u4f46\u8fd9\u6837\u590d\u6742\u5ea6\u4e0d\u592a\u7a33\u5b9a\uff0c\u8981\u526a\u679d\u3002</p> <p>\u5176\u5b9e\u8fd9\u9053\u9898\u662f\u62d3\u6251\u6392\u5e8f\u3002\u6211\u4eec\u6bcf\u6b21\u7ed9\u51fa\u4e00\u4e2a\u5173\u7cfbA&gt;B\u5c31\u6309\u8fde\u8fb9A\u2192B\uff0c\u7136\u540e\u8dd1\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\u3002</p> <p>\u5bf9\u5e94\u6bcf\u6b21\u62d3\u6251\u6392\u5e8f\uff0c\u53ef\u80fd\u6709\u4ee5\u4e0b\u7684\u60c5\u51b5</p> <ul> <li> <p>\u62d3\u6251\u4e0d\u6210\u7acb\uff1a\u63d0\u51fa</p> </li> <li> <p>\u5355\u94fe\uff1a\u53ef\u4ee5\u7ee7\u7eed</p> </li> <li> <p>\u591a\u6761\u94fe\uff1a\u53ef\u80fd\u4f1a\u6709\u591a\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u7ee7\u7eed\u3002</p> </li> </ul> <p>\u5230\u6700\u540e\uff0c\u53ef\u80fd\u4f1a\u6709\u4ee5\u4e0b\u60c5\u51b5</p> <ul> <li> <p>\u5355\u94fe\uff1a\u6839\u636e\u524d \\(x\\) \u4e2a\u5173\u7cfb\u5373\u53ef\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u5143\u7d20\u7684\u987a\u5e8f</p> </li> <li> <p>\u591a\u6761\u94fe\uff1a\u53ef\u80fd\u4f1a\u6709\u591a\u79cd\u60c5\u51b5\uff0c\u82e5\u6839\u636e\u8fd9 \\(m\\) \u4e2a\u5173\u7cfb\u65e0\u6cd5\u786e\u5b9a\u8fd9 \\(n\\) \u4e2a\u5143\u7d20\u7684\u987a\u5e8f\uff0c\u8f93\u51fa<code>Sorted sequence cannot be determined.</code></p> </li> </ul> <p>\u65e0\u975e\u662f\u53ef\u4ee5\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u5904\u7406\u3002</p> <p></p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define rep(l, r, i) for (int i = l, END##i = r; i &lt;= END##i; ++i)\n#define per(r, l, i) for (int i = r, END##i = l; i &gt;= END##i; --i)\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define pii pair&lt;int, int&gt;\n#define ps second\n#define pf first\n\n#define lc(x) (x &lt;&lt; 1)\n#define rc(x) (x &lt;&lt; 1 | 1)\n\n#define X(j) S[j]\n#define Y(j) (dp[j] + (S[j] + L) * (S[j] + L))\n\n#define rd read()\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int N = 6e2 + 15;\nconst int INF = 1e9 + 5;\nconst int MOD = 1 &lt;&lt; 30;\n\nint n, m;\nvector&lt;int&gt; e[N];\nint ind[N];\nint a[N];\nstack&lt;int&gt; s;\nbool vis[N];\nint f;\n\nbool topo(int r) {\n  int sz = 0;\n  bool finished = 1;\n  int t[N];\n  for (int i = 0; i &lt; n; i++) {\n    t[i] = ind[i];\n    if (!ind[i])\n      s.push(i), vis[i] = 1;\n  }\n  while (!s.empty()) {\n    if (s.size() &gt; 1)\n      finished = 0;\n    int k = s.top();\n    a[sz++] = k;\n    s.pop();\n    for (int i = 0; i &lt; e[k].size(); i++)\n      t[e[k][i]]--;\n    for (int i = 0; i &lt; n; i++)\n      if (!t[i] &amp;&amp; !vis[i])\n        s.push(i), vis[i] = 1;\n    ;\n  }\n  if (sz &lt; n)\n    return 0;\n  if (finished &amp;&amp; !f)\n    f = r;\n  return 1;\n}\n\nsigned main() {\n  n = rd, m = rd;\n  for (int i = 1; i &lt;= m; i++) {\n    char c[3];\n    scanf(\"%s\", c);\n    int x = c[0] - 'A', y = c[2] - 'A';\n    e[x].push_back(y);\n    ind[y]++;\n    if (!topo(i)) {\n      cout &lt;&lt; \"Inconsistency found after \" &lt;&lt; i &lt;&lt; \" relations.\";\n      return 0;\n    }else if(f)break;\n    memset(vis, 0, sizeof(vis));\n  }\n  if (f) {\n    cout &lt;&lt; \"Sorted sequence determined after \" &lt;&lt; f &lt;&lt; \" relations: \";\n    for (int i = 0; i &lt; n; i++)\n      cout &lt;&lt; char(a[i] + 'A');\n    cout &lt;&lt; \".\";\n  } else\n    cout &lt;&lt; \"Sorted sequence cannot be determined.\";\n  return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8E%92%E5%BA%8F/#_8","title":"\u7ec3\u4e60","text":"<p>\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u6765\u89e3\u51b3\u7edf\u8ba1\u4eceDAG\u4e2d\u6240\u6709\u6700\u957f\u8def\u5f84\u7684\u6570\u91cf\u3002\u8fd9\u9002\u7528\u4e8e\u5f53\u6211\u4eec\u5728dp\u65f6\u9700\u8981\u77e5\u9053\u6765\u70b9\u7684\u4fe1\u606f\u6765\u66f4\u65b0\u5230\u70b9\u7684\u4fe1\u606f\u65f6\u3002</p> <p>www.luogu.com.cn</p> <p>\u62d3\u6251\u6392\u5e8f\u7684\u57fa\u672c\u6d41\u7a0b\uff1a</p> <ul> <li> <p>\u4f7f\u7528\u961f\u5217q\u52a8\u6001\u7ef4\u62a4\u56fe\u4e2d\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u7684\u7f16\u53f7</p> </li> <li> <p>\u5148\u627e\u5230\u6240\u6709\u5165\u5ea6=0\u7684\u70b9\uff0c\u52a0\u5165q</p> </li> <li> <p>\u77e5\u9053q\u4e3a\u7a7a\uff1a\u4eceq\u4e2d\u62ff\u51fa\u4e00\u4e2a\u70b9\uff0c\u5220\u9664\u8be5\u70b9\u7684\u6240\u6709\u51fa\u8fb9\uff0c\u5e76\u65f6\u523b\u7ef4\u62a4q\u3002</p> </li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%8E%92%E5%BA%8F/#timsort","title":"Timsort\u6392\u5e8f","text":"<p>\\(O(n)\\)\u7684\u6781\u5176\u4f18\u79c0\u6392\u5e8f\uff01</p> <p>timsort\u7684c++\u5b9e\u73b0_timsort c\u8bed\u8a00_\u718a\u638c\u9c7c\u513f\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%9E%84%E9%80%A0/","title":"\u6784\u9020","text":"<p>\u6458\u6284 \u5b66\u4e60\u7b14\u8bb0 | \u6784\u9020</p> <p>\u5728\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff08OI\uff0c\u5373Olympiad in Informatics\uff09\u4e2d\uff0c\u201c\u6784\u9020\u201d\u901a\u5e38\u6307\u7684\u662f\u7b97\u6cd5\u6784\u9020\uff0c\u8fd9\u662f\u4e00\u79cd\u89e3\u9898\u65b9\u6cd5\uff0c\u5b83\u6d89\u53ca\u521b\u5efa\u4e00\u4e2a\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u89e3\u51b3\u65b9\u6848\u6216\u6570\u636e\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u901a\u7528\u7684\u7b97\u6cd5\u6846\u67b6\uff08\u5982\u52a8\u6001\u89c4\u5212\u3001\u8d2a\u5fc3\u7b97\u6cd5\u3001\u5206\u6cbb\u6cd5\u7b49\uff09\u3002</p> <p>\u6784\u9020\u7b97\u6cd5\u7684\u7279\u70b9\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a</p> <ol> <li> <p>\u521b\u65b0\u6027\uff1a\u6784\u9020\u7b97\u6cd5\u5f80\u5f80\u9700\u8981\u9009\u624b\u6839\u636e\u95ee\u9898\u7684\u5177\u4f53\u7279\u70b9\u8fdb\u884c\u521b\u65b0\u6027\u7684\u601d\u8003\uff0c\u8bbe\u8ba1\u51fa\u72ec\u7279\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> </li> <li> <p>\u9488\u5bf9\u6027\uff1a\u6784\u9020\u7b97\u6cd5\u901a\u5e38\u662f\u9488\u5bf9\u7279\u5b9a\u95ee\u9898\u8bbe\u8ba1\u7684\uff0c\u5b83\u4eec\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u5176\u4ed6\u95ee\u9898\u3002</p> </li> <li> <p>\u8bc1\u660e\uff1a\u63d0\u51fa\u6784\u9020\u7b97\u6cd5\u540e\uff0c\u901a\u5e38\u9700\u8981\u8bc1\u660e\u8be5\u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u5373\u8bc1\u660e\u6784\u9020\u51fa\u7684\u89e3\u51b3\u65b9\u6848\u786e\u5b9e\u6ee1\u8db3\u9898\u76ee\u7684\u6240\u6709\u8981\u6c42\u3002 \u4ee5\u4e0b\u662f\u51e0\u79cd\u5e38\u89c1\u7684\u6784\u9020\u65b9\u6cd5\uff1a</p> </li> </ol>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%9E%84%E9%80%A0/#_1","title":"\u76f4\u63a5\u6784\u9020","text":"<p>\u76f4\u63a5\u6784\u9020\u662f\u6307\u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u76f4\u63a5\u6784\u9020\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u89e3\u3002\u4f8b\u5982\uff0c\u5728\u56fe\u8bba\u95ee\u9898\u4e2d\uff0c\u53ef\u80fd\u9700\u8981\u6784\u9020\u4e00\u4e2a\u7279\u6b8a\u7684\u56fe\u6765\u6ee1\u8db3\u67d0\u4e9b\u8def\u5f84\u6216\u8fde\u63a5\u7684\u8981\u6c42\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%9E%84%E9%80%A0/#_2","title":"\u9012\u5f52\u6784\u9020","text":"<p>\u9012\u5f52\u6784\u9020\u662f\u6307\u901a\u8fc7\u9012\u5f52\u7684\u65b9\u5f0f\u9010\u6b65\u6784\u5efa\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u89e3\u3002\u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5206\u6cbb\u7b56\u7565\u4e2d\uff0c\u5c06\u5927\u95ee\u9898\u5206\u89e3\u4e3a\u5c0f\u95ee\u9898\uff0c\u7136\u540e\u9012\u5f52\u5730\u89e3\u51b3\u5c0f\u95ee\u9898\uff0c\u5e76\u5c06\u5b83\u4eec\u7ec4\u5408\u8d77\u6765\u5f97\u5230\u6700\u7ec8\u89e3\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%9E%84%E9%80%A0/#_3","title":"\u5012\u63a8\u6784\u9020","text":"<p>\u5012\u63a8\u6784\u9020\u662f\u4ece\u6700\u7ec8\u7ed3\u679c\u51fa\u53d1\uff0c\u9006\u5411\u601d\u8003\u5982\u4f55\u4e00\u6b65\u6b65\u6784\u5efa\u51fa\u8fd9\u4e2a\u7ed3\u679c\u3002\u8fd9\u79cd\u65b9\u6cd5\u5e38\u7528\u4e8e\u4e00\u4e9b\u9700\u8981\u9006\u5411\u601d\u7ef4\u7684\u95ee\u9898\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%9E%84%E9%80%A0/#_4","title":"\u6570\u5b66\u6784\u9020","text":"<p>\u6570\u5b66\u6784\u9020\u662f\u5229\u7528\u6570\u5b66\u77e5\u8bc6\u6765\u6784\u9020\u89e3\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5728\u7ec4\u5408\u6570\u5b66\u95ee\u9898\u4e2d\uff0c\u53ef\u80fd\u9700\u8981\u6784\u9020\u4e00\u4e2a\u6392\u5217\u6216\u7ec4\u5408\u6765\u6ee1\u8db3\u7279\u5b9a\u7684\u6570\u5b66\u6027\u8d28\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%9E%84%E9%80%A0/#_5","title":"\u968f\u673a\u5316\u6784\u9020","text":"<p>\u968f\u673a\u5316\u6784\u9020\u662f\u5229\u7528\u968f\u673a\u6027\u6765\u6784\u9020\u89e3\u7684\u65b9\u6cd5\u3002\u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u90a3\u4e9b\u96be\u4ee5\u627e\u5230\u786e\u5b9a\u89e3\u7684\u95ee\u9898\uff0c\u901a\u8fc7\u968f\u673a\u5316\u624b\u6bb5\u6765\u5bfb\u627e\u4e00\u4e2a\u8fd1\u4f3c\u89e3\u3002</p> <p>\u6784\u9020\u7b97\u6cd5\u7684\u4f8b\u5b50\uff1a</p> <ul> <li> <p>\u6784\u9020\u4e00\u4e2a\u7279\u6b8a\u7684\u5e8f\u5217\uff1a\u7ed9\u5b9a\u4e00\u4e9b\u6761\u4ef6\uff0c\u6784\u9020\u4e00\u4e2a\u5e8f\u5217\u4f7f\u5f97\u8fd9\u4e2a\u5e8f\u5217\u6ee1\u8db3\u6240\u6709\u6761\u4ef6\u3002</p> </li> <li> <p>\u6784\u9020\u4e00\u4e2a\u7279\u6b8a\u7684\u56fe\uff1a\u7ed9\u5b9a\u4e00\u4e9b\u8def\u5f84\u6216\u8fde\u63a5\u7684\u8981\u6c42\uff0c\u6784\u9020\u4e00\u4e2a\u56fe\u4f7f\u5f97\u8fd9\u4e2a\u56fe\u6ee1\u8db3\u6240\u6709\u8981\u6c42\u3002</p> </li> <li> <p>\u6784\u9020\u4e00\u4e2a\u7b97\u6cd5\u7684\u8bc1\u660e\uff1a\u6709\u65f6\u5019\uff0c\u6784\u9020\u4e00\u4e2a\u7279\u6b8a\u7684\u8f93\u5165\u6216\u60c5\u51b5\u6765\u8bc1\u660e\u67d0\u4e2a\u7b97\u6cd5\u7684\u6027\u8d28\u3002 \u6784\u9020\u7b97\u6cd5\u5728OI\u7ade\u8d5b\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4ec5\u8003\u5bdf\u9009\u624b\u7684\u7f16\u7a0b\u80fd\u529b\uff0c\u8fd8\u8003\u5bdf\u4ed6\u4eec\u7684\u521b\u9020\u529b\u548c\u5bf9\u95ee\u9898\u7684\u6df1\u5165\u7406\u89e3\u3002</p> </li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/","title":"\u70b9\u5206\u6cbb","text":"<p>\u6811\u5206\u6cbb\u6709\u70b9\u5206\u6cbb\u548c\u8fb9\u5206\u6cbb\u4e24\u79cd\uff0c\u9002\u5408\u5904\u7406\u5927\u89c4\u6a21\u6811\u4e0a\u8def\u5f84\u4fe1\u606f\u95ee\u9898\u3002</p> <p>\u6811\u4e0a\u7684\u8def\u5f84\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff0e</p> <p>1 \uff0c\u7ecf\u8fc7\u6839\u8282\u70b9\u7684\u8def\u5f84</p> <p>2 \uff0e\u4e0d\u7ecf\u8fc7\u6839\u8282\u70b9\u7684\u8def\u5f84</p> <p></p> <p></p> <p>\u5bf9\u4e8e\u4e0d\u7ecf\u8fc7\u6839\u8282\u70b9\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5bf9\u5b50\u6811\u4e0d\u65ad\u5206\u6cbb\uff0c\u8f6c\u5316\u4e3a\u7ecf\u8fc7\u6839\u8282\u70b9\u7684\u8def\u5f84\u3002</p> <p></p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#_2","title":"\u91cd\u5fc3","text":"<p>\u5728\u4e00\u68f5\u6811\u4e2d\u5b58\u5728\u82e5\u5e72\u4e2a\u70b9 \\(G\\)\uff0c\u5728\u5220\u53bb\u8fd9\u4e2a\u70b9 \\(G\\) \u540e\u8fd9\u68f5\u6811\u88ab\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\uff0c\u5e76\u4e14\u8fd9\u4e9b\u8fde\u901a\u5757\u91cc\u6240\u5305\u542b\u7684\u70b9\u6570\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002</p> <p>\u6c42\u6cd5\uff0c\u6c42\u5f97\u7684\u91cd\u5fc3\u5b58\u5728<code>rt</code>\u91cc</p> <pre><code>void gtrt(int u,int fa){\n    siz[u]=1;//siz\u8bb0\u5f55\u4ee5\u70b9i\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f,\u9996\u5148\u8981\u628a\u81ea\u5df1\u52a0\u4e0a\u53bb \n    int s=0;\n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[i];\n        if(v==fa||del[u])continue;\n        gtrt(v,u);//\u5411\u4e0b\u9012\u5f52\u626b\u63cf\u5b50\u6811\uff0c\u83b7\u53d6\u5b50\u6811\u7684\u5927\u5c0f \n        siz[u]+=siz[v];//\u5c06\u81ea\u5df1\u7684\u5927\u5c0f\u4e0e\u5b50\u6811\u7d2f\u52a0(\u56e0\u4e3a\u4e4b\u524d\u53ef\u80fd\u8ba1\u7b97\u4e86\u5de6\u5b50\u6811\u7684,\u73b0\u5728\u8981\u5c06\u53f3\u5b50\u6811\u7684\u52a0\u4e0a\u53bb) \n        s=max(s,siz[v]);//\u8bb0\u5f55\u81ea\u5df1\u6700\u5927(\u5305\u542b\u8282\u70b9\u6700\u591a)\u7684\u513f\u5b50 \n    }\n    s=max(s,sum-siz[u]);//sum\u662f\u6574\u68f5\u6811\u7684\u5927\u5c0f,\u8fd9\u91cc\u5c31\u5bf9\u5e94\u4e86\u5b9a\u4e49\u91cc\u7684\"\u8fd9\u4e9b\u8fde\u901a\u5757\u91cc\u6240\u5305\u542b\u7684\u70b9\u6570\u7684\u6700\u5927\u503c\" \n    if(s&lt;mxs)mxs=s,rt=u;//\u5982\u679c\u627e\u5230\u66f4\u5c0f\u7684,\u5219\u66f4\u65b0\u6700\u5c0f\u503c\u548c\u91cd\u5fc3(\u5f85\u5b9a\u7684) \u8fd9\u91cc\u5c31\u5bf9\u5e94\u4e86\u5b9a\u4e49\u91cc\u7684\"...\u6700\u5927\u503c\u6700\u5c0f\" \n}\n</code></pre> <p>\u4e3e\u4f8b</p> <p></p> <p>\u5f53\u8d70\u5230u=2\u65f6\uff0c\u5f53\u8d70\u5230\u6700\u540e\u7684if\u65f6\uff0csizu\u5b58\u7684\u662f\u4ee52\u4e3a\u6839\u7684\u6811\uff082,5,6,9,10\uff09\u7684\u5927\u5c0f\uff0csum-siz[u]\u5c31\u662f\u53e6\u4e00\u4e2a\u90e8\u5206\uff08\u53f3\u90e8\u5206 1,3,4,7,8\uff09\u7684\u5927\u5c0f\u3002</p> <p>\u4e3a\u4ec0\u4e48\u8981\u4ece\u91cd\u5fc3\u5904\u5206\u6cbb\uff1f</p> <p></p> <p>\u800c\u628a\u91cd\u5fc3\u4f5c\u4e3a\u6839\uff0c\u5f97\u5230\u7684\u6811\u6700\u5747\u8861\uff0c\u590d\u6742\u5ea6\u6700\u4f4e\uff0c\u5982\u56fe</p> <p></p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#_3","title":"\u70b9\u5206\u6cbb","text":"<p>\u70b9\u5206\u6cbb\u7684\u56db\u6b65\u64cd\u4f5c\uff1a</p> <p>1 \uff0e\u627e\u51fa\u6811\u7684\u91cd\u5fc3\u505a\u6839\uff0c getroot()\uff08\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\uff09</p> <p>2 \uff0e\u6c42\u51fa\u5b50\u6811\u4e2d\u7684\u5404\u70b9\u5230\u6839\u7684\u8ddd\u79bb\uff0cgetdis()</p> <p>3 \uff0e\u5bf9\u5f53\u524d\u6811\u7edf\u8ba1\u7b54\u6848\uff0c calc()</p> <p>4 \uff0c\u5206\u6cbb\u5404\u4e2a\u5b50\u6811\uff0c\u91cd\u590d\u4ee5\u4e0a\u64cd\u4f5c\uff0cdivide()</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#_4","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u5b9a\u4e00\u68f5\u6709 \\(n\\) \u4e2a\u70b9\u7684\u6811\uff0c\u8be2\u95ee\u6811\u4e0a\u8ddd\u79bb\u4e3a \\(k\\) \u7684\u70b9\u5bf9\u662f\u5426\u5b58\u5728\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#_5","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6570 \\(n,m\\)\u3002</p> <p>\u7b2c \\(2\\) \u5230\u7b2c \\(n\\) \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 \\(u, v, w\\)\uff0c\u4ee3\u8868\u6811\u4e0a\u5b58\u5728\u4e00\u6761\u8fde\u63a5 \\(u\\) \u548c \\(v\\) \u8fb9\u6743\u4e3a \\(w\\) \u7684\u8def\u5f84\u3002</p> <p>\u63a5\u4e0b\u6765 \\(m\\) \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570 \\(k\\)\uff0c\u4ee3\u8868\u4e00\u6b21\u8be2\u95ee\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#_6","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4ee3\u8868\u7b54\u6848\uff0c\u5b58\u5728\u8f93\u51fa <code>AYE</code>\uff0c\u5426\u5219\u8f93\u51fa <code>NAY</code>\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#1","title":"\u6837\u4f8b #1","text":""},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#1_1","title":"\u6837\u4f8b\u8f93\u5165 #1","text":"<pre><code>2 1\n1 2 2\n2\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#1_2","title":"\u6837\u4f8b\u8f93\u51fa #1","text":"<pre><code>AYE\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#_7","title":"\u63d0\u793a","text":""},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#_8","title":"\u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a","text":"<ul> <li> <p>\u5bf9\u4e8e \\(30\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(n\\leq 100\\)\u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(60\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(n\\leq 1000\\)\uff0c\\(m\\leq 50\\) \u3002</p> </li> <li> <p>\u5bf9\u4e8e \\(100\\%\\) \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 \\(1 \\leq n\\leq 10^4\\)\uff0c\\(1 \\leq m\\leq 100\\)\uff0c\\(1 \\leq k \\leq 10^7\\)\uff0c\\(1 \\leq u, v \\leq n\\)\uff0c\\(1 \\leq w \\leq 10^4\\)\u3002</p> </li> </ul>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#code","title":"\u6709\u8bef\u7684code","text":"<pre><code>/*////////ACACACACACACAC///////////\nCode By Ntsc\n/*////////ACACACACACACAC///////////\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\nconst int N=1e4+5;\nconst int INF=1e7+5;\n\n\nvector &lt;int&gt; e[N*2],w[N*2];\nint del[N],siz[N],mxs,sum,rt;//del\u6807\u8bb0\uff0c\u8bb0\u5f55\u5728\u626b\u63cf\u5b50\u6811\u65f6\u628a\u6839\u5220\u6389\uff0c\u963b\u6b62\u5f80\u6839\u4e0a\u8d70 siz\u8bb0\u5f55\u4ee5\u70b9i\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f \nint dis[N],d[N],cnt;//dis\u8bb0\u5f55\u70b9i\u5230\u6839\u7684\u8ddd\u79bb cnt\u8bb0\u5f55\u5df2\u7ecf\u5904\u7406\u4e86\u591a\u5c11 \nint ans[N],q[INF],judge[INF];//judge\u8bb0\u5f55\u957f\u5ea6\u4e3ai\u7684\u8def\u5f84\u662f\u5426\u5b58\u5728\nint ask[N],m,n; \n\nvoid calc(int u);\nvoid add(int x,int y,int z){\n    e[x].push_back(y);\n    w[x].push_back(z);\n}\nvoid gtrt(int u,int fa){\n    siz[u]=1;//siz\u8bb0\u5f55\u4ee5\u70b9i\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f,\u9996\u5148\u8981\u628a\u81ea\u5df1\u52a0\u4e0a\u53bb \n    int s=0;\n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[u][i];\n        if(v==fa||del[v])continue;\n        gtrt(v,u);//\u5411\u4e0b\u9012\u5f52\u626b\u63cf\u5b50\u6811\uff0c\u83b7\u53d6\u5b50\u6811\u7684\u5927\u5c0f \n        siz[u]+=siz[v];//\u5c06\u81ea\u5df1\u7684\u5927\u5c0f\u4e0e\u5b50\u6811\u7d2f\u52a0(\u56e0\u4e3a\u4e4b\u524d\u53ef\u80fd\u8ba1\u7b97\u4e86\u5de6\u5b50\u6811\u7684,\u73b0\u5728\u8981\u5c06\u53f3\u5b50\u6811\u7684\u52a0\u4e0a\u53bb) \n        s=max(s,siz[v]);//\u8bb0\u5f55\u81ea\u5df1\u6700\u5927(\u5305\u542b\u8282\u70b9\u6700\u591a)\u7684\u513f\u5b50 \n    }\n    s=max(s,sum-siz[u]);//sum\u662f\u6574\u68f5\u6811\u7684\u5927\u5c0f,\u8fd9\u91cc\u5c31\u5bf9\u5e94\u4e86\u5b9a\u4e49\u91cc\u7684\"\u8fd9\u4e9b\u8fde\u901a\u5757\u91cc\u6240\u5305\u542b\u7684\u70b9\u6570\u7684\u6700\u5927\u503c\" \n    if(s&lt;mxs)mxs=s,rt=u;//\u5982\u679c\u627e\u5230\u66f4\u5c0f\u7684,\u5219\u66f4\u65b0\u6700\u5c0f\u503c\u548c\u91cd\u5fc3(\u5f85\u5b9a\u7684) \u8fd9\u91cc\u5c31\u5bf9\u5e94\u4e86\u5b9a\u4e49\u91cc\u7684\"...\u6700\u5927\u503c\u6700\u5c0f\" \n}\nvoid gtdis(int u,int fa){\n    dis[++cnt]=d[u];\n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[u][i];\n        if(v==fa||del[v])continue;\n        d[v]=d[u]/\u7528fa\u5230\u6839\u7684\u8ddd\u79bb\u52a0\u4e0afa\u5230u\u7684\u8ddd\u79bb \n        gtdis(v,u);\n    }\n}\nvoid divide(int u){//\u5206\u6cbb \n\n    calc(u);\n    del[u]=1;\n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[u][i];\n        if(del[v])continue;\n        mxs=sum=siz[v];\n        gtrt(v,0);\n        divide(rt);//\u4ece\u6811\u7684\u91cd\u5fc3\u5f00\u59cb\u5206\u6cbb \n    }\n}\nvoid calc(int u){\n    judge[0]=1;\n    int p=0;//\u8bb0\u5f55\u591a\u5c11\u4e2ajudge\u88ab\u66f4\u65b0\u4e86,\u540e\u9762\u8981\u6e05\u7a7a,\u8fd9\u6837\u5c31\u4e0d\u7528memset\u4e86 \n\n    for(int i=0;i&lt;e[u].size();i++){\n        int v=e[u][i];\n        if(del[v])continue;\n        cnt=0;\n        d[v]=w[u][i];\n        gtdis(v,u);\n\n        for(int j=1;j&lt;=cnt;j++){\n            for(int k=1;k&lt;=m;k++){//\u626b\u63cf\u6240\u6709\u8be2\u95ee,\u5224\u5b9a\u7b54\u6848. \u5f53\u7136,\u5982\u679c\u8981\u628a\u6240\u6709\u957f\u5ea6\u662f\u5426\u5b58\u5728\u5904\u7406\u51fa\u6765\u4e5f\u53ef\u4ee5 \n                if(ask[k]&gt;=dis[j])ans[k]|=judge[ask[k]-dis[j]];//\u76ee\u524d\u5df2\u7ecf\u6709\u4e00\u6761\u957f\u5ea6\u4e3adis[j]\u7684\u8def\u7ebf\u4e86,\u5f53\u626b\u63cf\u5230\u8be2\u95ee\u662f\u5426\u6709\u957f\u5ea6\u4e3aask[k]\u7684\u8def\u7ebf\u65f6,\u53ea\u8981\u5224\u5b9a\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3aask[k]-dis[j]\u7684\u8def\u7ebf(\u5728\u4e4b\u524d\u626b\u63cf\u8fc7\u7684)\u5c31\u53ef\u4ee5\n                //\u5f53\u7136,\u53ea\u6709ask[k]&gt;=dis[j]\u624d\u6709\u53ef\u80fd \n            }\n        }\n\n        for(int j=1;j&lt;=cnt;j++){\n            if(dis[j]&lt;INF){//\u8be2\u95ee\u7684\u957f\u5ea6\u6700\u957f\u4e3aINF,\u8d85\u8fc7\u5b83\u5c31\u6ca1\u6709\u5fc5\u8981\u8ba1\u7b97\u4e86 \n                q[+/\u8d70\u5b8c\u8fd9\u4e2a\u5b50\u6811,\u5c06\u8981\u5230\u4e0b\u4e00\u4e2a\u5b50\u6811\u65f6,\u624d\u66f4\u65b0judge\u6570\u7ec4,\u56e0\u4e3a\u5728\u4e0a\u65b9\u7684\u5224\u5b9a\u65f6\"\u662f\u5426\u5b58\u5728\u957f\u5ea6\u4e3aask[k]-dis[j]\u7684\u8def\u7ebf\"\u7684\u8def\u7ebf\u5fc5\u987b\u4e0e\u5f53\u524d\u6b63\u5728\u626b\u63cf\u7684\u8def\u7ebf\u6ca1\u6709\u91cd\u53e0\u90e8\u5206 \n//              q[++p]=dis[j], judge[q[p]]=1;\n            }\n        }\n        //\u6e05\u7a7a\u6570\u636e ,\u590d\u6742\u5ea6\u5c0f \n        for(int i=1;i&lt;=p;i++)judge[q[i]]=0;\n    }\n}\nsigned main(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;n;i++){\n        int u,v,ww;\n        cin&gt;&gt;u&gt;&gt;v&gt;&gt;ww;\n        add(u,v,ww);add(v,u,ww);\n    }\n    for(int i=1;i&lt;=m;i++){\n        cin&gt;&gt;ask[i];\n    }\n\n    mxs=sum=n;\n    gtrt(1,0);\n    gtrt(rt,0);\n    divide(rt);//\u79bb\u7ebf\u7b97\u6cd5 \n\n    for(int i=1;i&lt;=m;i++){\n        if(ans[i])cout&lt;&lt;\"AYE\"&lt;&lt;endl;\n        else cout&lt;&lt;\"NAY\"&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E6%A0%91%E4%B8%8A%E5%88%86%E6%B2%BB/#std","title":"Std","text":"<pre><code>#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\n\nconst int N=10005;\nconst int INF=10000005;\nstruct node{int v,w,ne;}e[N&lt;&lt;1];\nint h[N],idx; //\u52a0\u8fb9\nint del[N],siz[N],mxs,sum,root;//\u6c42\u6839\nint dis[N],d[N],cnt; //\u6c42\u8ddd\u79bb\nint ans[N],q[INF],judge[INF];//\u6c42\u8def\u5f84\nint n,m,ask[N];\n\nvoid add(int u,int v,int w){\n  e[++idx].v=v; e[idx].w=w;  \n  e[idx].ne=h[u]; h[u]=idx;\n}\nvoid getroot(int u,int fa){\n  siz[u]=1; \n  int s=0;\n  for(int i=h[u];i;i=e[i].ne){\n    int v=e[i].v;\n    if(v==fa||del[v])continue;\n    getroot(v,u);\n    siz[u]+=siz[v];\n    s=max(s,siz[v]);\n  }\n  s=max(s,sum-siz[u]);\n  if(s&lt;mxs) mxs=s, root=u;\n}\nvoid getdis(int u,int fa){\n  dis[++cnt]=d[u];\n  for(int i=h[u];i;i=e[i].ne){\n    int v=e[i].v;\n    if(v==fa||del[v])continue;\n    d[v]=d[u]+e[i].w;\n    getdis(v,u);\n  }\n}\nvoid calc(int u){\n  judge[0]=1;\n  int p=0;\n  // \u8ba1\u7b97\u7ecf\u8fc7\u6839u\u7684\u8def\u5f84\n  for(int i=h[u];i;i=e[i].ne){\n    int v=e[i].v;\n    if(del[v])continue;\n    // \u6c42\u51fa\u5b50\u6811v\u7684\u5404\u70b9\u5230u\u7684\u8ddd\u79bb\n    cnt=0; \n    d[v]=e[i].w;\n    getdis(v,u); \n    // \u679a\u4e3e\u8ddd\u79bb\u548c\u8be2\u95ee\uff0c\u5224\u5b9a\u7b54\u6848\n    for(int j=1;j&lt;=cnt;++j)\n      for(int k=1;k&lt;=m;++k)\n        if(ask[k]&gt;=dis[j])\n          ans[k]|=judge[ask[k]-dis[j]];\n    // \u8bb0\u5f55\u5408\u6cd5\u8ddd\u79bb      \n    for(int j=1;j&lt;=cnt;++j)\n      if(dis[j]&lt;INF)\n        q[++p]=dis[j], judge[q[p]]=1;\n  }\n  // \u6e05\u7a7a\u8ddd\u79bb\u6570\u7ec4\n  for(int i=1;i&lt;=p;++i) judge[q[i]]=0;  \n}\nvoid divide(int u){\n  // \u8ba1\u7b97\u7ecf\u8fc7\u6839u\u7684\u8def\u5f84\n  calc(u); \n  // \u5bf9u\u7684\u5b50\u6811\u8fdb\u884c\u5206\u6cbb\n  del[u]=1;\n  for(int i=h[u];i;i=e[i].ne){\n    int v=e[i].v;\n    if(del[v])continue;\n    mxs=sum=siz[v];\n    getroot(v,0); //\u6c42\u6839\n    divide(root); //\u5206\u6cbb\n  }\n}\nint main(){\n  scanf(\"%d%d\",&amp;n,&amp;m);\n  for(int i=1;i&lt;n;++i){\n    int u,v,w;\n    scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w);\n    add(u,v,w);add(v,u,w);\n  }\n  for(int i=1;i&lt;=m;++i)\n    scanf(\"%d\",&amp;ask[i]);\n  mxs=sum=n;\n  getroot(1,0); \n  getroot(root,0); //\u91cd\u6784siz[] \n  divide(root);\n  for(int i=1;i&lt;=m;++i)\n    ans[i]?puts(\"AYE\"):puts(\"NAY\");\n  return 0;\n}\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/","title":"\u722c\u5c71\u7b97\u6cd5\u4e0e\u6a21\u62df\u9000\u706b","text":"<p>\u722c\u5c71\u7b97\u6cd5\uff0c\u6a21\u62df\u9000\u706b</p> <p></p> <p>\u6838\u5fc3 \uff1a SA \u7b97\u6cd5\u7684 Metropolis \u51c6\u5219\u5141\u8bb8\u63a5\u4e00\u5b9a\u7684\u6076\u5316\u89e3</p> <p></p> <p>\u5373\u6211\u4eec\u5728\u6e29\u5ea6\u5927\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5192\u9669\u5730\u5bfb\u6c42\u8f83\u5dee\u7684\u89e3\u3002\u5f53\u6211\u4eec\u7684\u6e29\u5ea6\u6bd4\u8f83\u4f4e\u65f6\uff0c\u5c31\u4e0d\u53bb\u5192\u9669\u4e86\u3002</p> <p>\u662f\u4e00\u4e2a\u7384\u5b66\u7b97\u6cd5\uff0c\u4e0d\u7528\u6df1\u7a76\u3002</p> <p>www.luogu.com.cn</p> <p></p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#t_0","title":"T_0","text":""},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#metropolis","title":"Metropolis \u51c6\u5219","text":"<p>\u5bf9\u4e8e\u51fd\u6570exp\uff0c\u6211\u4eec\u8fd9\u6837\u5199</p> <p></p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#_2","title":"\u6e29\u5ea6\u4e0b\u964d","text":""},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#_3","title":"\u7b97\u6cd5\u7ed3\u675f","text":""},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#_4","title":"\u6a21\u62df\u9000\u706b\u5b66\u4e60\u7b14\u8bb0","text":""},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#1","title":"1.\u5173\u4e8e\u6a21\u62df\u9000\u706b","text":"<p>\u5e94\u8be5\u6709\u4e0d\u5c11\u5c0f\u4f19\u4f34\u4eec\u8fd8\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6a21\u62df\u9000\u706b\u5427\uff0c\u90a3\u6211\u4eca\u5929\u5c31\u6765\u7ed9\u5927\u5bb6\u79d1\u666e\u79d1\u666e\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#_5","title":"\u5b9a\u4e49","text":"<p>\u6a21\u62df\u9000\u706b\u7b97\u6cd5\uff08Simulate Anneal\uff0cSA\uff09\u662f\u4e00\u79cd\u901a\u7528\u6982\u7387\u6f14\u7b97\u6cd5\uff0c\u7528\u6765\u5728\u4e00\u4e2a\u5927\u7684\u641c\u5bfb\u7a7a\u95f4\u5185\u627e\u5bfb\u547d\u9898\u7684\u6700\u4f18\u89e3\u3002\u6a21\u62df\u9000\u706b\u662f\u7531S.Kirkpatrick, C.D.Gelatt\u548cM.P.Vecchi\u57281983\u5e74\u6240\u53d1\u660e\u7684\u3002V.\u010cern\u00fd\u57281985\u5e74\u4e5f\u72ec\u7acb\u53d1\u660e\u6b64\u6f14\u7b97\u6cd5\u3002\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u662f\u89e3\u51b3TSP\u95ee\u9898\u7684\u6709\u6548\u65b9\u6cd5\u4e4b\u4e00\u3002</p> <p>\u6a21\u62df\u9000\u706b\u7684\u51fa\u53d1\u70b9\u662f\u57fa\u4e8e\u7269\u7406\u4e2d\u56fa\u4f53\u7269\u8d28\u7684\u9000\u706b\u8fc7\u7a0b\u4e0e\u4e00\u822c\u7ec4\u5408\u4f18\u5316\u95ee\u9898\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u3002\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u662f\u4e00\u79cd\u901a\u7528\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u5176\u7269\u7406\u9000\u706b\u8fc7\u7a0b\u7531\u52a0\u6e29\u8fc7\u7a0b\u3001\u7b49\u6e29\u8fc7\u7a0b\u3001\u51b7\u5374\u8fc7\u7a0b\u8fd9\u4e09\u90e8\u5206\u7ec4\u6210\u3002</p> <pre><code>                 --------\u6765\u81ea\u767e\u5ea6\u767e\u79d1\n</code></pre>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#_6","title":"\u8bf4\u660e","text":"<p>\u5b9e\u9645\u4e0a\u6a21\u62df\u9000\u706b\u662f\u4e00\u4e2a\u5f88\u597d\u7406\u89e3\u7684\u4e1c\u897f\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u5c31\u662f\u5c06\u70ed\u529b\u5b66\u7684\u7406\u8bba\u5957\u7528\u5230\u7edf\u8ba1\u5b66\u4e0a\uff0c\u5c06\u641c\u5bfb\u7a7a\u95f4\u5185\u6bcf\u4e00\u70b9\u60f3\u50cf\u6210\u7a7a\u6c14\u5185\u7684\u5206\u5b50\uff1b\u5206\u5b50\u7684\u80fd\u91cf\uff0c\u5c31\u662f\u5b83\u672c\u8eab\u7684\u52a8\u80fd\uff1b\u800c\u641c\u5bfb\u7a7a\u95f4\u5185\u7684\u6bcf\u4e00\u70b9\uff0c\u4e5f\u50cf\u7a7a\u6c14\u5206\u5b50\u4e00\u6837\u5e26\u6709\u201c\u80fd\u91cf\u201d\uff0c\u4ee5\u8868\u793a\u8be5\u70b9\u5bf9\u547d\u9898\u7684\u5408\u9002\u7a0b\u5ea6\u3002\u6f14\u7b97\u6cd5\u5148\u4ee5\u641c\u5bfb\u7a7a\u95f4\u5185\u4e00\u4e2a\u4efb\u610f\u70b9\u4f5c\u8d77\u59cb\uff1a\u6bcf\u4e00\u6b65\u5148\u9009\u62e9\u4e00\u4e2a\u201c\u90bb\u5c45\u201d\uff0c\u7136\u540e\u518d\u8ba1\u7b97\u4ece\u73b0\u6709\u4f4d\u7f6e\u5230\u8fbe\u201c\u90bb\u5c45\u201d\u7684\u6982\u7387\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#2","title":"2.\u6a21\u62df\u9000\u706b\u7684\u57fa\u672c\u8981\u7d20","text":""},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#_7","title":"\u72b6\u6001\u7a7a\u95f4\u4e0e\u72b6\u6001\u4ea7\u751f\u51fd\u6570","text":"<p>(1).\u641c\u7d22\u7a7a\u95f4\uff08\u53c8\u53eb\u72b6\u6001\u7a7a\u95f4\uff09\u3002\u4e00\u822c\u8303\u56f4\u6bd4\u8f83\u5927\uff0c\u4e8b\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u53ef\u884c\u89e3\u7684\u96c6\u5408\u3002</p> <p>(2).\u72b6\u6001\u51fd\u6570\u3002\u72b6\u6001\u51fd\u6570\u5c06\u51b3\u5b9a\u4f60\u662f\u5426\u8981\u9009\u7528\u5f53\u524d\u7684\u89e3\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u597d\u7684\u9000\u706b\u6765\u8bf4\uff0c\u72b6\u6001\u51fd\u6570\u7684\u641c\u7d22\u7a7a\u95f4\u5e94\u8be5\u8db3\u591f\u5927\u3002</p> <p>(3).\u5019\u9009\u89e3\u3002\u4e00\u822c\u91c7\u7528\u968f\u673a\u6570\u6765\u5728\u4e00\u5b9a\u5bc6\u5ea6\u5185\u968f\u673a\u9009\u53d6\u3002</p> <p>(4).\u6982\u7387\u5206\u5e03\u3002\u5927\u591a\u91c7\u53d6\u5747\u5300\u5206\u5e03\u6216\u6307\u6570\u5206\u5e03\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#_8","title":"\u72b6\u6001\u8f6c\u79fb\u6982\u7387","text":"<p>(1).\u72b6\u6001\u8f6c\u79fb\u6982\u7387\u662f\u6307\u4ece\u4e00\u4e2a\u72b6\u6001\u5411\u53e6\u4e00\u4e2a\u72b6\u6001\u7684\u8f6c\u79fb\u6982\u7387\u3002</p> <p>(2).\u901a\u4fd7\u7684\u7406\u89e3\u662f\u63a5\u53d7\u4e00\u4e2a\u65b0\u89e3\u4e3a\u5f53\u524d\u89e3\u7684\u6982\u7387\u3002</p> <p>(3).\u5b83\u4e0e\u5f53\u524d\u7684\u6e29\u5ea6\u53c2\u6570T\u6709\u5173\uff0c\u968f\u6e29\u5ea6\u4e0b\u964d\u800c\u51cf\u5c0f\u3002</p> <p>(4).\u4e00\u822c\u91c7\u7528Metropolis\u51c6\u5219\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#3","title":"3.\u6a21\u62df\u9000\u706b\u6a21\u578b","text":"<p>\u7b2c\u4e00\u6b65\u662f\u7531\u4e00\u4e2a\u4ea7\u751f\u51fd\u6570\u4ece\u5f53\u524d\u89e3\u4ea7\u751f\u4e00\u4e2a\u4f4d\u4e8e\u89e3\u7a7a\u95f4\u7684\u65b0\u89e3\uff1b\u4e3a\u4fbf\u4e8e\u540e\u7eed\u7684\u8ba1\u7b97\u548c\u63a5\u53d7\uff0c\u51cf\u5c11\u7b97\u6cd5\u8017\u65f6\uff0c\u901a\u5e38\u9009\u62e9\u7531\u5f53\u524d\u65b0\u89e3\u7ecf\u8fc7\u7b80\u5355\u5730\u53d8\u6362\u5373\u53ef\u4ea7\u751f\u65b0\u89e3\u7684\u65b9\u6cd5\uff0c\u5982\u5bf9\u6784\u6210\u65b0\u89e3\u7684\u5168\u90e8\u6216\u90e8\u5206\u5143\u7d20\u8fdb\u884c\u7f6e\u6362\u3001\u4e92\u6362\u7b49\uff0c\u6ce8\u610f\u5230\u4ea7\u751f\u65b0\u89e3\u7684\u53d8\u6362\u65b9\u6cd5\u51b3\u5b9a\u4e86\u5f53\u524d\u65b0\u89e3\u7684\u90bb\u57df\u7ed3\u6784\uff0c\u56e0\u800c\u5bf9\u51b7\u5374\u8fdb\u5ea6\u8868\u7684\u9009\u53d6\u6709\u4e00\u5b9a\u7684\u5f71\u54cd\u3002</p> <p>\u7b2c\u4e8c\u6b65\u662f\u8ba1\u7b97\u4e0e\u65b0\u89e3\u6240\u5bf9\u5e94\u7684\u76ee\u6807\u51fd\u6570\u5dee\u3002\u56e0\u4e3a\u76ee\u6807\u51fd\u6570\u5dee\u4ec5\u7531\u53d8\u6362\u90e8\u5206\u4ea7\u751f\uff0c\u6240\u4ee5\u76ee\u6807\u51fd\u6570\u5dee\u7684\u8ba1\u7b97\u6700\u597d\u6309\u589e\u91cf\u8ba1\u7b97\u3002\u4e8b\u5b9e\u8868\u660e\uff0c\u5bf9\u5927\u591a\u6570\u5e94\u7528\u800c\u8a00\uff0c\u8fd9\u662f\u8ba1\u7b97\u76ee\u6807\u51fd\u6570\u5dee\u7684\u6700\u5feb\u65b9\u6cd5\u3002</p> <p>\u7b2c\u4e09\u6b65\u662f\u5224\u65ad\u65b0\u89e3\u662f\u5426\u88ab\u63a5\u53d7\uff0c\u5224\u65ad\u7684\u4f9d\u636e\u662f\u4e00\u4e2a\u63a5\u53d7\u51c6\u5219\uff0c\u6700\u5e38\u7528\u7684\u63a5\u53d7\u51c6\u5219\u662fMetropolis\u51c6\u5219: \u82e5\u0394t\u2032&lt;0\u5219\u63a5\u53d7S\u2032\u4f5c\u4e3a\u65b0\u7684\u5f53\u524d\u89e3S\uff0c\u5426\u5219\u4ee5\u6982\u7387exp(-\u0394t\u2032/T)\u63a5\u53d7S\u2032\u4f5c\u4e3a\u65b0\u7684\u5f53\u524d\u89e3S\u3002</p> <p>\u7b2c\u56db\u6b65\u662f\u5f53\u65b0\u89e3\u88ab\u786e\u5b9a\u63a5\u53d7\u65f6\uff0c\u7528\u65b0\u89e3\u4ee3\u66ff\u5f53\u524d\u89e3\uff0c\u8fd9\u53ea\u9700\u5c06\u5f53\u524d\u89e3\u4e2d\u5bf9\u5e94\u4e8e\u4ea7\u751f\u65b0\u89e3\u65f6\u7684\u53d8\u6362\u90e8\u5206\u4e88\u4ee5\u5b9e\u73b0\uff0c\u540c\u65f6\u4fee\u6b63\u76ee\u6807\u51fd\u6570\u503c\u5373\u53ef\u3002\u6b64\u65f6\uff0c\u5f53\u524d\u89e3\u5b9e\u73b0\u4e86\u4e00\u6b21\u8fed\u4ee3\u3002\u53ef\u5728\u6b64\u57fa\u7840\u4e0a\u5f00\u59cb\u4e0b\u4e00\u8f6e\u8bd5\u9a8c\u3002\u800c\u5f53\u65b0\u89e3\u88ab\u5224\u5b9a\u4e3a\u820d\u5f03\u65f6\uff0c\u5219\u5728\u539f\u5f53\u524d\u89e3\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u4e0b\u4e00\u8f6e\u8bd5\u9a8c\u3002</p> <p>\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u4e0e\u521d\u59cb\u503c\u65e0\u5173\uff0c\u7b97\u6cd5\u6c42\u5f97\u7684\u89e3\u4e0e\u521d\u59cb\u89e3\u72b6\u6001S(\u662f\u7b97\u6cd5\u8fed\u4ee3\u7684\u8d77\u70b9)\u65e0\u5173\uff1b\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u5177\u6709\u6e10\u8fd1\u6536\u655b\u6027\uff0c\u5df2\u5728\u7406\u8bba\u4e0a\u88ab\u8bc1\u660e\u662f\u4e00\u79cd\u4ee5\u6982\u7387\u6536\u655b\u4e8e\u5168\u5c40\u6700\u4f18\u89e3\u7684\u5168\u5c40\u4f18\u5316\u7b97\u6cd5\uff1b\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u5177\u6709\u5e76\u884c\u6027\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#4","title":"4.\u53c2\u6570\u63a7\u5236","text":"<p>\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u7684\u5e94\u7528\u5f88\u5e7f\u6cdb\uff0c\u53ef\u4ee5\u6c42\u89e3NP\u5b8c\u5168\u95ee\u9898\uff0c\u4f46\u5176\u53c2\u6570\u96be\u4ee5\u63a7\u5236\uff0c\u5176\u4e3b\u8981\u95ee\u9898\u6709\u4ee5\u4e0b\u4e09\u70b9\uff1a</p> <p>(1) \u6e29\u5ea6T\u7684\u521d\u59cb\u503c\u8bbe\u7f6e\u95ee\u9898\u3002 \u6e29\u5ea6T\u7684\u521d\u59cb\u503c\u8bbe\u7f6e\u662f\u5f71\u54cd\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u5168\u5c40\u641c\u7d22\u6027\u80fd\u7684\u91cd\u8981\u56e0\u7d20\u4e4b\u4e00\u3001\u521d\u59cb\u6e29\u5ea6\u9ad8\uff0c\u5219\u641c\u7d22\u5230\u5168\u5c40\u6700\u4f18\u89e3\u7684\u53ef\u80fd\u6027\u5927\uff0c\u4f46\u56e0\u6b64\u8981\u82b1\u8d39\u5927\u91cf\u7684\u8ba1\u7b97\u65f6\u95f4\uff1b\u53cd\u4e4b\uff0c\u5219\u53ef\u8282\u7ea6\u8ba1\u7b97\u65f6\u95f4\uff0c\u4f46\u5168\u5c40\u641c\u7d22\u6027\u80fd\u53ef\u80fd\u53d7\u5230\u5f71\u54cd\u3002\u5b9e\u9645\u5e94\u7528\u8fc7\u7a0b\u4e2d\uff0c\u521d\u59cb\u6e29\u5ea6\u4e00\u822c\u9700\u8981\u4f9d\u636e\u5b9e\u9a8c\u7ed3\u679c\u8fdb\u884c\u82e5\u5e72\u6b21\u8c03\u6574\u3002</p> <p>(2) \u9000\u706b\u901f\u5ea6\u95ee\u9898\u3002 \u6a21\u62df\u9000\u706b\u7b97\u6cd5\u7684\u5168\u5c40\u641c\u7d22\u6027\u80fd\u4e5f\u4e0e\u9000\u706b\u901f\u5ea6\u5bc6\u5207\u76f8\u5173\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u540c\u4e00\u6e29\u5ea6\u4e0b\u7684\u201c\u5145\u5206\u201d\u641c\u7d22(\u9000\u706b)\u662f\u76f8\u5f53\u5fc5\u8981\u7684\uff0c\u4f46\u8fd9\u9700\u8981\u8ba1\u7b97\u65f6\u95f4\u3002\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u8981\u9488\u5bf9\u5177\u4f53\u95ee\u9898\u7684\u6027\u8d28\u548c\u7279\u5f81\u8bbe\u7f6e\u5408\u7406\u7684\u9000\u706b\u5e73\u8861\u6761\u4ef6\u3002</p> <p>(3) \u6e29\u5ea6\u7ba1\u7406\u95ee\u9898\u3002 \u6e29\u5ea6\u7ba1\u7406\u95ee\u9898\u4e5f\u662f\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u96be\u4ee5\u5904\u7406\u7684\u95ee\u9898\u4e4b\u4e00\u3002\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u7531\u4e8e\u5fc5\u987b\u8003\u8651\u8ba1\u7b97\u590d\u6742\u5ea6\u7684\u5207\u5b9e\u53ef\u884c\u6027\u7b49\u95ee\u9898\uff0c\u5e38\u91c7\u7528\u5982\u4e0b\u6240\u793a\u7684\u964d\u6e29\u65b9\u5f0f\uff1a\u5f0f\u4e2dk\u4e3a\u6b63\u7684\u7565\u5c0f\u4e8e1.00\u7684\u5e38\u6570\uff0ct\u4e3a\u964d\u6e29\u7684\u6b21\u6570\u3002 !</p> <p>\u6a21\u62df\u9000\u706b\u6d41\u7a0b\u56fe</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#5","title":"5.\u7b97\u6cd5\u6539\u8fdb","text":"<p>\uff081\uff09\u8bbe\u8ba1\u5408\u9002\u7684\u72b6\u6001\u4ea7\u751f\u51fd\u6570\uff0c\u4f7f\u5176\u6839\u636e\u641c\u7d22\u8fdb\u7a0b\u7684\u9700\u8981\u8868\u73b0\u51fa\u72b6\u6001\u7684\u5168\u7a7a\u95f4\u5206\u6563\u6027\u6216\u5c40\u90e8\u533a\u57df\u6027\uff1b</p> <p>\uff082\uff09\u8bbe\u8ba1\u9ad8\u6548\u7684\u9000\u706b\u7b56\u7565\uff1b</p> <p>\uff083\uff09\u907f\u514d\u72b6\u6001\u7684\u8fc2\u56de\u641c\u7d22\uff1b</p> <p>\uff084\uff09\u91c7\u7528\u5e76\u884c\u641c\u7d22\u7ed3\u6784\uff1b</p> <p>\uff085\uff09\u4e3a\u907f\u514d\u9677\u5165\u5c40\u90e8\u6781\u5c0f\uff0c\u6539\u8fdb\u5bf9\u6e29\u5ea6\u7684\u63a7\u5236\u65b9\u5f0f\uff1b</p> <p>\uff086\uff09\u9009\u62e9\u5408\u9002\u7684\u521d\u59cb\u72b6\u6001\uff1b</p> <p>\uff087\uff09\u8bbe\u8ba1\u5408\u9002\u7684\u7b97\u6cd5\u7ec8\u6b62\u51c6\u5219\u3002</p>"},{"location":"%E7%AE%97%E6%B3%95%E7%AD%96%E7%95%A5/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%E4%B8%8E%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/#6","title":"6.\u5b9e\u6218\u6f14\u7ec3","text":"<p>P1337 [JSOI2004]\u5e73\u8861\u70b9 / \u540a\u6253XXX</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n#define down 0.996//\u5f90\u5f90\u964d\u6e29 \n\nusing namespace std;\n\nint n;\nstruct node{\nint x;\nint y;\nint w;\n}object[2005];//\u5b58\u4e0b\u7269\u4f53\u7684\u5750\u6807 \ndouble ansx,ansy,answ;//\u6700\u7ec8\u7b54\u6848 \ndouble energy(double x,double y)//\u6839\u636e\u7269\u7406\u5b66\u77e5\u8bc6,\u80fd\u91cf\u603b\u548c\u8d8a\u5c0f\u8d8a\u7a33\u5b9a \n{\n   double r=0,dx,dy;\n   for (int a=1;a&lt;=n;a++)\n   {\n      dx=x-object[a].x;\n      dy=y-object[a].y;\n      r+=sqrt(dx*dx+dy*dy)*object[a].w;\n   }\n      return r;\n}\nvoid sa()//\u6a21\u62df\u9000\u706b \n{\n   double t=3000;//\u6e29\u5ea6\u8981\u8db3\u591f\u9ad8 \n   while (t&gt;1e-15)//\u7565\u5927\u4e8e0 \n   {\n      double ex=ansx+(rand()*2-RAND_MAX)*t;//\u968f\u673a\u4ea7\u751f\u65b0\u7684\u7b54\u6848 \n      double ey=ansy+(rand()*2-RAND_MAX)*t;\n      double ew=energy(ex,ey);\n      double de=ew-answ;\n      if (de&lt;0)//\u5982\u679c\u6b64\u7b54\u6848\u66f4\u4f18\uff0c\u5c31\u63a5\u53d7 \n      {\n         ansx=ex;\n         ansy=ey;\n         answ=ew;\n      }\n      else if(exp(-de/t)*RAND_MAX&gt;rand())//\u5426\u5219\u6839\u636e\u591a\u9879\u5f0f\u6982\u7387\u63a5\u53d7 \n      {\n         ansx=ex;\n         ansy=ey;\n      }\n      t*=down;\n   }\n}\nvoid solve()//\u591a\u8dd1\u51e0\u904d\u9000\u706b,\u589e\u52a0\u5f97\u5230\u6700\u4f18\u89e3\u7684\u6982\u7387 \n{\n   sa();\n   sa();\n   sa();\n   sa();\n}\nint main() {\ncin&gt;&gt;n;\nfor (int a=1;a&lt;=n;a++)\n{\n   scanf(\"%d%d%d\",&amp;object[a].x,&amp;object[a].y,&amp;object[a].w);\n   ansx+=object[a].x;\n   ansy+=object[a].y;\n}\nansx/=n;//\u4ee5\u5e73\u5747\u6570\u4f5c\u4e3a\u521d\u59cb\u7b54\u6848 \nansy/=n;\nansw=energy(ansx,ansy);\nsolve();\nprintf(\"%.3lf %.3lf\\n\",ansx,ansy);//\u534e\u4e3d\u7684\u8f93\u51fa \n    return 0;\n}\n</code></pre> <p>www.luogu.com.cn</p> <pre><code>/*\nSA\u5b66\u4e60\u7b14\u8bb0\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n#define ull unsigned int\n#define pii pair&lt;int, int&gt;\n#define pf to\n#define ps second\n#define int long long\n\n#define err cerr &lt;&lt; \"Error\"\n#define rd read()\n\n#define ot write\n#define nl putchar('\\n')\nint read() {\n  int xx = 0, ff = 1;\n  char ch = getchar();\n  while (ch &lt; '0' || ch &gt; '9') {\n    if (ch == '-')\n      ff = -1;\n    ch = getchar();\n  }\n  while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n    xx = xx * 10 + (ch - '0'), ch = getchar();\n  return xx * ff;\n}\nvoid write(int out) {\n  if (out &lt; 0)\n    putchar('-'), out = -out;\n  if (out &gt; 9)\n    write(out / 10);\n  putchar(out % 10 + '0');\n}\n\nconst int M = 800;\nconst int mxxlog = 10;\nint MOD = 1e9 + 57;\nconst int N=102;\nint INF=0x7fffffff;\nconst double eps = 1e-10;\nmt19937 gen(1919810);\nuniform_int_distribution&lt;&gt;dist(1,100000);\nstruct chainstar{\n    int next,to,weight;\n}e[N&lt;&lt;1];int h[N],cnt;\ninline void addline(int u,int v,int w){\n    e[++cnt].to=v;\n    e[cnt].next=h[u];\n    h[u]=cnt;\n    e[cnt].weight=w;\n}\nint a[N],n,k,w[N],ans=INF,now,p1,p2;\nbool isk[N];\nvoid dfs(int u,int s){\n    if(isk[u])s=0;\n    now+=w[u]*s;\n    for(int i=h[u];i;i=e[i].next)\n        dfs(e[i].to,s+e[i].weight);\n}\ninline void solve(){\n    now=0;\n    for(int i=1;i&lt;=k;++i)isk[a[i]]=1;\n    for(int i=k+1;i&lt;=n;++i)isk[a[i]]=0;\n    dfs(0,0);\n}\ninline void SA(){\n    for(double T=1000;T&gt;=1e-9;T*=0.999){\n        random_shuffle(a+1,a+1+k);\n        random_shuffle(a+1+k,a+1+n);\n        swap(a[k],a[k+1]);\n        solve();\n        int der=now-ans;\n        if(der&lt;0)ans=now;\n        else if(exp(-der/T)*100000&lt;=dist(gen))swap(a[k],a[k+1]);\n    }\n}\nvoid getlis(int u,int d){\n    if(u!=0){\n        if(d&amp;1)a[++p1]=u;\n        else a[p2--]=u;\n    }\n    for(int i=h[u];i;i=e[i].next)\n        getlis(e[i].to,d+1);\n}\nsigned main(){\n    srand(1919810);\n    p2=n=read(),k=read();\n    for(int i=1;i&lt;=n;++i){\n        w[i]=read();\n        int f=read(),d=read();\n        addline(f,i,d);\n    }\n    getlis(0,1);\n    while((double)clock()/CLOCKS_PER_SEC&lt;=0.89)SA();\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n</code></pre>"}]}